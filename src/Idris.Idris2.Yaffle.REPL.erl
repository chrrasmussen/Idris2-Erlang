-module('Idris.Idris2.Yaffle.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--12841-1190--in--un--printName'/8,
  'un--showInfo'/1,
  'un--repl'/5,
  'un--processCatch'/6,
  'un--process'/6
]).
'nested--12841-1190--in--un--printName'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Builtin.MkPair', V8, V9} -> case V9 of {'Builtin.MkPair', V10, V11} -> begin (V17 = begin (V12 = V6), fun (V13) -> begin (V16 = (begin (V14 = V12), fun (V15) -> ('erlang':'get'(V14)) end end(V13))), {'Prelude.Types.Right', V16} end end end), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V58 = begin (V22 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V6, [], V21, {'Core.Env.Nil'}, V11))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V57 = begin (V27 = ('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V6, {'Core.Env.Nil'}, V26))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V56 = begin (V37 = fun (V32) -> begin (V36 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" : "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V34, V35)) end end}, V31))/binary>>/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V32))), {'Prelude.Types.Right', V36} end end), ((begin (V53 = fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V50, V51, V52)) end end end end end), fun (V54) -> fun (V55) -> ((((V53('erased'))('erased'))(V54))(V55)) end end end((begin (V45 = fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> {'Prelude.Types.Right', (V41(V44))} end end end end end), fun (V46) -> fun (V47) -> ((((V45('erased'))('erased'))(V46))(V47)) end end end(fun (V38) -> {'Builtin.MkUnit'} end))))(V37)) end), V56 end(V28)) end end end end), V57 end(V23)) end end end end), V58 end(V18)) end end end end end end.
'un--showInfo'(V0) -> case V0 of {'Builtin.MkPair', V1, V2} -> case V2 of {'Builtin.MkPair', V3, V4} -> begin (V54 = fun (V5) -> begin (V53 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))/binary, <<<<" ==>\x{a}"/utf8>>/binary, <<<<"\x{9}"/utf8>>/binary, <<('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_Def'(case V4 of {'Core.Context.Context.MkGlobalDef', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27} -> V23 end))/binary, <<<<"\x{a}"/utf8>>/binary, <<<<"\x{9}"/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V28) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SCCall'(V28)) end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SCCall'(V29, V30)) end end}, case V4 of {'Core.Context.Context.MkGlobalDef', V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52} -> V51 end))/binary, <<"\x{a}"/utf8>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V5))), {'Prelude.Types.Right', V53} end end), ((begin (V70 = fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V67, V68, V69)) end end end end end), fun (V71) -> fun (V72) -> ((((V70('erased'))('erased'))(V71))(V72)) end end end((begin (V62 = fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> {'Prelude.Types.Right', (V58(V61))} end end end end end), fun (V63) -> fun (V64) -> ((((V62('erased'))('erased'))(V63))(V64)) end end end(fun (V55) -> {'Builtin.MkUnit'} end))))(V54)) end end end.
'un--repl'(V0, V1, V2, V3, V4) -> begin (V26 = begin (V7 = fun (V5) -> begin (V6 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<"Yaffle> "/utf8>>, V5))), {'Prelude.Types.Right', V6} end end), ((begin (V23 = fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V20, V21, V22)) end end end end end), fun (V24) -> fun (V25) -> ((((V23('erased'))('erased'))(V24))(V25)) end end end((begin (V15 = fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> {'Prelude.Types.Right', (V11(V14))} end end end end end), fun (V16) -> fun (V17) -> ((((V15('erased'))('erased'))(V16))(V17)) end end end(fun (V8) -> {'Builtin.MkUnit'} end))))(V7)) end), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V79 = begin (V33 = fun (V31) -> begin (V32 = ('Idris.Idris2.Prelude.IO':'un--prim__getStr'(V31))), {'Prelude.Types.Right', V32} end end), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V78 = case ('Idris.Idris2.Parser.Source':'un--runParser'(1, {'Core.FC.Virtual', {'Core.FC.Interactive'}}, {'Prelude.Types.Nothing'}, V37, ('Idris.Idris2.TTImp.Parser':'un--command'()))) of {'Prelude.Types.Left', V38} -> begin (V60 = begin (V41 = fun (V39) -> begin (V40 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V38))/binary, <<"\x{a}"/utf8>>/binary>>, V39))), {'Prelude.Types.Right', V40} end end), ((begin (V57 = fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V54, V55, V56)) end end end end end), fun (V58) -> fun (V59) -> ((((V57('erased'))('erased'))(V58))(V59)) end end end((begin (V49 = fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> {'Prelude.Types.Right', (V45(V48))} end end end end end), fun (V50) -> fun (V51) -> ((((V49('erased'))('erased'))(V50))(V51)) end end end(fun (V42) -> {'Builtin.MkUnit'} end))))(V41)) end), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V65 = ('un--repl'(V0, V1, V2, V3, V4))), V65 end(V61)) end end end end; {'Prelude.Types.Right', V66} -> case V66 of {'Builtin.MkPair', V67, V68} -> case V68 of {'Builtin.MkPair', V69, V70} -> begin (V71 = ('un--processCatch'(V0, V1, V2, V3, V4, V70))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V77 = case V75 of 1 -> ('un--repl'(V0, V1, V2, V3, V4)); 0 -> fun (V76) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V77 end(V72)) end end end end end end end), V78 end(V34)) end end end end), V79 end(V27)) end end end end.
'un--processCatch'(V0, V1, V2, V3, V4, V5) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(('un--process'(V0, V1, V2, V3, V4, V5)), fun (V6) -> begin (V28 = begin (V9 = fun (V7) -> begin (V8 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V6))/binary, <<"\x{a}"/utf8>>/binary>>, V7))), {'Prelude.Types.Right', V8} end end), ((begin (V25 = fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V22, V23, V24)) end end end end end), fun (V26) -> fun (V27) -> ((((V25('erased'))('erased'))(V26))(V27)) end end end((begin (V17 = fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> {'Prelude.Types.Right', (V13(V16))} end end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V10) -> {'Builtin.MkUnit'} end))))(V9)) end), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V34 = fun (V33) -> {'Prelude.Types.Right', 1} end), V34 end(V29)) end end end end end)).
'un--process'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.Eval', V6} -> begin (V7 = ('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, V3, V4, 0, {'TTImp.Elab.Check.InExpr'}, [], [], {'Core.Env.Nil'}, V6, {'Prelude.Types.Nothing'}))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V68 = case V11 of {'Builtin.MkPair', V12, V13} -> begin (V19 = begin (V14 = V0), fun (V15) -> begin (V18 = (begin (V16 = V14), fun (V17) -> ('erlang':'get'(V16)) end end(V15))), {'Prelude.Types.Right', V18} end end end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V67 = begin (V24 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, [], V23, {'Core.Env.Nil'}, V12))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V66 = begin (V59 = begin (V29 = ('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Core.Env.Nil'}, V28))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V58 = begin (V39 = fun (V34) -> begin (V38 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V36, V37)) end end}, V33))/binary, <<"\x{a}"/utf8>>/binary>>, V34))), {'Prelude.Types.Right', V38} end end), ((begin (V55 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V52, V53, V54)) end end end end end), fun (V56) -> fun (V57) -> ((((V55('erased'))('erased'))(V56))(V57)) end end end((begin (V47 = fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> {'Prelude.Types.Right', (V43(V46))} end end end end end), fun (V48) -> fun (V49) -> ((((V47('erased'))('erased'))(V48))(V49)) end end end(fun (V40) -> {'Builtin.MkUnit'} end))))(V39)) end), V58 end(V30)) end end end end), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V65 = fun (V64) -> {'Prelude.Types.Right', 1} end), V65 end(V60)) end end end end), V66 end(V25)) end end end end), V67 end(V20)) end end end end end), V68 end(V8)) end end end end; {'TTImp.TTImp.Check', V69} -> case V69 of {'TTImp.TTImp.IVar', V70, V71} -> begin (V77 = begin (V72 = V0), fun (V73) -> begin (V76 = (begin (V74 = V72), fun (V75) -> ('erlang':'get'(V74)) end end(V73))), {'Prelude.Types.Right', V76} end end end), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V128 = begin (V114 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V71, case V81 of {'Core.Context.MkDefs', V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113} -> V82 end))), fun (V115) -> begin (V116 = (V114(V115))), case V116 of {'Prelude.Types.Left', V117} -> {'Prelude.Types.Left', V117}; {'Prelude.Types.Right', V118} -> (begin (V127 = begin (V120 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V119) -> ('nested--12841-1190--in--un--printName'(V70, V71, V4, V3, V2, V1, V0, V119)) end, V118))), fun (V121) -> begin (V122 = (V120(V121))), case V122 of {'Prelude.Types.Left', V123} -> {'Prelude.Types.Left', V123}; {'Prelude.Types.Right', V124} -> (begin (V126 = fun (V125) -> {'Prelude.Types.Right', 1} end), V126 end(V121)) end end end end), V127 end(V115)) end end end end), V128 end(V78)) end end end end; _ -> begin (V129 = ('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, V3, V4, 0, {'TTImp.Elab.Check.InExpr'}, [], [], {'Core.Env.Nil'}, V69, {'Prelude.Types.Nothing'}))), fun (V130) -> begin (V131 = (V129(V130))), case V131 of {'Prelude.Types.Left', V132} -> {'Prelude.Types.Left', V132}; {'Prelude.Types.Right', V133} -> (begin (V196 = case V133 of {'Builtin.MkPair', V134, V135} -> begin (V141 = begin (V136 = V0), fun (V137) -> begin (V140 = (begin (V138 = V136), fun (V139) -> ('erlang':'get'(V138)) end end(V137))), {'Prelude.Types.Right', V140} end end end), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V195 = begin (V146 = ('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V135))), fun (V147) -> begin (V148 = (V146(V147))), case V148 of {'Prelude.Types.Left', V149} -> {'Prelude.Types.Left', V149}; {'Prelude.Types.Right', V150} -> (begin (V194 = begin (V151 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V145, {'Core.Env.Nil'}, V150))), fun (V152) -> begin (V153 = (V151(V152))), case V153 of {'Prelude.Types.Left', V154} -> {'Prelude.Types.Left', V154}; {'Prelude.Types.Right', V155} -> (begin (V193 = begin (V186 = begin (V156 = ('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Core.Env.Nil'}, V155))), fun (V157) -> begin (V158 = (V156(V157))), case V158 of {'Prelude.Types.Left', V159} -> {'Prelude.Types.Left', V159}; {'Prelude.Types.Right', V160} -> (begin (V185 = begin (V166 = fun (V161) -> begin (V165 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V162) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V162)) end, fun (V163) -> fun (V164) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V163, V164)) end end}, V160))/binary, <<"\x{a}"/utf8>>/binary>>, V161))), {'Prelude.Types.Right', V165} end end), ((begin (V182 = fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V179, V180, V181)) end end end end end), fun (V183) -> fun (V184) -> ((((V182('erased'))('erased'))(V183))(V184)) end end end((begin (V174 = fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> {'Prelude.Types.Right', (V170(V173))} end end end end end), fun (V175) -> fun (V176) -> ((((V174('erased'))('erased'))(V175))(V176)) end end end(fun (V167) -> {'Builtin.MkUnit'} end))))(V166)) end), V185 end(V157)) end end end end), fun (V187) -> begin (V188 = (V186(V187))), case V188 of {'Prelude.Types.Left', V189} -> {'Prelude.Types.Left', V189}; {'Prelude.Types.Right', V190} -> (begin (V192 = fun (V191) -> {'Prelude.Types.Right', 1} end), V192 end(V187)) end end end end), V193 end(V152)) end end end end), V194 end(V147)) end end end end), V195 end(V142)) end end end end end), V196 end(V130)) end end end end end; {'TTImp.TTImp.ProofSearch', V197} -> begin (V203 = begin (V198 = V0), fun (V199) -> begin (V202 = (begin (V200 = V198), fun (V201) -> ('erlang':'get'(V200)) end end(V199))), {'Prelude.Types.Right', V202} end end end), fun (V204) -> begin (V205 = (V203(V204))), case V205 of {'Prelude.Types.Left', V206} -> {'Prelude.Types.Left', V206}; {'Prelude.Types.Right', V207} -> (begin (V345 = begin (V240 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V197, case V207 of {'Core.Context.MkDefs', V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239} -> V208 end))), fun (V241) -> begin (V242 = (V240(V241))), case V242 of {'Prelude.Types.Left', V243} -> {'Prelude.Types.Left', V243}; {'Prelude.Types.Right', V244} -> (begin (V344 = case V244 of [E0 | E1] -> (fun (V245, V246) -> case V245 of {'Builtin.MkPair', V247, V248} -> case V248 of {'Builtin.MkPair', V249, V250} -> case V246 of [] -> begin (V251 = ('Idris.Idris2.Core.Unify':'un--search'([], V0, V2, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 0, 1000, V247, V250, {'Core.Env.Nil'}))), fun (V252) -> begin (V253 = (V251(V252))), case V253 of {'Prelude.Types.Left', V254} -> {'Prelude.Types.Left', V254}; {'Prelude.Types.Right', V255} -> (begin (V311 = begin (V261 = begin (V256 = V0), fun (V257) -> begin (V260 = (begin (V258 = V256), fun (V259) -> ('erlang':'get'(V258)) end end(V257))), {'Prelude.Types.Right', V260} end end end), fun (V262) -> begin (V263 = (V261(V262))), case V263 of {'Prelude.Types.Left', V264} -> {'Prelude.Types.Left', V264}; {'Prelude.Types.Right', V265} -> (begin (V310 = begin (V266 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V265, {'Core.Env.Nil'}, V255))), fun (V267) -> begin (V268 = (V266(V267))), case V268 of {'Prelude.Types.Left', V269} -> {'Prelude.Types.Left', V269}; {'Prelude.Types.Right', V270} -> (begin (V309 = begin (V302 = begin (V275 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V271) -> fun (V272) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V271, V272)) end end, fun (V273) -> fun (V274) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V273, V274)) end end}, V270))), fun (V276) -> begin (V277 = (V275(V276))), case V277 of {'Prelude.Types.Left', V278} -> {'Prelude.Types.Left', V278}; {'Prelude.Types.Right', V279} -> (begin (V301 = begin (V282 = fun (V280) -> begin (V281 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V279))/binary, <<"\x{a}"/utf8>>/binary>>, V280))), {'Prelude.Types.Right', V281} end end), ((begin (V298 = fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> fun (V297) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V295, V296, V297)) end end end end end), fun (V299) -> fun (V300) -> ((((V298('erased'))('erased'))(V299))(V300)) end end end((begin (V290 = fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> case V287 of {'Prelude.Types.Left', V288} -> {'Prelude.Types.Left', V288}; {'Prelude.Types.Right', V289} -> {'Prelude.Types.Right', (V286(V289))} end end end end end), fun (V291) -> fun (V292) -> ((((V290('erased'))('erased'))(V291))(V292)) end end end(fun (V283) -> {'Builtin.MkUnit'} end))))(V282)) end), V301 end(V276)) end end end end), fun (V303) -> begin (V304 = (V302(V303))), case V304 of {'Prelude.Types.Left', V305} -> {'Prelude.Types.Left', V305}; {'Prelude.Types.Right', V306} -> (begin (V308 = fun (V307) -> {'Prelude.Types.Right', 1} end), V308 end(V303)) end end end end), V309 end(V267)) end end end end), V310 end(V262)) end end end end), V311 end(V252)) end end end end; _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V197, ((begin (V317 = fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V315, V316)) end end end end), fun (V318) -> fun (V319) -> ((((V317('erased'))('erased'))(V318))(V319)) end end end(fun (V312) -> ('Idris.Idris2.Builtin':'un--fst'(V312)) end))(V244)))) end; _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V197, ((begin (V325 = fun (V321) -> fun (V322) -> fun (V323) -> fun (V324) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V323, V324)) end end end end), fun (V326) -> fun (V327) -> ((((V325('erased'))('erased'))(V326))(V327)) end end end(fun (V320) -> ('Idris.Idris2.Builtin':'un--fst'(V320)) end))(V244)))) end; _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V197, ((begin (V333 = fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V331, V332)) end end end end), fun (V334) -> fun (V335) -> ((((V333('erased'))('erased'))(V334))(V335)) end end end(fun (V328) -> ('Idris.Idris2.Builtin':'un--fst'(V328)) end))(V244)))) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V197, ((begin (V341 = fun (V337) -> fun (V338) -> fun (V339) -> fun (V340) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V339, V340)) end end end end), fun (V342) -> fun (V343) -> ((((V341('erased'))('erased'))(V342))(V343)) end end end(fun (V336) -> ('Idris.Idris2.Builtin':'un--fst'(V336)) end))(V244)))) end), V344 end(V241)) end end end end), V345 end(V204)) end end end end; {'TTImp.TTImp.ExprSearch', V346} -> begin (V352 = begin (V347 = V0), fun (V348) -> begin (V351 = (begin (V349 = V347), fun (V350) -> ('erlang':'get'(V349)) end end(V348))), {'Prelude.Types.Right', V351} end end end), fun (V353) -> begin (V354 = (V352(V353))), case V354 of {'Prelude.Types.Left', V355} -> {'Prelude.Types.Left', V355}; {'Prelude.Types.Right', V356} -> (begin (V452 = begin (V389 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V346, case V356 of {'Core.Context.MkDefs', V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388} -> V357 end))), fun (V390) -> begin (V391 = (V389(V390))), case V391 of {'Prelude.Types.Left', V392} -> {'Prelude.Types.Left', V392}; {'Prelude.Types.Right', V393} -> (begin (V451 = case V393 of [E2 | E3] -> (fun (V394, V395) -> case V394 of {'Builtin.MkPair', V396, V397} -> case V397 of {'Builtin.MkPair', V398, V399} -> case V395 of [] -> begin (V400 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V0, V1, V2, V3, V4, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), 1, V396, []))), fun (V401) -> begin (V402 = (V400(V401))), case V402 of {'Prelude.Types.Left', V403} -> {'Prelude.Types.Left', V403}; {'Prelude.Types.Right', V404} -> (begin (V418 = begin (V411 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V405) -> fun (V406) -> begin (V410 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V407) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V407)) end, fun (V408) -> fun (V409) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V408, V409)) end end}, V405))/binary, <<"\x{a}"/utf8>>/binary>>, V406))), {'Prelude.Types.Right', V410} end end end, V404))), fun (V412) -> begin (V413 = (V411(V412))), case V413 of {'Prelude.Types.Left', V414} -> {'Prelude.Types.Left', V414}; {'Prelude.Types.Right', V415} -> (begin (V417 = fun (V416) -> {'Prelude.Types.Right', 1} end), V417 end(V412)) end end end end), V418 end(V401)) end end end end; _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V346, ((begin (V424 = fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V422, V423)) end end end end), fun (V425) -> fun (V426) -> ((((V424('erased'))('erased'))(V425))(V426)) end end end(fun (V419) -> ('Idris.Idris2.Builtin':'un--fst'(V419)) end))(V393)))) end; _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V346, ((begin (V432 = fun (V428) -> fun (V429) -> fun (V430) -> fun (V431) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V430, V431)) end end end end), fun (V433) -> fun (V434) -> ((((V432('erased'))('erased'))(V433))(V434)) end end end(fun (V427) -> ('Idris.Idris2.Builtin':'un--fst'(V427)) end))(V393)))) end; _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V346, ((begin (V440 = fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V438, V439)) end end end end), fun (V441) -> fun (V442) -> ((((V440('erased'))('erased'))(V441))(V442)) end end end(fun (V435) -> ('Idris.Idris2.Builtin':'un--fst'(V435)) end))(V393)))) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V346, ((begin (V448 = fun (V444) -> fun (V445) -> fun (V446) -> fun (V447) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V446, V447)) end end end end), fun (V449) -> fun (V450) -> ((((V448('erased'))('erased'))(V449))(V450)) end end end(fun (V443) -> ('Idris.Idris2.Builtin':'un--fst'(V443)) end))(V393)))) end), V451 end(V390)) end end end end), V452 end(V353)) end end end end; {'TTImp.TTImp.GenerateDef', V453, V454} -> begin (V460 = begin (V455 = V0), fun (V456) -> begin (V459 = (begin (V457 = V455), fun (V458) -> ('erlang':'get'(V457)) end end(V456))), {'Prelude.Types.Right', V459} end end end), fun (V461) -> begin (V462 = (V460(V461))), case V462 of {'Prelude.Types.Left', V463} -> {'Prelude.Types.Left', V463}; {'Prelude.Types.Right', V464} -> (begin (V717 = begin (V467 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V1, fun (V465) -> fun (V466) -> ('Idris.Idris2.Core.FC':'un--onLine'(V453, V465)) end end))), fun (V468) -> begin (V469 = (V467(V468))), case V469 of {'Prelude.Types.Left', V470} -> {'Prelude.Types.Left', V470}; {'Prelude.Types.Right', V471} -> (begin (V716 = case V471 of {'Prelude.Types.Just', V472} -> case V472 of {'Builtin.MkPair', V473, V474} -> case V474 of {'Builtin.MkPair', V475, V476} -> case V476 of {'Builtin.MkPair', V477, V478} -> begin (V678 = begin (V511 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V475, case V464 of {'Core.Context.MkDefs', V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510} -> V479 end))), fun (V512) -> begin (V513 = (V511(V512))), case V513 of {'Prelude.Types.Left', V514} -> {'Prelude.Types.Left', V514}; {'Prelude.Types.Right', V515} -> (begin (V677 = case V515 of {'Prelude.Types.Just', V516} -> case V516 of {'Core.Context.Context.None'} -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V522 = ('Idris.Idris2.Core.Context.Log':'un--logTime'(V0, 0, fun () -> (begin (V518 = fun (V517) -> V517 end), fun (V519) -> (V518(V519)) end end(<<"Generation"/utf8>>)) end, ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V0, V1, V2, V3, V4, fun (V520) -> fun (V521) -> ('Idris.Idris2.Core.FC':'un--onLine'(V453, V520)) end end, 1, V475))))), fun (V523) -> begin (V524 = (V522(V523))), case V524 of {'Prelude.Types.Left', V525} -> {'Prelude.Types.Left', V525}; {'Prelude.Types.Right', V526} -> (begin (V603 = case V526 of [E4 | E5] -> (fun (V527, V528) -> case V527 of {'Builtin.MkPair', V529, V530} -> begin (V542 = fun (V531) -> begin (V541 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V532) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpClause\x{27} $nm)'({'Prelude.Show.MkShow', fun (V533) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V533)) end, fun (V534) -> fun (V535) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V534, V535)) end end}, V532)) end, fun (V536) -> fun (V537) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpClause\x{27} $nm)'({'Prelude.Show.MkShow', fun (V538) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V538)) end, fun (V539) -> fun (V540) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V539, V540)) end end}, V536, V537)) end end}, V530))/binary, <<"\x{a}"/utf8>>/binary>>, V531))), {'Prelude.Types.Right', V541} end end), ((begin (V558 = fun (V553) -> fun (V554) -> fun (V555) -> fun (V556) -> fun (V557) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V555, V556, V557)) end end end end end), fun (V559) -> fun (V560) -> ((((V558('erased'))('erased'))(V559))(V560)) end end end((begin (V550 = fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> case V547 of {'Prelude.Types.Left', V548} -> {'Prelude.Types.Left', V548}; {'Prelude.Types.Right', V549} -> {'Prelude.Types.Right', (V546(V549))} end end end end end), fun (V551) -> fun (V552) -> ((((V550('erased'))('erased'))(V551))(V552)) end end end(fun (V543) -> {'Builtin.MkUnit'} end))))(V542)) end; _ -> begin (V563 = fun (V561) -> begin (V562 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<"Failed\x{a}"/utf8>>, V561))), {'Prelude.Types.Right', V562} end end), ((begin (V579 = fun (V574) -> fun (V575) -> fun (V576) -> fun (V577) -> fun (V578) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V576, V577, V578)) end end end end end), fun (V580) -> fun (V581) -> ((((V579('erased'))('erased'))(V580))(V581)) end end end((begin (V571 = fun (V565) -> fun (V566) -> fun (V567) -> fun (V568) -> case V568 of {'Prelude.Types.Left', V569} -> {'Prelude.Types.Left', V569}; {'Prelude.Types.Right', V570} -> {'Prelude.Types.Right', (V567(V570))} end end end end end), fun (V572) -> fun (V573) -> ((((V571('erased'))('erased'))(V572))(V573)) end end end(fun (V564) -> {'Builtin.MkUnit'} end))))(V563)) end end end(E4, E5)); _ -> begin (V584 = fun (V582) -> begin (V583 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<"Failed\x{a}"/utf8>>, V582))), {'Prelude.Types.Right', V583} end end), ((begin (V600 = fun (V595) -> fun (V596) -> fun (V597) -> fun (V598) -> fun (V599) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V597, V598, V599)) end end end end end), fun (V601) -> fun (V602) -> ((((V600('erased'))('erased'))(V601))(V602)) end end end((begin (V592 = fun (V586) -> fun (V587) -> fun (V588) -> fun (V589) -> case V589 of {'Prelude.Types.Left', V590} -> {'Prelude.Types.Left', V590}; {'Prelude.Types.Right', V591} -> {'Prelude.Types.Right', (V588(V591))} end end end end end), fun (V593) -> fun (V594) -> ((((V592('erased'))('erased'))(V593))(V594)) end end end(fun (V585) -> {'Builtin.MkUnit'} end))))(V584)) end end), V603 end(V523)) end end end end, fun (V604) -> begin (V610 = fun (V605) -> begin (V609 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<(begin (V607 = fun (V606) -> V606 end), fun (V608) -> (V607(V608)) end end(<<"Can\x{27}t find a definition for "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V475))/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V605))), {'Prelude.Types.Right', V609} end end), ((begin (V626 = fun (V621) -> fun (V622) -> fun (V623) -> fun (V624) -> fun (V625) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V623, V624, V625)) end end end end end), fun (V627) -> fun (V628) -> ((((V626('erased'))('erased'))(V627))(V628)) end end end((begin (V618 = fun (V612) -> fun (V613) -> fun (V614) -> fun (V615) -> case V615 of {'Prelude.Types.Left', V616} -> {'Prelude.Types.Left', V616}; {'Prelude.Types.Right', V617} -> {'Prelude.Types.Right', (V614(V617))} end end end end end), fun (V619) -> fun (V620) -> ((((V618('erased'))('erased'))(V619))(V620)) end end end(fun (V611) -> {'Builtin.MkUnit'} end))))(V610)) end end)); _ -> begin (V634 = fun (V629) -> begin (V633 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<(begin (V631 = fun (V630) -> V630 end), fun (V632) -> (V631(V632)) end end(<<"Already defined"/utf8>>))/binary, <<"\x{a}"/utf8>>/binary>>, V629))), {'Prelude.Types.Right', V633} end end), ((begin (V650 = fun (V645) -> fun (V646) -> fun (V647) -> fun (V648) -> fun (V649) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V647, V648, V649)) end end end end end), fun (V651) -> fun (V652) -> ((((V650('erased'))('erased'))(V651))(V652)) end end end((begin (V642 = fun (V636) -> fun (V637) -> fun (V638) -> fun (V639) -> case V639 of {'Prelude.Types.Left', V640} -> {'Prelude.Types.Left', V640}; {'Prelude.Types.Right', V641} -> {'Prelude.Types.Right', (V638(V641))} end end end end end), fun (V643) -> fun (V644) -> ((((V642('erased'))('erased'))(V643))(V644)) end end end(fun (V635) -> {'Builtin.MkUnit'} end))))(V634)) end end; {'Prelude.Types.Nothing'} -> begin (V658 = fun (V653) -> begin (V657 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<(begin (V655 = fun (V654) -> V654 end), fun (V656) -> (V655(V656)) end end(<<"Can\x{27}t find declaration for "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V454))/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V653))), {'Prelude.Types.Right', V657} end end), ((begin (V674 = fun (V669) -> fun (V670) -> fun (V671) -> fun (V672) -> fun (V673) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V671, V672, V673)) end end end end end), fun (V675) -> fun (V676) -> ((((V674('erased'))('erased'))(V675))(V676)) end end end((begin (V666 = fun (V660) -> fun (V661) -> fun (V662) -> fun (V663) -> case V663 of {'Prelude.Types.Left', V664} -> {'Prelude.Types.Left', V664}; {'Prelude.Types.Right', V665} -> {'Prelude.Types.Right', (V662(V665))} end end end end end), fun (V667) -> fun (V668) -> ((((V666('erased'))('erased'))(V667))(V668)) end end end(fun (V659) -> {'Builtin.MkUnit'} end))))(V658)) end end), V677 end(V512)) end end end end), fun (V679) -> begin (V680 = (V678(V679))), case V680 of {'Prelude.Types.Left', V681} -> {'Prelude.Types.Left', V681}; {'Prelude.Types.Right', V682} -> (begin (V684 = fun (V683) -> {'Prelude.Types.Right', 1} end), V684 end(V679)) end end end end end end end; {'Prelude.Types.Nothing'} -> begin (V709 = begin (V690 = fun (V685) -> begin (V689 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<(begin (V687 = fun (V686) -> V686 end), fun (V688) -> (V687(V688)) end end(<<"Can\x{27}t find declaration for "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V454))/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V685))), {'Prelude.Types.Right', V689} end end), ((begin (V706 = fun (V701) -> fun (V702) -> fun (V703) -> fun (V704) -> fun (V705) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V703, V704, V705)) end end end end end), fun (V707) -> fun (V708) -> ((((V706('erased'))('erased'))(V707))(V708)) end end end((begin (V698 = fun (V692) -> fun (V693) -> fun (V694) -> fun (V695) -> case V695 of {'Prelude.Types.Left', V696} -> {'Prelude.Types.Left', V696}; {'Prelude.Types.Right', V697} -> {'Prelude.Types.Right', (V694(V697))} end end end end end), fun (V699) -> fun (V700) -> ((((V698('erased'))('erased'))(V699))(V700)) end end end(fun (V691) -> {'Builtin.MkUnit'} end))))(V690)) end), fun (V710) -> begin (V711 = (V709(V710))), case V711 of {'Prelude.Types.Left', V712} -> {'Prelude.Types.Left', V712}; {'Prelude.Types.Right', V713} -> (begin (V715 = fun (V714) -> {'Prelude.Types.Right', 1} end), V715 end(V710)) end end end end end), V716 end(V468)) end end end end), V717 end(V461)) end end end end; {'TTImp.TTImp.Missing', V718} -> begin (V724 = begin (V719 = V0), fun (V720) -> begin (V723 = (begin (V721 = V719), fun (V722) -> ('erlang':'get'(V721)) end end(V720))), {'Prelude.Types.Right', V723} end end end), fun (V725) -> begin (V726 = (V724(V725))), case V726 of {'Prelude.Types.Left', V727} -> {'Prelude.Types.Left', V727}; {'Prelude.Types.Right', V728} -> (begin (V882 = begin (V761 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V718, case V728 of {'Core.Context.MkDefs', V729, V730, V731, V732, V733, V734, V735, V736, V737, V738, V739, V740, V741, V742, V743, V744, V745, V746, V747, V748, V749, V750, V751, V752, V753, V754, V755, V756, V757, V758, V759, V760} -> V729 end))), fun (V762) -> begin (V763 = (V761(V762))), case V763 of {'Prelude.Types.Left', V764} -> {'Prelude.Types.Left', V764}; {'Prelude.Types.Right', V765} -> (begin (V881 = case V765 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V718)); _ -> begin (V874 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V766) -> begin (V767 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V766))), fun (V768) -> begin (V769 = (V767(V768))), case V769 of {'Prelude.Types.Left', V770} -> {'Prelude.Types.Left', V770}; {'Prelude.Types.Right', V771} -> (begin (V865 = case V771 of {'Core.TT.MkTotality', V772, V773} -> case V773 of {'Core.TT.MissingCases', V774} -> begin (V785 = fun (V775) -> begin (V784 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V766))/binary, <<<<":\x{a}"/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ((begin (V781 = fun (V777) -> fun (V778) -> fun (V779) -> fun (V780) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V779, V780)) end end end end), fun (V782) -> fun (V783) -> ((((V781('erased'))('erased'))(V782))(V783)) end end end(fun (V776) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V776)) end))(V774))))/binary>>/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V775))), {'Prelude.Types.Right', V784} end end), ((begin (V801 = fun (V796) -> fun (V797) -> fun (V798) -> fun (V799) -> fun (V800) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V798, V799, V800)) end end end end end), fun (V802) -> fun (V803) -> ((((V801('erased'))('erased'))(V802))(V803)) end end end((begin (V793 = fun (V787) -> fun (V788) -> fun (V789) -> fun (V790) -> case V790 of {'Prelude.Types.Left', V791} -> {'Prelude.Types.Left', V791}; {'Prelude.Types.Right', V792} -> {'Prelude.Types.Right', (V789(V792))} end end end end end), fun (V794) -> fun (V795) -> ((((V793('erased'))('erased'))(V794))(V795)) end end end(fun (V786) -> {'Builtin.MkUnit'} end))))(V785)) end; {'Core.TT.NonCoveringCall', V804} -> begin (V825 = fun (V805) -> begin (V824 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V766))/binary, <<<<": Calls non covering function"/utf8>>/binary, case V804 of [E6 | E7] -> (fun (V806, V807) -> case V807 of [] -> <<<<" "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V806))/binary>>; _ -> <<<<"s: "/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ((begin (V813 = fun (V809) -> fun (V810) -> fun (V811) -> fun (V812) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V811, V812)) end end end end), fun (V814) -> fun (V815) -> ((((V813('erased'))('erased'))(V814))(V815)) end end end(fun (V808) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V808)) end))(V804))))/binary>> end end(E6, E7)); _ -> <<<<"s: "/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ((begin (V821 = fun (V817) -> fun (V818) -> fun (V819) -> fun (V820) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V819, V820)) end end end end), fun (V822) -> fun (V823) -> ((((V821('erased'))('erased'))(V822))(V823)) end end end(fun (V816) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V816)) end))(V804))))/binary>> end/binary>>/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V805))), {'Prelude.Types.Right', V824} end end), ((begin (V841 = fun (V836) -> fun (V837) -> fun (V838) -> fun (V839) -> fun (V840) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V838, V839, V840)) end end end end end), fun (V842) -> fun (V843) -> ((((V841('erased'))('erased'))(V842))(V843)) end end end((begin (V833 = fun (V827) -> fun (V828) -> fun (V829) -> fun (V830) -> case V830 of {'Prelude.Types.Left', V831} -> {'Prelude.Types.Left', V831}; {'Prelude.Types.Right', V832} -> {'Prelude.Types.Right', (V829(V832))} end end end end end), fun (V834) -> fun (V835) -> ((((V833('erased'))('erased'))(V834))(V835)) end end end(fun (V826) -> {'Builtin.MkUnit'} end))))(V825)) end; _ -> begin (V846 = fun (V844) -> begin (V845 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V766))/binary, <<": All cases covered"/utf8>>/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V844))), {'Prelude.Types.Right', V845} end end), ((begin (V862 = fun (V857) -> fun (V858) -> fun (V859) -> fun (V860) -> fun (V861) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V859, V860, V861)) end end end end end), fun (V863) -> fun (V864) -> ((((V862('erased'))('erased'))(V863))(V864)) end end end((begin (V854 = fun (V848) -> fun (V849) -> fun (V850) -> fun (V851) -> case V851 of {'Prelude.Types.Left', V852} -> {'Prelude.Types.Left', V852}; {'Prelude.Types.Right', V853} -> {'Prelude.Types.Right', (V850(V853))} end end end end end), fun (V855) -> fun (V856) -> ((((V854('erased'))('erased'))(V855))(V856)) end end end(fun (V847) -> {'Builtin.MkUnit'} end))))(V846)) end end end), V865 end(V768)) end end end end end, ((begin (V871 = fun (V867) -> fun (V868) -> fun (V869) -> fun (V870) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V869, V870)) end end end end), fun (V872) -> fun (V873) -> ((((V871('erased'))('erased'))(V872))(V873)) end end end(fun (V866) -> ('Idris.Idris2.Builtin':'un--fst'(V866)) end))(V765))))), fun (V875) -> begin (V876 = (V874(V875))), case V876 of {'Prelude.Types.Left', V877} -> {'Prelude.Types.Left', V877}; {'Prelude.Types.Right', V878} -> (begin (V880 = fun (V879) -> {'Prelude.Types.Right', 1} end), V880 end(V875)) end end end end end), V881 end(V762)) end end end end), V882 end(V725)) end end end end; {'TTImp.TTImp.CheckTotal', V883} -> begin (V889 = begin (V884 = V0), fun (V885) -> begin (V888 = (begin (V886 = V884), fun (V887) -> ('erlang':'get'(V886)) end end(V885))), {'Prelude.Types.Right', V888} end end end), fun (V890) -> begin (V891 = (V889(V890))), case V891 of {'Prelude.Types.Left', V892} -> {'Prelude.Types.Left', V892}; {'Prelude.Types.Right', V893} -> (begin (V1000 = begin (V926 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V883, case V893 of {'Core.Context.MkDefs', V894, V895, V896, V897, V898, V899, V900, V901, V902, V903, V904, V905, V906, V907, V908, V909, V910, V911, V912, V913, V914, V915, V916, V917, V918, V919, V920, V921, V922, V923, V924, V925} -> V894 end))), fun (V927) -> begin (V928 = (V926(V927))), case V928 of {'Prelude.Types.Left', V929} -> {'Prelude.Types.Left', V929}; {'Prelude.Types.Right', V930} -> (begin (V999 = case V930 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V883)); _ -> begin (V992 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V931) -> begin (V951 = begin (V932 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V931))), ((begin (V948 = fun (V943) -> fun (V944) -> fun (V945) -> fun (V946) -> fun (V947) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V945, V946, V947)) end end end end end), fun (V949) -> fun (V950) -> ((((V948('erased'))('erased'))(V949))(V950)) end end end((begin (V940 = fun (V934) -> fun (V935) -> fun (V936) -> fun (V937) -> case V937 of {'Prelude.Types.Left', V938} -> {'Prelude.Types.Left', V938}; {'Prelude.Types.Right', V939} -> {'Prelude.Types.Right', (V936(V939))} end end end end end), fun (V941) -> fun (V942) -> ((((V940('erased'))('erased'))(V941))(V942)) end end end(fun (V933) -> {'Builtin.MkUnit'} end))))(V932)) end), fun (V952) -> begin (V953 = (V951(V952))), case V953 of {'Prelude.Types.Left', V954} -> {'Prelude.Types.Left', V954}; {'Prelude.Types.Right', V955} -> (begin (V983 = begin (V956 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V931))), fun (V957) -> begin (V958 = (V956(V957))), case V958 of {'Prelude.Types.Left', V959} -> {'Prelude.Types.Left', V959}; {'Prelude.Types.Right', V960} -> (begin (V982 = begin (V963 = fun (V961) -> begin (V962 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V931))/binary, <<<<" is "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_Totality'(V960))/binary>>/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V961))), {'Prelude.Types.Right', V962} end end), ((begin (V979 = fun (V974) -> fun (V975) -> fun (V976) -> fun (V977) -> fun (V978) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V976, V977, V978)) end end end end end), fun (V980) -> fun (V981) -> ((((V979('erased'))('erased'))(V980))(V981)) end end end((begin (V971 = fun (V965) -> fun (V966) -> fun (V967) -> fun (V968) -> case V968 of {'Prelude.Types.Left', V969} -> {'Prelude.Types.Left', V969}; {'Prelude.Types.Right', V970} -> {'Prelude.Types.Right', (V967(V970))} end end end end end), fun (V972) -> fun (V973) -> ((((V971('erased'))('erased'))(V972))(V973)) end end end(fun (V964) -> {'Builtin.MkUnit'} end))))(V963)) end), V982 end(V957)) end end end end), V983 end(V952)) end end end end end, ((begin (V989 = fun (V985) -> fun (V986) -> fun (V987) -> fun (V988) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V987, V988)) end end end end), fun (V990) -> fun (V991) -> ((((V989('erased'))('erased'))(V990))(V991)) end end end(fun (V984) -> ('Idris.Idris2.Builtin':'un--fst'(V984)) end))(V930))))), fun (V993) -> begin (V994 = (V992(V993))), case V994 of {'Prelude.Types.Left', V995} -> {'Prelude.Types.Left', V995}; {'Prelude.Types.Right', V996} -> (begin (V998 = fun (V997) -> {'Prelude.Types.Right', 1} end), V998 end(V993)) end end end end end), V999 end(V927)) end end end end), V1000 end(V890)) end end end end; {'TTImp.TTImp.DebugInfo', V1001} -> begin (V1007 = begin (V1002 = V0), fun (V1003) -> begin (V1006 = (begin (V1004 = V1002), fun (V1005) -> ('erlang':'get'(V1004)) end end(V1003))), {'Prelude.Types.Right', V1006} end end end), fun (V1008) -> begin (V1009 = (V1007(V1008))), case V1009 of {'Prelude.Types.Left', V1010} -> {'Prelude.Types.Left', V1010}; {'Prelude.Types.Right', V1011} -> (begin (V1058 = begin (V1051 = begin (V1044 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V1001, case V1011 of {'Core.Context.MkDefs', V1012, V1013, V1014, V1015, V1016, V1017, V1018, V1019, V1020, V1021, V1022, V1023, V1024, V1025, V1026, V1027, V1028, V1029, V1030, V1031, V1032, V1033, V1034, V1035, V1036, V1037, V1038, V1039, V1040, V1041, V1042, V1043} -> V1012 end))), fun (V1045) -> begin (V1046 = (V1044(V1045))), case V1046 of {'Prelude.Types.Left', V1047} -> {'Prelude.Types.Left', V1047}; {'Prelude.Types.Right', V1048} -> (begin (V1050 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V1049) -> ('un--showInfo'(V1049)) end, V1048))), V1050 end(V1045)) end end end end), fun (V1052) -> begin (V1053 = (V1051(V1052))), case V1053 of {'Prelude.Types.Left', V1054} -> {'Prelude.Types.Left', V1054}; {'Prelude.Types.Right', V1055} -> (begin (V1057 = fun (V1056) -> {'Prelude.Types.Right', 1} end), V1057 end(V1052)) end end end end), V1058 end(V1008)) end end end end; {'TTImp.TTImp.Quit'} -> begin (V1080 = begin (V1061 = fun (V1059) -> begin (V1060 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<"Bye for now!\x{a}"/utf8>>, V1059))), {'Prelude.Types.Right', V1060} end end), ((begin (V1077 = fun (V1072) -> fun (V1073) -> fun (V1074) -> fun (V1075) -> fun (V1076) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1074, V1075, V1076)) end end end end end), fun (V1078) -> fun (V1079) -> ((((V1077('erased'))('erased'))(V1078))(V1079)) end end end((begin (V1069 = fun (V1063) -> fun (V1064) -> fun (V1065) -> fun (V1066) -> case V1066 of {'Prelude.Types.Left', V1067} -> {'Prelude.Types.Left', V1067}; {'Prelude.Types.Right', V1068} -> {'Prelude.Types.Right', (V1065(V1068))} end end end end end), fun (V1070) -> fun (V1071) -> ((((V1069('erased'))('erased'))(V1070))(V1071)) end end end(fun (V1062) -> {'Builtin.MkUnit'} end))))(V1061)) end), fun (V1081) -> begin (V1082 = (V1080(V1081))), case V1082 of {'Prelude.Types.Left', V1083} -> {'Prelude.Types.Left', V1083}; {'Prelude.Types.Right', V1084} -> (begin (V1086 = fun (V1085) -> {'Prelude.Types.Right', 0} end), V1086 end(V1081)) end end end end end.
