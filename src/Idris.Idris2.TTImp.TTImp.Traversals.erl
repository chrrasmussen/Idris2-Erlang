-module('Idris.Idris2.TTImp.TTImp.Traversals').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--mapTTImp'/2,
  'un--mapPiInfo'/2,
  'un--mapImpTy'/2,
  'un--mapImpRecord'/2,
  'un--mapImpDecl'/2,
  'un--mapImpData'/2,
  'un--mapImpClause'/2,
  'un--mapIFieldUpdate'/2,
  'un--mapIField'/2,
  'un--mapFnOpt'/2,
  'un--mapAltType'/2
]).
'un--mapTTImp'(V0, V1) -> case V1 of {'TTImp.TTImp.IVar', V2, V3} -> (V0(V1)); {'TTImp.TTImp.IPi', V4, V5, V6, V7, V8, V9} -> (V0({'TTImp.TTImp.IPi', V4, V5, ('un--mapPiInfo'(V0, V6)), V7, ('un--mapTTImp'(V0, V8)), ('un--mapTTImp'(V0, V9))})); {'TTImp.TTImp.ILam', V10, V11, V12, V13, V14, V15} -> (V0({'TTImp.TTImp.ILam', V10, V11, ('un--mapPiInfo'(V0, V12)), V13, ('un--mapTTImp'(V0, V14)), ('un--mapTTImp'(V0, V15))})); {'TTImp.TTImp.ILet', V16, V17, V18, V19, V20, V21, V22} -> (V0({'TTImp.TTImp.ILet', V16, V17, V18, V19, ('un--mapTTImp'(V0, V20)), ('un--mapTTImp'(V0, V21)), ('un--mapTTImp'(V0, V22))})); {'TTImp.TTImp.ICase', V23, V24, V25, V26} -> (V0({'TTImp.TTImp.ICase', V23, ('un--mapTTImp'(V0, V24)), ('un--mapTTImp'(V0, V25)), ((begin (V32 = fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V30, V31)) end end end end), fun (V33) -> fun (V34) -> ((((V32('erased'))('erased'))(V33))(V34)) end end end(fun (V27) -> ('un--mapImpClause'(V0, V27)) end))(V26))})); {'TTImp.TTImp.ILocal', V35, V36, V37} -> (V0({'TTImp.TTImp.ILocal', V35, ((begin (V43 = fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V41, V42)) end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end(fun (V38) -> ('un--mapImpDecl'(V0, V38)) end))(V36)), ('un--mapTTImp'(V0, V37))})); {'TTImp.TTImp.ICaseLocal', V46, V47, V48, V49, V50} -> (V0({'TTImp.TTImp.ICaseLocal', V46, V47, V48, V49, ('un--mapTTImp'(V0, V50))})); {'TTImp.TTImp.IUpdate', V51, V52, V53} -> (V0({'TTImp.TTImp.IUpdate', V51, ((begin (V59 = fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V57, V58)) end end end end), fun (V60) -> fun (V61) -> ((((V59('erased'))('erased'))(V60))(V61)) end end end(fun (V54) -> ('un--mapIFieldUpdate'(V0, V54)) end))(V52)), ('un--mapTTImp'(V0, V53))})); {'TTImp.TTImp.IApp', V62, V63, V64} -> (V0({'TTImp.TTImp.IApp', V62, ('un--mapTTImp'(V0, V63)), ('un--mapTTImp'(V0, V64))})); {'TTImp.TTImp.IAutoApp', V65, V66, V67} -> (V0({'TTImp.TTImp.IAutoApp', V65, ('un--mapTTImp'(V0, V66)), ('un--mapTTImp'(V0, V67))})); {'TTImp.TTImp.INamedApp', V68, V69, V70, V71} -> (V0({'TTImp.TTImp.INamedApp', V68, ('un--mapTTImp'(V0, V69)), V70, ('un--mapTTImp'(V0, V71))})); {'TTImp.TTImp.IWithApp', V72, V73, V74} -> (V0({'TTImp.TTImp.IWithApp', V72, ('un--mapTTImp'(V0, V73)), ('un--mapTTImp'(V0, V74))})); {'TTImp.TTImp.ISearch', V75, V76} -> (V0({'TTImp.TTImp.ISearch', V75, V76})); {'TTImp.TTImp.IAlternative', V77, V78, V79} -> (V0({'TTImp.TTImp.IAlternative', V77, ('un--mapAltType'(V0, V78)), ((begin (V85 = fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V83, V84)) end end end end), fun (V86) -> fun (V87) -> ((((V85('erased'))('erased'))(V86))(V87)) end end end(fun (V80) -> ('un--mapTTImp'(V0, V80)) end))(V79))})); {'TTImp.TTImp.IRewrite', V88, V89, V90} -> (V0({'TTImp.TTImp.IRewrite', V88, ('un--mapTTImp'(V0, V89)), ('un--mapTTImp'(V0, V90))})); {'TTImp.TTImp.ICoerced', V91, V92} -> (V0({'TTImp.TTImp.ICoerced', V91, ('un--mapTTImp'(V0, V92))})); {'TTImp.TTImp.IBindHere', V93, V94, V95} -> (V0({'TTImp.TTImp.IBindHere', V93, V94, ('un--mapTTImp'(V0, V95))})); {'TTImp.TTImp.IBindVar', V96, V97} -> (V0({'TTImp.TTImp.IBindVar', V96, V97})); {'TTImp.TTImp.IAs', V98, V99, V100, V101, V102} -> (V0({'TTImp.TTImp.IAs', V98, V99, V100, V101, ('un--mapTTImp'(V0, V102))})); {'TTImp.TTImp.IMustUnify', V103, V104, V105} -> (V0({'TTImp.TTImp.IMustUnify', V103, V104, ('un--mapTTImp'(V0, V105))})); {'TTImp.TTImp.IDelayed', V106, V107, V108} -> (V0({'TTImp.TTImp.IDelayed', V106, V107, ('un--mapTTImp'(V0, V108))})); {'TTImp.TTImp.IDelay', V109, V110} -> (V0({'TTImp.TTImp.IDelay', V109, ('un--mapTTImp'(V0, V110))})); {'TTImp.TTImp.IForce', V111, V112} -> (V0({'TTImp.TTImp.IForce', V111, ('un--mapTTImp'(V0, V112))})); {'TTImp.TTImp.IQuote', V113, V114} -> (V0({'TTImp.TTImp.IQuote', V113, ('un--mapTTImp'(V0, V114))})); {'TTImp.TTImp.IQuoteName', V115, V116} -> (V0({'TTImp.TTImp.IQuoteName', V115, V116})); {'TTImp.TTImp.IQuoteDecl', V117, V118} -> (V0({'TTImp.TTImp.IQuoteDecl', V117, ((begin (V124 = fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V122, V123)) end end end end), fun (V125) -> fun (V126) -> ((((V124('erased'))('erased'))(V125))(V126)) end end end(fun (V119) -> ('un--mapImpDecl'(V0, V119)) end))(V118))})); {'TTImp.TTImp.IUnquote', V127, V128} -> (V0({'TTImp.TTImp.IUnquote', V127, ('un--mapTTImp'(V0, V128))})); {'TTImp.TTImp.IRunElab', V129, V130} -> (V0({'TTImp.TTImp.IRunElab', V129, ('un--mapTTImp'(V0, V130))})); {'TTImp.TTImp.IPrimVal', V131, V132} -> (V0({'TTImp.TTImp.IPrimVal', V131, V132})); {'TTImp.TTImp.IType', V133} -> (V0({'TTImp.TTImp.IType', V133})); {'TTImp.TTImp.IHole', V134, V135} -> (V0({'TTImp.TTImp.IHole', V134, V135})); {'TTImp.TTImp.IUnifyLog', V136, V137, V138} -> (V0({'TTImp.TTImp.IUnifyLog', V136, V137, ('un--mapTTImp'(V0, V138))})); {'TTImp.TTImp.Implicit', V139, V140} -> (V0({'TTImp.TTImp.Implicit', V139, V140})); {'TTImp.TTImp.IWithUnambigNames', V141, V142, V143} -> (V0({'TTImp.TTImp.IWithUnambigNames', V141, V142, ('un--mapTTImp'(V0, V143))})) end.
'un--mapPiInfo'(V0, V1) -> case V1 of {'Core.TT.Implicit'} -> {'Core.TT.Implicit'}; {'Core.TT.Explicit'} -> {'Core.TT.Explicit'}; {'Core.TT.AutoImplicit'} -> {'Core.TT.AutoImplicit'}; {'Core.TT.DefImplicit', V2} -> {'Core.TT.DefImplicit', ('un--mapTTImp'(V0, V2))} end.
'un--mapImpTy'(V0, V1) -> case V1 of {'TTImp.TTImp.MkImpTy', V2, V3, V4, V5} -> {'TTImp.TTImp.MkImpTy', V2, V3, V4, ('un--mapTTImp'(V0, V5))} end.
'un--mapImpRecord'(V0, V1) -> case V1 of {'TTImp.TTImp.MkImpRecord', V2, V3, V4, V5, V6, V7} -> {'TTImp.TTImp.MkImpRecord', V2, V3, ((begin (V33 = fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V31, V32)) end end end end), fun (V34) -> fun (V35) -> ((((V33('erased'))('erased'))(V34))(V35)) end end end((begin (V26 = fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> case V23 of {'Builtin.MkPair', V24, V25} -> {'Builtin.MkPair', V24, (V22(V25))} end end end end end), fun (V27) -> fun (V28) -> ((((V26('erased'))('erased'))(V27))(V28)) end end end((begin (V17 = fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> case V14 of {'Builtin.MkPair', V15, V16} -> {'Builtin.MkPair', V15, (V13(V16))} end end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V8) -> case V8 of {'Builtin.MkPair', V9, V10} -> {'Builtin.MkPair', ('un--mapPiInfo'(V0, V9)), ('un--mapTTImp'(V0, V10))} end end))))))(V4)), V5, V6, ((begin (V41 = fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V39, V40)) end end end end), fun (V42) -> fun (V43) -> ((((V41('erased'))('erased'))(V42))(V43)) end end end(fun (V36) -> ('un--mapIField'(V0, V36)) end))(V7))} end.
'un--mapImpDecl'(V0, V1) -> case V1 of {'TTImp.TTImp.IClaim', V2, V3, V4, V5, V6} -> {'TTImp.TTImp.IClaim', V2, V3, V4, ((begin (V12 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V10, V11)) end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V7) -> ('un--mapFnOpt'(V0, V7)) end))(V5)), ('un--mapImpTy'(V0, V6))}; {'TTImp.TTImp.IData', V15, V16, V17, V18} -> {'TTImp.TTImp.IData', V15, V16, V17, ('un--mapImpData'(V0, V18))}; {'TTImp.TTImp.IDef', V19, V20, V21} -> {'TTImp.TTImp.IDef', V19, V20, ((begin (V27 = fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V25, V26)) end end end end), fun (V28) -> fun (V29) -> ((((V27('erased'))('erased'))(V28))(V29)) end end end(fun (V22) -> ('un--mapImpClause'(V0, V22)) end))(V21))}; {'TTImp.TTImp.IParameters', V30, V31, V32} -> {'TTImp.TTImp.IParameters', V30, V31, ((begin (V38 = fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V36, V37)) end end end end), fun (V39) -> fun (V40) -> ((((V38('erased'))('erased'))(V39))(V40)) end end end(fun (V33) -> ('un--mapImpDecl'(V0, V33)) end))(V32))}; {'TTImp.TTImp.IRecord', V41, V42, V43, V44, V45} -> {'TTImp.TTImp.IRecord', V41, V42, V43, V44, ('un--mapImpRecord'(V0, V45))}; {'TTImp.TTImp.IFail', V46, V47, V48} -> {'TTImp.TTImp.IFail', V46, V47, ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('un--mapImpDecl'(V0, V49)) end))(V48))}; {'TTImp.TTImp.INamespace', V57, V58, V59} -> {'TTImp.TTImp.INamespace', V57, V58, ((begin (V65 = fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V63, V64)) end end end end), fun (V66) -> fun (V67) -> ((((V65('erased'))('erased'))(V66))(V67)) end end end(fun (V60) -> ('un--mapImpDecl'(V0, V60)) end))(V59))}; {'TTImp.TTImp.ITransform', V68, V69, V70, V71} -> {'TTImp.TTImp.ITransform', V68, V69, ('un--mapTTImp'(V0, V70)), ('un--mapTTImp'(V0, V71))}; {'TTImp.TTImp.IRunElabDecl', V72, V73} -> {'TTImp.TTImp.IRunElabDecl', V72, ('un--mapTTImp'(V0, V73))}; {'TTImp.TTImp.IPragma', V74, V75, V76} -> {'TTImp.TTImp.IPragma', V74, V75, fun (V77) -> (V76(V77)) end}; {'TTImp.TTImp.ILog', V78} -> {'TTImp.TTImp.ILog', V78}; {'TTImp.TTImp.IBuiltin', V79, V80, V81} -> {'TTImp.TTImp.IBuiltin', V79, V80, V81} end.
'un--mapImpData'(V0, V1) -> case V1 of {'TTImp.TTImp.MkImpData', V2, V3, V4, V5, V6} -> {'TTImp.TTImp.MkImpData', V2, V3, ('un--mapTTImp'(V0, V4)), V5, ((begin (V12 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V10, V11)) end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V7) -> ('un--mapImpTy'(V0, V7)) end))(V6))}; {'TTImp.TTImp.MkImpLater', V15, V16, V17} -> {'TTImp.TTImp.MkImpLater', V15, V16, ('un--mapTTImp'(V0, V17))} end.
'un--mapImpClause'(V0, V1) -> case V1 of {'TTImp.TTImp.PatClause', V2, V3, V4} -> {'TTImp.TTImp.PatClause', V2, ('un--mapTTImp'(V0, V3)), ('un--mapTTImp'(V0, V4))}; {'TTImp.TTImp.WithClause', V5, V6, V7, V8, V9, V10, V11} -> {'TTImp.TTImp.WithClause', V5, ('un--mapTTImp'(V0, V6)), V7, ('un--mapTTImp'(V0, V8)), V9, V10, ((begin (V17 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V15, V16)) end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V12) -> ('un--mapImpClause'(V0, V12)) end))(V11))}; {'TTImp.TTImp.ImpossibleClause', V20, V21} -> {'TTImp.TTImp.ImpossibleClause', V20, ('un--mapTTImp'(V0, V21))} end.
'un--mapIFieldUpdate'(V0, V1) -> case V1 of {'TTImp.TTImp.ISetField', V2, V3} -> {'TTImp.TTImp.ISetField', V2, ('un--mapTTImp'(V0, V3))}; {'TTImp.TTImp.ISetFieldApp', V4, V5} -> {'TTImp.TTImp.ISetFieldApp', V4, ('un--mapTTImp'(V0, V5))} end.
'un--mapIField'(V0, V1) -> case V1 of {'TTImp.TTImp.MkIField', V2, V3, V4, V5, V6} -> {'TTImp.TTImp.MkIField', V2, V3, ('un--mapPiInfo'(V0, V4)), V5, ('un--mapTTImp'(V0, V6))} end.
'un--mapFnOpt'(V0, V1) -> case V1 of {'TTImp.TTImp.Inline'} -> {'TTImp.TTImp.Inline'}; {'TTImp.TTImp.NoInline'} -> {'TTImp.TTImp.NoInline'}; {'TTImp.TTImp.Deprecate'} -> {'TTImp.TTImp.Deprecate'}; {'TTImp.TTImp.TCInline'} -> {'TTImp.TTImp.TCInline'}; {'TTImp.TTImp.Hint', V2} -> {'TTImp.TTImp.Hint', V2}; {'TTImp.TTImp.GlobalHint', V3} -> {'TTImp.TTImp.GlobalHint', V3}; {'TTImp.TTImp.ExternFn'} -> {'TTImp.TTImp.ExternFn'}; {'TTImp.TTImp.ForeignFn', V4} -> {'TTImp.TTImp.ForeignFn', ((begin (V10 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V8, V9)) end end end end), fun (V11) -> fun (V12) -> ((((V10('erased'))('erased'))(V11))(V12)) end end end(fun (V5) -> ('un--mapTTImp'(V0, V5)) end))(V4))}; {'TTImp.TTImp.ForeignExport', V13} -> {'TTImp.TTImp.ForeignExport', ((begin (V19 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V17, V18)) end end end end), fun (V20) -> fun (V21) -> ((((V19('erased'))('erased'))(V20))(V21)) end end end(fun (V14) -> ('un--mapTTImp'(V0, V14)) end))(V13))}; {'TTImp.TTImp.Invertible'} -> {'TTImp.TTImp.Invertible'}; {'TTImp.TTImp.Totality', V22} -> {'TTImp.TTImp.Totality', V22}; {'TTImp.TTImp.Macro'} -> {'TTImp.TTImp.Macro'}; {'TTImp.TTImp.SpecArgs', V23} -> {'TTImp.TTImp.SpecArgs', V23} end.
'un--mapAltType'(V0, V1) -> case V1 of {'TTImp.TTImp.FirstSuccess'} -> {'TTImp.TTImp.FirstSuccess'}; {'TTImp.TTImp.Unique'} -> {'TTImp.TTImp.Unique'}; {'TTImp.TTImp.UniqueDefault', V2} -> {'TTImp.TTImp.UniqueDefault', ('un--mapTTImp'(V0, V2))} end.
