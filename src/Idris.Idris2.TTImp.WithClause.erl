-module('Idris.Idris2.TTImp.WithClause').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in getNewLHS-21461'/21,
  'nested--9372-21732--in--un--wrhsC'/9,
  'nested--9372-21731--in--un--wrhs'/9,
  'nested--9372-21729--in--un--withApply'/11,
  'nested--9372-21730--in--un--updateWith'/11,
  'nested--8683-21138--in--un--dropWithArgs'/11,
  'un--withRHS'/8,
  'un--mergeMatches'/4,
  'un--matchFail'/2,
  'un--matchAny'/5,
  'un--matchAll'/4,
  'un--getNewLHS'/9,
  'un--getMatch'/5,
  'un--getHeadLoc'/1,
  'un--getArgMatch'/6,
  'un--addAlias'/4
]).
'case--case block in case block in case block in getNewLHS-21461'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of [E0 | E1] -> (fun (V21, V22) -> begin (V38 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, 5, fun () -> <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V24, V25)) end end}, V15))/binary, <<<<" against "/utf8>>/binary, <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V26)) end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V27, V28)) end end}, V18))/binary, <<<<" dropping "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V29) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V30) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V31, V32)) end end}, V29)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V36, V37)) end end}, V33, V34)) end end}, [V21 | V22]))/binary>>/binary>>/binary>>/binary>> end))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V123 = begin (V43 = ('un--getMatch'(V7, V8, 1, V15, V18))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V122 = begin (V75 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, 5, fun () -> <<<<"Matches: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V49) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V50, V51)) end end}, {'Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V54, V55)) end end}, V52)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V58) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V58)) end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V59, V60)) end end}, V56, V57)) end end}}, V48)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V63) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V63)) end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V64, V65)) end end}, {'Prelude.Show.MkShow', fun (V66) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V67) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V67)) end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V68, V69)) end end}, V66)) end, fun (V70) -> fun (V71) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V72) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V73, V74)) end end}, V70, V71)) end end}}, V61, V62)) end end}, V47))/binary>> end))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V121 = begin (V88 = ((begin (V85 = fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V83, V84)) end end end end), fun (V86) -> fun (V87) -> ((((V85('erased'))('erased'))(V86))(V87)) end end end(fun (V80) -> ('un--getArgMatch'(V9, {'TTImp.Elab.Check.InLHS', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'())}, 0, V21, V47, V80)) end))(V2))), begin (V98 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, 5, fun () -> <<<<"Parameters: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V89) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V90) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V90)) end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V91, V92)) end end}, V89)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V95) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V95)) end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V96, V97)) end end}, V93, V94)) end end}, V88))/binary>> end))), fun (V99) -> begin (V100 = (V98(V99))), case V100 of {'Prelude.Types.Left', V101} -> {'Prelude.Types.Left', V101}; {'Prelude.Types.Right', V102} -> (begin (V120 = begin (V103 = ('un--getHeadLoc'(V0))), fun (V104) -> begin (V105 = (V103(V104))), case V105 of {'Prelude.Types.Left', V106} -> {'Prelude.Types.Left', V106}; {'Prelude.Types.Right', V107} -> (begin (V119 = begin (V108 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', V107, V3}, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V88, V22))))), begin (V112 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, 5, fun () -> <<<<"New LHS: "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V109)) end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V110, V111)) end end}, V108))/binary>> end))), fun (V113) -> begin (V114 = (V112(V113))), case V114 of {'Prelude.Types.Left', V115} -> {'Prelude.Types.Left', V115}; {'Prelude.Types.Right', V116} -> (begin (V118 = fun (V117) -> {'Prelude.Types.Right', V108} end), V118 end(V113)) end end end end end), V119 end(V104)) end end end end), V120 end(V99)) end end end end end), V121 end(V76)) end end end end), V122 end(V44)) end end end end), V123 end(V39)) end end end end end(E0, E1)); _ -> fun (V124) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V6, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V124)) end end.
'nested--9372-21732--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'TTImp.TTImp.PatClause', V9, V10, V11} -> begin (V12 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V11))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V18 = fun (V17) -> {'Prelude.Types.Right', {'TTImp.TTImp.PatClause', V9, V10, V16}} end), V18 end(V13)) end end end end; _ -> fun (V19) -> {'Prelude.Types.Right', V8} end end.
'nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'TTImp.TTImp.IPi', V9, V10, V11, V12, V13, V14} -> begin (V15 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V13))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V27 = begin (V20 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V14))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V26 = fun (V25) -> {'Prelude.Types.Right', {'TTImp.TTImp.IPi', V9, V10, V11, V12, V19, V24}} end), V26 end(V21)) end end end end), V27 end(V16)) end end end end; {'TTImp.TTImp.ILam', V28, V29, V30, V31, V32, V33} -> begin (V34 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V32))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V46 = begin (V39 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V33))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V45 = fun (V44) -> {'Prelude.Types.Right', {'TTImp.TTImp.ILam', V28, V29, V30, V31, V38, V43}} end), V45 end(V40)) end end end end), V46 end(V35)) end end end end; {'TTImp.TTImp.ILet', V47, V48, V49, V50, V51, V52, V53} -> begin (V54 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V51))), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V72 = begin (V59 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V52))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V71 = begin (V64 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V53))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V70 = fun (V69) -> {'Prelude.Types.Right', {'TTImp.TTImp.ILet', V47, V48, V49, V50, V58, V63, V68}} end), V70 end(V65)) end end end end), V71 end(V60)) end end end end), V72 end(V55)) end end end end; {'TTImp.TTImp.ICase', V73, V74, V75, V76} -> begin (V77 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V74))), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V96 = begin (V82 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V75))), fun (V83) -> begin (V84 = (V82(V83))), case V84 of {'Prelude.Types.Left', V85} -> {'Prelude.Types.Left', V85}; {'Prelude.Types.Right', V86} -> (begin (V95 = begin (V88 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V87) -> ('nested--9372-21732--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7, V87)) end, V76, []))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V94 = fun (V93) -> {'Prelude.Types.Right', {'TTImp.TTImp.ICase', V73, V81, V86, V92}} end), V94 end(V89)) end end end end), V95 end(V83)) end end end end), V96 end(V78)) end end end end; {'TTImp.TTImp.ILocal', V97, V98, V99} -> begin (V100 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V99))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V106 = fun (V105) -> {'Prelude.Types.Right', {'TTImp.TTImp.ILocal', V97, V98, V104}} end), V106 end(V101)) end end end end; {'TTImp.TTImp.IUpdate', V107, V108, V109} -> begin (V110 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V109))), fun (V111) -> begin (V112 = (V110(V111))), case V112 of {'Prelude.Types.Left', V113} -> {'Prelude.Types.Left', V113}; {'Prelude.Types.Right', V114} -> (begin (V116 = fun (V115) -> {'Prelude.Types.Right', {'TTImp.TTImp.IUpdate', V107, V108, V114}} end), V116 end(V111)) end end end end; {'TTImp.TTImp.IApp', V117, V118, V119} -> begin (V120 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V118))), fun (V121) -> begin (V122 = (V120(V121))), case V122 of {'Prelude.Types.Left', V123} -> {'Prelude.Types.Left', V123}; {'Prelude.Types.Right', V124} -> (begin (V132 = begin (V125 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V119))), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V131 = fun (V130) -> {'Prelude.Types.Right', {'TTImp.TTImp.IApp', V117, V124, V129}} end), V131 end(V126)) end end end end), V132 end(V121)) end end end end; {'TTImp.TTImp.IAutoApp', V133, V134, V135} -> begin (V136 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V134))), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V148 = begin (V141 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V135))), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V147 = fun (V146) -> {'Prelude.Types.Right', {'TTImp.TTImp.IAutoApp', V133, V140, V145}} end), V147 end(V142)) end end end end), V148 end(V137)) end end end end; {'TTImp.TTImp.INamedApp', V149, V150, V151, V152} -> begin (V153 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V150))), fun (V154) -> begin (V155 = (V153(V154))), case V155 of {'Prelude.Types.Left', V156} -> {'Prelude.Types.Left', V156}; {'Prelude.Types.Right', V157} -> (begin (V165 = begin (V158 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V152))), fun (V159) -> begin (V160 = (V158(V159))), case V160 of {'Prelude.Types.Left', V161} -> {'Prelude.Types.Left', V161}; {'Prelude.Types.Right', V162} -> (begin (V164 = fun (V163) -> {'Prelude.Types.Right', {'TTImp.TTImp.INamedApp', V149, V157, V151, V162}} end), V164 end(V159)) end end end end), V165 end(V154)) end end end end; {'TTImp.TTImp.IWithApp', V166, V167, V168} -> ('nested--9372-21730--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V166, V167, [V168 | []])); {'TTImp.TTImp.IRewrite', V169, V170, V171} -> begin (V172 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V170))), fun (V173) -> begin (V174 = (V172(V173))), case V174 of {'Prelude.Types.Left', V175} -> {'Prelude.Types.Left', V175}; {'Prelude.Types.Right', V176} -> (begin (V184 = begin (V177 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V171))), fun (V178) -> begin (V179 = (V177(V178))), case V179 of {'Prelude.Types.Left', V180} -> {'Prelude.Types.Left', V180}; {'Prelude.Types.Right', V181} -> (begin (V183 = fun (V182) -> {'Prelude.Types.Right', {'TTImp.TTImp.IRewrite', V169, V176, V181}} end), V183 end(V178)) end end end end), V184 end(V173)) end end end end; {'TTImp.TTImp.IDelayed', V185, V186, V187} -> begin (V188 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V187))), fun (V189) -> begin (V190 = (V188(V189))), case V190 of {'Prelude.Types.Left', V191} -> {'Prelude.Types.Left', V191}; {'Prelude.Types.Right', V192} -> (begin (V194 = fun (V193) -> {'Prelude.Types.Right', {'TTImp.TTImp.IDelayed', V185, V186, V192}} end), V194 end(V189)) end end end end; {'TTImp.TTImp.IDelay', V195, V196} -> begin (V197 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V196))), fun (V198) -> begin (V199 = (V197(V198))), case V199 of {'Prelude.Types.Left', V200} -> {'Prelude.Types.Left', V200}; {'Prelude.Types.Right', V201} -> (begin (V203 = fun (V202) -> {'Prelude.Types.Right', {'TTImp.TTImp.IDelay', V195, V201}} end), V203 end(V198)) end end end end; {'TTImp.TTImp.IForce', V204, V205} -> begin (V206 = ('nested--9372-21731--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V205))), fun (V207) -> begin (V208 = (V206(V207))), case V208 of {'Prelude.Types.Left', V209} -> {'Prelude.Types.Left', V209}; {'Prelude.Types.Right', V210} -> (begin (V212 = fun (V211) -> {'Prelude.Types.Right', {'TTImp.TTImp.IForce', V204, V210}} end), V212 end(V207)) end end end end; _ -> fun (V213) -> {'Prelude.Types.Right', V8} end end.
'nested--9372-21729--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of [] -> V9; [E0 | E1] -> (fun (V11, V12) -> ('nested--9372-21729--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, {'TTImp.TTImp.IWithApp', V8, V9, V11}, V12)) end(E0, E1)) end.
'nested--9372-21730--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of {'TTImp.TTImp.IWithApp', V11, V12, V13} -> ('nested--9372-21730--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12, [V13 | V10])); _ -> case V10 of [] -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V8, <<"Badly formed \x{27}with\x{27} application"/utf8>>}, V14)) end; [E0 | E1] -> (fun (V15, V16) -> begin (V23 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, 10, fun () -> <<<<"With-app: Matching "/utf8>>/binary, <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V17) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V17)) end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V18, V19)) end end}, V0))/binary, <<<<" against "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20)) end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V21, V22)) end end}, V9))/binary>>/binary>>/binary>> end))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V203 = begin (V28 = ('un--getMatch'(V6, V7, 0, V0, V9))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V202 = begin (V33 = ('un--getHeadLoc'(V9))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V201 = begin (V65 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, 10, fun () -> <<<<"Result: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V39) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V40, V41)) end end}, {'Prelude.Show.MkShow', fun (V42) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}, V42)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V49, V50)) end end}, V46, V47)) end end}}, V38)) end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V54, V55)) end end}, {'Prelude.Show.MkShow', fun (V56) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V57)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V58, V59)) end end}, V56)) end, fun (V60) -> fun (V61) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V62) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V62)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V63, V64)) end end}, V60, V61)) end end}}, V51, V52)) end end}, V32))/binary>> end))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V200 = begin (V78 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', V37, V3}, ((begin (V75 = fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V73, V74)) end end end end), fun (V76) -> fun (V77) -> ((((V75('erased'))('erased'))(V76))(V77)) end end end(fun (V70) -> ('un--getArgMatch'(V8, {'TTImp.Elab.Check.InExpr'}, 1, V15, V32, V70)) end))(V2))))), begin (V184 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, 10, fun () -> <<<<"With args for RHS: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V79) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V80) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V81) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V82) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V84, V85)) end end}, V82)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V88) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V88)) end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V89, V90)) end end}, V86, V87)) end end}, V81)) end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V93) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V94) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V94)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V95, V96)) end end}, V93)) end, fun (V97) -> fun (V98) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V99) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V99)) end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V100, V101)) end end}, V97, V98)) end end}, V91, V92)) end end}, {'Prelude.Show.MkShow', fun (V102) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V102)) end, fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V103, V104)) end end}}, V80)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V107) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V108) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V109)) end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V110, V111)) end end}, V108)) end, fun (V112) -> fun (V113) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V114) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V114)) end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V115, V116)) end end}, V112, V113)) end end}, V107)) end, fun (V117) -> fun (V118) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V119) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V120) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V120)) end, fun (V121) -> fun (V122) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V121, V122)) end end}, V119)) end, fun (V123) -> fun (V124) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V125) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V125)) end, fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V126, V127)) end end}, V123, V124)) end end}, V117, V118)) end end}, {'Prelude.Show.MkShow', fun (V128) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V128)) end, fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V129, V130)) end end}}, V105, V106)) end end}, V79)) end, fun (V131) -> fun (V132) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V133) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V134) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V135) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V136) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V136)) end, fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V137, V138)) end end}, V135)) end, fun (V139) -> fun (V140) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V141) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V141)) end, fun (V142) -> fun (V143) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V142, V143)) end end}, V139, V140)) end end}, V134)) end, fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V146) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V147) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V147)) end, fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V148, V149)) end end}, V146)) end, fun (V150) -> fun (V151) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V152) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V152)) end, fun (V153) -> fun (V154) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V153, V154)) end end}, V150, V151)) end end}, V144, V145)) end end}, {'Prelude.Show.MkShow', fun (V155) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V155)) end, fun (V156) -> fun (V157) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V156, V157)) end end}}, V133)) end, fun (V158) -> fun (V159) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V160) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V161) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V162) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V162)) end, fun (V163) -> fun (V164) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V163, V164)) end end}, V161)) end, fun (V165) -> fun (V166) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V167) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V167)) end, fun (V168) -> fun (V169) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V168, V169)) end end}, V165, V166)) end end}, V160)) end, fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V172) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V173) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V173)) end, fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V174, V175)) end end}, V172)) end, fun (V176) -> fun (V177) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V178) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V178)) end, fun (V179) -> fun (V180) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V179, V180)) end end}, V176, V177)) end end}, V170, V171)) end end}, {'Prelude.Show.MkShow', fun (V181) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V181)) end, fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V182, V183)) end end}}, V158, V159)) end end}, V131, V132)) end end}, V2))/binary>> end))), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V199 = begin (V192 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, 10, fun () -> <<<<"New RHS: "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V189) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V189)) end, fun (V190) -> fun (V191) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V190, V191)) end end}, V78))/binary>> end))), fun (V193) -> begin (V194 = (V192(V193))), case V194 of {'Prelude.Types.Left', V195} -> {'Prelude.Types.Left', V195}; {'Prelude.Types.Right', V196} -> (begin (V198 = fun (V197) -> {'Prelude.Types.Right', ('nested--9372-21729--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V78, V16))} end), V198 end(V193)) end end end end), V199 end(V185)) end end end end end), V200 end(V66)) end end end end), V201 end(V34)) end end end end), V202 end(V29)) end end end end), V203 end(V24)) end end end end end(E0, E1)) end end.
'nested--8683-21138--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of 0 -> fun (V11) -> {'Prelude.Types.Right', {'Builtin.MkPair', V10, []}} end; _ -> begin (V12 = (V9 - 1)), case V10 of {'TTImp.TTImp.IApp', V13, V14, V15} -> begin (V16 = ('nested--8683-21138--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12, V14))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V24 = fun (V21) -> case V20 of {'Builtin.MkPair', V22, V23} -> {'Prelude.Types.Right', {'Builtin.MkPair', V22, [V15 | V23]}} end end), V24 end(V17)) end end end end; _ -> fun (V25) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V6, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V25)) end end end end.
'un--withRHS'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('nested--9372-21731--in--un--wrhs'(V7, V6, V5, V4, V3, V2, V1, V0, V6)).
'un--mergeMatches'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Builtin.MkPair', V7, V8} -> begin (V9 = ('un--mergeMatches'(V0, V1, V2, V6))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V46 = case ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V16, V17)) end end}, V7, V13)) of {'Prelude.Types.Nothing'} -> fun (V18) -> {'Prelude.Types.Right', [{'Builtin.MkPair', V7, V8} | V13]} end; {'Prelude.Types.Just', V19} -> begin (V39 = begin (V20 = ('un--getMatch'(V0, V1, V2, V8, V19))), ((begin (V36 = fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V33, V34, V35)) end end end end end), fun (V37) -> fun (V38) -> ((((V36('erased'))('erased'))(V37))(V38)) end end end((begin (V28 = fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> {'Prelude.Types.Right', (V24(V27))} end end end end end), fun (V29) -> fun (V30) -> ((((V28('erased'))('erased'))(V29))(V30)) end end end(fun (V21) -> {'Builtin.MkUnit'} end))))(V20)) end), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V45 = fun (V44) -> {'Prelude.Types.Right', V13} end), V45 end(V40)) end end end end end), V46 end(V10)) end end end end end end(E0, E1)) end.
'un--matchFail'(V0, V1) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V0, <<"With clause does not match parent"/utf8>>}, V1)).
'un--matchAny'(V0, V1, V2, V3, V4) -> case V4 of [] -> fun (V5) -> ('un--matchFail'(V2, V5)) end; [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Builtin.MkPair', V8, V9} -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(('un--getMatch'(V0, V1, V3, V8, V9)), fun (V10) -> ('un--matchAny'(V0, V1, V2, V3, V7)) end)) end end(E0, E1)) end.
'un--matchAll'(V0, V1, V2, V3) -> case V3 of [] -> fun (V4) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Builtin.MkPair', V7, V8} -> begin (V9 = ('un--matchAll'(V0, V1, V2, V6))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V20 = begin (V14 = ('un--getMatch'(V0, V1, V2, V7, V8))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V19 = ('un--mergeMatches'(V0, V1, V2, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V18, V13))))), V19 end(V15)) end end end end), V20 end(V10)) end end end end end end(E0, E1)) end.
'un--getNewLHS'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V9 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V2))), begin (V10 = ('nested--8683-21138--in--un--dropWithArgs'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V3, V8))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V114 = case V14 of {'Builtin.MkPair', V15, V16} -> begin (V26 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, (begin (V18 = fun (V17) -> V17 end), fun (V19) -> (V18(V19)) end end(<<"declare.def.clause.with"/utf8>>)), 20, fun () -> <<(begin (V21 = fun (V20) -> V20 end), fun (V22) -> (V21(V22)) end end(<<"Parent LHS: "/utf8>>))/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V24, V25)) end end}, V7))/binary>> end))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V113 = begin (V40 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, (begin (V32 = fun (V31) -> V31 end), fun (V33) -> (V32(V33)) end end(<<"declare.def.clause.with"/utf8>>)), 20, fun () -> <<(begin (V35 = fun (V34) -> V34 end), fun (V36) -> (V35(V36)) end end(<<"Modified LHS: "/utf8>>))/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V38, V39)) end end}, V15))/binary>> end))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V112 = begin (V45 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V0))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V111 = begin (V50 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V0, 1))), fun (V51) -> begin (V52 = (V50(V51))), case V52 of {'Prelude.Types.Left', V53} -> {'Prelude.Types.Left', V53}; {'Prelude.Types.Right', V54} -> (begin (V110 = begin (V55 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V0, 0, V7))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V109 = begin (V60 = {'Builtin.MkPair', V15, V16}), case V59 of {'Builtin.MkPair', V61, V62} -> begin (V63 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V0, 0, V15))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V108 = begin (V68 = {'Builtin.MkPair', V61, V62}), case V67 of {'Builtin.MkPair', V69, V70} -> begin (V71 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V0, V49))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V107 = begin (V85 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, (begin (V77 = fun (V76) -> V76 end), fun (V78) -> (V77(V78)) end end(<<"declare.def.clause.with"/utf8>>)), 20, fun () -> <<(begin (V80 = fun (V79) -> V79 end), fun (V81) -> (V80(V81)) end end(<<"Parent LHS (with implicits): "/utf8>>))/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V82) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V82)) end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V83, V84)) end end}, V62))/binary>> end))), fun (V86) -> begin (V87 = (V85(V86))), case V87 of {'Prelude.Types.Left', V88} -> {'Prelude.Types.Left', V88}; {'Prelude.Types.Right', V89} -> (begin (V106 = begin (V99 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, (begin (V91 = fun (V90) -> V90 end), fun (V92) -> (V91(V92)) end end(<<"declare.def.clause.with"/utf8>>)), 20, fun () -> <<(begin (V94 = fun (V93) -> V93 end), fun (V95) -> (V94(V95)) end end(<<"Modified LHS (with implicits): "/utf8>>))/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V96) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V96)) end, fun (V97) -> fun (V98) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V97, V98)) end end}, V70))/binary>> end))), fun (V100) -> begin (V101 = (V99(V100))), case V101 of {'Prelude.Types.Left', V102} -> {'Prelude.Types.Left', V102}; {'Prelude.Types.Right', V103} -> (begin (V105 = begin (V104 = {'Builtin.MkPair', V69, V70}), ('case--case block in case block in case block in getNewLHS-21461'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V9, V15, V16, V60, V49, V61, V62, V68, V69, V70, V104, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V16)))) end), V105 end(V100)) end end end end), V106 end(V86)) end end end end), V107 end(V72)) end end end end end end), V108 end(V64)) end end end end end end), V109 end(V56)) end end end end), V110 end(V51)) end end end end), V111 end(V46)) end end end end), V112 end(V41)) end end end end), V113 end(V27)) end end end end end), V114 end(V11)) end end end end end.
'un--getMatch'(V0, V1, V2, V3, V4) -> case V3 of {'TTImp.TTImp.IBindVar', V5, V6} -> case V4 of {'TTImp.TTImp.IBindVar', V7, V8} -> begin (V9 = ('un--addAlias'(V0, V1, V7, V5))), ((begin (V25 = fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V22, V23, V24)) end end end end end), fun (V26) -> fun (V27) -> ((((V25('erased'))('erased'))(V26))(V27)) end end end((begin (V17 = fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> {'Prelude.Types.Right', (V13(V16))} end end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V10) -> [{'Builtin.MkPair', V6, V4} | []] end))))(V9)) end; _ -> fun (V28) -> {'Prelude.Types.Right', [{'Builtin.MkPair', V6, V4} | []]} end end; {'TTImp.TTImp.Implicit', V29, V30} -> fun (V31) -> {'Prelude.Types.Right', []} end; _ -> case V4 of {'TTImp.TTImp.IMustUnify', V32, V33, V34} -> case V33 of 4 -> fun (V35) -> {'Prelude.Types.Right', []} end; _ -> case V3 of {'TTImp.TTImp.IVar', V36, V37} -> case V37 of {'Core.Name.NS', V38, V39} -> case V4 of {'TTImp.TTImp.IVar', V40, V41} -> case V41 of {'Core.Name.NS', V42, V43} -> case case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V39, V43)) of 1 -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V42, V38)); 0 -> 0 end of 1 -> begin (V44 = ('un--addAlias'(V0, V1, V40, V36))), ((begin (V60 = fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V57, V58, V59)) end end end end end), fun (V61) -> fun (V62) -> ((((V60('erased'))('erased'))(V61))(V62)) end end end((begin (V52 = fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> {'Prelude.Types.Right', (V48(V51))} end end end end end), fun (V53) -> fun (V54) -> ((((V52('erased'))('erased'))(V53))(V54)) end end end(fun (V45) -> [] end))))(V44)) end; 0 -> fun (V63) -> ('un--matchFail'(V40, V63)) end end; _ -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V39, V41)) of 1 -> begin (V64 = ('un--addAlias'(V0, V1, V40, V36))), ((begin (V80 = fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V77, V78, V79)) end end end end end), fun (V81) -> fun (V82) -> ((((V80('erased'))('erased'))(V81))(V82)) end end end((begin (V72 = fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> {'Prelude.Types.Right', (V68(V71))} end end end end end), fun (V73) -> fun (V74) -> ((((V72('erased'))('erased'))(V73))(V74)) end end end(fun (V65) -> [] end))))(V64)) end; 0 -> fun (V83) -> ('un--matchFail'(V40, V83)) end end end; _ -> case V4 of {'TTImp.TTImp.IVar', V84, V85} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V37, V85)) of 1 -> begin (V86 = ('un--addAlias'(V0, V1, V84, V36))), ((begin (V102 = fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V99, V100, V101)) end end end end end), fun (V103) -> fun (V104) -> ((((V102('erased'))('erased'))(V103))(V104)) end end end((begin (V94 = fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> {'Prelude.Types.Right', (V90(V93))} end end end end end), fun (V95) -> fun (V96) -> ((((V94('erased'))('erased'))(V95))(V96)) end end end(fun (V87) -> [] end))))(V86)) end; 0 -> fun (V105) -> ('un--matchFail'(V84, V105)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V106, V107, V108, V109} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V107, V4} | [{'Builtin.MkPair', V109, V109} | []]])); {'TTImp.TTImp.IAutoApp', V110, V111, V112} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V111, V4} | [{'Builtin.MkPair', V112, V112} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V113, V114, V115, V116} -> fun (V117) -> ('un--matchFail'(V113, V117)) end; {'TTImp.TTImp.IAutoApp', V118, V119, V120} -> fun (V121) -> ('un--matchFail'(V118, V121)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V122, V123, V124} -> case V4 of {'TTImp.TTImp.IAlternative', V125, V126, V127} -> ('un--matchAny'(V0, V1, V122, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V124, V127)))); _ -> case V4 of {'TTImp.TTImp.IAs', V128, V129, V130, V131, V132} -> ('un--getMatch'(V0, V1, V2, V3, V132)); _ -> case V3 of {'TTImp.TTImp.IType', V133} -> fun (V134) -> case V4 of {'TTImp.TTImp.IType', V135} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V134)) end end; {'TTImp.TTImp.IPrimVal', V136, V137} -> case V4 of {'TTImp.TTImp.IPrimVal', V138, V139} -> fun (V140) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V137, V139)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V136, V140)) end end; _ -> fun (V141) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V141)) end end; _ -> fun (V142) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V142)) end end end end; {'TTImp.TTImp.IAs', V143, V144, V145, V146, V147} -> case V146 of {'Core.Name.UN', V148} -> case V148 of {'Core.Name.Basic', V149} -> case V4 of {'TTImp.TTImp.IAs', V150, V151, V152, V153, V154} -> case V153 of {'Core.Name.UN', V155} -> case V155 of {'Core.Name.Basic', V156} -> begin (V157 = ('un--getMatch'(V0, V1, V2, V147, V154))), fun (V158) -> begin (V159 = (V157(V158))), case V159 of {'Prelude.Types.Left', V160} -> {'Prelude.Types.Left', V160}; {'Prelude.Types.Right', V161} -> (begin (V162 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V149, {'TTImp.TTImp.IAs', V151, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V153, {'TTImp.TTImp.Implicit', V151, 1}}} | V161]))), V162 end(V158)) end end end end; _ -> begin (V163 = ('un--getMatch'(V0, V1, V2, V147, V4))), fun (V164) -> begin (V165 = (V163(V164))), case V165 of {'Prelude.Types.Left', V166} -> {'Prelude.Types.Left', V166}; {'Prelude.Types.Right', V167} -> (begin (V168 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V149, V4} | V167]))), V168 end(V164)) end end end end end; _ -> begin (V169 = ('un--getMatch'(V0, V1, V2, V147, V4))), fun (V170) -> begin (V171 = (V169(V170))), case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> (begin (V174 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V149, V4} | V173]))), V174 end(V170)) end end end end end; _ -> begin (V175 = ('un--getMatch'(V0, V1, V2, V147, V4))), fun (V176) -> begin (V177 = (V175(V176))), case V177 of {'Prelude.Types.Left', V178} -> {'Prelude.Types.Left', V178}; {'Prelude.Types.Right', V179} -> (begin (V180 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V149, V4} | V179]))), V180 end(V176)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V147, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V147, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V181, V182, V183, V184, V185} -> ('un--getMatch'(V0, V1, V2, V3, V185)); _ -> case V3 of {'TTImp.TTImp.IType', V186} -> fun (V187) -> case V4 of {'TTImp.TTImp.IType', V188} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V187)) end end; {'TTImp.TTImp.IPrimVal', V189, V190} -> case V4 of {'TTImp.TTImp.IPrimVal', V191, V192} -> fun (V193) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V190, V192)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V189, V193)) end end; _ -> fun (V194) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V194)) end end; _ -> fun (V195) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V195)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V196, V197, V198, V199} -> ('un--getMatch'(V0, V1, 0, V197, V197)); {'TTImp.TTImp.IAutoApp', V200, V201, V202} -> ('un--getMatch'(V0, V1, 0, V201, V201)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V203, V204, V205, V206} -> fun (V207) -> ('un--matchFail'(V203, V207)) end; {'TTImp.TTImp.IAutoApp', V208, V209, V210} -> fun (V211) -> ('un--matchFail'(V208, V211)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V212, V213, V214} -> case V4 of {'TTImp.TTImp.IAlternative', V215, V216, V217} -> ('un--matchAny'(V0, V1, V212, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V214, V217)))); _ -> case V4 of {'TTImp.TTImp.IAs', V218, V219, V220, V221, V222} -> ('un--getMatch'(V0, V1, V2, V3, V222)); _ -> case V3 of {'TTImp.TTImp.IType', V223} -> fun (V224) -> case V4 of {'TTImp.TTImp.IType', V225} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V224)) end end; {'TTImp.TTImp.IPrimVal', V226, V227} -> case V4 of {'TTImp.TTImp.IPrimVal', V228, V229} -> fun (V230) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V227, V229)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V226, V230)) end end; _ -> fun (V231) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V231)) end end; _ -> fun (V232) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V232)) end end end end; {'TTImp.TTImp.IAs', V233, V234, V235, V236, V237} -> case V236 of {'Core.Name.UN', V238} -> case V238 of {'Core.Name.Basic', V239} -> case V4 of {'TTImp.TTImp.IAs', V240, V241, V242, V243, V244} -> case V243 of {'Core.Name.UN', V245} -> case V245 of {'Core.Name.Basic', V246} -> begin (V247 = ('un--getMatch'(V0, V1, V2, V237, V244))), fun (V248) -> begin (V249 = (V247(V248))), case V249 of {'Prelude.Types.Left', V250} -> {'Prelude.Types.Left', V250}; {'Prelude.Types.Right', V251} -> (begin (V252 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V239, {'TTImp.TTImp.IAs', V241, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V243, {'TTImp.TTImp.Implicit', V241, 1}}} | V251]))), V252 end(V248)) end end end end; _ -> begin (V253 = ('un--getMatch'(V0, V1, V2, V237, V4))), fun (V254) -> begin (V255 = (V253(V254))), case V255 of {'Prelude.Types.Left', V256} -> {'Prelude.Types.Left', V256}; {'Prelude.Types.Right', V257} -> (begin (V258 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V239, V4} | V257]))), V258 end(V254)) end end end end end; _ -> begin (V259 = ('un--getMatch'(V0, V1, V2, V237, V4))), fun (V260) -> begin (V261 = (V259(V260))), case V261 of {'Prelude.Types.Left', V262} -> {'Prelude.Types.Left', V262}; {'Prelude.Types.Right', V263} -> (begin (V264 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V239, V4} | V263]))), V264 end(V260)) end end end end end; _ -> begin (V265 = ('un--getMatch'(V0, V1, V2, V237, V4))), fun (V266) -> begin (V267 = (V265(V266))), case V267 of {'Prelude.Types.Left', V268} -> {'Prelude.Types.Left', V268}; {'Prelude.Types.Right', V269} -> (begin (V270 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V239, V4} | V269]))), V270 end(V266)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V237, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V237, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V271, V272, V273, V274, V275} -> ('un--getMatch'(V0, V1, V2, V3, V275)); _ -> case V3 of {'TTImp.TTImp.IType', V276} -> fun (V277) -> case V4 of {'TTImp.TTImp.IType', V278} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V277)) end end; {'TTImp.TTImp.IPrimVal', V279, V280} -> case V4 of {'TTImp.TTImp.IPrimVal', V281, V282} -> fun (V283) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V280, V282)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V279, V283)) end end; _ -> fun (V284) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V284)) end end; _ -> fun (V285) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V285)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V286, V287, V288, V289} -> fun (V290) -> ('un--matchFail'(V286, V290)) end; {'TTImp.TTImp.IAutoApp', V291, V292, V293} -> fun (V294) -> ('un--matchFail'(V291, V294)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V295, V296, V297} -> case V4 of {'TTImp.TTImp.IAlternative', V298, V299, V300} -> ('un--matchAny'(V0, V1, V295, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V297, V300)))); _ -> case V4 of {'TTImp.TTImp.IAs', V301, V302, V303, V304, V305} -> ('un--getMatch'(V0, V1, V2, V3, V305)); _ -> case V3 of {'TTImp.TTImp.IType', V306} -> fun (V307) -> case V4 of {'TTImp.TTImp.IType', V308} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V307)) end end; {'TTImp.TTImp.IPrimVal', V309, V310} -> case V4 of {'TTImp.TTImp.IPrimVal', V311, V312} -> fun (V313) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V310, V312)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V309, V313)) end end; _ -> fun (V314) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V314)) end end; _ -> fun (V315) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V315)) end end end end; {'TTImp.TTImp.IAs', V316, V317, V318, V319, V320} -> case V319 of {'Core.Name.UN', V321} -> case V321 of {'Core.Name.Basic', V322} -> case V4 of {'TTImp.TTImp.IAs', V323, V324, V325, V326, V327} -> case V326 of {'Core.Name.UN', V328} -> case V328 of {'Core.Name.Basic', V329} -> begin (V330 = ('un--getMatch'(V0, V1, V2, V320, V327))), fun (V331) -> begin (V332 = (V330(V331))), case V332 of {'Prelude.Types.Left', V333} -> {'Prelude.Types.Left', V333}; {'Prelude.Types.Right', V334} -> (begin (V335 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V322, {'TTImp.TTImp.IAs', V324, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V326, {'TTImp.TTImp.Implicit', V324, 1}}} | V334]))), V335 end(V331)) end end end end; _ -> begin (V336 = ('un--getMatch'(V0, V1, V2, V320, V4))), fun (V337) -> begin (V338 = (V336(V337))), case V338 of {'Prelude.Types.Left', V339} -> {'Prelude.Types.Left', V339}; {'Prelude.Types.Right', V340} -> (begin (V341 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V322, V4} | V340]))), V341 end(V337)) end end end end end; _ -> begin (V342 = ('un--getMatch'(V0, V1, V2, V320, V4))), fun (V343) -> begin (V344 = (V342(V343))), case V344 of {'Prelude.Types.Left', V345} -> {'Prelude.Types.Left', V345}; {'Prelude.Types.Right', V346} -> (begin (V347 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V322, V4} | V346]))), V347 end(V343)) end end end end end; _ -> begin (V348 = ('un--getMatch'(V0, V1, V2, V320, V4))), fun (V349) -> begin (V350 = (V348(V349))), case V350 of {'Prelude.Types.Left', V351} -> {'Prelude.Types.Left', V351}; {'Prelude.Types.Right', V352} -> (begin (V353 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V322, V4} | V352]))), V353 end(V349)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V320, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V320, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V354, V355, V356, V357, V358} -> ('un--getMatch'(V0, V1, V2, V3, V358)); _ -> case V3 of {'TTImp.TTImp.IType', V359} -> fun (V360) -> case V4 of {'TTImp.TTImp.IType', V361} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V360)) end end; {'TTImp.TTImp.IPrimVal', V362, V363} -> case V4 of {'TTImp.TTImp.IPrimVal', V364, V365} -> fun (V366) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V363, V365)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V362, V366)) end end; _ -> fun (V367) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V367)) end end; _ -> fun (V368) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V368)) end end end end end end end end; _ -> case V4 of {'TTImp.TTImp.IVar', V369, V370} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V37, V370)) of 1 -> begin (V371 = ('un--addAlias'(V0, V1, V369, V36))), ((begin (V387 = fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> fun (V386) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V384, V385, V386)) end end end end end), fun (V388) -> fun (V389) -> ((((V387('erased'))('erased'))(V388))(V389)) end end end((begin (V379 = fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> case V376 of {'Prelude.Types.Left', V377} -> {'Prelude.Types.Left', V377}; {'Prelude.Types.Right', V378} -> {'Prelude.Types.Right', (V375(V378))} end end end end end), fun (V380) -> fun (V381) -> ((((V379('erased'))('erased'))(V380))(V381)) end end end(fun (V372) -> [] end))))(V371)) end; 0 -> fun (V390) -> ('un--matchFail'(V369, V390)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V391, V392, V393, V394} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V392, V4} | [{'Builtin.MkPair', V394, V394} | []]])); {'TTImp.TTImp.IAutoApp', V395, V396, V397} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V396, V4} | [{'Builtin.MkPair', V397, V397} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V398, V399, V400, V401} -> fun (V402) -> ('un--matchFail'(V398, V402)) end; {'TTImp.TTImp.IAutoApp', V403, V404, V405} -> fun (V406) -> ('un--matchFail'(V403, V406)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V407, V408, V409} -> case V4 of {'TTImp.TTImp.IAlternative', V410, V411, V412} -> ('un--matchAny'(V0, V1, V407, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V409, V412)))); _ -> case V4 of {'TTImp.TTImp.IAs', V413, V414, V415, V416, V417} -> ('un--getMatch'(V0, V1, V2, V3, V417)); _ -> case V3 of {'TTImp.TTImp.IType', V418} -> fun (V419) -> case V4 of {'TTImp.TTImp.IType', V420} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V419)) end end; {'TTImp.TTImp.IPrimVal', V421, V422} -> case V4 of {'TTImp.TTImp.IPrimVal', V423, V424} -> fun (V425) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V422, V424)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V421, V425)) end end; _ -> fun (V426) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V426)) end end; _ -> fun (V427) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V427)) end end end end; {'TTImp.TTImp.IAs', V428, V429, V430, V431, V432} -> case V431 of {'Core.Name.UN', V433} -> case V433 of {'Core.Name.Basic', V434} -> case V4 of {'TTImp.TTImp.IAs', V435, V436, V437, V438, V439} -> case V438 of {'Core.Name.UN', V440} -> case V440 of {'Core.Name.Basic', V441} -> begin (V442 = ('un--getMatch'(V0, V1, V2, V432, V439))), fun (V443) -> begin (V444 = (V442(V443))), case V444 of {'Prelude.Types.Left', V445} -> {'Prelude.Types.Left', V445}; {'Prelude.Types.Right', V446} -> (begin (V447 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V434, {'TTImp.TTImp.IAs', V436, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V438, {'TTImp.TTImp.Implicit', V436, 1}}} | V446]))), V447 end(V443)) end end end end; _ -> begin (V448 = ('un--getMatch'(V0, V1, V2, V432, V4))), fun (V449) -> begin (V450 = (V448(V449))), case V450 of {'Prelude.Types.Left', V451} -> {'Prelude.Types.Left', V451}; {'Prelude.Types.Right', V452} -> (begin (V453 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V434, V4} | V452]))), V453 end(V449)) end end end end end; _ -> begin (V454 = ('un--getMatch'(V0, V1, V2, V432, V4))), fun (V455) -> begin (V456 = (V454(V455))), case V456 of {'Prelude.Types.Left', V457} -> {'Prelude.Types.Left', V457}; {'Prelude.Types.Right', V458} -> (begin (V459 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V434, V4} | V458]))), V459 end(V455)) end end end end end; _ -> begin (V460 = ('un--getMatch'(V0, V1, V2, V432, V4))), fun (V461) -> begin (V462 = (V460(V461))), case V462 of {'Prelude.Types.Left', V463} -> {'Prelude.Types.Left', V463}; {'Prelude.Types.Right', V464} -> (begin (V465 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V434, V4} | V464]))), V465 end(V461)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V432, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V432, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V466, V467, V468, V469, V470} -> ('un--getMatch'(V0, V1, V2, V3, V470)); _ -> case V3 of {'TTImp.TTImp.IType', V471} -> fun (V472) -> case V4 of {'TTImp.TTImp.IType', V473} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V472)) end end; {'TTImp.TTImp.IPrimVal', V474, V475} -> case V4 of {'TTImp.TTImp.IPrimVal', V476, V477} -> fun (V478) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V475, V477)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V474, V478)) end end; _ -> fun (V479) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V479)) end end; _ -> fun (V480) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V480)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V481, V482, V483, V484} -> ('un--getMatch'(V0, V1, 0, V482, V482)); {'TTImp.TTImp.IAutoApp', V485, V486, V487} -> ('un--getMatch'(V0, V1, 0, V486, V486)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V488, V489, V490, V491} -> fun (V492) -> ('un--matchFail'(V488, V492)) end; {'TTImp.TTImp.IAutoApp', V493, V494, V495} -> fun (V496) -> ('un--matchFail'(V493, V496)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V497, V498, V499} -> case V4 of {'TTImp.TTImp.IAlternative', V500, V501, V502} -> ('un--matchAny'(V0, V1, V497, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V499, V502)))); _ -> case V4 of {'TTImp.TTImp.IAs', V503, V504, V505, V506, V507} -> ('un--getMatch'(V0, V1, V2, V3, V507)); _ -> case V3 of {'TTImp.TTImp.IType', V508} -> fun (V509) -> case V4 of {'TTImp.TTImp.IType', V510} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V509)) end end; {'TTImp.TTImp.IPrimVal', V511, V512} -> case V4 of {'TTImp.TTImp.IPrimVal', V513, V514} -> fun (V515) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V512, V514)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V511, V515)) end end; _ -> fun (V516) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V516)) end end; _ -> fun (V517) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V517)) end end end end; {'TTImp.TTImp.IAs', V518, V519, V520, V521, V522} -> case V521 of {'Core.Name.UN', V523} -> case V523 of {'Core.Name.Basic', V524} -> case V4 of {'TTImp.TTImp.IAs', V525, V526, V527, V528, V529} -> case V528 of {'Core.Name.UN', V530} -> case V530 of {'Core.Name.Basic', V531} -> begin (V532 = ('un--getMatch'(V0, V1, V2, V522, V529))), fun (V533) -> begin (V534 = (V532(V533))), case V534 of {'Prelude.Types.Left', V535} -> {'Prelude.Types.Left', V535}; {'Prelude.Types.Right', V536} -> (begin (V537 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V524, {'TTImp.TTImp.IAs', V526, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V528, {'TTImp.TTImp.Implicit', V526, 1}}} | V536]))), V537 end(V533)) end end end end; _ -> begin (V538 = ('un--getMatch'(V0, V1, V2, V522, V4))), fun (V539) -> begin (V540 = (V538(V539))), case V540 of {'Prelude.Types.Left', V541} -> {'Prelude.Types.Left', V541}; {'Prelude.Types.Right', V542} -> (begin (V543 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V524, V4} | V542]))), V543 end(V539)) end end end end end; _ -> begin (V544 = ('un--getMatch'(V0, V1, V2, V522, V4))), fun (V545) -> begin (V546 = (V544(V545))), case V546 of {'Prelude.Types.Left', V547} -> {'Prelude.Types.Left', V547}; {'Prelude.Types.Right', V548} -> (begin (V549 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V524, V4} | V548]))), V549 end(V545)) end end end end end; _ -> begin (V550 = ('un--getMatch'(V0, V1, V2, V522, V4))), fun (V551) -> begin (V552 = (V550(V551))), case V552 of {'Prelude.Types.Left', V553} -> {'Prelude.Types.Left', V553}; {'Prelude.Types.Right', V554} -> (begin (V555 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V524, V4} | V554]))), V555 end(V551)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V522, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V522, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V556, V557, V558, V559, V560} -> ('un--getMatch'(V0, V1, V2, V3, V560)); _ -> case V3 of {'TTImp.TTImp.IType', V561} -> fun (V562) -> case V4 of {'TTImp.TTImp.IType', V563} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V562)) end end; {'TTImp.TTImp.IPrimVal', V564, V565} -> case V4 of {'TTImp.TTImp.IPrimVal', V566, V567} -> fun (V568) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V565, V567)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V564, V568)) end end; _ -> fun (V569) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V569)) end end; _ -> fun (V570) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V570)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V571, V572, V573, V574} -> fun (V575) -> ('un--matchFail'(V571, V575)) end; {'TTImp.TTImp.IAutoApp', V576, V577, V578} -> fun (V579) -> ('un--matchFail'(V576, V579)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V580, V581, V582} -> case V4 of {'TTImp.TTImp.IAlternative', V583, V584, V585} -> ('un--matchAny'(V0, V1, V580, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V582, V585)))); _ -> case V4 of {'TTImp.TTImp.IAs', V586, V587, V588, V589, V590} -> ('un--getMatch'(V0, V1, V2, V3, V590)); _ -> case V3 of {'TTImp.TTImp.IType', V591} -> fun (V592) -> case V4 of {'TTImp.TTImp.IType', V593} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V592)) end end; {'TTImp.TTImp.IPrimVal', V594, V595} -> case V4 of {'TTImp.TTImp.IPrimVal', V596, V597} -> fun (V598) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V595, V597)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V594, V598)) end end; _ -> fun (V599) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V599)) end end; _ -> fun (V600) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V600)) end end end end; {'TTImp.TTImp.IAs', V601, V602, V603, V604, V605} -> case V604 of {'Core.Name.UN', V606} -> case V606 of {'Core.Name.Basic', V607} -> case V4 of {'TTImp.TTImp.IAs', V608, V609, V610, V611, V612} -> case V611 of {'Core.Name.UN', V613} -> case V613 of {'Core.Name.Basic', V614} -> begin (V615 = ('un--getMatch'(V0, V1, V2, V605, V612))), fun (V616) -> begin (V617 = (V615(V616))), case V617 of {'Prelude.Types.Left', V618} -> {'Prelude.Types.Left', V618}; {'Prelude.Types.Right', V619} -> (begin (V620 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V607, {'TTImp.TTImp.IAs', V609, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V611, {'TTImp.TTImp.Implicit', V609, 1}}} | V619]))), V620 end(V616)) end end end end; _ -> begin (V621 = ('un--getMatch'(V0, V1, V2, V605, V4))), fun (V622) -> begin (V623 = (V621(V622))), case V623 of {'Prelude.Types.Left', V624} -> {'Prelude.Types.Left', V624}; {'Prelude.Types.Right', V625} -> (begin (V626 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V607, V4} | V625]))), V626 end(V622)) end end end end end; _ -> begin (V627 = ('un--getMatch'(V0, V1, V2, V605, V4))), fun (V628) -> begin (V629 = (V627(V628))), case V629 of {'Prelude.Types.Left', V630} -> {'Prelude.Types.Left', V630}; {'Prelude.Types.Right', V631} -> (begin (V632 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V607, V4} | V631]))), V632 end(V628)) end end end end end; _ -> begin (V633 = ('un--getMatch'(V0, V1, V2, V605, V4))), fun (V634) -> begin (V635 = (V633(V634))), case V635 of {'Prelude.Types.Left', V636} -> {'Prelude.Types.Left', V636}; {'Prelude.Types.Right', V637} -> (begin (V638 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V607, V4} | V637]))), V638 end(V634)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V605, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V605, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V639, V640, V641, V642, V643} -> ('un--getMatch'(V0, V1, V2, V3, V643)); _ -> case V3 of {'TTImp.TTImp.IType', V644} -> fun (V645) -> case V4 of {'TTImp.TTImp.IType', V646} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V645)) end end; {'TTImp.TTImp.IPrimVal', V647, V648} -> case V4 of {'TTImp.TTImp.IPrimVal', V649, V650} -> fun (V651) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V648, V650)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V647, V651)) end end; _ -> fun (V652) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V652)) end end; _ -> fun (V653) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V653)) end end end end end end end end; {'TTImp.TTImp.IPi', V654, V655, V656, V657, V658, V659} -> case V4 of {'TTImp.TTImp.IPi', V660, V661, V662, V663, V664, V665} -> case case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V655, V661)) of 1 -> case ('Idris.Idris2.Core.TT':'un--eqPiInfoBy'(fun (V666) -> fun (V667) -> 1 end end, V656, V662)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'({'Prelude.EqOrd.MkEq', fun (V668) -> fun (V669) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V668, V669)) end end, fun (V670) -> fun (V671) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V670, V671)) end end}, V657, V663)); 0 -> 0 end; 0 -> 0 end of 1 -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V658, V664} | [{'Builtin.MkPair', V659, V665} | []]])); 0 -> fun (V672) -> ('un--matchFail'(V660, V672)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V673, V674, V675, V676} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V674, V4} | [{'Builtin.MkPair', V676, V676} | []]])); {'TTImp.TTImp.IAutoApp', V677, V678, V679} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V678, V4} | [{'Builtin.MkPair', V679, V679} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V680, V681, V682, V683} -> fun (V684) -> ('un--matchFail'(V680, V684)) end; {'TTImp.TTImp.IAutoApp', V685, V686, V687} -> fun (V688) -> ('un--matchFail'(V685, V688)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V689, V690, V691} -> case V4 of {'TTImp.TTImp.IAlternative', V692, V693, V694} -> ('un--matchAny'(V0, V1, V689, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V691, V694)))); _ -> case V4 of {'TTImp.TTImp.IAs', V695, V696, V697, V698, V699} -> ('un--getMatch'(V0, V1, V2, V3, V699)); _ -> case V3 of {'TTImp.TTImp.IType', V700} -> fun (V701) -> case V4 of {'TTImp.TTImp.IType', V702} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V701)) end end; {'TTImp.TTImp.IPrimVal', V703, V704} -> case V4 of {'TTImp.TTImp.IPrimVal', V705, V706} -> fun (V707) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V704, V706)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V703, V707)) end end; _ -> fun (V708) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V708)) end end; _ -> fun (V709) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V709)) end end end end; {'TTImp.TTImp.IAs', V710, V711, V712, V713, V714} -> case V713 of {'Core.Name.UN', V715} -> case V715 of {'Core.Name.Basic', V716} -> case V4 of {'TTImp.TTImp.IAs', V717, V718, V719, V720, V721} -> case V720 of {'Core.Name.UN', V722} -> case V722 of {'Core.Name.Basic', V723} -> begin (V724 = ('un--getMatch'(V0, V1, V2, V714, V721))), fun (V725) -> begin (V726 = (V724(V725))), case V726 of {'Prelude.Types.Left', V727} -> {'Prelude.Types.Left', V727}; {'Prelude.Types.Right', V728} -> (begin (V729 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V716, {'TTImp.TTImp.IAs', V718, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V720, {'TTImp.TTImp.Implicit', V718, 1}}} | V728]))), V729 end(V725)) end end end end; _ -> begin (V730 = ('un--getMatch'(V0, V1, V2, V714, V4))), fun (V731) -> begin (V732 = (V730(V731))), case V732 of {'Prelude.Types.Left', V733} -> {'Prelude.Types.Left', V733}; {'Prelude.Types.Right', V734} -> (begin (V735 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V716, V4} | V734]))), V735 end(V731)) end end end end end; _ -> begin (V736 = ('un--getMatch'(V0, V1, V2, V714, V4))), fun (V737) -> begin (V738 = (V736(V737))), case V738 of {'Prelude.Types.Left', V739} -> {'Prelude.Types.Left', V739}; {'Prelude.Types.Right', V740} -> (begin (V741 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V716, V4} | V740]))), V741 end(V737)) end end end end end; _ -> begin (V742 = ('un--getMatch'(V0, V1, V2, V714, V4))), fun (V743) -> begin (V744 = (V742(V743))), case V744 of {'Prelude.Types.Left', V745} -> {'Prelude.Types.Left', V745}; {'Prelude.Types.Right', V746} -> (begin (V747 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V716, V4} | V746]))), V747 end(V743)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V714, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V714, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V748, V749, V750, V751, V752} -> ('un--getMatch'(V0, V1, V2, V3, V752)); _ -> case V3 of {'TTImp.TTImp.IType', V753} -> fun (V754) -> case V4 of {'TTImp.TTImp.IType', V755} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V754)) end end; {'TTImp.TTImp.IPrimVal', V756, V757} -> case V4 of {'TTImp.TTImp.IPrimVal', V758, V759} -> fun (V760) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V757, V759)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V756, V760)) end end; _ -> fun (V761) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V761)) end end; _ -> fun (V762) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V762)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V763, V764, V765, V766} -> ('un--getMatch'(V0, V1, 0, V764, V764)); {'TTImp.TTImp.IAutoApp', V767, V768, V769} -> ('un--getMatch'(V0, V1, 0, V768, V768)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V770, V771, V772, V773} -> fun (V774) -> ('un--matchFail'(V770, V774)) end; {'TTImp.TTImp.IAutoApp', V775, V776, V777} -> fun (V778) -> ('un--matchFail'(V775, V778)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V779, V780, V781} -> case V4 of {'TTImp.TTImp.IAlternative', V782, V783, V784} -> ('un--matchAny'(V0, V1, V779, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V781, V784)))); _ -> case V4 of {'TTImp.TTImp.IAs', V785, V786, V787, V788, V789} -> ('un--getMatch'(V0, V1, V2, V3, V789)); _ -> case V3 of {'TTImp.TTImp.IType', V790} -> fun (V791) -> case V4 of {'TTImp.TTImp.IType', V792} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V791)) end end; {'TTImp.TTImp.IPrimVal', V793, V794} -> case V4 of {'TTImp.TTImp.IPrimVal', V795, V796} -> fun (V797) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V794, V796)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V793, V797)) end end; _ -> fun (V798) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V798)) end end; _ -> fun (V799) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V799)) end end end end; {'TTImp.TTImp.IAs', V800, V801, V802, V803, V804} -> case V803 of {'Core.Name.UN', V805} -> case V805 of {'Core.Name.Basic', V806} -> case V4 of {'TTImp.TTImp.IAs', V807, V808, V809, V810, V811} -> case V810 of {'Core.Name.UN', V812} -> case V812 of {'Core.Name.Basic', V813} -> begin (V814 = ('un--getMatch'(V0, V1, V2, V804, V811))), fun (V815) -> begin (V816 = (V814(V815))), case V816 of {'Prelude.Types.Left', V817} -> {'Prelude.Types.Left', V817}; {'Prelude.Types.Right', V818} -> (begin (V819 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V806, {'TTImp.TTImp.IAs', V808, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V810, {'TTImp.TTImp.Implicit', V808, 1}}} | V818]))), V819 end(V815)) end end end end; _ -> begin (V820 = ('un--getMatch'(V0, V1, V2, V804, V4))), fun (V821) -> begin (V822 = (V820(V821))), case V822 of {'Prelude.Types.Left', V823} -> {'Prelude.Types.Left', V823}; {'Prelude.Types.Right', V824} -> (begin (V825 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V806, V4} | V824]))), V825 end(V821)) end end end end end; _ -> begin (V826 = ('un--getMatch'(V0, V1, V2, V804, V4))), fun (V827) -> begin (V828 = (V826(V827))), case V828 of {'Prelude.Types.Left', V829} -> {'Prelude.Types.Left', V829}; {'Prelude.Types.Right', V830} -> (begin (V831 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V806, V4} | V830]))), V831 end(V827)) end end end end end; _ -> begin (V832 = ('un--getMatch'(V0, V1, V2, V804, V4))), fun (V833) -> begin (V834 = (V832(V833))), case V834 of {'Prelude.Types.Left', V835} -> {'Prelude.Types.Left', V835}; {'Prelude.Types.Right', V836} -> (begin (V837 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V806, V4} | V836]))), V837 end(V833)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V804, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V804, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V838, V839, V840, V841, V842} -> ('un--getMatch'(V0, V1, V2, V3, V842)); _ -> case V3 of {'TTImp.TTImp.IType', V843} -> fun (V844) -> case V4 of {'TTImp.TTImp.IType', V845} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V844)) end end; {'TTImp.TTImp.IPrimVal', V846, V847} -> case V4 of {'TTImp.TTImp.IPrimVal', V848, V849} -> fun (V850) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V847, V849)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V846, V850)) end end; _ -> fun (V851) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V851)) end end; _ -> fun (V852) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V852)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V853, V854, V855, V856} -> fun (V857) -> ('un--matchFail'(V853, V857)) end; {'TTImp.TTImp.IAutoApp', V858, V859, V860} -> fun (V861) -> ('un--matchFail'(V858, V861)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V862, V863, V864} -> case V4 of {'TTImp.TTImp.IAlternative', V865, V866, V867} -> ('un--matchAny'(V0, V1, V862, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V864, V867)))); _ -> case V4 of {'TTImp.TTImp.IAs', V868, V869, V870, V871, V872} -> ('un--getMatch'(V0, V1, V2, V3, V872)); _ -> case V3 of {'TTImp.TTImp.IType', V873} -> fun (V874) -> case V4 of {'TTImp.TTImp.IType', V875} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V874)) end end; {'TTImp.TTImp.IPrimVal', V876, V877} -> case V4 of {'TTImp.TTImp.IPrimVal', V878, V879} -> fun (V880) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V877, V879)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V876, V880)) end end; _ -> fun (V881) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V881)) end end; _ -> fun (V882) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V882)) end end end end; {'TTImp.TTImp.IAs', V883, V884, V885, V886, V887} -> case V886 of {'Core.Name.UN', V888} -> case V888 of {'Core.Name.Basic', V889} -> case V4 of {'TTImp.TTImp.IAs', V890, V891, V892, V893, V894} -> case V893 of {'Core.Name.UN', V895} -> case V895 of {'Core.Name.Basic', V896} -> begin (V897 = ('un--getMatch'(V0, V1, V2, V887, V894))), fun (V898) -> begin (V899 = (V897(V898))), case V899 of {'Prelude.Types.Left', V900} -> {'Prelude.Types.Left', V900}; {'Prelude.Types.Right', V901} -> (begin (V902 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V889, {'TTImp.TTImp.IAs', V891, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V893, {'TTImp.TTImp.Implicit', V891, 1}}} | V901]))), V902 end(V898)) end end end end; _ -> begin (V903 = ('un--getMatch'(V0, V1, V2, V887, V4))), fun (V904) -> begin (V905 = (V903(V904))), case V905 of {'Prelude.Types.Left', V906} -> {'Prelude.Types.Left', V906}; {'Prelude.Types.Right', V907} -> (begin (V908 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V889, V4} | V907]))), V908 end(V904)) end end end end end; _ -> begin (V909 = ('un--getMatch'(V0, V1, V2, V887, V4))), fun (V910) -> begin (V911 = (V909(V910))), case V911 of {'Prelude.Types.Left', V912} -> {'Prelude.Types.Left', V912}; {'Prelude.Types.Right', V913} -> (begin (V914 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V889, V4} | V913]))), V914 end(V910)) end end end end end; _ -> begin (V915 = ('un--getMatch'(V0, V1, V2, V887, V4))), fun (V916) -> begin (V917 = (V915(V916))), case V917 of {'Prelude.Types.Left', V918} -> {'Prelude.Types.Left', V918}; {'Prelude.Types.Right', V919} -> (begin (V920 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V889, V4} | V919]))), V920 end(V916)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V887, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V887, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V921, V922, V923, V924, V925} -> ('un--getMatch'(V0, V1, V2, V3, V925)); _ -> case V3 of {'TTImp.TTImp.IType', V926} -> fun (V927) -> case V4 of {'TTImp.TTImp.IType', V928} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V927)) end end; {'TTImp.TTImp.IPrimVal', V929, V930} -> case V4 of {'TTImp.TTImp.IPrimVal', V931, V932} -> fun (V933) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V930, V932)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V929, V933)) end end; _ -> fun (V934) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V934)) end end; _ -> fun (V935) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V935)) end end end end end end end; {'TTImp.TTImp.IApp', V936, V937, V938} -> case V4 of {'TTImp.TTImp.IApp', V939, V940, V941} -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V937, V940} | [{'Builtin.MkPair', V938, V941} | []]])); _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V942, V943, V944, V945} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V943, V4} | [{'Builtin.MkPair', V945, V945} | []]])); {'TTImp.TTImp.IAutoApp', V946, V947, V948} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V947, V4} | [{'Builtin.MkPair', V948, V948} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V949, V950, V951, V952} -> fun (V953) -> ('un--matchFail'(V949, V953)) end; {'TTImp.TTImp.IAutoApp', V954, V955, V956} -> fun (V957) -> ('un--matchFail'(V954, V957)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V958, V959, V960} -> case V4 of {'TTImp.TTImp.IAlternative', V961, V962, V963} -> ('un--matchAny'(V0, V1, V958, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V960, V963)))); _ -> case V4 of {'TTImp.TTImp.IAs', V964, V965, V966, V967, V968} -> ('un--getMatch'(V0, V1, V2, V3, V968)); _ -> case V3 of {'TTImp.TTImp.IType', V969} -> fun (V970) -> case V4 of {'TTImp.TTImp.IType', V971} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V970)) end end; {'TTImp.TTImp.IPrimVal', V972, V973} -> case V4 of {'TTImp.TTImp.IPrimVal', V974, V975} -> fun (V976) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V973, V975)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V972, V976)) end end; _ -> fun (V977) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V977)) end end; _ -> fun (V978) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V978)) end end end end; {'TTImp.TTImp.IAs', V979, V980, V981, V982, V983} -> case V982 of {'Core.Name.UN', V984} -> case V984 of {'Core.Name.Basic', V985} -> case V4 of {'TTImp.TTImp.IAs', V986, V987, V988, V989, V990} -> case V989 of {'Core.Name.UN', V991} -> case V991 of {'Core.Name.Basic', V992} -> begin (V993 = ('un--getMatch'(V0, V1, V2, V983, V990))), fun (V994) -> begin (V995 = (V993(V994))), case V995 of {'Prelude.Types.Left', V996} -> {'Prelude.Types.Left', V996}; {'Prelude.Types.Right', V997} -> (begin (V998 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V985, {'TTImp.TTImp.IAs', V987, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V989, {'TTImp.TTImp.Implicit', V987, 1}}} | V997]))), V998 end(V994)) end end end end; _ -> begin (V999 = ('un--getMatch'(V0, V1, V2, V983, V4))), fun (V1000) -> begin (V1001 = (V999(V1000))), case V1001 of {'Prelude.Types.Left', V1002} -> {'Prelude.Types.Left', V1002}; {'Prelude.Types.Right', V1003} -> (begin (V1004 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V985, V4} | V1003]))), V1004 end(V1000)) end end end end end; _ -> begin (V1005 = ('un--getMatch'(V0, V1, V2, V983, V4))), fun (V1006) -> begin (V1007 = (V1005(V1006))), case V1007 of {'Prelude.Types.Left', V1008} -> {'Prelude.Types.Left', V1008}; {'Prelude.Types.Right', V1009} -> (begin (V1010 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V985, V4} | V1009]))), V1010 end(V1006)) end end end end end; _ -> begin (V1011 = ('un--getMatch'(V0, V1, V2, V983, V4))), fun (V1012) -> begin (V1013 = (V1011(V1012))), case V1013 of {'Prelude.Types.Left', V1014} -> {'Prelude.Types.Left', V1014}; {'Prelude.Types.Right', V1015} -> (begin (V1016 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V985, V4} | V1015]))), V1016 end(V1012)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V983, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V983, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1017, V1018, V1019, V1020, V1021} -> ('un--getMatch'(V0, V1, V2, V3, V1021)); _ -> case V3 of {'TTImp.TTImp.IType', V1022} -> fun (V1023) -> case V4 of {'TTImp.TTImp.IType', V1024} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1023)) end end; {'TTImp.TTImp.IPrimVal', V1025, V1026} -> case V4 of {'TTImp.TTImp.IPrimVal', V1027, V1028} -> fun (V1029) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1026, V1028)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1025, V1029)) end end; _ -> fun (V1030) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1030)) end end; _ -> fun (V1031) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1031)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V1032, V1033, V1034, V1035} -> ('un--getMatch'(V0, V1, 0, V1033, V1033)); {'TTImp.TTImp.IAutoApp', V1036, V1037, V1038} -> ('un--getMatch'(V0, V1, 0, V1037, V1037)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V1039, V1040, V1041, V1042} -> fun (V1043) -> ('un--matchFail'(V1039, V1043)) end; {'TTImp.TTImp.IAutoApp', V1044, V1045, V1046} -> fun (V1047) -> ('un--matchFail'(V1044, V1047)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1048, V1049, V1050} -> case V4 of {'TTImp.TTImp.IAlternative', V1051, V1052, V1053} -> ('un--matchAny'(V0, V1, V1048, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1050, V1053)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1054, V1055, V1056, V1057, V1058} -> ('un--getMatch'(V0, V1, V2, V3, V1058)); _ -> case V3 of {'TTImp.TTImp.IType', V1059} -> fun (V1060) -> case V4 of {'TTImp.TTImp.IType', V1061} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1060)) end end; {'TTImp.TTImp.IPrimVal', V1062, V1063} -> case V4 of {'TTImp.TTImp.IPrimVal', V1064, V1065} -> fun (V1066) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1063, V1065)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1062, V1066)) end end; _ -> fun (V1067) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1067)) end end; _ -> fun (V1068) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1068)) end end end end; {'TTImp.TTImp.IAs', V1069, V1070, V1071, V1072, V1073} -> case V1072 of {'Core.Name.UN', V1074} -> case V1074 of {'Core.Name.Basic', V1075} -> case V4 of {'TTImp.TTImp.IAs', V1076, V1077, V1078, V1079, V1080} -> case V1079 of {'Core.Name.UN', V1081} -> case V1081 of {'Core.Name.Basic', V1082} -> begin (V1083 = ('un--getMatch'(V0, V1, V2, V1073, V1080))), fun (V1084) -> begin (V1085 = (V1083(V1084))), case V1085 of {'Prelude.Types.Left', V1086} -> {'Prelude.Types.Left', V1086}; {'Prelude.Types.Right', V1087} -> (begin (V1088 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1075, {'TTImp.TTImp.IAs', V1077, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1079, {'TTImp.TTImp.Implicit', V1077, 1}}} | V1087]))), V1088 end(V1084)) end end end end; _ -> begin (V1089 = ('un--getMatch'(V0, V1, V2, V1073, V4))), fun (V1090) -> begin (V1091 = (V1089(V1090))), case V1091 of {'Prelude.Types.Left', V1092} -> {'Prelude.Types.Left', V1092}; {'Prelude.Types.Right', V1093} -> (begin (V1094 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1075, V4} | V1093]))), V1094 end(V1090)) end end end end end; _ -> begin (V1095 = ('un--getMatch'(V0, V1, V2, V1073, V4))), fun (V1096) -> begin (V1097 = (V1095(V1096))), case V1097 of {'Prelude.Types.Left', V1098} -> {'Prelude.Types.Left', V1098}; {'Prelude.Types.Right', V1099} -> (begin (V1100 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1075, V4} | V1099]))), V1100 end(V1096)) end end end end end; _ -> begin (V1101 = ('un--getMatch'(V0, V1, V2, V1073, V4))), fun (V1102) -> begin (V1103 = (V1101(V1102))), case V1103 of {'Prelude.Types.Left', V1104} -> {'Prelude.Types.Left', V1104}; {'Prelude.Types.Right', V1105} -> (begin (V1106 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1075, V4} | V1105]))), V1106 end(V1102)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1073, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1073, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1107, V1108, V1109, V1110, V1111} -> ('un--getMatch'(V0, V1, V2, V3, V1111)); _ -> case V3 of {'TTImp.TTImp.IType', V1112} -> fun (V1113) -> case V4 of {'TTImp.TTImp.IType', V1114} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1113)) end end; {'TTImp.TTImp.IPrimVal', V1115, V1116} -> case V4 of {'TTImp.TTImp.IPrimVal', V1117, V1118} -> fun (V1119) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1116, V1118)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1115, V1119)) end end; _ -> fun (V1120) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1120)) end end; _ -> fun (V1121) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1121)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V1122, V1123, V1124, V1125} -> fun (V1126) -> ('un--matchFail'(V1122, V1126)) end; {'TTImp.TTImp.IAutoApp', V1127, V1128, V1129} -> fun (V1130) -> ('un--matchFail'(V1127, V1130)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1131, V1132, V1133} -> case V4 of {'TTImp.TTImp.IAlternative', V1134, V1135, V1136} -> ('un--matchAny'(V0, V1, V1131, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1133, V1136)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1137, V1138, V1139, V1140, V1141} -> ('un--getMatch'(V0, V1, V2, V3, V1141)); _ -> case V3 of {'TTImp.TTImp.IType', V1142} -> fun (V1143) -> case V4 of {'TTImp.TTImp.IType', V1144} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1143)) end end; {'TTImp.TTImp.IPrimVal', V1145, V1146} -> case V4 of {'TTImp.TTImp.IPrimVal', V1147, V1148} -> fun (V1149) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1146, V1148)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1145, V1149)) end end; _ -> fun (V1150) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1150)) end end; _ -> fun (V1151) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1151)) end end end end; {'TTImp.TTImp.IAs', V1152, V1153, V1154, V1155, V1156} -> case V1155 of {'Core.Name.UN', V1157} -> case V1157 of {'Core.Name.Basic', V1158} -> case V4 of {'TTImp.TTImp.IAs', V1159, V1160, V1161, V1162, V1163} -> case V1162 of {'Core.Name.UN', V1164} -> case V1164 of {'Core.Name.Basic', V1165} -> begin (V1166 = ('un--getMatch'(V0, V1, V2, V1156, V1163))), fun (V1167) -> begin (V1168 = (V1166(V1167))), case V1168 of {'Prelude.Types.Left', V1169} -> {'Prelude.Types.Left', V1169}; {'Prelude.Types.Right', V1170} -> (begin (V1171 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1158, {'TTImp.TTImp.IAs', V1160, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1162, {'TTImp.TTImp.Implicit', V1160, 1}}} | V1170]))), V1171 end(V1167)) end end end end; _ -> begin (V1172 = ('un--getMatch'(V0, V1, V2, V1156, V4))), fun (V1173) -> begin (V1174 = (V1172(V1173))), case V1174 of {'Prelude.Types.Left', V1175} -> {'Prelude.Types.Left', V1175}; {'Prelude.Types.Right', V1176} -> (begin (V1177 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1158, V4} | V1176]))), V1177 end(V1173)) end end end end end; _ -> begin (V1178 = ('un--getMatch'(V0, V1, V2, V1156, V4))), fun (V1179) -> begin (V1180 = (V1178(V1179))), case V1180 of {'Prelude.Types.Left', V1181} -> {'Prelude.Types.Left', V1181}; {'Prelude.Types.Right', V1182} -> (begin (V1183 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1158, V4} | V1182]))), V1183 end(V1179)) end end end end end; _ -> begin (V1184 = ('un--getMatch'(V0, V1, V2, V1156, V4))), fun (V1185) -> begin (V1186 = (V1184(V1185))), case V1186 of {'Prelude.Types.Left', V1187} -> {'Prelude.Types.Left', V1187}; {'Prelude.Types.Right', V1188} -> (begin (V1189 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1158, V4} | V1188]))), V1189 end(V1185)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1156, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1156, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1190, V1191, V1192, V1193, V1194} -> ('un--getMatch'(V0, V1, V2, V3, V1194)); _ -> case V3 of {'TTImp.TTImp.IType', V1195} -> fun (V1196) -> case V4 of {'TTImp.TTImp.IType', V1197} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1196)) end end; {'TTImp.TTImp.IPrimVal', V1198, V1199} -> case V4 of {'TTImp.TTImp.IPrimVal', V1200, V1201} -> fun (V1202) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1199, V1201)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1198, V1202)) end end; _ -> fun (V1203) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1203)) end end; _ -> fun (V1204) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1204)) end end end end end end end; {'TTImp.TTImp.IAutoApp', V1205, V1206, V1207} -> case V4 of {'TTImp.TTImp.IAutoApp', V1208, V1209, V1210} -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V1206, V1209} | [{'Builtin.MkPair', V1207, V1210} | []]])); _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V1211, V1212, V1213, V1214} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V1212, V4} | [{'Builtin.MkPair', V1214, V1214} | []]])); {'TTImp.TTImp.IAutoApp', V1215, V1216, V1217} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V1216, V4} | [{'Builtin.MkPair', V1217, V1217} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V1218, V1219, V1220, V1221} -> fun (V1222) -> ('un--matchFail'(V1218, V1222)) end; {'TTImp.TTImp.IAutoApp', V1223, V1224, V1225} -> fun (V1226) -> ('un--matchFail'(V1223, V1226)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1227, V1228, V1229} -> case V4 of {'TTImp.TTImp.IAlternative', V1230, V1231, V1232} -> ('un--matchAny'(V0, V1, V1227, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1229, V1232)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1233, V1234, V1235, V1236, V1237} -> ('un--getMatch'(V0, V1, V2, V3, V1237)); _ -> case V3 of {'TTImp.TTImp.IType', V1238} -> fun (V1239) -> case V4 of {'TTImp.TTImp.IType', V1240} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1239)) end end; {'TTImp.TTImp.IPrimVal', V1241, V1242} -> case V4 of {'TTImp.TTImp.IPrimVal', V1243, V1244} -> fun (V1245) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1242, V1244)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1241, V1245)) end end; _ -> fun (V1246) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1246)) end end; _ -> fun (V1247) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1247)) end end end end; {'TTImp.TTImp.IAs', V1248, V1249, V1250, V1251, V1252} -> case V1251 of {'Core.Name.UN', V1253} -> case V1253 of {'Core.Name.Basic', V1254} -> case V4 of {'TTImp.TTImp.IAs', V1255, V1256, V1257, V1258, V1259} -> case V1258 of {'Core.Name.UN', V1260} -> case V1260 of {'Core.Name.Basic', V1261} -> begin (V1262 = ('un--getMatch'(V0, V1, V2, V1252, V1259))), fun (V1263) -> begin (V1264 = (V1262(V1263))), case V1264 of {'Prelude.Types.Left', V1265} -> {'Prelude.Types.Left', V1265}; {'Prelude.Types.Right', V1266} -> (begin (V1267 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1254, {'TTImp.TTImp.IAs', V1256, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1258, {'TTImp.TTImp.Implicit', V1256, 1}}} | V1266]))), V1267 end(V1263)) end end end end; _ -> begin (V1268 = ('un--getMatch'(V0, V1, V2, V1252, V4))), fun (V1269) -> begin (V1270 = (V1268(V1269))), case V1270 of {'Prelude.Types.Left', V1271} -> {'Prelude.Types.Left', V1271}; {'Prelude.Types.Right', V1272} -> (begin (V1273 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1254, V4} | V1272]))), V1273 end(V1269)) end end end end end; _ -> begin (V1274 = ('un--getMatch'(V0, V1, V2, V1252, V4))), fun (V1275) -> begin (V1276 = (V1274(V1275))), case V1276 of {'Prelude.Types.Left', V1277} -> {'Prelude.Types.Left', V1277}; {'Prelude.Types.Right', V1278} -> (begin (V1279 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1254, V4} | V1278]))), V1279 end(V1275)) end end end end end; _ -> begin (V1280 = ('un--getMatch'(V0, V1, V2, V1252, V4))), fun (V1281) -> begin (V1282 = (V1280(V1281))), case V1282 of {'Prelude.Types.Left', V1283} -> {'Prelude.Types.Left', V1283}; {'Prelude.Types.Right', V1284} -> (begin (V1285 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1254, V4} | V1284]))), V1285 end(V1281)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1252, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1252, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1286, V1287, V1288, V1289, V1290} -> ('un--getMatch'(V0, V1, V2, V3, V1290)); _ -> case V3 of {'TTImp.TTImp.IType', V1291} -> fun (V1292) -> case V4 of {'TTImp.TTImp.IType', V1293} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1292)) end end; {'TTImp.TTImp.IPrimVal', V1294, V1295} -> case V4 of {'TTImp.TTImp.IPrimVal', V1296, V1297} -> fun (V1298) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1295, V1297)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1294, V1298)) end end; _ -> fun (V1299) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1299)) end end; _ -> fun (V1300) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1300)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V1301, V1302, V1303, V1304} -> ('un--getMatch'(V0, V1, 0, V1302, V1302)); {'TTImp.TTImp.IAutoApp', V1305, V1306, V1307} -> ('un--getMatch'(V0, V1, 0, V1306, V1306)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V1308, V1309, V1310, V1311} -> fun (V1312) -> ('un--matchFail'(V1308, V1312)) end; {'TTImp.TTImp.IAutoApp', V1313, V1314, V1315} -> fun (V1316) -> ('un--matchFail'(V1313, V1316)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1317, V1318, V1319} -> case V4 of {'TTImp.TTImp.IAlternative', V1320, V1321, V1322} -> ('un--matchAny'(V0, V1, V1317, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1319, V1322)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1323, V1324, V1325, V1326, V1327} -> ('un--getMatch'(V0, V1, V2, V3, V1327)); _ -> case V3 of {'TTImp.TTImp.IType', V1328} -> fun (V1329) -> case V4 of {'TTImp.TTImp.IType', V1330} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1329)) end end; {'TTImp.TTImp.IPrimVal', V1331, V1332} -> case V4 of {'TTImp.TTImp.IPrimVal', V1333, V1334} -> fun (V1335) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1332, V1334)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1331, V1335)) end end; _ -> fun (V1336) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1336)) end end; _ -> fun (V1337) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1337)) end end end end; {'TTImp.TTImp.IAs', V1338, V1339, V1340, V1341, V1342} -> case V1341 of {'Core.Name.UN', V1343} -> case V1343 of {'Core.Name.Basic', V1344} -> case V4 of {'TTImp.TTImp.IAs', V1345, V1346, V1347, V1348, V1349} -> case V1348 of {'Core.Name.UN', V1350} -> case V1350 of {'Core.Name.Basic', V1351} -> begin (V1352 = ('un--getMatch'(V0, V1, V2, V1342, V1349))), fun (V1353) -> begin (V1354 = (V1352(V1353))), case V1354 of {'Prelude.Types.Left', V1355} -> {'Prelude.Types.Left', V1355}; {'Prelude.Types.Right', V1356} -> (begin (V1357 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1344, {'TTImp.TTImp.IAs', V1346, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1348, {'TTImp.TTImp.Implicit', V1346, 1}}} | V1356]))), V1357 end(V1353)) end end end end; _ -> begin (V1358 = ('un--getMatch'(V0, V1, V2, V1342, V4))), fun (V1359) -> begin (V1360 = (V1358(V1359))), case V1360 of {'Prelude.Types.Left', V1361} -> {'Prelude.Types.Left', V1361}; {'Prelude.Types.Right', V1362} -> (begin (V1363 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1344, V4} | V1362]))), V1363 end(V1359)) end end end end end; _ -> begin (V1364 = ('un--getMatch'(V0, V1, V2, V1342, V4))), fun (V1365) -> begin (V1366 = (V1364(V1365))), case V1366 of {'Prelude.Types.Left', V1367} -> {'Prelude.Types.Left', V1367}; {'Prelude.Types.Right', V1368} -> (begin (V1369 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1344, V4} | V1368]))), V1369 end(V1365)) end end end end end; _ -> begin (V1370 = ('un--getMatch'(V0, V1, V2, V1342, V4))), fun (V1371) -> begin (V1372 = (V1370(V1371))), case V1372 of {'Prelude.Types.Left', V1373} -> {'Prelude.Types.Left', V1373}; {'Prelude.Types.Right', V1374} -> (begin (V1375 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1344, V4} | V1374]))), V1375 end(V1371)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1342, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1342, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1376, V1377, V1378, V1379, V1380} -> ('un--getMatch'(V0, V1, V2, V3, V1380)); _ -> case V3 of {'TTImp.TTImp.IType', V1381} -> fun (V1382) -> case V4 of {'TTImp.TTImp.IType', V1383} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1382)) end end; {'TTImp.TTImp.IPrimVal', V1384, V1385} -> case V4 of {'TTImp.TTImp.IPrimVal', V1386, V1387} -> fun (V1388) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1385, V1387)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1384, V1388)) end end; _ -> fun (V1389) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1389)) end end; _ -> fun (V1390) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1390)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V1391, V1392, V1393, V1394} -> fun (V1395) -> ('un--matchFail'(V1391, V1395)) end; {'TTImp.TTImp.IAutoApp', V1396, V1397, V1398} -> fun (V1399) -> ('un--matchFail'(V1396, V1399)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1400, V1401, V1402} -> case V4 of {'TTImp.TTImp.IAlternative', V1403, V1404, V1405} -> ('un--matchAny'(V0, V1, V1400, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1402, V1405)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1406, V1407, V1408, V1409, V1410} -> ('un--getMatch'(V0, V1, V2, V3, V1410)); _ -> case V3 of {'TTImp.TTImp.IType', V1411} -> fun (V1412) -> case V4 of {'TTImp.TTImp.IType', V1413} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1412)) end end; {'TTImp.TTImp.IPrimVal', V1414, V1415} -> case V4 of {'TTImp.TTImp.IPrimVal', V1416, V1417} -> fun (V1418) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1415, V1417)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1414, V1418)) end end; _ -> fun (V1419) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1419)) end end; _ -> fun (V1420) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1420)) end end end end; {'TTImp.TTImp.IAs', V1421, V1422, V1423, V1424, V1425} -> case V1424 of {'Core.Name.UN', V1426} -> case V1426 of {'Core.Name.Basic', V1427} -> case V4 of {'TTImp.TTImp.IAs', V1428, V1429, V1430, V1431, V1432} -> case V1431 of {'Core.Name.UN', V1433} -> case V1433 of {'Core.Name.Basic', V1434} -> begin (V1435 = ('un--getMatch'(V0, V1, V2, V1425, V1432))), fun (V1436) -> begin (V1437 = (V1435(V1436))), case V1437 of {'Prelude.Types.Left', V1438} -> {'Prelude.Types.Left', V1438}; {'Prelude.Types.Right', V1439} -> (begin (V1440 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1427, {'TTImp.TTImp.IAs', V1429, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1431, {'TTImp.TTImp.Implicit', V1429, 1}}} | V1439]))), V1440 end(V1436)) end end end end; _ -> begin (V1441 = ('un--getMatch'(V0, V1, V2, V1425, V4))), fun (V1442) -> begin (V1443 = (V1441(V1442))), case V1443 of {'Prelude.Types.Left', V1444} -> {'Prelude.Types.Left', V1444}; {'Prelude.Types.Right', V1445} -> (begin (V1446 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1427, V4} | V1445]))), V1446 end(V1442)) end end end end end; _ -> begin (V1447 = ('un--getMatch'(V0, V1, V2, V1425, V4))), fun (V1448) -> begin (V1449 = (V1447(V1448))), case V1449 of {'Prelude.Types.Left', V1450} -> {'Prelude.Types.Left', V1450}; {'Prelude.Types.Right', V1451} -> (begin (V1452 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1427, V4} | V1451]))), V1452 end(V1448)) end end end end end; _ -> begin (V1453 = ('un--getMatch'(V0, V1, V2, V1425, V4))), fun (V1454) -> begin (V1455 = (V1453(V1454))), case V1455 of {'Prelude.Types.Left', V1456} -> {'Prelude.Types.Left', V1456}; {'Prelude.Types.Right', V1457} -> (begin (V1458 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1427, V4} | V1457]))), V1458 end(V1454)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1425, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1425, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1459, V1460, V1461, V1462, V1463} -> ('un--getMatch'(V0, V1, V2, V3, V1463)); _ -> case V3 of {'TTImp.TTImp.IType', V1464} -> fun (V1465) -> case V4 of {'TTImp.TTImp.IType', V1466} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1465)) end end; {'TTImp.TTImp.IPrimVal', V1467, V1468} -> case V4 of {'TTImp.TTImp.IPrimVal', V1469, V1470} -> fun (V1471) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1468, V1470)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1467, V1471)) end end; _ -> fun (V1472) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1472)) end end; _ -> fun (V1473) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1473)) end end end end end end end; {'TTImp.TTImp.INamedApp', V1474, V1475, V1476, V1477} -> case V4 of {'TTImp.TTImp.INamedApp', V1478, V1479, V1480, V1481} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1476, V1480)) of 1 -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V1475, V1479} | [{'Builtin.MkPair', V1477, V1481} | []]])); 0 -> fun (V1482) -> ('un--matchFail'(V1478, V1482)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V1483, V1484, V1485, V1486} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V1484, V4} | [{'Builtin.MkPair', V1486, V1486} | []]])); {'TTImp.TTImp.IAutoApp', V1487, V1488, V1489} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V1488, V4} | [{'Builtin.MkPair', V1489, V1489} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V1490, V1491, V1492, V1493} -> fun (V1494) -> ('un--matchFail'(V1490, V1494)) end; {'TTImp.TTImp.IAutoApp', V1495, V1496, V1497} -> fun (V1498) -> ('un--matchFail'(V1495, V1498)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1499, V1500, V1501} -> case V4 of {'TTImp.TTImp.IAlternative', V1502, V1503, V1504} -> ('un--matchAny'(V0, V1, V1499, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1501, V1504)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1505, V1506, V1507, V1508, V1509} -> ('un--getMatch'(V0, V1, V2, V3, V1509)); _ -> case V3 of {'TTImp.TTImp.IType', V1510} -> fun (V1511) -> case V4 of {'TTImp.TTImp.IType', V1512} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1511)) end end; {'TTImp.TTImp.IPrimVal', V1513, V1514} -> case V4 of {'TTImp.TTImp.IPrimVal', V1515, V1516} -> fun (V1517) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1514, V1516)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1513, V1517)) end end; _ -> fun (V1518) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1518)) end end; _ -> fun (V1519) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1519)) end end end end; {'TTImp.TTImp.IAs', V1520, V1521, V1522, V1523, V1524} -> case V1523 of {'Core.Name.UN', V1525} -> case V1525 of {'Core.Name.Basic', V1526} -> case V4 of {'TTImp.TTImp.IAs', V1527, V1528, V1529, V1530, V1531} -> case V1530 of {'Core.Name.UN', V1532} -> case V1532 of {'Core.Name.Basic', V1533} -> begin (V1534 = ('un--getMatch'(V0, V1, V2, V1524, V1531))), fun (V1535) -> begin (V1536 = (V1534(V1535))), case V1536 of {'Prelude.Types.Left', V1537} -> {'Prelude.Types.Left', V1537}; {'Prelude.Types.Right', V1538} -> (begin (V1539 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1526, {'TTImp.TTImp.IAs', V1528, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1530, {'TTImp.TTImp.Implicit', V1528, 1}}} | V1538]))), V1539 end(V1535)) end end end end; _ -> begin (V1540 = ('un--getMatch'(V0, V1, V2, V1524, V4))), fun (V1541) -> begin (V1542 = (V1540(V1541))), case V1542 of {'Prelude.Types.Left', V1543} -> {'Prelude.Types.Left', V1543}; {'Prelude.Types.Right', V1544} -> (begin (V1545 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1526, V4} | V1544]))), V1545 end(V1541)) end end end end end; _ -> begin (V1546 = ('un--getMatch'(V0, V1, V2, V1524, V4))), fun (V1547) -> begin (V1548 = (V1546(V1547))), case V1548 of {'Prelude.Types.Left', V1549} -> {'Prelude.Types.Left', V1549}; {'Prelude.Types.Right', V1550} -> (begin (V1551 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1526, V4} | V1550]))), V1551 end(V1547)) end end end end end; _ -> begin (V1552 = ('un--getMatch'(V0, V1, V2, V1524, V4))), fun (V1553) -> begin (V1554 = (V1552(V1553))), case V1554 of {'Prelude.Types.Left', V1555} -> {'Prelude.Types.Left', V1555}; {'Prelude.Types.Right', V1556} -> (begin (V1557 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1526, V4} | V1556]))), V1557 end(V1553)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1524, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1524, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1558, V1559, V1560, V1561, V1562} -> ('un--getMatch'(V0, V1, V2, V3, V1562)); _ -> case V3 of {'TTImp.TTImp.IType', V1563} -> fun (V1564) -> case V4 of {'TTImp.TTImp.IType', V1565} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1564)) end end; {'TTImp.TTImp.IPrimVal', V1566, V1567} -> case V4 of {'TTImp.TTImp.IPrimVal', V1568, V1569} -> fun (V1570) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1567, V1569)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1566, V1570)) end end; _ -> fun (V1571) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1571)) end end; _ -> fun (V1572) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1572)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V1573, V1574, V1575, V1576} -> ('un--getMatch'(V0, V1, 0, V1574, V1574)); {'TTImp.TTImp.IAutoApp', V1577, V1578, V1579} -> ('un--getMatch'(V0, V1, 0, V1578, V1578)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V1580, V1581, V1582, V1583} -> fun (V1584) -> ('un--matchFail'(V1580, V1584)) end; {'TTImp.TTImp.IAutoApp', V1585, V1586, V1587} -> fun (V1588) -> ('un--matchFail'(V1585, V1588)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1589, V1590, V1591} -> case V4 of {'TTImp.TTImp.IAlternative', V1592, V1593, V1594} -> ('un--matchAny'(V0, V1, V1589, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1591, V1594)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1595, V1596, V1597, V1598, V1599} -> ('un--getMatch'(V0, V1, V2, V3, V1599)); _ -> case V3 of {'TTImp.TTImp.IType', V1600} -> fun (V1601) -> case V4 of {'TTImp.TTImp.IType', V1602} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1601)) end end; {'TTImp.TTImp.IPrimVal', V1603, V1604} -> case V4 of {'TTImp.TTImp.IPrimVal', V1605, V1606} -> fun (V1607) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1604, V1606)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1603, V1607)) end end; _ -> fun (V1608) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1608)) end end; _ -> fun (V1609) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1609)) end end end end; {'TTImp.TTImp.IAs', V1610, V1611, V1612, V1613, V1614} -> case V1613 of {'Core.Name.UN', V1615} -> case V1615 of {'Core.Name.Basic', V1616} -> case V4 of {'TTImp.TTImp.IAs', V1617, V1618, V1619, V1620, V1621} -> case V1620 of {'Core.Name.UN', V1622} -> case V1622 of {'Core.Name.Basic', V1623} -> begin (V1624 = ('un--getMatch'(V0, V1, V2, V1614, V1621))), fun (V1625) -> begin (V1626 = (V1624(V1625))), case V1626 of {'Prelude.Types.Left', V1627} -> {'Prelude.Types.Left', V1627}; {'Prelude.Types.Right', V1628} -> (begin (V1629 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1616, {'TTImp.TTImp.IAs', V1618, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1620, {'TTImp.TTImp.Implicit', V1618, 1}}} | V1628]))), V1629 end(V1625)) end end end end; _ -> begin (V1630 = ('un--getMatch'(V0, V1, V2, V1614, V4))), fun (V1631) -> begin (V1632 = (V1630(V1631))), case V1632 of {'Prelude.Types.Left', V1633} -> {'Prelude.Types.Left', V1633}; {'Prelude.Types.Right', V1634} -> (begin (V1635 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1616, V4} | V1634]))), V1635 end(V1631)) end end end end end; _ -> begin (V1636 = ('un--getMatch'(V0, V1, V2, V1614, V4))), fun (V1637) -> begin (V1638 = (V1636(V1637))), case V1638 of {'Prelude.Types.Left', V1639} -> {'Prelude.Types.Left', V1639}; {'Prelude.Types.Right', V1640} -> (begin (V1641 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1616, V4} | V1640]))), V1641 end(V1637)) end end end end end; _ -> begin (V1642 = ('un--getMatch'(V0, V1, V2, V1614, V4))), fun (V1643) -> begin (V1644 = (V1642(V1643))), case V1644 of {'Prelude.Types.Left', V1645} -> {'Prelude.Types.Left', V1645}; {'Prelude.Types.Right', V1646} -> (begin (V1647 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1616, V4} | V1646]))), V1647 end(V1643)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1614, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1614, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1648, V1649, V1650, V1651, V1652} -> ('un--getMatch'(V0, V1, V2, V3, V1652)); _ -> case V3 of {'TTImp.TTImp.IType', V1653} -> fun (V1654) -> case V4 of {'TTImp.TTImp.IType', V1655} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1654)) end end; {'TTImp.TTImp.IPrimVal', V1656, V1657} -> case V4 of {'TTImp.TTImp.IPrimVal', V1658, V1659} -> fun (V1660) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1657, V1659)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1656, V1660)) end end; _ -> fun (V1661) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1661)) end end; _ -> fun (V1662) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1662)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V1663, V1664, V1665, V1666} -> fun (V1667) -> ('un--matchFail'(V1663, V1667)) end; {'TTImp.TTImp.IAutoApp', V1668, V1669, V1670} -> fun (V1671) -> ('un--matchFail'(V1668, V1671)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1672, V1673, V1674} -> case V4 of {'TTImp.TTImp.IAlternative', V1675, V1676, V1677} -> ('un--matchAny'(V0, V1, V1672, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1674, V1677)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1678, V1679, V1680, V1681, V1682} -> ('un--getMatch'(V0, V1, V2, V3, V1682)); _ -> case V3 of {'TTImp.TTImp.IType', V1683} -> fun (V1684) -> case V4 of {'TTImp.TTImp.IType', V1685} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1684)) end end; {'TTImp.TTImp.IPrimVal', V1686, V1687} -> case V4 of {'TTImp.TTImp.IPrimVal', V1688, V1689} -> fun (V1690) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1687, V1689)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1686, V1690)) end end; _ -> fun (V1691) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1691)) end end; _ -> fun (V1692) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1692)) end end end end; {'TTImp.TTImp.IAs', V1693, V1694, V1695, V1696, V1697} -> case V1696 of {'Core.Name.UN', V1698} -> case V1698 of {'Core.Name.Basic', V1699} -> case V4 of {'TTImp.TTImp.IAs', V1700, V1701, V1702, V1703, V1704} -> case V1703 of {'Core.Name.UN', V1705} -> case V1705 of {'Core.Name.Basic', V1706} -> begin (V1707 = ('un--getMatch'(V0, V1, V2, V1697, V1704))), fun (V1708) -> begin (V1709 = (V1707(V1708))), case V1709 of {'Prelude.Types.Left', V1710} -> {'Prelude.Types.Left', V1710}; {'Prelude.Types.Right', V1711} -> (begin (V1712 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1699, {'TTImp.TTImp.IAs', V1701, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1703, {'TTImp.TTImp.Implicit', V1701, 1}}} | V1711]))), V1712 end(V1708)) end end end end; _ -> begin (V1713 = ('un--getMatch'(V0, V1, V2, V1697, V4))), fun (V1714) -> begin (V1715 = (V1713(V1714))), case V1715 of {'Prelude.Types.Left', V1716} -> {'Prelude.Types.Left', V1716}; {'Prelude.Types.Right', V1717} -> (begin (V1718 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1699, V4} | V1717]))), V1718 end(V1714)) end end end end end; _ -> begin (V1719 = ('un--getMatch'(V0, V1, V2, V1697, V4))), fun (V1720) -> begin (V1721 = (V1719(V1720))), case V1721 of {'Prelude.Types.Left', V1722} -> {'Prelude.Types.Left', V1722}; {'Prelude.Types.Right', V1723} -> (begin (V1724 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1699, V4} | V1723]))), V1724 end(V1720)) end end end end end; _ -> begin (V1725 = ('un--getMatch'(V0, V1, V2, V1697, V4))), fun (V1726) -> begin (V1727 = (V1725(V1726))), case V1727 of {'Prelude.Types.Left', V1728} -> {'Prelude.Types.Left', V1728}; {'Prelude.Types.Right', V1729} -> (begin (V1730 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1699, V4} | V1729]))), V1730 end(V1726)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1697, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1697, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1731, V1732, V1733, V1734, V1735} -> ('un--getMatch'(V0, V1, V2, V3, V1735)); _ -> case V3 of {'TTImp.TTImp.IType', V1736} -> fun (V1737) -> case V4 of {'TTImp.TTImp.IType', V1738} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1737)) end end; {'TTImp.TTImp.IPrimVal', V1739, V1740} -> case V4 of {'TTImp.TTImp.IPrimVal', V1741, V1742} -> fun (V1743) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1740, V1742)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1739, V1743)) end end; _ -> fun (V1744) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1744)) end end; _ -> fun (V1745) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1745)) end end end end end end end; {'TTImp.TTImp.IWithApp', V1746, V1747, V1748} -> case V4 of {'TTImp.TTImp.IWithApp', V1749, V1750, V1751} -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V1747, V1750} | [{'Builtin.MkPair', V1748, V1751} | []]])); _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V1752, V1753, V1754, V1755} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V1753, V4} | [{'Builtin.MkPair', V1755, V1755} | []]])); {'TTImp.TTImp.IAutoApp', V1756, V1757, V1758} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V1757, V4} | [{'Builtin.MkPair', V1758, V1758} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V1759, V1760, V1761, V1762} -> fun (V1763) -> ('un--matchFail'(V1759, V1763)) end; {'TTImp.TTImp.IAutoApp', V1764, V1765, V1766} -> fun (V1767) -> ('un--matchFail'(V1764, V1767)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1768, V1769, V1770} -> case V4 of {'TTImp.TTImp.IAlternative', V1771, V1772, V1773} -> ('un--matchAny'(V0, V1, V1768, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1770, V1773)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1774, V1775, V1776, V1777, V1778} -> ('un--getMatch'(V0, V1, V2, V3, V1778)); _ -> case V3 of {'TTImp.TTImp.IType', V1779} -> fun (V1780) -> case V4 of {'TTImp.TTImp.IType', V1781} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1780)) end end; {'TTImp.TTImp.IPrimVal', V1782, V1783} -> case V4 of {'TTImp.TTImp.IPrimVal', V1784, V1785} -> fun (V1786) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1783, V1785)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1782, V1786)) end end; _ -> fun (V1787) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1787)) end end; _ -> fun (V1788) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1788)) end end end end; {'TTImp.TTImp.IAs', V1789, V1790, V1791, V1792, V1793} -> case V1792 of {'Core.Name.UN', V1794} -> case V1794 of {'Core.Name.Basic', V1795} -> case V4 of {'TTImp.TTImp.IAs', V1796, V1797, V1798, V1799, V1800} -> case V1799 of {'Core.Name.UN', V1801} -> case V1801 of {'Core.Name.Basic', V1802} -> begin (V1803 = ('un--getMatch'(V0, V1, V2, V1793, V1800))), fun (V1804) -> begin (V1805 = (V1803(V1804))), case V1805 of {'Prelude.Types.Left', V1806} -> {'Prelude.Types.Left', V1806}; {'Prelude.Types.Right', V1807} -> (begin (V1808 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1795, {'TTImp.TTImp.IAs', V1797, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1799, {'TTImp.TTImp.Implicit', V1797, 1}}} | V1807]))), V1808 end(V1804)) end end end end; _ -> begin (V1809 = ('un--getMatch'(V0, V1, V2, V1793, V4))), fun (V1810) -> begin (V1811 = (V1809(V1810))), case V1811 of {'Prelude.Types.Left', V1812} -> {'Prelude.Types.Left', V1812}; {'Prelude.Types.Right', V1813} -> (begin (V1814 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1795, V4} | V1813]))), V1814 end(V1810)) end end end end end; _ -> begin (V1815 = ('un--getMatch'(V0, V1, V2, V1793, V4))), fun (V1816) -> begin (V1817 = (V1815(V1816))), case V1817 of {'Prelude.Types.Left', V1818} -> {'Prelude.Types.Left', V1818}; {'Prelude.Types.Right', V1819} -> (begin (V1820 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1795, V4} | V1819]))), V1820 end(V1816)) end end end end end; _ -> begin (V1821 = ('un--getMatch'(V0, V1, V2, V1793, V4))), fun (V1822) -> begin (V1823 = (V1821(V1822))), case V1823 of {'Prelude.Types.Left', V1824} -> {'Prelude.Types.Left', V1824}; {'Prelude.Types.Right', V1825} -> (begin (V1826 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1795, V4} | V1825]))), V1826 end(V1822)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1793, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1793, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1827, V1828, V1829, V1830, V1831} -> ('un--getMatch'(V0, V1, V2, V3, V1831)); _ -> case V3 of {'TTImp.TTImp.IType', V1832} -> fun (V1833) -> case V4 of {'TTImp.TTImp.IType', V1834} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1833)) end end; {'TTImp.TTImp.IPrimVal', V1835, V1836} -> case V4 of {'TTImp.TTImp.IPrimVal', V1837, V1838} -> fun (V1839) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1836, V1838)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1835, V1839)) end end; _ -> fun (V1840) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1840)) end end; _ -> fun (V1841) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1841)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V1842, V1843, V1844, V1845} -> ('un--getMatch'(V0, V1, 0, V1843, V1843)); {'TTImp.TTImp.IAutoApp', V1846, V1847, V1848} -> ('un--getMatch'(V0, V1, 0, V1847, V1847)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V1849, V1850, V1851, V1852} -> fun (V1853) -> ('un--matchFail'(V1849, V1853)) end; {'TTImp.TTImp.IAutoApp', V1854, V1855, V1856} -> fun (V1857) -> ('un--matchFail'(V1854, V1857)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1858, V1859, V1860} -> case V4 of {'TTImp.TTImp.IAlternative', V1861, V1862, V1863} -> ('un--matchAny'(V0, V1, V1858, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1860, V1863)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1864, V1865, V1866, V1867, V1868} -> ('un--getMatch'(V0, V1, V2, V3, V1868)); _ -> case V3 of {'TTImp.TTImp.IType', V1869} -> fun (V1870) -> case V4 of {'TTImp.TTImp.IType', V1871} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1870)) end end; {'TTImp.TTImp.IPrimVal', V1872, V1873} -> case V4 of {'TTImp.TTImp.IPrimVal', V1874, V1875} -> fun (V1876) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1873, V1875)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1872, V1876)) end end; _ -> fun (V1877) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1877)) end end; _ -> fun (V1878) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1878)) end end end end; {'TTImp.TTImp.IAs', V1879, V1880, V1881, V1882, V1883} -> case V1882 of {'Core.Name.UN', V1884} -> case V1884 of {'Core.Name.Basic', V1885} -> case V4 of {'TTImp.TTImp.IAs', V1886, V1887, V1888, V1889, V1890} -> case V1889 of {'Core.Name.UN', V1891} -> case V1891 of {'Core.Name.Basic', V1892} -> begin (V1893 = ('un--getMatch'(V0, V1, V2, V1883, V1890))), fun (V1894) -> begin (V1895 = (V1893(V1894))), case V1895 of {'Prelude.Types.Left', V1896} -> {'Prelude.Types.Left', V1896}; {'Prelude.Types.Right', V1897} -> (begin (V1898 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1885, {'TTImp.TTImp.IAs', V1887, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1889, {'TTImp.TTImp.Implicit', V1887, 1}}} | V1897]))), V1898 end(V1894)) end end end end; _ -> begin (V1899 = ('un--getMatch'(V0, V1, V2, V1883, V4))), fun (V1900) -> begin (V1901 = (V1899(V1900))), case V1901 of {'Prelude.Types.Left', V1902} -> {'Prelude.Types.Left', V1902}; {'Prelude.Types.Right', V1903} -> (begin (V1904 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1885, V4} | V1903]))), V1904 end(V1900)) end end end end end; _ -> begin (V1905 = ('un--getMatch'(V0, V1, V2, V1883, V4))), fun (V1906) -> begin (V1907 = (V1905(V1906))), case V1907 of {'Prelude.Types.Left', V1908} -> {'Prelude.Types.Left', V1908}; {'Prelude.Types.Right', V1909} -> (begin (V1910 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1885, V4} | V1909]))), V1910 end(V1906)) end end end end end; _ -> begin (V1911 = ('un--getMatch'(V0, V1, V2, V1883, V4))), fun (V1912) -> begin (V1913 = (V1911(V1912))), case V1913 of {'Prelude.Types.Left', V1914} -> {'Prelude.Types.Left', V1914}; {'Prelude.Types.Right', V1915} -> (begin (V1916 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1885, V4} | V1915]))), V1916 end(V1912)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1883, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1883, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V1917, V1918, V1919, V1920, V1921} -> ('un--getMatch'(V0, V1, V2, V3, V1921)); _ -> case V3 of {'TTImp.TTImp.IType', V1922} -> fun (V1923) -> case V4 of {'TTImp.TTImp.IType', V1924} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1923)) end end; {'TTImp.TTImp.IPrimVal', V1925, V1926} -> case V4 of {'TTImp.TTImp.IPrimVal', V1927, V1928} -> fun (V1929) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1926, V1928)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1925, V1929)) end end; _ -> fun (V1930) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1930)) end end; _ -> fun (V1931) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1931)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V1932, V1933, V1934, V1935} -> fun (V1936) -> ('un--matchFail'(V1932, V1936)) end; {'TTImp.TTImp.IAutoApp', V1937, V1938, V1939} -> fun (V1940) -> ('un--matchFail'(V1937, V1940)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V1941, V1942, V1943} -> case V4 of {'TTImp.TTImp.IAlternative', V1944, V1945, V1946} -> ('un--matchAny'(V0, V1, V1941, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1943, V1946)))); _ -> case V4 of {'TTImp.TTImp.IAs', V1947, V1948, V1949, V1950, V1951} -> ('un--getMatch'(V0, V1, V2, V3, V1951)); _ -> case V3 of {'TTImp.TTImp.IType', V1952} -> fun (V1953) -> case V4 of {'TTImp.TTImp.IType', V1954} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1953)) end end; {'TTImp.TTImp.IPrimVal', V1955, V1956} -> case V4 of {'TTImp.TTImp.IPrimVal', V1957, V1958} -> fun (V1959) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1956, V1958)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1955, V1959)) end end; _ -> fun (V1960) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1960)) end end; _ -> fun (V1961) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1961)) end end end end; {'TTImp.TTImp.IAs', V1962, V1963, V1964, V1965, V1966} -> case V1965 of {'Core.Name.UN', V1967} -> case V1967 of {'Core.Name.Basic', V1968} -> case V4 of {'TTImp.TTImp.IAs', V1969, V1970, V1971, V1972, V1973} -> case V1972 of {'Core.Name.UN', V1974} -> case V1974 of {'Core.Name.Basic', V1975} -> begin (V1976 = ('un--getMatch'(V0, V1, V2, V1966, V1973))), fun (V1977) -> begin (V1978 = (V1976(V1977))), case V1978 of {'Prelude.Types.Left', V1979} -> {'Prelude.Types.Left', V1979}; {'Prelude.Types.Right', V1980} -> (begin (V1981 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1968, {'TTImp.TTImp.IAs', V1970, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V1972, {'TTImp.TTImp.Implicit', V1970, 1}}} | V1980]))), V1981 end(V1977)) end end end end; _ -> begin (V1982 = ('un--getMatch'(V0, V1, V2, V1966, V4))), fun (V1983) -> begin (V1984 = (V1982(V1983))), case V1984 of {'Prelude.Types.Left', V1985} -> {'Prelude.Types.Left', V1985}; {'Prelude.Types.Right', V1986} -> (begin (V1987 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1968, V4} | V1986]))), V1987 end(V1983)) end end end end end; _ -> begin (V1988 = ('un--getMatch'(V0, V1, V2, V1966, V4))), fun (V1989) -> begin (V1990 = (V1988(V1989))), case V1990 of {'Prelude.Types.Left', V1991} -> {'Prelude.Types.Left', V1991}; {'Prelude.Types.Right', V1992} -> (begin (V1993 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1968, V4} | V1992]))), V1993 end(V1989)) end end end end end; _ -> begin (V1994 = ('un--getMatch'(V0, V1, V2, V1966, V4))), fun (V1995) -> begin (V1996 = (V1994(V1995))), case V1996 of {'Prelude.Types.Left', V1997} -> {'Prelude.Types.Left', V1997}; {'Prelude.Types.Right', V1998} -> (begin (V1999 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V1968, V4} | V1998]))), V1999 end(V1995)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V1966, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V1966, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2000, V2001, V2002, V2003, V2004} -> ('un--getMatch'(V0, V1, V2, V3, V2004)); _ -> case V3 of {'TTImp.TTImp.IType', V2005} -> fun (V2006) -> case V4 of {'TTImp.TTImp.IType', V2007} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2006)) end end; {'TTImp.TTImp.IPrimVal', V2008, V2009} -> case V4 of {'TTImp.TTImp.IPrimVal', V2010, V2011} -> fun (V2012) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2009, V2011)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2008, V2012)) end end; _ -> fun (V2013) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2013)) end end; _ -> fun (V2014) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2014)) end end end end end end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V2015, V2016, V2017, V2018} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2016, V4} | [{'Builtin.MkPair', V2018, V2018} | []]])); {'TTImp.TTImp.IAutoApp', V2019, V2020, V2021} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2020, V4} | [{'Builtin.MkPair', V2021, V2021} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V2022, V2023, V2024, V2025} -> fun (V2026) -> ('un--matchFail'(V2022, V2026)) end; {'TTImp.TTImp.IAutoApp', V2027, V2028, V2029} -> fun (V2030) -> ('un--matchFail'(V2027, V2030)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2031, V2032, V2033} -> case V4 of {'TTImp.TTImp.IAlternative', V2034, V2035, V2036} -> ('un--matchAny'(V0, V1, V2031, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2033, V2036)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2037, V2038, V2039, V2040, V2041} -> ('un--getMatch'(V0, V1, V2, V3, V2041)); _ -> case V3 of {'TTImp.TTImp.IType', V2042} -> fun (V2043) -> case V4 of {'TTImp.TTImp.IType', V2044} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2043)) end end; {'TTImp.TTImp.IPrimVal', V2045, V2046} -> case V4 of {'TTImp.TTImp.IPrimVal', V2047, V2048} -> fun (V2049) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2046, V2048)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2045, V2049)) end end; _ -> fun (V2050) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2050)) end end; _ -> fun (V2051) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2051)) end end end end; {'TTImp.TTImp.IAs', V2052, V2053, V2054, V2055, V2056} -> case V2055 of {'Core.Name.UN', V2057} -> case V2057 of {'Core.Name.Basic', V2058} -> case V4 of {'TTImp.TTImp.IAs', V2059, V2060, V2061, V2062, V2063} -> case V2062 of {'Core.Name.UN', V2064} -> case V2064 of {'Core.Name.Basic', V2065} -> begin (V2066 = ('un--getMatch'(V0, V1, V2, V2056, V2063))), fun (V2067) -> begin (V2068 = (V2066(V2067))), case V2068 of {'Prelude.Types.Left', V2069} -> {'Prelude.Types.Left', V2069}; {'Prelude.Types.Right', V2070} -> (begin (V2071 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2058, {'TTImp.TTImp.IAs', V2060, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2062, {'TTImp.TTImp.Implicit', V2060, 1}}} | V2070]))), V2071 end(V2067)) end end end end; _ -> begin (V2072 = ('un--getMatch'(V0, V1, V2, V2056, V4))), fun (V2073) -> begin (V2074 = (V2072(V2073))), case V2074 of {'Prelude.Types.Left', V2075} -> {'Prelude.Types.Left', V2075}; {'Prelude.Types.Right', V2076} -> (begin (V2077 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2058, V4} | V2076]))), V2077 end(V2073)) end end end end end; _ -> begin (V2078 = ('un--getMatch'(V0, V1, V2, V2056, V4))), fun (V2079) -> begin (V2080 = (V2078(V2079))), case V2080 of {'Prelude.Types.Left', V2081} -> {'Prelude.Types.Left', V2081}; {'Prelude.Types.Right', V2082} -> (begin (V2083 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2058, V4} | V2082]))), V2083 end(V2079)) end end end end end; _ -> begin (V2084 = ('un--getMatch'(V0, V1, V2, V2056, V4))), fun (V2085) -> begin (V2086 = (V2084(V2085))), case V2086 of {'Prelude.Types.Left', V2087} -> {'Prelude.Types.Left', V2087}; {'Prelude.Types.Right', V2088} -> (begin (V2089 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2058, V4} | V2088]))), V2089 end(V2085)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2056, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2056, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2090, V2091, V2092, V2093, V2094} -> ('un--getMatch'(V0, V1, V2, V3, V2094)); _ -> case V3 of {'TTImp.TTImp.IType', V2095} -> fun (V2096) -> case V4 of {'TTImp.TTImp.IType', V2097} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2096)) end end; {'TTImp.TTImp.IPrimVal', V2098, V2099} -> case V4 of {'TTImp.TTImp.IPrimVal', V2100, V2101} -> fun (V2102) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2099, V2101)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2098, V2102)) end end; _ -> fun (V2103) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2103)) end end; _ -> fun (V2104) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2104)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V2105, V2106, V2107, V2108} -> ('un--getMatch'(V0, V1, 0, V2106, V2106)); {'TTImp.TTImp.IAutoApp', V2109, V2110, V2111} -> ('un--getMatch'(V0, V1, 0, V2110, V2110)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V2112, V2113, V2114, V2115} -> fun (V2116) -> ('un--matchFail'(V2112, V2116)) end; {'TTImp.TTImp.IAutoApp', V2117, V2118, V2119} -> fun (V2120) -> ('un--matchFail'(V2117, V2120)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2121, V2122, V2123} -> case V4 of {'TTImp.TTImp.IAlternative', V2124, V2125, V2126} -> ('un--matchAny'(V0, V1, V2121, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2123, V2126)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2127, V2128, V2129, V2130, V2131} -> ('un--getMatch'(V0, V1, V2, V3, V2131)); _ -> case V3 of {'TTImp.TTImp.IType', V2132} -> fun (V2133) -> case V4 of {'TTImp.TTImp.IType', V2134} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2133)) end end; {'TTImp.TTImp.IPrimVal', V2135, V2136} -> case V4 of {'TTImp.TTImp.IPrimVal', V2137, V2138} -> fun (V2139) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2136, V2138)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2135, V2139)) end end; _ -> fun (V2140) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2140)) end end; _ -> fun (V2141) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2141)) end end end end; {'TTImp.TTImp.IAs', V2142, V2143, V2144, V2145, V2146} -> case V2145 of {'Core.Name.UN', V2147} -> case V2147 of {'Core.Name.Basic', V2148} -> case V4 of {'TTImp.TTImp.IAs', V2149, V2150, V2151, V2152, V2153} -> case V2152 of {'Core.Name.UN', V2154} -> case V2154 of {'Core.Name.Basic', V2155} -> begin (V2156 = ('un--getMatch'(V0, V1, V2, V2146, V2153))), fun (V2157) -> begin (V2158 = (V2156(V2157))), case V2158 of {'Prelude.Types.Left', V2159} -> {'Prelude.Types.Left', V2159}; {'Prelude.Types.Right', V2160} -> (begin (V2161 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2148, {'TTImp.TTImp.IAs', V2150, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2152, {'TTImp.TTImp.Implicit', V2150, 1}}} | V2160]))), V2161 end(V2157)) end end end end; _ -> begin (V2162 = ('un--getMatch'(V0, V1, V2, V2146, V4))), fun (V2163) -> begin (V2164 = (V2162(V2163))), case V2164 of {'Prelude.Types.Left', V2165} -> {'Prelude.Types.Left', V2165}; {'Prelude.Types.Right', V2166} -> (begin (V2167 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2148, V4} | V2166]))), V2167 end(V2163)) end end end end end; _ -> begin (V2168 = ('un--getMatch'(V0, V1, V2, V2146, V4))), fun (V2169) -> begin (V2170 = (V2168(V2169))), case V2170 of {'Prelude.Types.Left', V2171} -> {'Prelude.Types.Left', V2171}; {'Prelude.Types.Right', V2172} -> (begin (V2173 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2148, V4} | V2172]))), V2173 end(V2169)) end end end end end; _ -> begin (V2174 = ('un--getMatch'(V0, V1, V2, V2146, V4))), fun (V2175) -> begin (V2176 = (V2174(V2175))), case V2176 of {'Prelude.Types.Left', V2177} -> {'Prelude.Types.Left', V2177}; {'Prelude.Types.Right', V2178} -> (begin (V2179 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2148, V4} | V2178]))), V2179 end(V2175)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2146, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2146, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2180, V2181, V2182, V2183, V2184} -> ('un--getMatch'(V0, V1, V2, V3, V2184)); _ -> case V3 of {'TTImp.TTImp.IType', V2185} -> fun (V2186) -> case V4 of {'TTImp.TTImp.IType', V2187} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2186)) end end; {'TTImp.TTImp.IPrimVal', V2188, V2189} -> case V4 of {'TTImp.TTImp.IPrimVal', V2190, V2191} -> fun (V2192) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2189, V2191)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2188, V2192)) end end; _ -> fun (V2193) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2193)) end end; _ -> fun (V2194) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2194)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V2195, V2196, V2197, V2198} -> fun (V2199) -> ('un--matchFail'(V2195, V2199)) end; {'TTImp.TTImp.IAutoApp', V2200, V2201, V2202} -> fun (V2203) -> ('un--matchFail'(V2200, V2203)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2204, V2205, V2206} -> case V4 of {'TTImp.TTImp.IAlternative', V2207, V2208, V2209} -> ('un--matchAny'(V0, V1, V2204, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2206, V2209)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2210, V2211, V2212, V2213, V2214} -> ('un--getMatch'(V0, V1, V2, V3, V2214)); _ -> case V3 of {'TTImp.TTImp.IType', V2215} -> fun (V2216) -> case V4 of {'TTImp.TTImp.IType', V2217} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2216)) end end; {'TTImp.TTImp.IPrimVal', V2218, V2219} -> case V4 of {'TTImp.TTImp.IPrimVal', V2220, V2221} -> fun (V2222) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2219, V2221)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2218, V2222)) end end; _ -> fun (V2223) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2223)) end end; _ -> fun (V2224) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2224)) end end end end; {'TTImp.TTImp.IAs', V2225, V2226, V2227, V2228, V2229} -> case V2228 of {'Core.Name.UN', V2230} -> case V2230 of {'Core.Name.Basic', V2231} -> case V4 of {'TTImp.TTImp.IAs', V2232, V2233, V2234, V2235, V2236} -> case V2235 of {'Core.Name.UN', V2237} -> case V2237 of {'Core.Name.Basic', V2238} -> begin (V2239 = ('un--getMatch'(V0, V1, V2, V2229, V2236))), fun (V2240) -> begin (V2241 = (V2239(V2240))), case V2241 of {'Prelude.Types.Left', V2242} -> {'Prelude.Types.Left', V2242}; {'Prelude.Types.Right', V2243} -> (begin (V2244 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2231, {'TTImp.TTImp.IAs', V2233, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2235, {'TTImp.TTImp.Implicit', V2233, 1}}} | V2243]))), V2244 end(V2240)) end end end end; _ -> begin (V2245 = ('un--getMatch'(V0, V1, V2, V2229, V4))), fun (V2246) -> begin (V2247 = (V2245(V2246))), case V2247 of {'Prelude.Types.Left', V2248} -> {'Prelude.Types.Left', V2248}; {'Prelude.Types.Right', V2249} -> (begin (V2250 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2231, V4} | V2249]))), V2250 end(V2246)) end end end end end; _ -> begin (V2251 = ('un--getMatch'(V0, V1, V2, V2229, V4))), fun (V2252) -> begin (V2253 = (V2251(V2252))), case V2253 of {'Prelude.Types.Left', V2254} -> {'Prelude.Types.Left', V2254}; {'Prelude.Types.Right', V2255} -> (begin (V2256 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2231, V4} | V2255]))), V2256 end(V2252)) end end end end end; _ -> begin (V2257 = ('un--getMatch'(V0, V1, V2, V2229, V4))), fun (V2258) -> begin (V2259 = (V2257(V2258))), case V2259 of {'Prelude.Types.Left', V2260} -> {'Prelude.Types.Left', V2260}; {'Prelude.Types.Right', V2261} -> (begin (V2262 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2231, V4} | V2261]))), V2262 end(V2258)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2229, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2229, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2263, V2264, V2265, V2266, V2267} -> ('un--getMatch'(V0, V1, V2, V3, V2267)); _ -> case V3 of {'TTImp.TTImp.IType', V2268} -> fun (V2269) -> case V4 of {'TTImp.TTImp.IType', V2270} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2269)) end end; {'TTImp.TTImp.IPrimVal', V2271, V2272} -> case V4 of {'TTImp.TTImp.IPrimVal', V2273, V2274} -> fun (V2275) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2272, V2274)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2271, V2275)) end end; _ -> fun (V2276) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2276)) end end; _ -> fun (V2277) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2277)) end end end end end end end end; _ -> case V3 of {'TTImp.TTImp.IVar', V2278, V2279} -> case V2279 of {'Core.Name.NS', V2280, V2281} -> case V4 of {'TTImp.TTImp.IVar', V2282, V2283} -> case V2283 of {'Core.Name.NS', V2284, V2285} -> case case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2281, V2285)) of 1 -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V2284, V2280)); 0 -> 0 end of 1 -> begin (V2286 = ('un--addAlias'(V0, V1, V2282, V2278))), ((begin (V2302 = fun (V2297) -> fun (V2298) -> fun (V2299) -> fun (V2300) -> fun (V2301) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V2299, V2300, V2301)) end end end end end), fun (V2303) -> fun (V2304) -> ((((V2302('erased'))('erased'))(V2303))(V2304)) end end end((begin (V2294 = fun (V2288) -> fun (V2289) -> fun (V2290) -> fun (V2291) -> case V2291 of {'Prelude.Types.Left', V2292} -> {'Prelude.Types.Left', V2292}; {'Prelude.Types.Right', V2293} -> {'Prelude.Types.Right', (V2290(V2293))} end end end end end), fun (V2295) -> fun (V2296) -> ((((V2294('erased'))('erased'))(V2295))(V2296)) end end end(fun (V2287) -> [] end))))(V2286)) end; 0 -> fun (V2305) -> ('un--matchFail'(V2282, V2305)) end end; _ -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2281, V2283)) of 1 -> begin (V2306 = ('un--addAlias'(V0, V1, V2282, V2278))), ((begin (V2322 = fun (V2317) -> fun (V2318) -> fun (V2319) -> fun (V2320) -> fun (V2321) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V2319, V2320, V2321)) end end end end end), fun (V2323) -> fun (V2324) -> ((((V2322('erased'))('erased'))(V2323))(V2324)) end end end((begin (V2314 = fun (V2308) -> fun (V2309) -> fun (V2310) -> fun (V2311) -> case V2311 of {'Prelude.Types.Left', V2312} -> {'Prelude.Types.Left', V2312}; {'Prelude.Types.Right', V2313} -> {'Prelude.Types.Right', (V2310(V2313))} end end end end end), fun (V2315) -> fun (V2316) -> ((((V2314('erased'))('erased'))(V2315))(V2316)) end end end(fun (V2307) -> [] end))))(V2306)) end; 0 -> fun (V2325) -> ('un--matchFail'(V2282, V2325)) end end end; _ -> case V4 of {'TTImp.TTImp.IVar', V2326, V2327} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2279, V2327)) of 1 -> begin (V2328 = ('un--addAlias'(V0, V1, V2326, V2278))), ((begin (V2344 = fun (V2339) -> fun (V2340) -> fun (V2341) -> fun (V2342) -> fun (V2343) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V2341, V2342, V2343)) end end end end end), fun (V2345) -> fun (V2346) -> ((((V2344('erased'))('erased'))(V2345))(V2346)) end end end((begin (V2336 = fun (V2330) -> fun (V2331) -> fun (V2332) -> fun (V2333) -> case V2333 of {'Prelude.Types.Left', V2334} -> {'Prelude.Types.Left', V2334}; {'Prelude.Types.Right', V2335} -> {'Prelude.Types.Right', (V2332(V2335))} end end end end end), fun (V2337) -> fun (V2338) -> ((((V2336('erased'))('erased'))(V2337))(V2338)) end end end(fun (V2329) -> [] end))))(V2328)) end; 0 -> fun (V2347) -> ('un--matchFail'(V2326, V2347)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V2348, V2349, V2350, V2351} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2349, V4} | [{'Builtin.MkPair', V2351, V2351} | []]])); {'TTImp.TTImp.IAutoApp', V2352, V2353, V2354} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2353, V4} | [{'Builtin.MkPair', V2354, V2354} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V2355, V2356, V2357, V2358} -> fun (V2359) -> ('un--matchFail'(V2355, V2359)) end; {'TTImp.TTImp.IAutoApp', V2360, V2361, V2362} -> fun (V2363) -> ('un--matchFail'(V2360, V2363)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2364, V2365, V2366} -> case V4 of {'TTImp.TTImp.IAlternative', V2367, V2368, V2369} -> ('un--matchAny'(V0, V1, V2364, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2366, V2369)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2370, V2371, V2372, V2373, V2374} -> ('un--getMatch'(V0, V1, V2, V3, V2374)); _ -> case V3 of {'TTImp.TTImp.IType', V2375} -> fun (V2376) -> case V4 of {'TTImp.TTImp.IType', V2377} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2376)) end end; {'TTImp.TTImp.IPrimVal', V2378, V2379} -> case V4 of {'TTImp.TTImp.IPrimVal', V2380, V2381} -> fun (V2382) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2379, V2381)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2378, V2382)) end end; _ -> fun (V2383) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2383)) end end; _ -> fun (V2384) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2384)) end end end end; {'TTImp.TTImp.IAs', V2385, V2386, V2387, V2388, V2389} -> case V2388 of {'Core.Name.UN', V2390} -> case V2390 of {'Core.Name.Basic', V2391} -> case V4 of {'TTImp.TTImp.IAs', V2392, V2393, V2394, V2395, V2396} -> case V2395 of {'Core.Name.UN', V2397} -> case V2397 of {'Core.Name.Basic', V2398} -> begin (V2399 = ('un--getMatch'(V0, V1, V2, V2389, V2396))), fun (V2400) -> begin (V2401 = (V2399(V2400))), case V2401 of {'Prelude.Types.Left', V2402} -> {'Prelude.Types.Left', V2402}; {'Prelude.Types.Right', V2403} -> (begin (V2404 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2391, {'TTImp.TTImp.IAs', V2393, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2395, {'TTImp.TTImp.Implicit', V2393, 1}}} | V2403]))), V2404 end(V2400)) end end end end; _ -> begin (V2405 = ('un--getMatch'(V0, V1, V2, V2389, V4))), fun (V2406) -> begin (V2407 = (V2405(V2406))), case V2407 of {'Prelude.Types.Left', V2408} -> {'Prelude.Types.Left', V2408}; {'Prelude.Types.Right', V2409} -> (begin (V2410 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2391, V4} | V2409]))), V2410 end(V2406)) end end end end end; _ -> begin (V2411 = ('un--getMatch'(V0, V1, V2, V2389, V4))), fun (V2412) -> begin (V2413 = (V2411(V2412))), case V2413 of {'Prelude.Types.Left', V2414} -> {'Prelude.Types.Left', V2414}; {'Prelude.Types.Right', V2415} -> (begin (V2416 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2391, V4} | V2415]))), V2416 end(V2412)) end end end end end; _ -> begin (V2417 = ('un--getMatch'(V0, V1, V2, V2389, V4))), fun (V2418) -> begin (V2419 = (V2417(V2418))), case V2419 of {'Prelude.Types.Left', V2420} -> {'Prelude.Types.Left', V2420}; {'Prelude.Types.Right', V2421} -> (begin (V2422 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2391, V4} | V2421]))), V2422 end(V2418)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2389, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2389, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2423, V2424, V2425, V2426, V2427} -> ('un--getMatch'(V0, V1, V2, V3, V2427)); _ -> case V3 of {'TTImp.TTImp.IType', V2428} -> fun (V2429) -> case V4 of {'TTImp.TTImp.IType', V2430} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2429)) end end; {'TTImp.TTImp.IPrimVal', V2431, V2432} -> case V4 of {'TTImp.TTImp.IPrimVal', V2433, V2434} -> fun (V2435) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2432, V2434)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2431, V2435)) end end; _ -> fun (V2436) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2436)) end end; _ -> fun (V2437) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2437)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V2438, V2439, V2440, V2441} -> ('un--getMatch'(V0, V1, 0, V2439, V2439)); {'TTImp.TTImp.IAutoApp', V2442, V2443, V2444} -> ('un--getMatch'(V0, V1, 0, V2443, V2443)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V2445, V2446, V2447, V2448} -> fun (V2449) -> ('un--matchFail'(V2445, V2449)) end; {'TTImp.TTImp.IAutoApp', V2450, V2451, V2452} -> fun (V2453) -> ('un--matchFail'(V2450, V2453)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2454, V2455, V2456} -> case V4 of {'TTImp.TTImp.IAlternative', V2457, V2458, V2459} -> ('un--matchAny'(V0, V1, V2454, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2456, V2459)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2460, V2461, V2462, V2463, V2464} -> ('un--getMatch'(V0, V1, V2, V3, V2464)); _ -> case V3 of {'TTImp.TTImp.IType', V2465} -> fun (V2466) -> case V4 of {'TTImp.TTImp.IType', V2467} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2466)) end end; {'TTImp.TTImp.IPrimVal', V2468, V2469} -> case V4 of {'TTImp.TTImp.IPrimVal', V2470, V2471} -> fun (V2472) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2469, V2471)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2468, V2472)) end end; _ -> fun (V2473) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2473)) end end; _ -> fun (V2474) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2474)) end end end end; {'TTImp.TTImp.IAs', V2475, V2476, V2477, V2478, V2479} -> case V2478 of {'Core.Name.UN', V2480} -> case V2480 of {'Core.Name.Basic', V2481} -> case V4 of {'TTImp.TTImp.IAs', V2482, V2483, V2484, V2485, V2486} -> case V2485 of {'Core.Name.UN', V2487} -> case V2487 of {'Core.Name.Basic', V2488} -> begin (V2489 = ('un--getMatch'(V0, V1, V2, V2479, V2486))), fun (V2490) -> begin (V2491 = (V2489(V2490))), case V2491 of {'Prelude.Types.Left', V2492} -> {'Prelude.Types.Left', V2492}; {'Prelude.Types.Right', V2493} -> (begin (V2494 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2481, {'TTImp.TTImp.IAs', V2483, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2485, {'TTImp.TTImp.Implicit', V2483, 1}}} | V2493]))), V2494 end(V2490)) end end end end; _ -> begin (V2495 = ('un--getMatch'(V0, V1, V2, V2479, V4))), fun (V2496) -> begin (V2497 = (V2495(V2496))), case V2497 of {'Prelude.Types.Left', V2498} -> {'Prelude.Types.Left', V2498}; {'Prelude.Types.Right', V2499} -> (begin (V2500 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2481, V4} | V2499]))), V2500 end(V2496)) end end end end end; _ -> begin (V2501 = ('un--getMatch'(V0, V1, V2, V2479, V4))), fun (V2502) -> begin (V2503 = (V2501(V2502))), case V2503 of {'Prelude.Types.Left', V2504} -> {'Prelude.Types.Left', V2504}; {'Prelude.Types.Right', V2505} -> (begin (V2506 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2481, V4} | V2505]))), V2506 end(V2502)) end end end end end; _ -> begin (V2507 = ('un--getMatch'(V0, V1, V2, V2479, V4))), fun (V2508) -> begin (V2509 = (V2507(V2508))), case V2509 of {'Prelude.Types.Left', V2510} -> {'Prelude.Types.Left', V2510}; {'Prelude.Types.Right', V2511} -> (begin (V2512 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2481, V4} | V2511]))), V2512 end(V2508)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2479, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2479, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2513, V2514, V2515, V2516, V2517} -> ('un--getMatch'(V0, V1, V2, V3, V2517)); _ -> case V3 of {'TTImp.TTImp.IType', V2518} -> fun (V2519) -> case V4 of {'TTImp.TTImp.IType', V2520} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2519)) end end; {'TTImp.TTImp.IPrimVal', V2521, V2522} -> case V4 of {'TTImp.TTImp.IPrimVal', V2523, V2524} -> fun (V2525) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2522, V2524)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2521, V2525)) end end; _ -> fun (V2526) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2526)) end end; _ -> fun (V2527) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2527)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V2528, V2529, V2530, V2531} -> fun (V2532) -> ('un--matchFail'(V2528, V2532)) end; {'TTImp.TTImp.IAutoApp', V2533, V2534, V2535} -> fun (V2536) -> ('un--matchFail'(V2533, V2536)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2537, V2538, V2539} -> case V4 of {'TTImp.TTImp.IAlternative', V2540, V2541, V2542} -> ('un--matchAny'(V0, V1, V2537, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2539, V2542)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2543, V2544, V2545, V2546, V2547} -> ('un--getMatch'(V0, V1, V2, V3, V2547)); _ -> case V3 of {'TTImp.TTImp.IType', V2548} -> fun (V2549) -> case V4 of {'TTImp.TTImp.IType', V2550} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2549)) end end; {'TTImp.TTImp.IPrimVal', V2551, V2552} -> case V4 of {'TTImp.TTImp.IPrimVal', V2553, V2554} -> fun (V2555) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2552, V2554)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2551, V2555)) end end; _ -> fun (V2556) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2556)) end end; _ -> fun (V2557) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2557)) end end end end; {'TTImp.TTImp.IAs', V2558, V2559, V2560, V2561, V2562} -> case V2561 of {'Core.Name.UN', V2563} -> case V2563 of {'Core.Name.Basic', V2564} -> case V4 of {'TTImp.TTImp.IAs', V2565, V2566, V2567, V2568, V2569} -> case V2568 of {'Core.Name.UN', V2570} -> case V2570 of {'Core.Name.Basic', V2571} -> begin (V2572 = ('un--getMatch'(V0, V1, V2, V2562, V2569))), fun (V2573) -> begin (V2574 = (V2572(V2573))), case V2574 of {'Prelude.Types.Left', V2575} -> {'Prelude.Types.Left', V2575}; {'Prelude.Types.Right', V2576} -> (begin (V2577 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2564, {'TTImp.TTImp.IAs', V2566, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2568, {'TTImp.TTImp.Implicit', V2566, 1}}} | V2576]))), V2577 end(V2573)) end end end end; _ -> begin (V2578 = ('un--getMatch'(V0, V1, V2, V2562, V4))), fun (V2579) -> begin (V2580 = (V2578(V2579))), case V2580 of {'Prelude.Types.Left', V2581} -> {'Prelude.Types.Left', V2581}; {'Prelude.Types.Right', V2582} -> (begin (V2583 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2564, V4} | V2582]))), V2583 end(V2579)) end end end end end; _ -> begin (V2584 = ('un--getMatch'(V0, V1, V2, V2562, V4))), fun (V2585) -> begin (V2586 = (V2584(V2585))), case V2586 of {'Prelude.Types.Left', V2587} -> {'Prelude.Types.Left', V2587}; {'Prelude.Types.Right', V2588} -> (begin (V2589 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2564, V4} | V2588]))), V2589 end(V2585)) end end end end end; _ -> begin (V2590 = ('un--getMatch'(V0, V1, V2, V2562, V4))), fun (V2591) -> begin (V2592 = (V2590(V2591))), case V2592 of {'Prelude.Types.Left', V2593} -> {'Prelude.Types.Left', V2593}; {'Prelude.Types.Right', V2594} -> (begin (V2595 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2564, V4} | V2594]))), V2595 end(V2591)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2562, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2562, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2596, V2597, V2598, V2599, V2600} -> ('un--getMatch'(V0, V1, V2, V3, V2600)); _ -> case V3 of {'TTImp.TTImp.IType', V2601} -> fun (V2602) -> case V4 of {'TTImp.TTImp.IType', V2603} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2602)) end end; {'TTImp.TTImp.IPrimVal', V2604, V2605} -> case V4 of {'TTImp.TTImp.IPrimVal', V2606, V2607} -> fun (V2608) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2605, V2607)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2604, V2608)) end end; _ -> fun (V2609) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2609)) end end; _ -> fun (V2610) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2610)) end end end end end end end end; _ -> case V4 of {'TTImp.TTImp.IVar', V2611, V2612} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2279, V2612)) of 1 -> begin (V2613 = ('un--addAlias'(V0, V1, V2611, V2278))), ((begin (V2629 = fun (V2624) -> fun (V2625) -> fun (V2626) -> fun (V2627) -> fun (V2628) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V2626, V2627, V2628)) end end end end end), fun (V2630) -> fun (V2631) -> ((((V2629('erased'))('erased'))(V2630))(V2631)) end end end((begin (V2621 = fun (V2615) -> fun (V2616) -> fun (V2617) -> fun (V2618) -> case V2618 of {'Prelude.Types.Left', V2619} -> {'Prelude.Types.Left', V2619}; {'Prelude.Types.Right', V2620} -> {'Prelude.Types.Right', (V2617(V2620))} end end end end end), fun (V2622) -> fun (V2623) -> ((((V2621('erased'))('erased'))(V2622))(V2623)) end end end(fun (V2614) -> [] end))))(V2613)) end; 0 -> fun (V2632) -> ('un--matchFail'(V2611, V2632)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V2633, V2634, V2635, V2636} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2634, V4} | [{'Builtin.MkPair', V2636, V2636} | []]])); {'TTImp.TTImp.IAutoApp', V2637, V2638, V2639} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2638, V4} | [{'Builtin.MkPair', V2639, V2639} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V2640, V2641, V2642, V2643} -> fun (V2644) -> ('un--matchFail'(V2640, V2644)) end; {'TTImp.TTImp.IAutoApp', V2645, V2646, V2647} -> fun (V2648) -> ('un--matchFail'(V2645, V2648)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2649, V2650, V2651} -> case V4 of {'TTImp.TTImp.IAlternative', V2652, V2653, V2654} -> ('un--matchAny'(V0, V1, V2649, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2651, V2654)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2655, V2656, V2657, V2658, V2659} -> ('un--getMatch'(V0, V1, V2, V3, V2659)); _ -> case V3 of {'TTImp.TTImp.IType', V2660} -> fun (V2661) -> case V4 of {'TTImp.TTImp.IType', V2662} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2661)) end end; {'TTImp.TTImp.IPrimVal', V2663, V2664} -> case V4 of {'TTImp.TTImp.IPrimVal', V2665, V2666} -> fun (V2667) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2664, V2666)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2663, V2667)) end end; _ -> fun (V2668) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2668)) end end; _ -> fun (V2669) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2669)) end end end end; {'TTImp.TTImp.IAs', V2670, V2671, V2672, V2673, V2674} -> case V2673 of {'Core.Name.UN', V2675} -> case V2675 of {'Core.Name.Basic', V2676} -> case V4 of {'TTImp.TTImp.IAs', V2677, V2678, V2679, V2680, V2681} -> case V2680 of {'Core.Name.UN', V2682} -> case V2682 of {'Core.Name.Basic', V2683} -> begin (V2684 = ('un--getMatch'(V0, V1, V2, V2674, V2681))), fun (V2685) -> begin (V2686 = (V2684(V2685))), case V2686 of {'Prelude.Types.Left', V2687} -> {'Prelude.Types.Left', V2687}; {'Prelude.Types.Right', V2688} -> (begin (V2689 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2676, {'TTImp.TTImp.IAs', V2678, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2680, {'TTImp.TTImp.Implicit', V2678, 1}}} | V2688]))), V2689 end(V2685)) end end end end; _ -> begin (V2690 = ('un--getMatch'(V0, V1, V2, V2674, V4))), fun (V2691) -> begin (V2692 = (V2690(V2691))), case V2692 of {'Prelude.Types.Left', V2693} -> {'Prelude.Types.Left', V2693}; {'Prelude.Types.Right', V2694} -> (begin (V2695 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2676, V4} | V2694]))), V2695 end(V2691)) end end end end end; _ -> begin (V2696 = ('un--getMatch'(V0, V1, V2, V2674, V4))), fun (V2697) -> begin (V2698 = (V2696(V2697))), case V2698 of {'Prelude.Types.Left', V2699} -> {'Prelude.Types.Left', V2699}; {'Prelude.Types.Right', V2700} -> (begin (V2701 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2676, V4} | V2700]))), V2701 end(V2697)) end end end end end; _ -> begin (V2702 = ('un--getMatch'(V0, V1, V2, V2674, V4))), fun (V2703) -> begin (V2704 = (V2702(V2703))), case V2704 of {'Prelude.Types.Left', V2705} -> {'Prelude.Types.Left', V2705}; {'Prelude.Types.Right', V2706} -> (begin (V2707 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2676, V4} | V2706]))), V2707 end(V2703)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2674, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2674, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2708, V2709, V2710, V2711, V2712} -> ('un--getMatch'(V0, V1, V2, V3, V2712)); _ -> case V3 of {'TTImp.TTImp.IType', V2713} -> fun (V2714) -> case V4 of {'TTImp.TTImp.IType', V2715} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2714)) end end; {'TTImp.TTImp.IPrimVal', V2716, V2717} -> case V4 of {'TTImp.TTImp.IPrimVal', V2718, V2719} -> fun (V2720) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2717, V2719)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2716, V2720)) end end; _ -> fun (V2721) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2721)) end end; _ -> fun (V2722) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2722)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V2723, V2724, V2725, V2726} -> ('un--getMatch'(V0, V1, 0, V2724, V2724)); {'TTImp.TTImp.IAutoApp', V2727, V2728, V2729} -> ('un--getMatch'(V0, V1, 0, V2728, V2728)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V2730, V2731, V2732, V2733} -> fun (V2734) -> ('un--matchFail'(V2730, V2734)) end; {'TTImp.TTImp.IAutoApp', V2735, V2736, V2737} -> fun (V2738) -> ('un--matchFail'(V2735, V2738)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2739, V2740, V2741} -> case V4 of {'TTImp.TTImp.IAlternative', V2742, V2743, V2744} -> ('un--matchAny'(V0, V1, V2739, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2741, V2744)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2745, V2746, V2747, V2748, V2749} -> ('un--getMatch'(V0, V1, V2, V3, V2749)); _ -> case V3 of {'TTImp.TTImp.IType', V2750} -> fun (V2751) -> case V4 of {'TTImp.TTImp.IType', V2752} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2751)) end end; {'TTImp.TTImp.IPrimVal', V2753, V2754} -> case V4 of {'TTImp.TTImp.IPrimVal', V2755, V2756} -> fun (V2757) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2754, V2756)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2753, V2757)) end end; _ -> fun (V2758) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2758)) end end; _ -> fun (V2759) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2759)) end end end end; {'TTImp.TTImp.IAs', V2760, V2761, V2762, V2763, V2764} -> case V2763 of {'Core.Name.UN', V2765} -> case V2765 of {'Core.Name.Basic', V2766} -> case V4 of {'TTImp.TTImp.IAs', V2767, V2768, V2769, V2770, V2771} -> case V2770 of {'Core.Name.UN', V2772} -> case V2772 of {'Core.Name.Basic', V2773} -> begin (V2774 = ('un--getMatch'(V0, V1, V2, V2764, V2771))), fun (V2775) -> begin (V2776 = (V2774(V2775))), case V2776 of {'Prelude.Types.Left', V2777} -> {'Prelude.Types.Left', V2777}; {'Prelude.Types.Right', V2778} -> (begin (V2779 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2766, {'TTImp.TTImp.IAs', V2768, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2770, {'TTImp.TTImp.Implicit', V2768, 1}}} | V2778]))), V2779 end(V2775)) end end end end; _ -> begin (V2780 = ('un--getMatch'(V0, V1, V2, V2764, V4))), fun (V2781) -> begin (V2782 = (V2780(V2781))), case V2782 of {'Prelude.Types.Left', V2783} -> {'Prelude.Types.Left', V2783}; {'Prelude.Types.Right', V2784} -> (begin (V2785 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2766, V4} | V2784]))), V2785 end(V2781)) end end end end end; _ -> begin (V2786 = ('un--getMatch'(V0, V1, V2, V2764, V4))), fun (V2787) -> begin (V2788 = (V2786(V2787))), case V2788 of {'Prelude.Types.Left', V2789} -> {'Prelude.Types.Left', V2789}; {'Prelude.Types.Right', V2790} -> (begin (V2791 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2766, V4} | V2790]))), V2791 end(V2787)) end end end end end; _ -> begin (V2792 = ('un--getMatch'(V0, V1, V2, V2764, V4))), fun (V2793) -> begin (V2794 = (V2792(V2793))), case V2794 of {'Prelude.Types.Left', V2795} -> {'Prelude.Types.Left', V2795}; {'Prelude.Types.Right', V2796} -> (begin (V2797 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2766, V4} | V2796]))), V2797 end(V2793)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2764, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2764, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2798, V2799, V2800, V2801, V2802} -> ('un--getMatch'(V0, V1, V2, V3, V2802)); _ -> case V3 of {'TTImp.TTImp.IType', V2803} -> fun (V2804) -> case V4 of {'TTImp.TTImp.IType', V2805} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2804)) end end; {'TTImp.TTImp.IPrimVal', V2806, V2807} -> case V4 of {'TTImp.TTImp.IPrimVal', V2808, V2809} -> fun (V2810) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2807, V2809)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2806, V2810)) end end; _ -> fun (V2811) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2811)) end end; _ -> fun (V2812) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2812)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V2813, V2814, V2815, V2816} -> fun (V2817) -> ('un--matchFail'(V2813, V2817)) end; {'TTImp.TTImp.IAutoApp', V2818, V2819, V2820} -> fun (V2821) -> ('un--matchFail'(V2818, V2821)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2822, V2823, V2824} -> case V4 of {'TTImp.TTImp.IAlternative', V2825, V2826, V2827} -> ('un--matchAny'(V0, V1, V2822, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2824, V2827)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2828, V2829, V2830, V2831, V2832} -> ('un--getMatch'(V0, V1, V2, V3, V2832)); _ -> case V3 of {'TTImp.TTImp.IType', V2833} -> fun (V2834) -> case V4 of {'TTImp.TTImp.IType', V2835} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2834)) end end; {'TTImp.TTImp.IPrimVal', V2836, V2837} -> case V4 of {'TTImp.TTImp.IPrimVal', V2838, V2839} -> fun (V2840) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2837, V2839)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2836, V2840)) end end; _ -> fun (V2841) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2841)) end end; _ -> fun (V2842) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2842)) end end end end; {'TTImp.TTImp.IAs', V2843, V2844, V2845, V2846, V2847} -> case V2846 of {'Core.Name.UN', V2848} -> case V2848 of {'Core.Name.Basic', V2849} -> case V4 of {'TTImp.TTImp.IAs', V2850, V2851, V2852, V2853, V2854} -> case V2853 of {'Core.Name.UN', V2855} -> case V2855 of {'Core.Name.Basic', V2856} -> begin (V2857 = ('un--getMatch'(V0, V1, V2, V2847, V2854))), fun (V2858) -> begin (V2859 = (V2857(V2858))), case V2859 of {'Prelude.Types.Left', V2860} -> {'Prelude.Types.Left', V2860}; {'Prelude.Types.Right', V2861} -> (begin (V2862 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2849, {'TTImp.TTImp.IAs', V2851, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2853, {'TTImp.TTImp.Implicit', V2851, 1}}} | V2861]))), V2862 end(V2858)) end end end end; _ -> begin (V2863 = ('un--getMatch'(V0, V1, V2, V2847, V4))), fun (V2864) -> begin (V2865 = (V2863(V2864))), case V2865 of {'Prelude.Types.Left', V2866} -> {'Prelude.Types.Left', V2866}; {'Prelude.Types.Right', V2867} -> (begin (V2868 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2849, V4} | V2867]))), V2868 end(V2864)) end end end end end; _ -> begin (V2869 = ('un--getMatch'(V0, V1, V2, V2847, V4))), fun (V2870) -> begin (V2871 = (V2869(V2870))), case V2871 of {'Prelude.Types.Left', V2872} -> {'Prelude.Types.Left', V2872}; {'Prelude.Types.Right', V2873} -> (begin (V2874 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2849, V4} | V2873]))), V2874 end(V2870)) end end end end end; _ -> begin (V2875 = ('un--getMatch'(V0, V1, V2, V2847, V4))), fun (V2876) -> begin (V2877 = (V2875(V2876))), case V2877 of {'Prelude.Types.Left', V2878} -> {'Prelude.Types.Left', V2878}; {'Prelude.Types.Right', V2879} -> (begin (V2880 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2849, V4} | V2879]))), V2880 end(V2876)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2847, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2847, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2881, V2882, V2883, V2884, V2885} -> ('un--getMatch'(V0, V1, V2, V3, V2885)); _ -> case V3 of {'TTImp.TTImp.IType', V2886} -> fun (V2887) -> case V4 of {'TTImp.TTImp.IType', V2888} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2887)) end end; {'TTImp.TTImp.IPrimVal', V2889, V2890} -> case V4 of {'TTImp.TTImp.IPrimVal', V2891, V2892} -> fun (V2893) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2890, V2892)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2889, V2893)) end end; _ -> fun (V2894) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2894)) end end; _ -> fun (V2895) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2895)) end end end end end end end end; {'TTImp.TTImp.IPi', V2896, V2897, V2898, V2899, V2900, V2901} -> case V4 of {'TTImp.TTImp.IPi', V2902, V2903, V2904, V2905, V2906, V2907} -> case case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V2897, V2903)) of 1 -> case ('Idris.Idris2.Core.TT':'un--eqPiInfoBy'(fun (V2908) -> fun (V2909) -> 1 end end, V2898, V2904)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'({'Prelude.EqOrd.MkEq', fun (V2910) -> fun (V2911) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2910, V2911)) end end, fun (V2912) -> fun (V2913) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V2912, V2913)) end end}, V2899, V2905)); 0 -> 0 end; 0 -> 0 end of 1 -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V2900, V2906} | [{'Builtin.MkPair', V2901, V2907} | []]])); 0 -> fun (V2914) -> ('un--matchFail'(V2902, V2914)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V2915, V2916, V2917, V2918} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2916, V4} | [{'Builtin.MkPair', V2918, V2918} | []]])); {'TTImp.TTImp.IAutoApp', V2919, V2920, V2921} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V2920, V4} | [{'Builtin.MkPair', V2921, V2921} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V2922, V2923, V2924, V2925} -> fun (V2926) -> ('un--matchFail'(V2922, V2926)) end; {'TTImp.TTImp.IAutoApp', V2927, V2928, V2929} -> fun (V2930) -> ('un--matchFail'(V2927, V2930)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V2931, V2932, V2933} -> case V4 of {'TTImp.TTImp.IAlternative', V2934, V2935, V2936} -> ('un--matchAny'(V0, V1, V2931, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V2933, V2936)))); _ -> case V4 of {'TTImp.TTImp.IAs', V2937, V2938, V2939, V2940, V2941} -> ('un--getMatch'(V0, V1, V2, V3, V2941)); _ -> case V3 of {'TTImp.TTImp.IType', V2942} -> fun (V2943) -> case V4 of {'TTImp.TTImp.IType', V2944} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2943)) end end; {'TTImp.TTImp.IPrimVal', V2945, V2946} -> case V4 of {'TTImp.TTImp.IPrimVal', V2947, V2948} -> fun (V2949) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2946, V2948)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2945, V2949)) end end; _ -> fun (V2950) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2950)) end end; _ -> fun (V2951) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2951)) end end end end; {'TTImp.TTImp.IAs', V2952, V2953, V2954, V2955, V2956} -> case V2955 of {'Core.Name.UN', V2957} -> case V2957 of {'Core.Name.Basic', V2958} -> case V4 of {'TTImp.TTImp.IAs', V2959, V2960, V2961, V2962, V2963} -> case V2962 of {'Core.Name.UN', V2964} -> case V2964 of {'Core.Name.Basic', V2965} -> begin (V2966 = ('un--getMatch'(V0, V1, V2, V2956, V2963))), fun (V2967) -> begin (V2968 = (V2966(V2967))), case V2968 of {'Prelude.Types.Left', V2969} -> {'Prelude.Types.Left', V2969}; {'Prelude.Types.Right', V2970} -> (begin (V2971 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2958, {'TTImp.TTImp.IAs', V2960, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V2962, {'TTImp.TTImp.Implicit', V2960, 1}}} | V2970]))), V2971 end(V2967)) end end end end; _ -> begin (V2972 = ('un--getMatch'(V0, V1, V2, V2956, V4))), fun (V2973) -> begin (V2974 = (V2972(V2973))), case V2974 of {'Prelude.Types.Left', V2975} -> {'Prelude.Types.Left', V2975}; {'Prelude.Types.Right', V2976} -> (begin (V2977 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2958, V4} | V2976]))), V2977 end(V2973)) end end end end end; _ -> begin (V2978 = ('un--getMatch'(V0, V1, V2, V2956, V4))), fun (V2979) -> begin (V2980 = (V2978(V2979))), case V2980 of {'Prelude.Types.Left', V2981} -> {'Prelude.Types.Left', V2981}; {'Prelude.Types.Right', V2982} -> (begin (V2983 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2958, V4} | V2982]))), V2983 end(V2979)) end end end end end; _ -> begin (V2984 = ('un--getMatch'(V0, V1, V2, V2956, V4))), fun (V2985) -> begin (V2986 = (V2984(V2985))), case V2986 of {'Prelude.Types.Left', V2987} -> {'Prelude.Types.Left', V2987}; {'Prelude.Types.Right', V2988} -> (begin (V2989 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V2958, V4} | V2988]))), V2989 end(V2985)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V2956, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V2956, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V2990, V2991, V2992, V2993, V2994} -> ('un--getMatch'(V0, V1, V2, V3, V2994)); _ -> case V3 of {'TTImp.TTImp.IType', V2995} -> fun (V2996) -> case V4 of {'TTImp.TTImp.IType', V2997} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2996)) end end; {'TTImp.TTImp.IPrimVal', V2998, V2999} -> case V4 of {'TTImp.TTImp.IPrimVal', V3000, V3001} -> fun (V3002) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V2999, V3001)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V2998, V3002)) end end; _ -> fun (V3003) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3003)) end end; _ -> fun (V3004) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3004)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V3005, V3006, V3007, V3008} -> ('un--getMatch'(V0, V1, 0, V3006, V3006)); {'TTImp.TTImp.IAutoApp', V3009, V3010, V3011} -> ('un--getMatch'(V0, V1, 0, V3010, V3010)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V3012, V3013, V3014, V3015} -> fun (V3016) -> ('un--matchFail'(V3012, V3016)) end; {'TTImp.TTImp.IAutoApp', V3017, V3018, V3019} -> fun (V3020) -> ('un--matchFail'(V3017, V3020)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3021, V3022, V3023} -> case V4 of {'TTImp.TTImp.IAlternative', V3024, V3025, V3026} -> ('un--matchAny'(V0, V1, V3021, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3023, V3026)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3027, V3028, V3029, V3030, V3031} -> ('un--getMatch'(V0, V1, V2, V3, V3031)); _ -> case V3 of {'TTImp.TTImp.IType', V3032} -> fun (V3033) -> case V4 of {'TTImp.TTImp.IType', V3034} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3033)) end end; {'TTImp.TTImp.IPrimVal', V3035, V3036} -> case V4 of {'TTImp.TTImp.IPrimVal', V3037, V3038} -> fun (V3039) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3036, V3038)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3035, V3039)) end end; _ -> fun (V3040) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3040)) end end; _ -> fun (V3041) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3041)) end end end end; {'TTImp.TTImp.IAs', V3042, V3043, V3044, V3045, V3046} -> case V3045 of {'Core.Name.UN', V3047} -> case V3047 of {'Core.Name.Basic', V3048} -> case V4 of {'TTImp.TTImp.IAs', V3049, V3050, V3051, V3052, V3053} -> case V3052 of {'Core.Name.UN', V3054} -> case V3054 of {'Core.Name.Basic', V3055} -> begin (V3056 = ('un--getMatch'(V0, V1, V2, V3046, V3053))), fun (V3057) -> begin (V3058 = (V3056(V3057))), case V3058 of {'Prelude.Types.Left', V3059} -> {'Prelude.Types.Left', V3059}; {'Prelude.Types.Right', V3060} -> (begin (V3061 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3048, {'TTImp.TTImp.IAs', V3050, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3052, {'TTImp.TTImp.Implicit', V3050, 1}}} | V3060]))), V3061 end(V3057)) end end end end; _ -> begin (V3062 = ('un--getMatch'(V0, V1, V2, V3046, V4))), fun (V3063) -> begin (V3064 = (V3062(V3063))), case V3064 of {'Prelude.Types.Left', V3065} -> {'Prelude.Types.Left', V3065}; {'Prelude.Types.Right', V3066} -> (begin (V3067 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3048, V4} | V3066]))), V3067 end(V3063)) end end end end end; _ -> begin (V3068 = ('un--getMatch'(V0, V1, V2, V3046, V4))), fun (V3069) -> begin (V3070 = (V3068(V3069))), case V3070 of {'Prelude.Types.Left', V3071} -> {'Prelude.Types.Left', V3071}; {'Prelude.Types.Right', V3072} -> (begin (V3073 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3048, V4} | V3072]))), V3073 end(V3069)) end end end end end; _ -> begin (V3074 = ('un--getMatch'(V0, V1, V2, V3046, V4))), fun (V3075) -> begin (V3076 = (V3074(V3075))), case V3076 of {'Prelude.Types.Left', V3077} -> {'Prelude.Types.Left', V3077}; {'Prelude.Types.Right', V3078} -> (begin (V3079 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3048, V4} | V3078]))), V3079 end(V3075)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3046, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3046, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3080, V3081, V3082, V3083, V3084} -> ('un--getMatch'(V0, V1, V2, V3, V3084)); _ -> case V3 of {'TTImp.TTImp.IType', V3085} -> fun (V3086) -> case V4 of {'TTImp.TTImp.IType', V3087} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3086)) end end; {'TTImp.TTImp.IPrimVal', V3088, V3089} -> case V4 of {'TTImp.TTImp.IPrimVal', V3090, V3091} -> fun (V3092) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3089, V3091)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3088, V3092)) end end; _ -> fun (V3093) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3093)) end end; _ -> fun (V3094) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3094)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V3095, V3096, V3097, V3098} -> fun (V3099) -> ('un--matchFail'(V3095, V3099)) end; {'TTImp.TTImp.IAutoApp', V3100, V3101, V3102} -> fun (V3103) -> ('un--matchFail'(V3100, V3103)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3104, V3105, V3106} -> case V4 of {'TTImp.TTImp.IAlternative', V3107, V3108, V3109} -> ('un--matchAny'(V0, V1, V3104, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3106, V3109)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3110, V3111, V3112, V3113, V3114} -> ('un--getMatch'(V0, V1, V2, V3, V3114)); _ -> case V3 of {'TTImp.TTImp.IType', V3115} -> fun (V3116) -> case V4 of {'TTImp.TTImp.IType', V3117} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3116)) end end; {'TTImp.TTImp.IPrimVal', V3118, V3119} -> case V4 of {'TTImp.TTImp.IPrimVal', V3120, V3121} -> fun (V3122) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3119, V3121)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3118, V3122)) end end; _ -> fun (V3123) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3123)) end end; _ -> fun (V3124) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3124)) end end end end; {'TTImp.TTImp.IAs', V3125, V3126, V3127, V3128, V3129} -> case V3128 of {'Core.Name.UN', V3130} -> case V3130 of {'Core.Name.Basic', V3131} -> case V4 of {'TTImp.TTImp.IAs', V3132, V3133, V3134, V3135, V3136} -> case V3135 of {'Core.Name.UN', V3137} -> case V3137 of {'Core.Name.Basic', V3138} -> begin (V3139 = ('un--getMatch'(V0, V1, V2, V3129, V3136))), fun (V3140) -> begin (V3141 = (V3139(V3140))), case V3141 of {'Prelude.Types.Left', V3142} -> {'Prelude.Types.Left', V3142}; {'Prelude.Types.Right', V3143} -> (begin (V3144 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3131, {'TTImp.TTImp.IAs', V3133, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3135, {'TTImp.TTImp.Implicit', V3133, 1}}} | V3143]))), V3144 end(V3140)) end end end end; _ -> begin (V3145 = ('un--getMatch'(V0, V1, V2, V3129, V4))), fun (V3146) -> begin (V3147 = (V3145(V3146))), case V3147 of {'Prelude.Types.Left', V3148} -> {'Prelude.Types.Left', V3148}; {'Prelude.Types.Right', V3149} -> (begin (V3150 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3131, V4} | V3149]))), V3150 end(V3146)) end end end end end; _ -> begin (V3151 = ('un--getMatch'(V0, V1, V2, V3129, V4))), fun (V3152) -> begin (V3153 = (V3151(V3152))), case V3153 of {'Prelude.Types.Left', V3154} -> {'Prelude.Types.Left', V3154}; {'Prelude.Types.Right', V3155} -> (begin (V3156 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3131, V4} | V3155]))), V3156 end(V3152)) end end end end end; _ -> begin (V3157 = ('un--getMatch'(V0, V1, V2, V3129, V4))), fun (V3158) -> begin (V3159 = (V3157(V3158))), case V3159 of {'Prelude.Types.Left', V3160} -> {'Prelude.Types.Left', V3160}; {'Prelude.Types.Right', V3161} -> (begin (V3162 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3131, V4} | V3161]))), V3162 end(V3158)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3129, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3129, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3163, V3164, V3165, V3166, V3167} -> ('un--getMatch'(V0, V1, V2, V3, V3167)); _ -> case V3 of {'TTImp.TTImp.IType', V3168} -> fun (V3169) -> case V4 of {'TTImp.TTImp.IType', V3170} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3169)) end end; {'TTImp.TTImp.IPrimVal', V3171, V3172} -> case V4 of {'TTImp.TTImp.IPrimVal', V3173, V3174} -> fun (V3175) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3172, V3174)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3171, V3175)) end end; _ -> fun (V3176) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3176)) end end; _ -> fun (V3177) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3177)) end end end end end end end; {'TTImp.TTImp.IApp', V3178, V3179, V3180} -> case V4 of {'TTImp.TTImp.IApp', V3181, V3182, V3183} -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V3179, V3182} | [{'Builtin.MkPair', V3180, V3183} | []]])); _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V3184, V3185, V3186, V3187} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3185, V4} | [{'Builtin.MkPair', V3187, V3187} | []]])); {'TTImp.TTImp.IAutoApp', V3188, V3189, V3190} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3189, V4} | [{'Builtin.MkPair', V3190, V3190} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V3191, V3192, V3193, V3194} -> fun (V3195) -> ('un--matchFail'(V3191, V3195)) end; {'TTImp.TTImp.IAutoApp', V3196, V3197, V3198} -> fun (V3199) -> ('un--matchFail'(V3196, V3199)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3200, V3201, V3202} -> case V4 of {'TTImp.TTImp.IAlternative', V3203, V3204, V3205} -> ('un--matchAny'(V0, V1, V3200, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3202, V3205)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3206, V3207, V3208, V3209, V3210} -> ('un--getMatch'(V0, V1, V2, V3, V3210)); _ -> case V3 of {'TTImp.TTImp.IType', V3211} -> fun (V3212) -> case V4 of {'TTImp.TTImp.IType', V3213} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3212)) end end; {'TTImp.TTImp.IPrimVal', V3214, V3215} -> case V4 of {'TTImp.TTImp.IPrimVal', V3216, V3217} -> fun (V3218) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3215, V3217)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3214, V3218)) end end; _ -> fun (V3219) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3219)) end end; _ -> fun (V3220) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3220)) end end end end; {'TTImp.TTImp.IAs', V3221, V3222, V3223, V3224, V3225} -> case V3224 of {'Core.Name.UN', V3226} -> case V3226 of {'Core.Name.Basic', V3227} -> case V4 of {'TTImp.TTImp.IAs', V3228, V3229, V3230, V3231, V3232} -> case V3231 of {'Core.Name.UN', V3233} -> case V3233 of {'Core.Name.Basic', V3234} -> begin (V3235 = ('un--getMatch'(V0, V1, V2, V3225, V3232))), fun (V3236) -> begin (V3237 = (V3235(V3236))), case V3237 of {'Prelude.Types.Left', V3238} -> {'Prelude.Types.Left', V3238}; {'Prelude.Types.Right', V3239} -> (begin (V3240 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3227, {'TTImp.TTImp.IAs', V3229, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3231, {'TTImp.TTImp.Implicit', V3229, 1}}} | V3239]))), V3240 end(V3236)) end end end end; _ -> begin (V3241 = ('un--getMatch'(V0, V1, V2, V3225, V4))), fun (V3242) -> begin (V3243 = (V3241(V3242))), case V3243 of {'Prelude.Types.Left', V3244} -> {'Prelude.Types.Left', V3244}; {'Prelude.Types.Right', V3245} -> (begin (V3246 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3227, V4} | V3245]))), V3246 end(V3242)) end end end end end; _ -> begin (V3247 = ('un--getMatch'(V0, V1, V2, V3225, V4))), fun (V3248) -> begin (V3249 = (V3247(V3248))), case V3249 of {'Prelude.Types.Left', V3250} -> {'Prelude.Types.Left', V3250}; {'Prelude.Types.Right', V3251} -> (begin (V3252 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3227, V4} | V3251]))), V3252 end(V3248)) end end end end end; _ -> begin (V3253 = ('un--getMatch'(V0, V1, V2, V3225, V4))), fun (V3254) -> begin (V3255 = (V3253(V3254))), case V3255 of {'Prelude.Types.Left', V3256} -> {'Prelude.Types.Left', V3256}; {'Prelude.Types.Right', V3257} -> (begin (V3258 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3227, V4} | V3257]))), V3258 end(V3254)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3225, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3225, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3259, V3260, V3261, V3262, V3263} -> ('un--getMatch'(V0, V1, V2, V3, V3263)); _ -> case V3 of {'TTImp.TTImp.IType', V3264} -> fun (V3265) -> case V4 of {'TTImp.TTImp.IType', V3266} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3265)) end end; {'TTImp.TTImp.IPrimVal', V3267, V3268} -> case V4 of {'TTImp.TTImp.IPrimVal', V3269, V3270} -> fun (V3271) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3268, V3270)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3267, V3271)) end end; _ -> fun (V3272) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3272)) end end; _ -> fun (V3273) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3273)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V3274, V3275, V3276, V3277} -> ('un--getMatch'(V0, V1, 0, V3275, V3275)); {'TTImp.TTImp.IAutoApp', V3278, V3279, V3280} -> ('un--getMatch'(V0, V1, 0, V3279, V3279)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V3281, V3282, V3283, V3284} -> fun (V3285) -> ('un--matchFail'(V3281, V3285)) end; {'TTImp.TTImp.IAutoApp', V3286, V3287, V3288} -> fun (V3289) -> ('un--matchFail'(V3286, V3289)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3290, V3291, V3292} -> case V4 of {'TTImp.TTImp.IAlternative', V3293, V3294, V3295} -> ('un--matchAny'(V0, V1, V3290, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3292, V3295)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3296, V3297, V3298, V3299, V3300} -> ('un--getMatch'(V0, V1, V2, V3, V3300)); _ -> case V3 of {'TTImp.TTImp.IType', V3301} -> fun (V3302) -> case V4 of {'TTImp.TTImp.IType', V3303} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3302)) end end; {'TTImp.TTImp.IPrimVal', V3304, V3305} -> case V4 of {'TTImp.TTImp.IPrimVal', V3306, V3307} -> fun (V3308) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3305, V3307)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3304, V3308)) end end; _ -> fun (V3309) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3309)) end end; _ -> fun (V3310) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3310)) end end end end; {'TTImp.TTImp.IAs', V3311, V3312, V3313, V3314, V3315} -> case V3314 of {'Core.Name.UN', V3316} -> case V3316 of {'Core.Name.Basic', V3317} -> case V4 of {'TTImp.TTImp.IAs', V3318, V3319, V3320, V3321, V3322} -> case V3321 of {'Core.Name.UN', V3323} -> case V3323 of {'Core.Name.Basic', V3324} -> begin (V3325 = ('un--getMatch'(V0, V1, V2, V3315, V3322))), fun (V3326) -> begin (V3327 = (V3325(V3326))), case V3327 of {'Prelude.Types.Left', V3328} -> {'Prelude.Types.Left', V3328}; {'Prelude.Types.Right', V3329} -> (begin (V3330 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3317, {'TTImp.TTImp.IAs', V3319, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3321, {'TTImp.TTImp.Implicit', V3319, 1}}} | V3329]))), V3330 end(V3326)) end end end end; _ -> begin (V3331 = ('un--getMatch'(V0, V1, V2, V3315, V4))), fun (V3332) -> begin (V3333 = (V3331(V3332))), case V3333 of {'Prelude.Types.Left', V3334} -> {'Prelude.Types.Left', V3334}; {'Prelude.Types.Right', V3335} -> (begin (V3336 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3317, V4} | V3335]))), V3336 end(V3332)) end end end end end; _ -> begin (V3337 = ('un--getMatch'(V0, V1, V2, V3315, V4))), fun (V3338) -> begin (V3339 = (V3337(V3338))), case V3339 of {'Prelude.Types.Left', V3340} -> {'Prelude.Types.Left', V3340}; {'Prelude.Types.Right', V3341} -> (begin (V3342 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3317, V4} | V3341]))), V3342 end(V3338)) end end end end end; _ -> begin (V3343 = ('un--getMatch'(V0, V1, V2, V3315, V4))), fun (V3344) -> begin (V3345 = (V3343(V3344))), case V3345 of {'Prelude.Types.Left', V3346} -> {'Prelude.Types.Left', V3346}; {'Prelude.Types.Right', V3347} -> (begin (V3348 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3317, V4} | V3347]))), V3348 end(V3344)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3315, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3315, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3349, V3350, V3351, V3352, V3353} -> ('un--getMatch'(V0, V1, V2, V3, V3353)); _ -> case V3 of {'TTImp.TTImp.IType', V3354} -> fun (V3355) -> case V4 of {'TTImp.TTImp.IType', V3356} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3355)) end end; {'TTImp.TTImp.IPrimVal', V3357, V3358} -> case V4 of {'TTImp.TTImp.IPrimVal', V3359, V3360} -> fun (V3361) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3358, V3360)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3357, V3361)) end end; _ -> fun (V3362) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3362)) end end; _ -> fun (V3363) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3363)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V3364, V3365, V3366, V3367} -> fun (V3368) -> ('un--matchFail'(V3364, V3368)) end; {'TTImp.TTImp.IAutoApp', V3369, V3370, V3371} -> fun (V3372) -> ('un--matchFail'(V3369, V3372)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3373, V3374, V3375} -> case V4 of {'TTImp.TTImp.IAlternative', V3376, V3377, V3378} -> ('un--matchAny'(V0, V1, V3373, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3375, V3378)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3379, V3380, V3381, V3382, V3383} -> ('un--getMatch'(V0, V1, V2, V3, V3383)); _ -> case V3 of {'TTImp.TTImp.IType', V3384} -> fun (V3385) -> case V4 of {'TTImp.TTImp.IType', V3386} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3385)) end end; {'TTImp.TTImp.IPrimVal', V3387, V3388} -> case V4 of {'TTImp.TTImp.IPrimVal', V3389, V3390} -> fun (V3391) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3388, V3390)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3387, V3391)) end end; _ -> fun (V3392) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3392)) end end; _ -> fun (V3393) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3393)) end end end end; {'TTImp.TTImp.IAs', V3394, V3395, V3396, V3397, V3398} -> case V3397 of {'Core.Name.UN', V3399} -> case V3399 of {'Core.Name.Basic', V3400} -> case V4 of {'TTImp.TTImp.IAs', V3401, V3402, V3403, V3404, V3405} -> case V3404 of {'Core.Name.UN', V3406} -> case V3406 of {'Core.Name.Basic', V3407} -> begin (V3408 = ('un--getMatch'(V0, V1, V2, V3398, V3405))), fun (V3409) -> begin (V3410 = (V3408(V3409))), case V3410 of {'Prelude.Types.Left', V3411} -> {'Prelude.Types.Left', V3411}; {'Prelude.Types.Right', V3412} -> (begin (V3413 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3400, {'TTImp.TTImp.IAs', V3402, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3404, {'TTImp.TTImp.Implicit', V3402, 1}}} | V3412]))), V3413 end(V3409)) end end end end; _ -> begin (V3414 = ('un--getMatch'(V0, V1, V2, V3398, V4))), fun (V3415) -> begin (V3416 = (V3414(V3415))), case V3416 of {'Prelude.Types.Left', V3417} -> {'Prelude.Types.Left', V3417}; {'Prelude.Types.Right', V3418} -> (begin (V3419 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3400, V4} | V3418]))), V3419 end(V3415)) end end end end end; _ -> begin (V3420 = ('un--getMatch'(V0, V1, V2, V3398, V4))), fun (V3421) -> begin (V3422 = (V3420(V3421))), case V3422 of {'Prelude.Types.Left', V3423} -> {'Prelude.Types.Left', V3423}; {'Prelude.Types.Right', V3424} -> (begin (V3425 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3400, V4} | V3424]))), V3425 end(V3421)) end end end end end; _ -> begin (V3426 = ('un--getMatch'(V0, V1, V2, V3398, V4))), fun (V3427) -> begin (V3428 = (V3426(V3427))), case V3428 of {'Prelude.Types.Left', V3429} -> {'Prelude.Types.Left', V3429}; {'Prelude.Types.Right', V3430} -> (begin (V3431 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3400, V4} | V3430]))), V3431 end(V3427)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3398, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3398, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3432, V3433, V3434, V3435, V3436} -> ('un--getMatch'(V0, V1, V2, V3, V3436)); _ -> case V3 of {'TTImp.TTImp.IType', V3437} -> fun (V3438) -> case V4 of {'TTImp.TTImp.IType', V3439} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3438)) end end; {'TTImp.TTImp.IPrimVal', V3440, V3441} -> case V4 of {'TTImp.TTImp.IPrimVal', V3442, V3443} -> fun (V3444) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3441, V3443)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3440, V3444)) end end; _ -> fun (V3445) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3445)) end end; _ -> fun (V3446) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3446)) end end end end end end end; {'TTImp.TTImp.IAutoApp', V3447, V3448, V3449} -> case V4 of {'TTImp.TTImp.IAutoApp', V3450, V3451, V3452} -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V3448, V3451} | [{'Builtin.MkPair', V3449, V3452} | []]])); _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V3453, V3454, V3455, V3456} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3454, V4} | [{'Builtin.MkPair', V3456, V3456} | []]])); {'TTImp.TTImp.IAutoApp', V3457, V3458, V3459} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3458, V4} | [{'Builtin.MkPair', V3459, V3459} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V3460, V3461, V3462, V3463} -> fun (V3464) -> ('un--matchFail'(V3460, V3464)) end; {'TTImp.TTImp.IAutoApp', V3465, V3466, V3467} -> fun (V3468) -> ('un--matchFail'(V3465, V3468)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3469, V3470, V3471} -> case V4 of {'TTImp.TTImp.IAlternative', V3472, V3473, V3474} -> ('un--matchAny'(V0, V1, V3469, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3471, V3474)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3475, V3476, V3477, V3478, V3479} -> ('un--getMatch'(V0, V1, V2, V3, V3479)); _ -> case V3 of {'TTImp.TTImp.IType', V3480} -> fun (V3481) -> case V4 of {'TTImp.TTImp.IType', V3482} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3481)) end end; {'TTImp.TTImp.IPrimVal', V3483, V3484} -> case V4 of {'TTImp.TTImp.IPrimVal', V3485, V3486} -> fun (V3487) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3484, V3486)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3483, V3487)) end end; _ -> fun (V3488) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3488)) end end; _ -> fun (V3489) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3489)) end end end end; {'TTImp.TTImp.IAs', V3490, V3491, V3492, V3493, V3494} -> case V3493 of {'Core.Name.UN', V3495} -> case V3495 of {'Core.Name.Basic', V3496} -> case V4 of {'TTImp.TTImp.IAs', V3497, V3498, V3499, V3500, V3501} -> case V3500 of {'Core.Name.UN', V3502} -> case V3502 of {'Core.Name.Basic', V3503} -> begin (V3504 = ('un--getMatch'(V0, V1, V2, V3494, V3501))), fun (V3505) -> begin (V3506 = (V3504(V3505))), case V3506 of {'Prelude.Types.Left', V3507} -> {'Prelude.Types.Left', V3507}; {'Prelude.Types.Right', V3508} -> (begin (V3509 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3496, {'TTImp.TTImp.IAs', V3498, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3500, {'TTImp.TTImp.Implicit', V3498, 1}}} | V3508]))), V3509 end(V3505)) end end end end; _ -> begin (V3510 = ('un--getMatch'(V0, V1, V2, V3494, V4))), fun (V3511) -> begin (V3512 = (V3510(V3511))), case V3512 of {'Prelude.Types.Left', V3513} -> {'Prelude.Types.Left', V3513}; {'Prelude.Types.Right', V3514} -> (begin (V3515 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3496, V4} | V3514]))), V3515 end(V3511)) end end end end end; _ -> begin (V3516 = ('un--getMatch'(V0, V1, V2, V3494, V4))), fun (V3517) -> begin (V3518 = (V3516(V3517))), case V3518 of {'Prelude.Types.Left', V3519} -> {'Prelude.Types.Left', V3519}; {'Prelude.Types.Right', V3520} -> (begin (V3521 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3496, V4} | V3520]))), V3521 end(V3517)) end end end end end; _ -> begin (V3522 = ('un--getMatch'(V0, V1, V2, V3494, V4))), fun (V3523) -> begin (V3524 = (V3522(V3523))), case V3524 of {'Prelude.Types.Left', V3525} -> {'Prelude.Types.Left', V3525}; {'Prelude.Types.Right', V3526} -> (begin (V3527 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3496, V4} | V3526]))), V3527 end(V3523)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3494, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3494, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3528, V3529, V3530, V3531, V3532} -> ('un--getMatch'(V0, V1, V2, V3, V3532)); _ -> case V3 of {'TTImp.TTImp.IType', V3533} -> fun (V3534) -> case V4 of {'TTImp.TTImp.IType', V3535} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3534)) end end; {'TTImp.TTImp.IPrimVal', V3536, V3537} -> case V4 of {'TTImp.TTImp.IPrimVal', V3538, V3539} -> fun (V3540) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3537, V3539)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3536, V3540)) end end; _ -> fun (V3541) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3541)) end end; _ -> fun (V3542) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3542)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V3543, V3544, V3545, V3546} -> ('un--getMatch'(V0, V1, 0, V3544, V3544)); {'TTImp.TTImp.IAutoApp', V3547, V3548, V3549} -> ('un--getMatch'(V0, V1, 0, V3548, V3548)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V3550, V3551, V3552, V3553} -> fun (V3554) -> ('un--matchFail'(V3550, V3554)) end; {'TTImp.TTImp.IAutoApp', V3555, V3556, V3557} -> fun (V3558) -> ('un--matchFail'(V3555, V3558)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3559, V3560, V3561} -> case V4 of {'TTImp.TTImp.IAlternative', V3562, V3563, V3564} -> ('un--matchAny'(V0, V1, V3559, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3561, V3564)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3565, V3566, V3567, V3568, V3569} -> ('un--getMatch'(V0, V1, V2, V3, V3569)); _ -> case V3 of {'TTImp.TTImp.IType', V3570} -> fun (V3571) -> case V4 of {'TTImp.TTImp.IType', V3572} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3571)) end end; {'TTImp.TTImp.IPrimVal', V3573, V3574} -> case V4 of {'TTImp.TTImp.IPrimVal', V3575, V3576} -> fun (V3577) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3574, V3576)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3573, V3577)) end end; _ -> fun (V3578) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3578)) end end; _ -> fun (V3579) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3579)) end end end end; {'TTImp.TTImp.IAs', V3580, V3581, V3582, V3583, V3584} -> case V3583 of {'Core.Name.UN', V3585} -> case V3585 of {'Core.Name.Basic', V3586} -> case V4 of {'TTImp.TTImp.IAs', V3587, V3588, V3589, V3590, V3591} -> case V3590 of {'Core.Name.UN', V3592} -> case V3592 of {'Core.Name.Basic', V3593} -> begin (V3594 = ('un--getMatch'(V0, V1, V2, V3584, V3591))), fun (V3595) -> begin (V3596 = (V3594(V3595))), case V3596 of {'Prelude.Types.Left', V3597} -> {'Prelude.Types.Left', V3597}; {'Prelude.Types.Right', V3598} -> (begin (V3599 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3586, {'TTImp.TTImp.IAs', V3588, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3590, {'TTImp.TTImp.Implicit', V3588, 1}}} | V3598]))), V3599 end(V3595)) end end end end; _ -> begin (V3600 = ('un--getMatch'(V0, V1, V2, V3584, V4))), fun (V3601) -> begin (V3602 = (V3600(V3601))), case V3602 of {'Prelude.Types.Left', V3603} -> {'Prelude.Types.Left', V3603}; {'Prelude.Types.Right', V3604} -> (begin (V3605 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3586, V4} | V3604]))), V3605 end(V3601)) end end end end end; _ -> begin (V3606 = ('un--getMatch'(V0, V1, V2, V3584, V4))), fun (V3607) -> begin (V3608 = (V3606(V3607))), case V3608 of {'Prelude.Types.Left', V3609} -> {'Prelude.Types.Left', V3609}; {'Prelude.Types.Right', V3610} -> (begin (V3611 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3586, V4} | V3610]))), V3611 end(V3607)) end end end end end; _ -> begin (V3612 = ('un--getMatch'(V0, V1, V2, V3584, V4))), fun (V3613) -> begin (V3614 = (V3612(V3613))), case V3614 of {'Prelude.Types.Left', V3615} -> {'Prelude.Types.Left', V3615}; {'Prelude.Types.Right', V3616} -> (begin (V3617 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3586, V4} | V3616]))), V3617 end(V3613)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3584, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3584, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3618, V3619, V3620, V3621, V3622} -> ('un--getMatch'(V0, V1, V2, V3, V3622)); _ -> case V3 of {'TTImp.TTImp.IType', V3623} -> fun (V3624) -> case V4 of {'TTImp.TTImp.IType', V3625} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3624)) end end; {'TTImp.TTImp.IPrimVal', V3626, V3627} -> case V4 of {'TTImp.TTImp.IPrimVal', V3628, V3629} -> fun (V3630) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3627, V3629)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3626, V3630)) end end; _ -> fun (V3631) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3631)) end end; _ -> fun (V3632) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3632)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V3633, V3634, V3635, V3636} -> fun (V3637) -> ('un--matchFail'(V3633, V3637)) end; {'TTImp.TTImp.IAutoApp', V3638, V3639, V3640} -> fun (V3641) -> ('un--matchFail'(V3638, V3641)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3642, V3643, V3644} -> case V4 of {'TTImp.TTImp.IAlternative', V3645, V3646, V3647} -> ('un--matchAny'(V0, V1, V3642, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3644, V3647)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3648, V3649, V3650, V3651, V3652} -> ('un--getMatch'(V0, V1, V2, V3, V3652)); _ -> case V3 of {'TTImp.TTImp.IType', V3653} -> fun (V3654) -> case V4 of {'TTImp.TTImp.IType', V3655} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3654)) end end; {'TTImp.TTImp.IPrimVal', V3656, V3657} -> case V4 of {'TTImp.TTImp.IPrimVal', V3658, V3659} -> fun (V3660) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3657, V3659)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3656, V3660)) end end; _ -> fun (V3661) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3661)) end end; _ -> fun (V3662) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3662)) end end end end; {'TTImp.TTImp.IAs', V3663, V3664, V3665, V3666, V3667} -> case V3666 of {'Core.Name.UN', V3668} -> case V3668 of {'Core.Name.Basic', V3669} -> case V4 of {'TTImp.TTImp.IAs', V3670, V3671, V3672, V3673, V3674} -> case V3673 of {'Core.Name.UN', V3675} -> case V3675 of {'Core.Name.Basic', V3676} -> begin (V3677 = ('un--getMatch'(V0, V1, V2, V3667, V3674))), fun (V3678) -> begin (V3679 = (V3677(V3678))), case V3679 of {'Prelude.Types.Left', V3680} -> {'Prelude.Types.Left', V3680}; {'Prelude.Types.Right', V3681} -> (begin (V3682 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3669, {'TTImp.TTImp.IAs', V3671, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3673, {'TTImp.TTImp.Implicit', V3671, 1}}} | V3681]))), V3682 end(V3678)) end end end end; _ -> begin (V3683 = ('un--getMatch'(V0, V1, V2, V3667, V4))), fun (V3684) -> begin (V3685 = (V3683(V3684))), case V3685 of {'Prelude.Types.Left', V3686} -> {'Prelude.Types.Left', V3686}; {'Prelude.Types.Right', V3687} -> (begin (V3688 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3669, V4} | V3687]))), V3688 end(V3684)) end end end end end; _ -> begin (V3689 = ('un--getMatch'(V0, V1, V2, V3667, V4))), fun (V3690) -> begin (V3691 = (V3689(V3690))), case V3691 of {'Prelude.Types.Left', V3692} -> {'Prelude.Types.Left', V3692}; {'Prelude.Types.Right', V3693} -> (begin (V3694 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3669, V4} | V3693]))), V3694 end(V3690)) end end end end end; _ -> begin (V3695 = ('un--getMatch'(V0, V1, V2, V3667, V4))), fun (V3696) -> begin (V3697 = (V3695(V3696))), case V3697 of {'Prelude.Types.Left', V3698} -> {'Prelude.Types.Left', V3698}; {'Prelude.Types.Right', V3699} -> (begin (V3700 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3669, V4} | V3699]))), V3700 end(V3696)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3667, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3667, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3701, V3702, V3703, V3704, V3705} -> ('un--getMatch'(V0, V1, V2, V3, V3705)); _ -> case V3 of {'TTImp.TTImp.IType', V3706} -> fun (V3707) -> case V4 of {'TTImp.TTImp.IType', V3708} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3707)) end end; {'TTImp.TTImp.IPrimVal', V3709, V3710} -> case V4 of {'TTImp.TTImp.IPrimVal', V3711, V3712} -> fun (V3713) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3710, V3712)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3709, V3713)) end end; _ -> fun (V3714) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3714)) end end; _ -> fun (V3715) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3715)) end end end end end end end; {'TTImp.TTImp.INamedApp', V3716, V3717, V3718, V3719} -> case V4 of {'TTImp.TTImp.INamedApp', V3720, V3721, V3722, V3723} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3718, V3722)) of 1 -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V3717, V3721} | [{'Builtin.MkPair', V3719, V3723} | []]])); 0 -> fun (V3724) -> ('un--matchFail'(V3720, V3724)) end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V3725, V3726, V3727, V3728} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3726, V4} | [{'Builtin.MkPair', V3728, V3728} | []]])); {'TTImp.TTImp.IAutoApp', V3729, V3730, V3731} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3730, V4} | [{'Builtin.MkPair', V3731, V3731} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V3732, V3733, V3734, V3735} -> fun (V3736) -> ('un--matchFail'(V3732, V3736)) end; {'TTImp.TTImp.IAutoApp', V3737, V3738, V3739} -> fun (V3740) -> ('un--matchFail'(V3737, V3740)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3741, V3742, V3743} -> case V4 of {'TTImp.TTImp.IAlternative', V3744, V3745, V3746} -> ('un--matchAny'(V0, V1, V3741, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3743, V3746)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3747, V3748, V3749, V3750, V3751} -> ('un--getMatch'(V0, V1, V2, V3, V3751)); _ -> case V3 of {'TTImp.TTImp.IType', V3752} -> fun (V3753) -> case V4 of {'TTImp.TTImp.IType', V3754} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3753)) end end; {'TTImp.TTImp.IPrimVal', V3755, V3756} -> case V4 of {'TTImp.TTImp.IPrimVal', V3757, V3758} -> fun (V3759) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3756, V3758)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3755, V3759)) end end; _ -> fun (V3760) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3760)) end end; _ -> fun (V3761) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3761)) end end end end; {'TTImp.TTImp.IAs', V3762, V3763, V3764, V3765, V3766} -> case V3765 of {'Core.Name.UN', V3767} -> case V3767 of {'Core.Name.Basic', V3768} -> case V4 of {'TTImp.TTImp.IAs', V3769, V3770, V3771, V3772, V3773} -> case V3772 of {'Core.Name.UN', V3774} -> case V3774 of {'Core.Name.Basic', V3775} -> begin (V3776 = ('un--getMatch'(V0, V1, V2, V3766, V3773))), fun (V3777) -> begin (V3778 = (V3776(V3777))), case V3778 of {'Prelude.Types.Left', V3779} -> {'Prelude.Types.Left', V3779}; {'Prelude.Types.Right', V3780} -> (begin (V3781 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3768, {'TTImp.TTImp.IAs', V3770, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3772, {'TTImp.TTImp.Implicit', V3770, 1}}} | V3780]))), V3781 end(V3777)) end end end end; _ -> begin (V3782 = ('un--getMatch'(V0, V1, V2, V3766, V4))), fun (V3783) -> begin (V3784 = (V3782(V3783))), case V3784 of {'Prelude.Types.Left', V3785} -> {'Prelude.Types.Left', V3785}; {'Prelude.Types.Right', V3786} -> (begin (V3787 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3768, V4} | V3786]))), V3787 end(V3783)) end end end end end; _ -> begin (V3788 = ('un--getMatch'(V0, V1, V2, V3766, V4))), fun (V3789) -> begin (V3790 = (V3788(V3789))), case V3790 of {'Prelude.Types.Left', V3791} -> {'Prelude.Types.Left', V3791}; {'Prelude.Types.Right', V3792} -> (begin (V3793 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3768, V4} | V3792]))), V3793 end(V3789)) end end end end end; _ -> begin (V3794 = ('un--getMatch'(V0, V1, V2, V3766, V4))), fun (V3795) -> begin (V3796 = (V3794(V3795))), case V3796 of {'Prelude.Types.Left', V3797} -> {'Prelude.Types.Left', V3797}; {'Prelude.Types.Right', V3798} -> (begin (V3799 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3768, V4} | V3798]))), V3799 end(V3795)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3766, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3766, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3800, V3801, V3802, V3803, V3804} -> ('un--getMatch'(V0, V1, V2, V3, V3804)); _ -> case V3 of {'TTImp.TTImp.IType', V3805} -> fun (V3806) -> case V4 of {'TTImp.TTImp.IType', V3807} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3806)) end end; {'TTImp.TTImp.IPrimVal', V3808, V3809} -> case V4 of {'TTImp.TTImp.IPrimVal', V3810, V3811} -> fun (V3812) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3809, V3811)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3808, V3812)) end end; _ -> fun (V3813) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3813)) end end; _ -> fun (V3814) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3814)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V3815, V3816, V3817, V3818} -> ('un--getMatch'(V0, V1, 0, V3816, V3816)); {'TTImp.TTImp.IAutoApp', V3819, V3820, V3821} -> ('un--getMatch'(V0, V1, 0, V3820, V3820)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V3822, V3823, V3824, V3825} -> fun (V3826) -> ('un--matchFail'(V3822, V3826)) end; {'TTImp.TTImp.IAutoApp', V3827, V3828, V3829} -> fun (V3830) -> ('un--matchFail'(V3827, V3830)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3831, V3832, V3833} -> case V4 of {'TTImp.TTImp.IAlternative', V3834, V3835, V3836} -> ('un--matchAny'(V0, V1, V3831, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3833, V3836)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3837, V3838, V3839, V3840, V3841} -> ('un--getMatch'(V0, V1, V2, V3, V3841)); _ -> case V3 of {'TTImp.TTImp.IType', V3842} -> fun (V3843) -> case V4 of {'TTImp.TTImp.IType', V3844} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3843)) end end; {'TTImp.TTImp.IPrimVal', V3845, V3846} -> case V4 of {'TTImp.TTImp.IPrimVal', V3847, V3848} -> fun (V3849) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3846, V3848)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3845, V3849)) end end; _ -> fun (V3850) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3850)) end end; _ -> fun (V3851) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3851)) end end end end; {'TTImp.TTImp.IAs', V3852, V3853, V3854, V3855, V3856} -> case V3855 of {'Core.Name.UN', V3857} -> case V3857 of {'Core.Name.Basic', V3858} -> case V4 of {'TTImp.TTImp.IAs', V3859, V3860, V3861, V3862, V3863} -> case V3862 of {'Core.Name.UN', V3864} -> case V3864 of {'Core.Name.Basic', V3865} -> begin (V3866 = ('un--getMatch'(V0, V1, V2, V3856, V3863))), fun (V3867) -> begin (V3868 = (V3866(V3867))), case V3868 of {'Prelude.Types.Left', V3869} -> {'Prelude.Types.Left', V3869}; {'Prelude.Types.Right', V3870} -> (begin (V3871 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3858, {'TTImp.TTImp.IAs', V3860, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3862, {'TTImp.TTImp.Implicit', V3860, 1}}} | V3870]))), V3871 end(V3867)) end end end end; _ -> begin (V3872 = ('un--getMatch'(V0, V1, V2, V3856, V4))), fun (V3873) -> begin (V3874 = (V3872(V3873))), case V3874 of {'Prelude.Types.Left', V3875} -> {'Prelude.Types.Left', V3875}; {'Prelude.Types.Right', V3876} -> (begin (V3877 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3858, V4} | V3876]))), V3877 end(V3873)) end end end end end; _ -> begin (V3878 = ('un--getMatch'(V0, V1, V2, V3856, V4))), fun (V3879) -> begin (V3880 = (V3878(V3879))), case V3880 of {'Prelude.Types.Left', V3881} -> {'Prelude.Types.Left', V3881}; {'Prelude.Types.Right', V3882} -> (begin (V3883 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3858, V4} | V3882]))), V3883 end(V3879)) end end end end end; _ -> begin (V3884 = ('un--getMatch'(V0, V1, V2, V3856, V4))), fun (V3885) -> begin (V3886 = (V3884(V3885))), case V3886 of {'Prelude.Types.Left', V3887} -> {'Prelude.Types.Left', V3887}; {'Prelude.Types.Right', V3888} -> (begin (V3889 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3858, V4} | V3888]))), V3889 end(V3885)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3856, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3856, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3890, V3891, V3892, V3893, V3894} -> ('un--getMatch'(V0, V1, V2, V3, V3894)); _ -> case V3 of {'TTImp.TTImp.IType', V3895} -> fun (V3896) -> case V4 of {'TTImp.TTImp.IType', V3897} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3896)) end end; {'TTImp.TTImp.IPrimVal', V3898, V3899} -> case V4 of {'TTImp.TTImp.IPrimVal', V3900, V3901} -> fun (V3902) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3899, V3901)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3898, V3902)) end end; _ -> fun (V3903) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3903)) end end; _ -> fun (V3904) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3904)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V3905, V3906, V3907, V3908} -> fun (V3909) -> ('un--matchFail'(V3905, V3909)) end; {'TTImp.TTImp.IAutoApp', V3910, V3911, V3912} -> fun (V3913) -> ('un--matchFail'(V3910, V3913)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V3914, V3915, V3916} -> case V4 of {'TTImp.TTImp.IAlternative', V3917, V3918, V3919} -> ('un--matchAny'(V0, V1, V3914, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V3916, V3919)))); _ -> case V4 of {'TTImp.TTImp.IAs', V3920, V3921, V3922, V3923, V3924} -> ('un--getMatch'(V0, V1, V2, V3, V3924)); _ -> case V3 of {'TTImp.TTImp.IType', V3925} -> fun (V3926) -> case V4 of {'TTImp.TTImp.IType', V3927} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3926)) end end; {'TTImp.TTImp.IPrimVal', V3928, V3929} -> case V4 of {'TTImp.TTImp.IPrimVal', V3930, V3931} -> fun (V3932) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3929, V3931)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3928, V3932)) end end; _ -> fun (V3933) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3933)) end end; _ -> fun (V3934) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3934)) end end end end; {'TTImp.TTImp.IAs', V3935, V3936, V3937, V3938, V3939} -> case V3938 of {'Core.Name.UN', V3940} -> case V3940 of {'Core.Name.Basic', V3941} -> case V4 of {'TTImp.TTImp.IAs', V3942, V3943, V3944, V3945, V3946} -> case V3945 of {'Core.Name.UN', V3947} -> case V3947 of {'Core.Name.Basic', V3948} -> begin (V3949 = ('un--getMatch'(V0, V1, V2, V3939, V3946))), fun (V3950) -> begin (V3951 = (V3949(V3950))), case V3951 of {'Prelude.Types.Left', V3952} -> {'Prelude.Types.Left', V3952}; {'Prelude.Types.Right', V3953} -> (begin (V3954 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3941, {'TTImp.TTImp.IAs', V3943, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V3945, {'TTImp.TTImp.Implicit', V3943, 1}}} | V3953]))), V3954 end(V3950)) end end end end; _ -> begin (V3955 = ('un--getMatch'(V0, V1, V2, V3939, V4))), fun (V3956) -> begin (V3957 = (V3955(V3956))), case V3957 of {'Prelude.Types.Left', V3958} -> {'Prelude.Types.Left', V3958}; {'Prelude.Types.Right', V3959} -> (begin (V3960 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3941, V4} | V3959]))), V3960 end(V3956)) end end end end end; _ -> begin (V3961 = ('un--getMatch'(V0, V1, V2, V3939, V4))), fun (V3962) -> begin (V3963 = (V3961(V3962))), case V3963 of {'Prelude.Types.Left', V3964} -> {'Prelude.Types.Left', V3964}; {'Prelude.Types.Right', V3965} -> (begin (V3966 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3941, V4} | V3965]))), V3966 end(V3962)) end end end end end; _ -> begin (V3967 = ('un--getMatch'(V0, V1, V2, V3939, V4))), fun (V3968) -> begin (V3969 = (V3967(V3968))), case V3969 of {'Prelude.Types.Left', V3970} -> {'Prelude.Types.Left', V3970}; {'Prelude.Types.Right', V3971} -> (begin (V3972 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V3941, V4} | V3971]))), V3972 end(V3968)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V3939, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V3939, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V3973, V3974, V3975, V3976, V3977} -> ('un--getMatch'(V0, V1, V2, V3, V3977)); _ -> case V3 of {'TTImp.TTImp.IType', V3978} -> fun (V3979) -> case V4 of {'TTImp.TTImp.IType', V3980} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3979)) end end; {'TTImp.TTImp.IPrimVal', V3981, V3982} -> case V4 of {'TTImp.TTImp.IPrimVal', V3983, V3984} -> fun (V3985) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3982, V3984)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V3981, V3985)) end end; _ -> fun (V3986) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3986)) end end; _ -> fun (V3987) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V3987)) end end end end end end end; {'TTImp.TTImp.IWithApp', V3988, V3989, V3990} -> case V4 of {'TTImp.TTImp.IWithApp', V3991, V3992, V3993} -> ('un--matchAll'(V0, V1, V2, [{'Builtin.MkPair', V3989, V3992} | [{'Builtin.MkPair', V3990, V3993} | []]])); _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V3994, V3995, V3996, V3997} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3995, V4} | [{'Builtin.MkPair', V3997, V3997} | []]])); {'TTImp.TTImp.IAutoApp', V3998, V3999, V4000} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V3999, V4} | [{'Builtin.MkPair', V4000, V4000} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V4001, V4002, V4003, V4004} -> fun (V4005) -> ('un--matchFail'(V4001, V4005)) end; {'TTImp.TTImp.IAutoApp', V4006, V4007, V4008} -> fun (V4009) -> ('un--matchFail'(V4006, V4009)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V4010, V4011, V4012} -> case V4 of {'TTImp.TTImp.IAlternative', V4013, V4014, V4015} -> ('un--matchAny'(V0, V1, V4010, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V4012, V4015)))); _ -> case V4 of {'TTImp.TTImp.IAs', V4016, V4017, V4018, V4019, V4020} -> ('un--getMatch'(V0, V1, V2, V3, V4020)); _ -> case V3 of {'TTImp.TTImp.IType', V4021} -> fun (V4022) -> case V4 of {'TTImp.TTImp.IType', V4023} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4022)) end end; {'TTImp.TTImp.IPrimVal', V4024, V4025} -> case V4 of {'TTImp.TTImp.IPrimVal', V4026, V4027} -> fun (V4028) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4025, V4027)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4024, V4028)) end end; _ -> fun (V4029) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4029)) end end; _ -> fun (V4030) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4030)) end end end end; {'TTImp.TTImp.IAs', V4031, V4032, V4033, V4034, V4035} -> case V4034 of {'Core.Name.UN', V4036} -> case V4036 of {'Core.Name.Basic', V4037} -> case V4 of {'TTImp.TTImp.IAs', V4038, V4039, V4040, V4041, V4042} -> case V4041 of {'Core.Name.UN', V4043} -> case V4043 of {'Core.Name.Basic', V4044} -> begin (V4045 = ('un--getMatch'(V0, V1, V2, V4035, V4042))), fun (V4046) -> begin (V4047 = (V4045(V4046))), case V4047 of {'Prelude.Types.Left', V4048} -> {'Prelude.Types.Left', V4048}; {'Prelude.Types.Right', V4049} -> (begin (V4050 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4037, {'TTImp.TTImp.IAs', V4039, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V4041, {'TTImp.TTImp.Implicit', V4039, 1}}} | V4049]))), V4050 end(V4046)) end end end end; _ -> begin (V4051 = ('un--getMatch'(V0, V1, V2, V4035, V4))), fun (V4052) -> begin (V4053 = (V4051(V4052))), case V4053 of {'Prelude.Types.Left', V4054} -> {'Prelude.Types.Left', V4054}; {'Prelude.Types.Right', V4055} -> (begin (V4056 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4037, V4} | V4055]))), V4056 end(V4052)) end end end end end; _ -> begin (V4057 = ('un--getMatch'(V0, V1, V2, V4035, V4))), fun (V4058) -> begin (V4059 = (V4057(V4058))), case V4059 of {'Prelude.Types.Left', V4060} -> {'Prelude.Types.Left', V4060}; {'Prelude.Types.Right', V4061} -> (begin (V4062 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4037, V4} | V4061]))), V4062 end(V4058)) end end end end end; _ -> begin (V4063 = ('un--getMatch'(V0, V1, V2, V4035, V4))), fun (V4064) -> begin (V4065 = (V4063(V4064))), case V4065 of {'Prelude.Types.Left', V4066} -> {'Prelude.Types.Left', V4066}; {'Prelude.Types.Right', V4067} -> (begin (V4068 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4037, V4} | V4067]))), V4068 end(V4064)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V4035, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V4035, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V4069, V4070, V4071, V4072, V4073} -> ('un--getMatch'(V0, V1, V2, V3, V4073)); _ -> case V3 of {'TTImp.TTImp.IType', V4074} -> fun (V4075) -> case V4 of {'TTImp.TTImp.IType', V4076} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4075)) end end; {'TTImp.TTImp.IPrimVal', V4077, V4078} -> case V4 of {'TTImp.TTImp.IPrimVal', V4079, V4080} -> fun (V4081) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4078, V4080)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4077, V4081)) end end; _ -> fun (V4082) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4082)) end end; _ -> fun (V4083) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4083)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V4084, V4085, V4086, V4087} -> ('un--getMatch'(V0, V1, 0, V4085, V4085)); {'TTImp.TTImp.IAutoApp', V4088, V4089, V4090} -> ('un--getMatch'(V0, V1, 0, V4089, V4089)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V4091, V4092, V4093, V4094} -> fun (V4095) -> ('un--matchFail'(V4091, V4095)) end; {'TTImp.TTImp.IAutoApp', V4096, V4097, V4098} -> fun (V4099) -> ('un--matchFail'(V4096, V4099)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V4100, V4101, V4102} -> case V4 of {'TTImp.TTImp.IAlternative', V4103, V4104, V4105} -> ('un--matchAny'(V0, V1, V4100, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V4102, V4105)))); _ -> case V4 of {'TTImp.TTImp.IAs', V4106, V4107, V4108, V4109, V4110} -> ('un--getMatch'(V0, V1, V2, V3, V4110)); _ -> case V3 of {'TTImp.TTImp.IType', V4111} -> fun (V4112) -> case V4 of {'TTImp.TTImp.IType', V4113} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4112)) end end; {'TTImp.TTImp.IPrimVal', V4114, V4115} -> case V4 of {'TTImp.TTImp.IPrimVal', V4116, V4117} -> fun (V4118) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4115, V4117)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4114, V4118)) end end; _ -> fun (V4119) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4119)) end end; _ -> fun (V4120) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4120)) end end end end; {'TTImp.TTImp.IAs', V4121, V4122, V4123, V4124, V4125} -> case V4124 of {'Core.Name.UN', V4126} -> case V4126 of {'Core.Name.Basic', V4127} -> case V4 of {'TTImp.TTImp.IAs', V4128, V4129, V4130, V4131, V4132} -> case V4131 of {'Core.Name.UN', V4133} -> case V4133 of {'Core.Name.Basic', V4134} -> begin (V4135 = ('un--getMatch'(V0, V1, V2, V4125, V4132))), fun (V4136) -> begin (V4137 = (V4135(V4136))), case V4137 of {'Prelude.Types.Left', V4138} -> {'Prelude.Types.Left', V4138}; {'Prelude.Types.Right', V4139} -> (begin (V4140 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4127, {'TTImp.TTImp.IAs', V4129, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V4131, {'TTImp.TTImp.Implicit', V4129, 1}}} | V4139]))), V4140 end(V4136)) end end end end; _ -> begin (V4141 = ('un--getMatch'(V0, V1, V2, V4125, V4))), fun (V4142) -> begin (V4143 = (V4141(V4142))), case V4143 of {'Prelude.Types.Left', V4144} -> {'Prelude.Types.Left', V4144}; {'Prelude.Types.Right', V4145} -> (begin (V4146 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4127, V4} | V4145]))), V4146 end(V4142)) end end end end end; _ -> begin (V4147 = ('un--getMatch'(V0, V1, V2, V4125, V4))), fun (V4148) -> begin (V4149 = (V4147(V4148))), case V4149 of {'Prelude.Types.Left', V4150} -> {'Prelude.Types.Left', V4150}; {'Prelude.Types.Right', V4151} -> (begin (V4152 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4127, V4} | V4151]))), V4152 end(V4148)) end end end end end; _ -> begin (V4153 = ('un--getMatch'(V0, V1, V2, V4125, V4))), fun (V4154) -> begin (V4155 = (V4153(V4154))), case V4155 of {'Prelude.Types.Left', V4156} -> {'Prelude.Types.Left', V4156}; {'Prelude.Types.Right', V4157} -> (begin (V4158 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4127, V4} | V4157]))), V4158 end(V4154)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V4125, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V4125, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V4159, V4160, V4161, V4162, V4163} -> ('un--getMatch'(V0, V1, V2, V3, V4163)); _ -> case V3 of {'TTImp.TTImp.IType', V4164} -> fun (V4165) -> case V4 of {'TTImp.TTImp.IType', V4166} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4165)) end end; {'TTImp.TTImp.IPrimVal', V4167, V4168} -> case V4 of {'TTImp.TTImp.IPrimVal', V4169, V4170} -> fun (V4171) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4168, V4170)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4167, V4171)) end end; _ -> fun (V4172) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4172)) end end; _ -> fun (V4173) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4173)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V4174, V4175, V4176, V4177} -> fun (V4178) -> ('un--matchFail'(V4174, V4178)) end; {'TTImp.TTImp.IAutoApp', V4179, V4180, V4181} -> fun (V4182) -> ('un--matchFail'(V4179, V4182)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V4183, V4184, V4185} -> case V4 of {'TTImp.TTImp.IAlternative', V4186, V4187, V4188} -> ('un--matchAny'(V0, V1, V4183, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V4185, V4188)))); _ -> case V4 of {'TTImp.TTImp.IAs', V4189, V4190, V4191, V4192, V4193} -> ('un--getMatch'(V0, V1, V2, V3, V4193)); _ -> case V3 of {'TTImp.TTImp.IType', V4194} -> fun (V4195) -> case V4 of {'TTImp.TTImp.IType', V4196} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4195)) end end; {'TTImp.TTImp.IPrimVal', V4197, V4198} -> case V4 of {'TTImp.TTImp.IPrimVal', V4199, V4200} -> fun (V4201) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4198, V4200)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4197, V4201)) end end; _ -> fun (V4202) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4202)) end end; _ -> fun (V4203) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4203)) end end end end; {'TTImp.TTImp.IAs', V4204, V4205, V4206, V4207, V4208} -> case V4207 of {'Core.Name.UN', V4209} -> case V4209 of {'Core.Name.Basic', V4210} -> case V4 of {'TTImp.TTImp.IAs', V4211, V4212, V4213, V4214, V4215} -> case V4214 of {'Core.Name.UN', V4216} -> case V4216 of {'Core.Name.Basic', V4217} -> begin (V4218 = ('un--getMatch'(V0, V1, V2, V4208, V4215))), fun (V4219) -> begin (V4220 = (V4218(V4219))), case V4220 of {'Prelude.Types.Left', V4221} -> {'Prelude.Types.Left', V4221}; {'Prelude.Types.Right', V4222} -> (begin (V4223 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4210, {'TTImp.TTImp.IAs', V4212, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V4214, {'TTImp.TTImp.Implicit', V4212, 1}}} | V4222]))), V4223 end(V4219)) end end end end; _ -> begin (V4224 = ('un--getMatch'(V0, V1, V2, V4208, V4))), fun (V4225) -> begin (V4226 = (V4224(V4225))), case V4226 of {'Prelude.Types.Left', V4227} -> {'Prelude.Types.Left', V4227}; {'Prelude.Types.Right', V4228} -> (begin (V4229 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4210, V4} | V4228]))), V4229 end(V4225)) end end end end end; _ -> begin (V4230 = ('un--getMatch'(V0, V1, V2, V4208, V4))), fun (V4231) -> begin (V4232 = (V4230(V4231))), case V4232 of {'Prelude.Types.Left', V4233} -> {'Prelude.Types.Left', V4233}; {'Prelude.Types.Right', V4234} -> (begin (V4235 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4210, V4} | V4234]))), V4235 end(V4231)) end end end end end; _ -> begin (V4236 = ('un--getMatch'(V0, V1, V2, V4208, V4))), fun (V4237) -> begin (V4238 = (V4236(V4237))), case V4238 of {'Prelude.Types.Left', V4239} -> {'Prelude.Types.Left', V4239}; {'Prelude.Types.Right', V4240} -> (begin (V4241 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4210, V4} | V4240]))), V4241 end(V4237)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V4208, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V4208, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V4242, V4243, V4244, V4245, V4246} -> ('un--getMatch'(V0, V1, V2, V3, V4246)); _ -> case V3 of {'TTImp.TTImp.IType', V4247} -> fun (V4248) -> case V4 of {'TTImp.TTImp.IType', V4249} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4248)) end end; {'TTImp.TTImp.IPrimVal', V4250, V4251} -> case V4 of {'TTImp.TTImp.IPrimVal', V4252, V4253} -> fun (V4254) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4251, V4253)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4250, V4254)) end end; _ -> fun (V4255) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4255)) end end; _ -> fun (V4256) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4256)) end end end end end end end; _ -> case V2 of 1 -> case V3 of {'TTImp.TTImp.INamedApp', V4257, V4258, V4259, V4260} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V4258, V4} | [{'Builtin.MkPair', V4260, V4260} | []]])); {'TTImp.TTImp.IAutoApp', V4261, V4262, V4263} -> ('un--matchAll'(V0, V1, 1, [{'Builtin.MkPair', V4262, V4} | [{'Builtin.MkPair', V4263, V4263} | []]])); _ -> case V4 of {'TTImp.TTImp.INamedApp', V4264, V4265, V4266, V4267} -> fun (V4268) -> ('un--matchFail'(V4264, V4268)) end; {'TTImp.TTImp.IAutoApp', V4269, V4270, V4271} -> fun (V4272) -> ('un--matchFail'(V4269, V4272)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V4273, V4274, V4275} -> case V4 of {'TTImp.TTImp.IAlternative', V4276, V4277, V4278} -> ('un--matchAny'(V0, V1, V4273, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V4275, V4278)))); _ -> case V4 of {'TTImp.TTImp.IAs', V4279, V4280, V4281, V4282, V4283} -> ('un--getMatch'(V0, V1, V2, V3, V4283)); _ -> case V3 of {'TTImp.TTImp.IType', V4284} -> fun (V4285) -> case V4 of {'TTImp.TTImp.IType', V4286} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4285)) end end; {'TTImp.TTImp.IPrimVal', V4287, V4288} -> case V4 of {'TTImp.TTImp.IPrimVal', V4289, V4290} -> fun (V4291) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4288, V4290)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4287, V4291)) end end; _ -> fun (V4292) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4292)) end end; _ -> fun (V4293) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4293)) end end end end; {'TTImp.TTImp.IAs', V4294, V4295, V4296, V4297, V4298} -> case V4297 of {'Core.Name.UN', V4299} -> case V4299 of {'Core.Name.Basic', V4300} -> case V4 of {'TTImp.TTImp.IAs', V4301, V4302, V4303, V4304, V4305} -> case V4304 of {'Core.Name.UN', V4306} -> case V4306 of {'Core.Name.Basic', V4307} -> begin (V4308 = ('un--getMatch'(V0, V1, V2, V4298, V4305))), fun (V4309) -> begin (V4310 = (V4308(V4309))), case V4310 of {'Prelude.Types.Left', V4311} -> {'Prelude.Types.Left', V4311}; {'Prelude.Types.Right', V4312} -> (begin (V4313 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4300, {'TTImp.TTImp.IAs', V4302, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V4304, {'TTImp.TTImp.Implicit', V4302, 1}}} | V4312]))), V4313 end(V4309)) end end end end; _ -> begin (V4314 = ('un--getMatch'(V0, V1, V2, V4298, V4))), fun (V4315) -> begin (V4316 = (V4314(V4315))), case V4316 of {'Prelude.Types.Left', V4317} -> {'Prelude.Types.Left', V4317}; {'Prelude.Types.Right', V4318} -> (begin (V4319 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4300, V4} | V4318]))), V4319 end(V4315)) end end end end end; _ -> begin (V4320 = ('un--getMatch'(V0, V1, V2, V4298, V4))), fun (V4321) -> begin (V4322 = (V4320(V4321))), case V4322 of {'Prelude.Types.Left', V4323} -> {'Prelude.Types.Left', V4323}; {'Prelude.Types.Right', V4324} -> (begin (V4325 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4300, V4} | V4324]))), V4325 end(V4321)) end end end end end; _ -> begin (V4326 = ('un--getMatch'(V0, V1, V2, V4298, V4))), fun (V4327) -> begin (V4328 = (V4326(V4327))), case V4328 of {'Prelude.Types.Left', V4329} -> {'Prelude.Types.Left', V4329}; {'Prelude.Types.Right', V4330} -> (begin (V4331 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4300, V4} | V4330]))), V4331 end(V4327)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V4298, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V4298, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V4332, V4333, V4334, V4335, V4336} -> ('un--getMatch'(V0, V1, V2, V3, V4336)); _ -> case V3 of {'TTImp.TTImp.IType', V4337} -> fun (V4338) -> case V4 of {'TTImp.TTImp.IType', V4339} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4338)) end end; {'TTImp.TTImp.IPrimVal', V4340, V4341} -> case V4 of {'TTImp.TTImp.IPrimVal', V4342, V4343} -> fun (V4344) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4341, V4343)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4340, V4344)) end end; _ -> fun (V4345) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4345)) end end; _ -> fun (V4346) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4346)) end end end end end end; 0 -> case V3 of {'TTImp.TTImp.INamedApp', V4347, V4348, V4349, V4350} -> ('un--getMatch'(V0, V1, 0, V4348, V4348)); {'TTImp.TTImp.IAutoApp', V4351, V4352, V4353} -> ('un--getMatch'(V0, V1, 0, V4352, V4352)); _ -> case V4 of {'TTImp.TTImp.INamedApp', V4354, V4355, V4356, V4357} -> fun (V4358) -> ('un--matchFail'(V4354, V4358)) end; {'TTImp.TTImp.IAutoApp', V4359, V4360, V4361} -> fun (V4362) -> ('un--matchFail'(V4359, V4362)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V4363, V4364, V4365} -> case V4 of {'TTImp.TTImp.IAlternative', V4366, V4367, V4368} -> ('un--matchAny'(V0, V1, V4363, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V4365, V4368)))); _ -> case V4 of {'TTImp.TTImp.IAs', V4369, V4370, V4371, V4372, V4373} -> ('un--getMatch'(V0, V1, V2, V3, V4373)); _ -> case V3 of {'TTImp.TTImp.IType', V4374} -> fun (V4375) -> case V4 of {'TTImp.TTImp.IType', V4376} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4375)) end end; {'TTImp.TTImp.IPrimVal', V4377, V4378} -> case V4 of {'TTImp.TTImp.IPrimVal', V4379, V4380} -> fun (V4381) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4378, V4380)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4377, V4381)) end end; _ -> fun (V4382) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4382)) end end; _ -> fun (V4383) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4383)) end end end end; {'TTImp.TTImp.IAs', V4384, V4385, V4386, V4387, V4388} -> case V4387 of {'Core.Name.UN', V4389} -> case V4389 of {'Core.Name.Basic', V4390} -> case V4 of {'TTImp.TTImp.IAs', V4391, V4392, V4393, V4394, V4395} -> case V4394 of {'Core.Name.UN', V4396} -> case V4396 of {'Core.Name.Basic', V4397} -> begin (V4398 = ('un--getMatch'(V0, V1, V2, V4388, V4395))), fun (V4399) -> begin (V4400 = (V4398(V4399))), case V4400 of {'Prelude.Types.Left', V4401} -> {'Prelude.Types.Left', V4401}; {'Prelude.Types.Right', V4402} -> (begin (V4403 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4390, {'TTImp.TTImp.IAs', V4392, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V4394, {'TTImp.TTImp.Implicit', V4392, 1}}} | V4402]))), V4403 end(V4399)) end end end end; _ -> begin (V4404 = ('un--getMatch'(V0, V1, V2, V4388, V4))), fun (V4405) -> begin (V4406 = (V4404(V4405))), case V4406 of {'Prelude.Types.Left', V4407} -> {'Prelude.Types.Left', V4407}; {'Prelude.Types.Right', V4408} -> (begin (V4409 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4390, V4} | V4408]))), V4409 end(V4405)) end end end end end; _ -> begin (V4410 = ('un--getMatch'(V0, V1, V2, V4388, V4))), fun (V4411) -> begin (V4412 = (V4410(V4411))), case V4412 of {'Prelude.Types.Left', V4413} -> {'Prelude.Types.Left', V4413}; {'Prelude.Types.Right', V4414} -> (begin (V4415 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4390, V4} | V4414]))), V4415 end(V4411)) end end end end end; _ -> begin (V4416 = ('un--getMatch'(V0, V1, V2, V4388, V4))), fun (V4417) -> begin (V4418 = (V4416(V4417))), case V4418 of {'Prelude.Types.Left', V4419} -> {'Prelude.Types.Left', V4419}; {'Prelude.Types.Right', V4420} -> (begin (V4421 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4390, V4} | V4420]))), V4421 end(V4417)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V4388, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V4388, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V4422, V4423, V4424, V4425, V4426} -> ('un--getMatch'(V0, V1, V2, V3, V4426)); _ -> case V3 of {'TTImp.TTImp.IType', V4427} -> fun (V4428) -> case V4 of {'TTImp.TTImp.IType', V4429} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4428)) end end; {'TTImp.TTImp.IPrimVal', V4430, V4431} -> case V4 of {'TTImp.TTImp.IPrimVal', V4432, V4433} -> fun (V4434) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4431, V4433)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4430, V4434)) end end; _ -> fun (V4435) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4435)) end end; _ -> fun (V4436) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4436)) end end end end end end; _ -> case V4 of {'TTImp.TTImp.INamedApp', V4437, V4438, V4439, V4440} -> fun (V4441) -> ('un--matchFail'(V4437, V4441)) end; {'TTImp.TTImp.IAutoApp', V4442, V4443, V4444} -> fun (V4445) -> ('un--matchFail'(V4442, V4445)) end; _ -> case V3 of {'TTImp.TTImp.IAlternative', V4446, V4447, V4448} -> case V4 of {'TTImp.TTImp.IAlternative', V4449, V4450, V4451} -> ('un--matchAny'(V0, V1, V4446, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V4448, V4451)))); _ -> case V4 of {'TTImp.TTImp.IAs', V4452, V4453, V4454, V4455, V4456} -> ('un--getMatch'(V0, V1, V2, V3, V4456)); _ -> case V3 of {'TTImp.TTImp.IType', V4457} -> fun (V4458) -> case V4 of {'TTImp.TTImp.IType', V4459} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4458)) end end; {'TTImp.TTImp.IPrimVal', V4460, V4461} -> case V4 of {'TTImp.TTImp.IPrimVal', V4462, V4463} -> fun (V4464) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4461, V4463)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4460, V4464)) end end; _ -> fun (V4465) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4465)) end end; _ -> fun (V4466) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4466)) end end end end; {'TTImp.TTImp.IAs', V4467, V4468, V4469, V4470, V4471} -> case V4470 of {'Core.Name.UN', V4472} -> case V4472 of {'Core.Name.Basic', V4473} -> case V4 of {'TTImp.TTImp.IAs', V4474, V4475, V4476, V4477, V4478} -> case V4477 of {'Core.Name.UN', V4479} -> case V4479 of {'Core.Name.Basic', V4480} -> begin (V4481 = ('un--getMatch'(V0, V1, V2, V4471, V4478))), fun (V4482) -> begin (V4483 = (V4481(V4482))), case V4483 of {'Prelude.Types.Left', V4484} -> {'Prelude.Types.Left', V4484}; {'Prelude.Types.Right', V4485} -> (begin (V4486 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4473, {'TTImp.TTImp.IAs', V4475, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V4477, {'TTImp.TTImp.Implicit', V4475, 1}}} | V4485]))), V4486 end(V4482)) end end end end; _ -> begin (V4487 = ('un--getMatch'(V0, V1, V2, V4471, V4))), fun (V4488) -> begin (V4489 = (V4487(V4488))), case V4489 of {'Prelude.Types.Left', V4490} -> {'Prelude.Types.Left', V4490}; {'Prelude.Types.Right', V4491} -> (begin (V4492 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4473, V4} | V4491]))), V4492 end(V4488)) end end end end end; _ -> begin (V4493 = ('un--getMatch'(V0, V1, V2, V4471, V4))), fun (V4494) -> begin (V4495 = (V4493(V4494))), case V4495 of {'Prelude.Types.Left', V4496} -> {'Prelude.Types.Left', V4496}; {'Prelude.Types.Right', V4497} -> (begin (V4498 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4473, V4} | V4497]))), V4498 end(V4494)) end end end end end; _ -> begin (V4499 = ('un--getMatch'(V0, V1, V2, V4471, V4))), fun (V4500) -> begin (V4501 = (V4499(V4500))), case V4501 of {'Prelude.Types.Left', V4502} -> {'Prelude.Types.Left', V4502}; {'Prelude.Types.Right', V4503} -> (begin (V4504 = ('un--mergeMatches'(V0, V1, V2, [{'Builtin.MkPair', V4473, V4} | V4503]))), V4504 end(V4500)) end end end end end; _ -> ('un--getMatch'(V0, V1, V2, V4471, V4)) end; _ -> ('un--getMatch'(V0, V1, V2, V4471, V4)) end; _ -> case V4 of {'TTImp.TTImp.IAs', V4505, V4506, V4507, V4508, V4509} -> ('un--getMatch'(V0, V1, V2, V3, V4509)); _ -> case V3 of {'TTImp.TTImp.IType', V4510} -> fun (V4511) -> case V4 of {'TTImp.TTImp.IType', V4512} -> {'Prelude.Types.Right', []}; _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4511)) end end; {'TTImp.TTImp.IPrimVal', V4513, V4514} -> case V4 of {'TTImp.TTImp.IPrimVal', V4515, V4516} -> fun (V4517) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V4514, V4516)) of 1 -> {'Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V4513, V4517)) end end; _ -> fun (V4518) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4518)) end end; _ -> fun (V4519) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V4519)) end end end end end end end end end.
'un--getHeadLoc'(V0) -> case V0 of {'TTImp.TTImp.IVar', V1, V2} -> fun (V3) -> {'Prelude.Types.Right', V1} end; {'TTImp.TTImp.IApp', V4, V5, V6} -> ('un--getHeadLoc'(V5)); {'TTImp.TTImp.IAutoApp', V7, V8, V9} -> ('un--getHeadLoc'(V8)); {'TTImp.TTImp.INamedApp', V10, V11, V12, V13} -> ('un--getHeadLoc'(V11)); _ -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<<<"Could not find head of LHS: "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V15) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V16, V17)) end end}, V0))/binary>>}, V14)) end end.
'un--getArgMatch'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Prelude.Types.Nothing'} -> V3; _ -> case V2 of 1 -> case V5 of {'Prelude.Types.Just', V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> case V7 of {'Core.TT.AutoImplicit'} -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V8)), fun (V9) -> case V9 of {'Builtin.MkPair', V10, V11} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V11)), fun (V12) -> ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V15, V16)) end end}, V12, V4)) end)) end end)) of {'Prelude.Types.Just', V17} -> V17; {'Prelude.Types.Nothing'} -> begin (V18 = {'TTImp.TTImp.ISearch', V0, 500}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'TTImp.TTImp.IAs', V0, V0, 0, V8, V18}; 0 -> V18 end end end; _ -> case V5 of {'Prelude.Types.Just', V19} -> case V19 of {'Builtin.MkPair', V20, V21} -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V21)), fun (V22) -> case V22 of {'Builtin.MkPair', V23, V24} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V24)), fun (V25) -> ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V26, V27)) end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V28, V29)) end end}, V25, V4)) end)) end end)) of {'Prelude.Types.Just', V30} -> V30; {'Prelude.Types.Nothing'} -> begin (V31 = {'TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'TTImp.TTImp.IAs', V0, V0, 0, V21, V31}; 0 -> V31 end end end end end end; _ -> case V5 of {'Prelude.Types.Just', V32} -> case V32 of {'Builtin.MkPair', V33, V34} -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V34)), fun (V35) -> case V35 of {'Builtin.MkPair', V36, V37} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V37)), fun (V38) -> ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V41, V42)) end end}, V38, V4)) end)) end end)) of {'Prelude.Types.Just', V43} -> V43; {'Prelude.Types.Nothing'} -> begin (V44 = {'TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'TTImp.TTImp.IAs', V0, V0, 0, V34, V44}; 0 -> V44 end end end end end end; _ -> case V5 of {'Prelude.Types.Just', V45} -> case V45 of {'Builtin.MkPair', V46, V47} -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V47)), fun (V48) -> case V48 of {'Builtin.MkPair', V49, V50} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V50)), fun (V51) -> ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V54, V55)) end end}, V51, V4)) end)) end end)) of {'Prelude.Types.Just', V56} -> V56; {'Prelude.Types.Nothing'} -> begin (V57 = {'TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'TTImp.TTImp.IAs', V0, V0, 0, V47, V57}; 0 -> V57 end end end end end end; _ -> case V5 of {'Prelude.Types.Just', V58} -> case V58 of {'Builtin.MkPair', V59, V60} -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V60)), fun (V61) -> case V61 of {'Builtin.MkPair', V62, V63} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V63)), fun (V64) -> ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V65, V66)) end end, fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V67, V68)) end end}, V64, V4)) end)) end end)) of {'Prelude.Types.Just', V69} -> V69; {'Prelude.Types.Nothing'} -> begin (V70 = {'TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'TTImp.TTImp.IAs', V0, V0, 0, V60, V70}; 0 -> V70 end end end end end end end.
'un--addAlias'(V0, V1, V2, V3) -> case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V2)) of {'Prelude.Types.Just', V4} -> case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V3)) of {'Prelude.Types.Just', V5} -> begin (V138 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"ide-mode.highlight.alias"/utf8>>, 25, fun () -> <<<<"Adding alias: "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V6) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_OriginDesc'(V6)) end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_OriginDesc'(V7, V8)) end end}, {'Prelude.Show.MkShow', fun (V9) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V10) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V11) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V11)) end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V12, V13)) end end}, {'Prelude.Show.MkShow', fun (V14) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V14)) end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V15, V16)) end end}}, V10)) end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V19) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V19)) end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V20, V21)) end end}, {'Prelude.Show.MkShow', fun (V22) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V22)) end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V23, V24)) end end}}, V17, V18)) end end}, {'Prelude.Show.MkShow', fun (V25) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V26) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V26)) end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V27, V28)) end end}, {'Prelude.Show.MkShow', fun (V29) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V29)) end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V30, V31)) end end}}, V25)) end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V34)) end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V35, V36)) end end}, {'Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V38, V39)) end end}}, V32, V33)) end end}}, V9)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V44, V45)) end end}, {'Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V47, V48)) end end}}, V42)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V51) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V52, V53)) end end}, {'Prelude.Show.MkShow', fun (V54) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V55, V56)) end end}}, V49, V50)) end end}, {'Prelude.Show.MkShow', fun (V57) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V58) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V58)) end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V59, V60)) end end}, {'Prelude.Show.MkShow', fun (V61) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V61)) end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V62, V63)) end end}}, V57)) end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V66) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V66)) end, fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V67, V68)) end end}, {'Prelude.Show.MkShow', fun (V69) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V69)) end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V70, V71)) end end}}, V64, V65)) end end}}, V40, V41)) end end}}, V4))/binary, <<<<" -> "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V72) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_OriginDesc'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_OriginDesc'(V73, V74)) end end}, {'Prelude.Show.MkShow', fun (V75) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V77)) end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V78, V79)) end end}, {'Prelude.Show.MkShow', fun (V80) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V80)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V81, V82)) end end}}, V76)) end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V85) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V85)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V86, V87)) end end}, {'Prelude.Show.MkShow', fun (V88) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V88)) end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V89, V90)) end end}}, V83, V84)) end end}, {'Prelude.Show.MkShow', fun (V91) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V92)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V93, V94)) end end}, {'Prelude.Show.MkShow', fun (V95) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V95)) end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V96, V97)) end end}}, V91)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V100) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V100)) end, fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V101, V102)) end end}, {'Prelude.Show.MkShow', fun (V103) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V103)) end, fun (V104) -> fun (V105) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V104, V105)) end end}}, V98, V99)) end end}}, V75)) end, fun (V106) -> fun (V107) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V108) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V109)) end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V110, V111)) end end}, {'Prelude.Show.MkShow', fun (V112) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V112)) end, fun (V113) -> fun (V114) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V113, V114)) end end}}, V108)) end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V117) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V117)) end, fun (V118) -> fun (V119) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V118, V119)) end end}, {'Prelude.Show.MkShow', fun (V120) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V120)) end, fun (V121) -> fun (V122) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V121, V122)) end end}}, V115, V116)) end end}, {'Prelude.Show.MkShow', fun (V123) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V124) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V124)) end, fun (V125) -> fun (V126) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V125, V126)) end end}, {'Prelude.Show.MkShow', fun (V127) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V127)) end, fun (V128) -> fun (V129) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V128, V129)) end end}}, V123)) end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V132) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V132)) end, fun (V133) -> fun (V134) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V133, V134)) end end}, {'Prelude.Show.MkShow', fun (V135) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V135)) end, fun (V136) -> fun (V137) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V136, V137)) end end}}, V130, V131)) end end}}, V106, V107)) end end}}, V5))/binary>>/binary>>/binary>> end))), fun (V139) -> begin (V140 = (V138(V139))), case V140 of {'Prelude.Types.Left', V141} -> {'Prelude.Types.Left', V141}; {'Prelude.Types.Right', V142} -> (begin (V143 = ('Idris.Idris2.Core.Metadata':'un--addSemanticAlias'(V0, V4, V5))), V143 end(V139)) end end end end; {'Prelude.Types.Nothing'} -> fun (V144) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; {'Prelude.Types.Nothing'} -> fun (V145) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end.
