-module('Idris.Idris2.TTImp.ProcessTransform').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--processTransform'/13
]).
'un--processTransform'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, V10))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V79 = begin (V18 = ('Idris.Idris2.Core.Context':'un--resolveName'(V1, V17))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V78 = begin (V23 = ('Idris.Idris2.TTImp.ProcessDef':'un--checkLHS'(V0, V1, V2, V3, V4, V5, 1, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V22, V6, V7, V8, V9, V11))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V77 = case V27 of {'Builtin.MkPair', V28, V29} -> case V29 of {'Builtin.DPair.MkDPair', V30, V31} -> case V31 of {'Builtin.MkPair', V32, V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> case V35 of {'Builtin.MkPair', V36, V37} -> case V37 of {'Builtin.MkPair', V38, V39} -> begin (V46 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(V30, V1, (begin (V41 = fun (V40) -> V40 end), fun (V42) -> (V41(V42)) end end(<<"transform.lhs"/utf8>>)), 3, fun () -> (begin (V44 = fun (V43) -> V43 end), fun (V45) -> (V44(V45)) end end(<<"Transform LHS"/utf8>>)) end, V38))), fun (V47) -> begin (V48 = (V46(V47))), case V48 of {'Prelude.Types.Left', V49} -> {'Prelude.Types.Left', V49}; {'Prelude.Types.Right', V50} -> (begin (V76 = begin (V52 = ('Idris.Idris2.Core.Core':'un--wrapError'(fun (V51) -> {'Core.Core.InRHS', V9, V10, V51} end, ('Idris.Idris2.TTImp.Elab':'un--checkTermSub'(V0, V30, V1, V2, V3, V4, V5, V22, {'TTImp.Elab.Check.InExpr'}, [3 | V6], V36, V34, V8, V32, V12, ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(V30, V34, V39))))))), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V75 = begin (V57 = ('Idris.Idris2.Core.Metadata':'un--clearHoleLHS'(V2))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V74 = begin (V68 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(V30, V1, (begin (V63 = fun (V62) -> V62 end), fun (V64) -> (V63(V64)) end end(<<"transform.rhs"/utf8>>)), 3, fun () -> (begin (V66 = fun (V65) -> V65 end), fun (V67) -> (V66(V67)) end end(<<"Transform RHS"/utf8>>)) end, V56))), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V73 = ('Idris.Idris2.Core.Context':'un--addTransform'(V1, V9, {'Core.Context.MkTransform', V30, V17, V34, V38, V56}))), V73 end(V69)) end end end end), V74 end(V58)) end end end end), V75 end(V53)) end end end end), V76 end(V47)) end end end end end end end end end end), V77 end(V24)) end end end end), V78 end(V19)) end end end end), V79 end(V14)) end end end end.
