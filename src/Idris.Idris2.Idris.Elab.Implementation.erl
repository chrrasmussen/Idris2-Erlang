-module('Idris.Idris2.Idris.Elab.Implementation').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in case block in elabImplementation-17157'/45,
  'case--elabImplementation-16016'/26,
  'case--elabImplementation,topMethType-14447'/33,
  'nested--11310-13766--in--un--vfc'/20,
  'nested--11310-13783--in--un--updateClause'/22,
  'nested--11310-13784--in--un--updateBody'/22,
  'nested--11310-13782--in--un--updateApp'/22,
  'nested--11310-13778--in--un--topMethTypes'/28,
  'nested--11310-13777--in--un--topMethType'/28,
  'nested--10878-13273--in--un--toForward'/1,
  'nested--11022-13434--in--un--specialiseMeth'/7,
  'nested--11310-13779--in--un--mkTopMethDecl'/21,
  'nested--11310-13773--in--un--mkMethField'/23,
  'nested--11310-13771--in--un--mkLam'/22,
  'nested--11310-13780--in--un--methNameUpdate'/21,
  'nested--11310-13774--in--un--methName'/21,
  'nested--11310-13769--in--un--impsApply'/22,
  'nested--11310-13768--in--un--getFieldArgs'/21,
  'nested--11410-13857--in--un--getArgs'/28,
  'nested--11310-13781--in--un--findMethName'/24,
  'nested--11022-13435--in--un--extendBody'/9,
  'nested--11022-13436--in--un--dropGot'/8,
  'nested--11310-13776--in--un--bindImps'/22,
  'nested--11310-13770--in--un--autoImpsApply'/22,
  'nested--11415-14095--in--un--applyUpdate'/29,
  'nested--11310-13772--in--un--applyTo'/22,
  'nested--11310-13767--in--un--applyEnv'/21,
  'nested--11310-13775--in--un--applyCon'/22,
  'nested--11310-13785--in--un--addTransform'/23,
  'un--replaceSep'/1,
  'un--mkImplName'/3,
  'un--getMethImps'/4,
  'un--elabImplementation'/20,
  'un--bindImpls'/2,
  'un--bindConstraints'/4,
  'un--addDefaults'/6
]).
'case--case block in case block in case block in case block in elabImplementation-17157'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> case V44 of {'Builtin.MkPair', V45, V46} -> begin (V56 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"Added defaults: body is "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V49, V50)) end end}, V47)) end, fun (V51) -> fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V54, V55)) end end}, V51, V52)) end end}, V45))/binary>> end))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V872 = begin (V64 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"Missing methods: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V61) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V61)) end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V62, V63)) end end}, V46))/binary>> end))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V871 = begin (V78 = fun (V69) -> case ('Idris.Idris2.Data.List':'un--isNil'(V46)) of 1 -> {'Prelude.Types.Right', {'Builtin.MkUnit'}}; 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V14, <<<<"Missing methods in "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5))/binary, <<<<": "/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ((begin (V75 = fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V73, V74)) end end end end), fun (V76) -> fun (V77) -> ((((V75('erased'))('erased'))(V76))(V77)) end end end(fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V70)) end))(V46))))/binary>>/binary>>/binary>>}, V69)) end end), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V870 = begin (V88 = begin (V83 = V19), fun (V84) -> begin (V87 = (begin (V85 = V83), fun (V86) -> ('erlang':'get'(V85)) end end(V84))), {'Prelude.Types.Right', V87} end end end), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V869 = begin (V125 = case V92 of {'Core.Context.MkDefs', V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124} -> V102 end), begin (V129 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 10, fun () -> <<<<"Open hints: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V126) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V126)) end, fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V127, V128)) end end}, [V21 | V1]))/binary>> end))), fun (V130) -> begin (V131 = (V129(V130))), case V131 of {'Prelude.Types.Left', V132} -> {'Prelude.Types.Left', V132}; {'Prelude.Types.Right', V133} -> (begin (V868 = begin (V141 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V134) -> begin (V135 = ('Idris.Idris2.Core.Context':'un--checkUnambig'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V134))), fun (V136) -> begin (V137 = (V135(V136))), case V137 of {'Prelude.Types.Left', V138} -> {'Prelude.Types.Left', V138}; {'Prelude.Types.Right', V139} -> (begin (V140 = ('Idris.Idris2.Core.Context':'un--addOpenHint'(V19, V139))), V140 end(V136)) end end end end end, V1))), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V867 = begin (V151 = begin (V146 = V19), fun (V147) -> begin (V150 = (begin (V148 = V146), fun (V149) -> ('erlang':'get'(V148)) end end(V147))), {'Prelude.Types.Right', V150} end end end), fun (V152) -> begin (V153 = (V151(V152))), case V153 of {'Prelude.Types.Left', V154} -> {'Prelude.Types.Left', V154}; {'Prelude.Types.Right', V155} -> (begin (V866 = begin (V192 = ('nested--11310-13778--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, [], V21, V43, V32, case V27 of {'Idris.Syntax.MkIFaceInfo', V156, V157, V158, V159, V160, V161} -> V157 end, case V27 of {'Idris.Syntax.MkIFaceInfo', V162, V163, V164, V165, V166, V167} -> V164 end, ((begin (V183 = fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V181, V182)) end end end end), fun (V184) -> fun (V185) -> ((((V183('erased'))('erased'))(V184))(V185)) end end end(fun (V174) -> case V174 of {'Idris.Syntax.MkMethod', V175, V176, V177, V178} -> V175 end end))(case V27 of {'Idris.Syntax.MkIFaceInfo', V168, V169, V170, V171, V172, V173} -> V172 end)), case V27 of {'Idris.Syntax.MkIFaceInfo', V186, V187, V188, V189, V190, V191} -> V190 end))), fun (V193) -> begin (V194 = (V192(V193))), case V194 of {'Prelude.Types.Left', V195} -> {'Prelude.Types.Left', V195}; {'Prelude.Types.Right', V196} -> (begin (V865 = begin (V206 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V197) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V19, V16, V18, V17, V15, [], V9, V10, V197)) end, ((begin (V203 = fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V201, V202)) end end end end), fun (V204) -> fun (V205) -> ((((V203('erased'))('erased'))(V204))(V205)) end end end(fun (V198) -> ('nested--11310-13779--in--un--mkTopMethDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V198)) end))(V196))))), fun (V207) -> begin (V208 = (V206(V207))), case V208 of {'Prelude.Types.Left', V209} -> {'Prelude.Types.Left', V209}; {'Prelude.Types.Right', V210} -> (begin (V864 = begin (V219 = ((begin (V216 = fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V214, V215)) end end end end), fun (V217) -> fun (V218) -> ((((V216('erased'))('erased'))(V217))(V218)) end end end(fun (V211) -> ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Builtin':'un--snd'(V211)))) end))(V196))), begin (V226 = case V27 of {'Idris.Syntax.MkIFaceInfo', V220, V221, V222, V223, V224, V225} -> V220 end), begin (V243 = ('nested--11310-13769--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V21}, ((begin (V240 = fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V238, V239)) end end end end), fun (V241) -> fun (V242) -> ((((V240('erased'))('erased'))(V241))(V242)) end end end(fun (V235) -> {'Builtin.MkPair', V235, {'TTImp.TTImp.IBindVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V235))}} end))(((begin (V232 = fun (V228) -> fun (V229) -> fun (V230) -> fun (V231) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V230, V231)) end end end end), fun (V233) -> fun (V234) -> ((((V232('erased'))('erased'))(V233))(V234)) end end end(fun (V227) -> ('Idris.Idris2.Builtin':'un--fst'(V227)) end))(V43))))))), begin (V249 = begin (V244 = V19), fun (V245) -> begin (V248 = (begin (V246 = V244), fun (V247) -> ('erlang':'get'(V246)) end end(V245))), {'Prelude.Types.Right', V248} end end end), fun (V250) -> begin (V251 = (V249(V250))), case V251 of {'Prelude.Types.Left', V252} -> {'Prelude.Types.Left', V252}; {'Prelude.Types.Right', V253} -> (begin (V863 = begin (V254 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V19, [], V253, {'Core.Env.Nil'}, V30))), fun (V255) -> begin (V256 = (V254(V255))), case V256 of {'Prelude.Types.Left', V257} -> {'Prelude.Types.Left', V257}; {'Prelude.Types.Right', V258} -> (begin (V862 = begin (V259 = ('nested--11310-13768--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V258))), begin (V719 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"Field types "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V260) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V261) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V261)) end, fun (V262) -> fun (V263) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V262, V263)) end end}, {'Prelude.Show.MkShow', fun (V264) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V265) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V266) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V266)) end, fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V267, V268)) end end}, {'Prelude.Show.MkShow', fun (V269) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V270) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V270)) end, fun (V271) -> fun (V272) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V271, V272)) end end}, {'Prelude.Show.MkShow', fun (V273) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V274) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V275) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V275)) end, fun (V276) -> fun (V277) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V276, V277)) end end}, V274)) end, fun (V278) -> fun (V279) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V280) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V280)) end, fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V281, V282)) end end}, V278, V279)) end end}, V273)) end, fun (V283) -> fun (V284) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V285) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V286) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V286)) end, fun (V287) -> fun (V288) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V287, V288)) end end}, V285)) end, fun (V289) -> fun (V290) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V291) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V291)) end, fun (V292) -> fun (V293) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V292, V293)) end end}, V289, V290)) end end}, V283, V284)) end end}}, V269)) end, fun (V294) -> fun (V295) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V296) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V296)) end, fun (V297) -> fun (V298) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V297, V298)) end end}, {'Prelude.Show.MkShow', fun (V299) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V300) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V301) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V301)) end, fun (V302) -> fun (V303) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V302, V303)) end end}, V300)) end, fun (V304) -> fun (V305) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V306) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V306)) end, fun (V307) -> fun (V308) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V307, V308)) end end}, V304, V305)) end end}, V299)) end, fun (V309) -> fun (V310) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V311) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V312) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V312)) end, fun (V313) -> fun (V314) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V313, V314)) end end}, V311)) end, fun (V315) -> fun (V316) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V317) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V317)) end, fun (V318) -> fun (V319) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V318, V319)) end end}, V315, V316)) end end}, V309, V310)) end end}}, V294, V295)) end end}}, V265)) end, fun (V320) -> fun (V321) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V322) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V322)) end, fun (V323) -> fun (V324) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V323, V324)) end end}, {'Prelude.Show.MkShow', fun (V325) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V326) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V326)) end, fun (V327) -> fun (V328) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V327, V328)) end end}, {'Prelude.Show.MkShow', fun (V329) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V330) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V331) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V331)) end, fun (V332) -> fun (V333) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V332, V333)) end end}, V330)) end, fun (V334) -> fun (V335) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V336) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V336)) end, fun (V337) -> fun (V338) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V337, V338)) end end}, V334, V335)) end end}, V329)) end, fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V341) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V342) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V342)) end, fun (V343) -> fun (V344) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V343, V344)) end end}, V341)) end, fun (V345) -> fun (V346) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V347) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V347)) end, fun (V348) -> fun (V349) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V348, V349)) end end}, V345, V346)) end end}, V339, V340)) end end}}, V325)) end, fun (V350) -> fun (V351) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V352) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V352)) end, fun (V353) -> fun (V354) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V353, V354)) end end}, {'Prelude.Show.MkShow', fun (V355) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V356) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V357) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V357)) end, fun (V358) -> fun (V359) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V358, V359)) end end}, V356)) end, fun (V360) -> fun (V361) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V362) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V362)) end, fun (V363) -> fun (V364) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V363, V364)) end end}, V360, V361)) end end}, V355)) end, fun (V365) -> fun (V366) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V367) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V368) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V368)) end, fun (V369) -> fun (V370) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V369, V370)) end end}, V367)) end, fun (V371) -> fun (V372) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V373) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V373)) end, fun (V374) -> fun (V375) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V374, V375)) end end}, V371, V372)) end end}, V365, V366)) end end}}, V350, V351)) end end}}, V320, V321)) end end}, V264)) end, fun (V376) -> fun (V377) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V378) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V379) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V379)) end, fun (V380) -> fun (V381) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V380, V381)) end end}, {'Prelude.Show.MkShow', fun (V382) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V383) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V383)) end, fun (V384) -> fun (V385) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V384, V385)) end end}, {'Prelude.Show.MkShow', fun (V386) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V387) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V388) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V388)) end, fun (V389) -> fun (V390) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V389, V390)) end end}, V387)) end, fun (V391) -> fun (V392) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V393) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V393)) end, fun (V394) -> fun (V395) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V394, V395)) end end}, V391, V392)) end end}, V386)) end, fun (V396) -> fun (V397) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V398) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V399) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V399)) end, fun (V400) -> fun (V401) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V400, V401)) end end}, V398)) end, fun (V402) -> fun (V403) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V404) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V404)) end, fun (V405) -> fun (V406) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V405, V406)) end end}, V402, V403)) end end}, V396, V397)) end end}}, V382)) end, fun (V407) -> fun (V408) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V409) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V409)) end, fun (V410) -> fun (V411) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V410, V411)) end end}, {'Prelude.Show.MkShow', fun (V412) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V413) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V414) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V414)) end, fun (V415) -> fun (V416) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V415, V416)) end end}, V413)) end, fun (V417) -> fun (V418) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V419) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V419)) end, fun (V420) -> fun (V421) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V420, V421)) end end}, V417, V418)) end end}, V412)) end, fun (V422) -> fun (V423) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V424) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V425) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V425)) end, fun (V426) -> fun (V427) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V426, V427)) end end}, V424)) end, fun (V428) -> fun (V429) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V430) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V430)) end, fun (V431) -> fun (V432) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V431, V432)) end end}, V428, V429)) end end}, V422, V423)) end end}}, V407, V408)) end end}}, V378)) end, fun (V433) -> fun (V434) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V435) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V435)) end, fun (V436) -> fun (V437) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V436, V437)) end end}, {'Prelude.Show.MkShow', fun (V438) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V439) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V439)) end, fun (V440) -> fun (V441) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V440, V441)) end end}, {'Prelude.Show.MkShow', fun (V442) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V443) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V444) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V444)) end, fun (V445) -> fun (V446) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V445, V446)) end end}, V443)) end, fun (V447) -> fun (V448) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V449) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V449)) end, fun (V450) -> fun (V451) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V450, V451)) end end}, V447, V448)) end end}, V442)) end, fun (V452) -> fun (V453) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V454) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V455) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V455)) end, fun (V456) -> fun (V457) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V456, V457)) end end}, V454)) end, fun (V458) -> fun (V459) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V460) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V460)) end, fun (V461) -> fun (V462) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V461, V462)) end end}, V458, V459)) end end}, V452, V453)) end end}}, V438)) end, fun (V463) -> fun (V464) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V465) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V465)) end, fun (V466) -> fun (V467) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V466, V467)) end end}, {'Prelude.Show.MkShow', fun (V468) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V469) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V470) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V470)) end, fun (V471) -> fun (V472) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V471, V472)) end end}, V469)) end, fun (V473) -> fun (V474) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V475) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V475)) end, fun (V476) -> fun (V477) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V476, V477)) end end}, V473, V474)) end end}, V468)) end, fun (V478) -> fun (V479) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V480) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V481) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V481)) end, fun (V482) -> fun (V483) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V482, V483)) end end}, V480)) end, fun (V484) -> fun (V485) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V486) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V486)) end, fun (V487) -> fun (V488) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V487, V488)) end end}, V484, V485)) end end}, V478, V479)) end end}}, V463, V464)) end end}}, V433, V434)) end end}, V376, V377)) end end}}, V260)) end, fun (V489) -> fun (V490) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V491) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V491)) end, fun (V492) -> fun (V493) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V492, V493)) end end}, {'Prelude.Show.MkShow', fun (V494) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V495) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V496) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V496)) end, fun (V497) -> fun (V498) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V497, V498)) end end}, {'Prelude.Show.MkShow', fun (V499) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V500) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V500)) end, fun (V501) -> fun (V502) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V501, V502)) end end}, {'Prelude.Show.MkShow', fun (V503) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V504) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V505) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V505)) end, fun (V506) -> fun (V507) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V506, V507)) end end}, V504)) end, fun (V508) -> fun (V509) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V510) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V510)) end, fun (V511) -> fun (V512) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V511, V512)) end end}, V508, V509)) end end}, V503)) end, fun (V513) -> fun (V514) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V515) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V516) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V516)) end, fun (V517) -> fun (V518) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V517, V518)) end end}, V515)) end, fun (V519) -> fun (V520) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V521) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V521)) end, fun (V522) -> fun (V523) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V522, V523)) end end}, V519, V520)) end end}, V513, V514)) end end}}, V499)) end, fun (V524) -> fun (V525) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V526) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V526)) end, fun (V527) -> fun (V528) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V527, V528)) end end}, {'Prelude.Show.MkShow', fun (V529) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V530) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V531) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V531)) end, fun (V532) -> fun (V533) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V532, V533)) end end}, V530)) end, fun (V534) -> fun (V535) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V536) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V536)) end, fun (V537) -> fun (V538) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V537, V538)) end end}, V534, V535)) end end}, V529)) end, fun (V539) -> fun (V540) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V541) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V542) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V542)) end, fun (V543) -> fun (V544) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V543, V544)) end end}, V541)) end, fun (V545) -> fun (V546) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V547) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V547)) end, fun (V548) -> fun (V549) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V548, V549)) end end}, V545, V546)) end end}, V539, V540)) end end}}, V524, V525)) end end}}, V495)) end, fun (V550) -> fun (V551) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V552) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V552)) end, fun (V553) -> fun (V554) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V553, V554)) end end}, {'Prelude.Show.MkShow', fun (V555) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V556) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V556)) end, fun (V557) -> fun (V558) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V557, V558)) end end}, {'Prelude.Show.MkShow', fun (V559) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V560) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V561) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V561)) end, fun (V562) -> fun (V563) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V562, V563)) end end}, V560)) end, fun (V564) -> fun (V565) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V566) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V566)) end, fun (V567) -> fun (V568) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V567, V568)) end end}, V564, V565)) end end}, V559)) end, fun (V569) -> fun (V570) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V571) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V572) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V572)) end, fun (V573) -> fun (V574) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V573, V574)) end end}, V571)) end, fun (V575) -> fun (V576) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V577) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V577)) end, fun (V578) -> fun (V579) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V578, V579)) end end}, V575, V576)) end end}, V569, V570)) end end}}, V555)) end, fun (V580) -> fun (V581) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V582) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V582)) end, fun (V583) -> fun (V584) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V583, V584)) end end}, {'Prelude.Show.MkShow', fun (V585) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V586) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V587) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V587)) end, fun (V588) -> fun (V589) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V588, V589)) end end}, V586)) end, fun (V590) -> fun (V591) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V592) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V592)) end, fun (V593) -> fun (V594) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V593, V594)) end end}, V590, V591)) end end}, V585)) end, fun (V595) -> fun (V596) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V597) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V598) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V598)) end, fun (V599) -> fun (V600) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V599, V600)) end end}, V597)) end, fun (V601) -> fun (V602) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V603) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V603)) end, fun (V604) -> fun (V605) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V604, V605)) end end}, V601, V602)) end end}, V595, V596)) end end}}, V580, V581)) end end}}, V550, V551)) end end}, V494)) end, fun (V606) -> fun (V607) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V608) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V609) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V609)) end, fun (V610) -> fun (V611) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V610, V611)) end end}, {'Prelude.Show.MkShow', fun (V612) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V613) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V613)) end, fun (V614) -> fun (V615) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V614, V615)) end end}, {'Prelude.Show.MkShow', fun (V616) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V617) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V618) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V618)) end, fun (V619) -> fun (V620) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V619, V620)) end end}, V617)) end, fun (V621) -> fun (V622) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V623) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V623)) end, fun (V624) -> fun (V625) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V624, V625)) end end}, V621, V622)) end end}, V616)) end, fun (V626) -> fun (V627) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V628) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V629) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V629)) end, fun (V630) -> fun (V631) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V630, V631)) end end}, V628)) end, fun (V632) -> fun (V633) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V634) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V634)) end, fun (V635) -> fun (V636) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V635, V636)) end end}, V632, V633)) end end}, V626, V627)) end end}}, V612)) end, fun (V637) -> fun (V638) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V639) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V639)) end, fun (V640) -> fun (V641) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V640, V641)) end end}, {'Prelude.Show.MkShow', fun (V642) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V643) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V644) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V644)) end, fun (V645) -> fun (V646) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V645, V646)) end end}, V643)) end, fun (V647) -> fun (V648) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V649) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V649)) end, fun (V650) -> fun (V651) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V650, V651)) end end}, V647, V648)) end end}, V642)) end, fun (V652) -> fun (V653) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V654) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V655) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V655)) end, fun (V656) -> fun (V657) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V656, V657)) end end}, V654)) end, fun (V658) -> fun (V659) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V660) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V660)) end, fun (V661) -> fun (V662) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V661, V662)) end end}, V658, V659)) end end}, V652, V653)) end end}}, V637, V638)) end end}}, V608)) end, fun (V663) -> fun (V664) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V665) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V665)) end, fun (V666) -> fun (V667) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V666, V667)) end end}, {'Prelude.Show.MkShow', fun (V668) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V669) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V669)) end, fun (V670) -> fun (V671) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V670, V671)) end end}, {'Prelude.Show.MkShow', fun (V672) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V673) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V674) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V674)) end, fun (V675) -> fun (V676) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V675, V676)) end end}, V673)) end, fun (V677) -> fun (V678) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V679) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V679)) end, fun (V680) -> fun (V681) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V680, V681)) end end}, V677, V678)) end end}, V672)) end, fun (V682) -> fun (V683) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V684) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V685) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V685)) end, fun (V686) -> fun (V687) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V686, V687)) end end}, V684)) end, fun (V688) -> fun (V689) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V690) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V690)) end, fun (V691) -> fun (V692) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V691, V692)) end end}, V688, V689)) end end}, V682, V683)) end end}}, V668)) end, fun (V693) -> fun (V694) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V695) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V695)) end, fun (V696) -> fun (V697) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V696, V697)) end end}, {'Prelude.Show.MkShow', fun (V698) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V699) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V700) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V700)) end, fun (V701) -> fun (V702) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V701, V702)) end end}, V699)) end, fun (V703) -> fun (V704) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V705) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V705)) end, fun (V706) -> fun (V707) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V706, V707)) end end}, V703, V704)) end end}, V698)) end, fun (V708) -> fun (V709) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Prelude.Show.MkShow', fun (V710) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V711) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V711)) end, fun (V712) -> fun (V713) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V712, V713)) end end}, V710)) end, fun (V714) -> fun (V715) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V716) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V716)) end, fun (V717) -> fun (V718) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V717, V718)) end end}, V714, V715)) end end}, V708, V709)) end end}}, V693, V694)) end end}}, V663, V664)) end end}, V606, V607)) end end}}, V489, V490)) end end}, V259))/binary>> end))), fun (V720) -> begin (V721 = (V719(V720))), case V721 of {'Prelude.Types.Left', V722} -> {'Prelude.Types.Left', V722}; {'Prelude.Types.Right', V723} -> (begin (V861 = begin (V746 = ('Idris.Idris2.TTImp.TTImp':'un--apply'(('nested--11310-13770--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V226}, ((begin (V735 = fun (V731) -> fun (V732) -> fun (V733) -> fun (V734) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V733, V734)) end end end end), fun (V736) -> fun (V737) -> ((((V735('erased'))('erased'))(V736))(V737)) end end end(fun (V730) -> {'TTImp.TTImp.ISearch', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), 500} end))(case V27 of {'Idris.Syntax.MkIFaceInfo', V724, V725, V726, V727, V728, V729} -> V727 end)))), ((begin (V743 = fun (V739) -> fun (V740) -> fun (V741) -> fun (V742) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V741, V742)) end end end end), fun (V744) -> fun (V745) -> ((((V743('erased'))('erased'))(V744))(V745)) end end end(fun (V738) -> ('nested--11310-13773--in--un--mkMethField'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V43, V259, V738)) end))(V196))))), begin (V747 = {'TTImp.TTImp.IDef', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21, [{'TTImp.TTImp.PatClause', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V243, V746} | []]}), begin (V751 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"Implementation record: "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V748) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V748)) end, fun (V749) -> fun (V750) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V749, V750)) end end}, V747))/binary>> end))), fun (V752) -> begin (V753 = (V751(V752))), case V753 of {'Prelude.Types.Left', V754} -> {'Prelude.Types.Left', V754}; {'Prelude.Types.Right', V755} -> (begin (V860 = begin (V757 = case V3 of 1 -> ('Idris.Idris2.Core.Context':'un--addOpenHint'(V19, V21)); 0 -> fun (V756) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V758) -> begin (V759 = (V757(V758))), case V759 of {'Prelude.Types.Left', V760} -> {'Prelude.Types.Left', V760}; {'Prelude.Types.Right', V761} -> (begin (V859 = begin (V762 = ('Idris.Idris2.Core.Context':'un--setFlag'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21, {'Core.Context.Context.BlockedHint'}))), fun (V763) -> begin (V764 = (V762(V763))), case V764 of {'Prelude.Types.Left', V765} -> {'Prelude.Types.Left', V765}; {'Prelude.Types.Right', V766} -> (begin (V858 = begin (V768 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V767) -> ('nested--11310-13767--in--un--applyEnv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V767)) end, [V21 | V219], []))), fun (V769) -> begin (V770 = (V768(V769))), case V770 of {'Prelude.Types.Left', V771} -> {'Prelude.Types.Left', V771}; {'Prelude.Types.Right', V772} -> (begin (V857 = begin (V774 = begin (V773 = V9), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V772, V773)) end), begin (V776 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V775) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V19, V16, V18, V17, V15, [], V774, V10, V775)) end, [V747 | []]))), fun (V777) -> begin (V778 = (V776(V777))), case V778 of {'Prelude.Types.Left', V779} -> {'Prelude.Types.Left', V779}; {'Prelude.Types.Right', V780} -> (begin (V856 = begin (V781 = ('Idris.Idris2.Core.Context':'un--unsetFlag'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21, {'Core.Context.Context.BlockedHint'}))), fun (V782) -> begin (V783 = (V781(V782))), case V783 of {'Prelude.Types.Left', V784} -> {'Prelude.Types.Left', V784}; {'Prelude.Types.Right', V785} -> (begin (V855 = begin (V786 = ('Idris.Idris2.Core.Context':'un--setFlag'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21, {'Core.Context.Context.TCInline'}))), fun (V787) -> begin (V788 = (V786(V787))), case V788 of {'Prelude.Types.Left', V789} -> {'Prelude.Types.Left', V789}; {'Prelude.Types.Right', V790} -> (begin (V854 = begin (V791 = ('Idris.Idris2.Core.Context':'un--setFlag'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21, {'Core.Context.Context.SetTotal', 2}))), fun (V792) -> begin (V793 = (V791(V792))), case V793 of {'Prelude.Types.Left', V794} -> {'Prelude.Types.Left', V794}; {'Prelude.Types.Right', V795} -> (begin (V853 = begin (V804 = ((begin (V801 = fun (V797) -> fun (V798) -> fun (V799) -> fun (V800) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V799, V800)) end end end end), fun (V802) -> fun (V803) -> ((((V801('erased'))('erased'))(V802))(V803)) end end end(fun (V796) -> ('nested--11310-13780--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V796)) end))(V196))), begin (V806 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V805) -> ('nested--11310-13784--in--un--updateBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V804, V805)) end, V45, []))), fun (V807) -> begin (V808 = (V806(V807))), case V808 of {'Prelude.Types.Left', V809} -> {'Prelude.Types.Left', V809}; {'Prelude.Types.Right', V810} -> (begin (V852 = begin (V820 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 10, fun () -> <<<<"Implementation body: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V811) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V812) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V812)) end, fun (V813) -> fun (V814) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V813, V814)) end end}, V811)) end, fun (V815) -> fun (V816) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V817) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V817)) end, fun (V818) -> fun (V819) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V818, V819)) end end}, V815, V816)) end end}, V810))/binary>> end))), fun (V821) -> begin (V822 = (V820(V821))), case V822 of {'Prelude.Types.Left', V823} -> {'Prelude.Types.Left', V823}; {'Prelude.Types.Right', V824} -> (begin (V851 = begin (V826 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V825) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V19, V16, V18, V17, V15, [], V774, V10, V825)) end, V810))), fun (V827) -> begin (V828 = (V826(V827))), case V828 of {'Prelude.Types.Left', V829} -> {'Prelude.Types.Left', V829}; {'Prelude.Types.Right', V830} -> (begin (V850 = begin (V838 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V831) -> ('nested--11310-13785--in--un--addTransform'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V21, V804, V831)) end, case V27 of {'Idris.Syntax.MkIFaceInfo', V832, V833, V834, V835, V836, V837} -> V836 end))), fun (V839) -> begin (V840 = (V838(V839))), case V840 of {'Prelude.Types.Left', V841} -> {'Prelude.Types.Left', V841}; {'Prelude.Types.Right', V842} -> (begin (V849 = begin (V843 = ('Idris.Idris2.Core.Context':'un--unsetFlag'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21, {'Core.Context.Context.TCInline'}))), fun (V844) -> begin (V845 = (V843(V844))), case V845 of {'Prelude.Types.Left', V846} -> {'Prelude.Types.Left', V846}; {'Prelude.Types.Right', V847} -> (begin (V848 = ('Idris.Idris2.Core.Context':'un--setOpenHints'(V19, V125))), V848 end(V844)) end end end end), V849 end(V839)) end end end end), V850 end(V827)) end end end end), V851 end(V821)) end end end end), V852 end(V807)) end end end end end), V853 end(V792)) end end end end), V854 end(V787)) end end end end), V855 end(V782)) end end end end), V856 end(V777)) end end end end end), V857 end(V769)) end end end end), V858 end(V763)) end end end end), V859 end(V758)) end end end end), V860 end(V752)) end end end end end end), V861 end(V720)) end end end end end), V862 end(V255)) end end end end), V863 end(V250)) end end end end end end end), V864 end(V207)) end end end end), V865 end(V193)) end end end end), V866 end(V152)) end end end end), V867 end(V142)) end end end end), V868 end(V130)) end end end end end), V869 end(V89)) end end end end), V870 end(V79)) end end end end), V871 end(V65)) end end end end), V872 end(V57)) end end end end end.
'case--elabImplementation-16016'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V25 of [E0 | E1] -> (fun (V26, V27) -> case V27 of [] -> begin (V28 = ('Idris.Idris2.Builtin':'un--fst'(V26))), begin (V29 = ('Idris.Idris2.Builtin':'un--snd'(V26))), begin (V62 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V28, case V23 of {'Core.Context.MkDefs', V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61} -> V30 end))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V669 = case V66 of {'Prelude.Types.Just', V67} -> begin (V106 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(case V29 of {'Idris.Syntax.MkIFaceInfo', V68, V69, V70, V71, V72, V73} -> V68 end, case V23 of {'Core.Context.MkDefs', V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105} -> V74 end))), fun (V107) -> begin (V108 = (V106(V107))), case V108 of {'Prelude.Types.Left', V109} -> {'Prelude.Types.Left', V109}; {'Prelude.Types.Right', V110} -> (begin (V668 = begin (V111 = {'Prelude.Types.Just', V67}), case V110 of {'Prelude.Types.Just', V112} -> begin (V131 = ('Idris.Idris2.Data.List':'un--nub'({'Prelude.EqOrd.MkEq', fun (V113) -> fun (V114) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V113, V114)) end end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V115, V116)) end end}, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V117) -> fun (V118) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V117, V118)) end end, []}, fun (V119) -> ('Idris.Idris2.TTImp.TTImp':'un--findIBinds'(V119)) end, V4)), ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V120) -> fun (V121) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V120, V121)) end end, []}, fun (V122) -> ('Idris.Idris2.TTImp.TTImp':'un--findIBinds'(V122)) end, ((begin (V128 = fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V126, V127)) end end end end), fun (V129) -> fun (V130) -> ((((V128('erased'))('erased'))(V129))(V130)) end end end(fun (V123) -> ('Idris.Idris2.Builtin':'un--snd'(V123)) end))(V6))))))))), begin (V138 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V19, (begin (V133 = fun (V132) -> V132 end), fun (V134) -> (V133(V134)) end end(<<"elab.implementation"/utf8>>)), 3, fun () -> <<(begin (V136 = fun (V135) -> V135 end), fun (V137) -> (V136(V137)) end end(<<"Found interface "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V28))/binary>> end, V67))), fun (V139) -> begin (V140 = (V138(V139))), case V140 of {'Prelude.Types.Left', V141} -> {'Prelude.Types.Left', V141}; {'Prelude.Types.Right', V142} -> (begin (V661 = begin (V215 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, (begin (V144 = fun (V143) -> V143 end), fun (V145) -> (V144(V145)) end end(<<"elab.implementation"/utf8>>)), 3, fun () -> <<(begin (V147 = fun (V146) -> V146 end), fun (V148) -> (V147(V148)) end end(<<"\x{a}  with params: "/utf8>>))/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V149) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V149)) end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V150, V151)) end end}, case V29 of {'Idris.Syntax.MkIFaceInfo', V152, V153, V154, V155, V156, V157} -> V154 end))/binary, <<(begin (V159 = fun (V158) -> V158 end), fun (V160) -> (V159(V160)) end end(<<"\x{a}  specialised to: "/utf8>>))/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V161) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V162) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V162)) end, fun (V163) -> fun (V164) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V163, V164)) end end}, V161)) end, fun (V165) -> fun (V166) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V167) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V167)) end, fun (V168) -> fun (V169) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V168, V169)) end end}, V165, V166)) end end}, V4))/binary, <<(begin (V171 = fun (V170) -> V170 end), fun (V172) -> (V171(V172)) end end(<<"\x{a}  and parents: "/utf8>>))/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V173) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V174) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V174)) end, fun (V175) -> fun (V176) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V175, V176)) end end}, V173)) end, fun (V177) -> fun (V178) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V179) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V179)) end, fun (V180) -> fun (V181) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V180, V181)) end end}, V177, V178)) end end}, case V29 of {'Idris.Syntax.MkIFaceInfo', V182, V183, V184, V185, V186, V187} -> V185 end))/binary, <<(begin (V189 = fun (V188) -> V188 end), fun (V190) -> (V189(V190)) end end(<<"\x{a}  using implicits: "/utf8>>))/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V191) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V191)) end, fun (V192) -> fun (V193) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V192, V193)) end end}, V131))/binary, <<(begin (V195 = fun (V194) -> V194 end), fun (V196) -> (V195(V196)) end end(<<"\x{a}  and methods: "/utf8>>))/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V197) -> ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_Method'(V197)) end, fun (V198) -> fun (V199) -> ('Idris.Idris2.Idris.Syntax':'dn--un--showPrec_Show_Method'(V198, V199)) end end}, case V29 of {'Idris.Syntax.MkIFaceInfo', V200, V201, V202, V203, V204, V205} -> V204 end))/binary, <<<<"\x{a}"/utf8>>/binary, <<(begin (V207 = fun (V206) -> V206 end), fun (V208) -> (V207(V208)) end end(<<"\x{a}Constructor: "/utf8>>))/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V29 of {'Idris.Syntax.MkIFaceInfo', V209, V210, V211, V212, V213, V214} -> V209 end))/binary, <<"\x{a}"/utf8>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>> end))), fun (V216) -> begin (V217 = (V215(V216))), case V217 of {'Prelude.Types.Left', V218} -> {'Prelude.Types.Left', V218}; {'Prelude.Types.Right', V219} -> (begin (V660 = begin (V226 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V19, (begin (V221 = fun (V220) -> V220 end), fun (V222) -> (V221(V222)) end end(<<"elab.implementation"/utf8>>)), 3, fun () -> (begin (V224 = fun (V223) -> V223 end), fun (V225) -> (V224(V225)) end end(<<"Constructor type: "/utf8>>)) end, V112))), fun (V227) -> begin (V228 = (V226(V227))), case V228 of {'Prelude.Types.Left', V229} -> {'Prelude.Types.Left', V229}; {'Prelude.Types.Right', V230} -> (begin (V659 = begin (V237 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, (begin (V232 = fun (V231) -> V231 end), fun (V233) -> (V232(V233)) end end(<<"elab.implementation"/utf8>>)), 5, fun () -> <<(begin (V235 = fun (V234) -> V234 end), fun (V236) -> (V235(V236)) end end(<<"Making implementation "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V21))/binary>> end))), fun (V238) -> begin (V239 = (V237(V238))), case V239 of {'Prelude.Types.Left', V240} -> {'Prelude.Types.Left', V240}; {'Prelude.Types.Right', V241} -> (begin (V658 = begin (V242 = case V3 of 1 -> [{'TTImp.TTImp.Inline'} | []]; 0 -> [{'TTImp.TTImp.Inline'} | [{'TTImp.TTImp.Hint', 1} | []]] end), begin (V243 = ('un--bindImpls'(V7, ('un--bindConstraints'(('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), {'Core.TT.AutoImplicit'}, V6, ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V5}, V4))))))), begin (V244 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V19))), fun (V245) -> begin (V246 = (V244(V245))), case V246 of {'Prelude.Types.Left', V247} -> {'Prelude.Types.Left', V247}; {'Prelude.Types.Right', V248} -> (begin (V657 = begin (V249 = case V248 of 1 -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(1, V8, [], V243)); 0 -> [] end), begin (V250 = ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V249, V243))), begin (V251 = {'TTImp.TTImp.IClaim', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V13, V242, {'TTImp.TTImp.MkImpTy', {'Core.FC.EmptyFC'}, {'Core.FC.EmptyFC'}, V21, V250}}), begin (V261 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, (begin (V253 = fun (V252) -> V252 end), fun (V254) -> (V253(V254)) end end(<<"elab.implementation"/utf8>>)), 5, fun () -> <<(begin (V256 = fun (V255) -> V255 end), fun (V257) -> (V256(V257)) end end(<<"Implementation type: "/utf8>>))/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V258) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V258)) end, fun (V259) -> fun (V260) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V259, V260)) end end}, V250))/binary>> end))), fun (V262) -> begin (V263 = (V261(V262))), case V263 of {'Prelude.Types.Left', V264} -> {'Prelude.Types.Left', V264}; {'Prelude.Types.Right', V265} -> (begin (V656 = begin (V480 = case ('Idris.Idris2.Idris.Syntax':'un--typePass'(V11)) of 1 -> begin (V298 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExactI'(V21, case V23 of {'Core.Context.MkDefs', V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297} -> V266 end))), fun (V299) -> begin (V300 = (V298(V299))), case V300 of {'Prelude.Types.Left', V301} -> {'Prelude.Types.Left', V301}; {'Prelude.Types.Right', V302} -> (begin (V478 = case V302 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V19, V16, V18, V17, V15, [], V9, V10, V251)); {'Prelude.Types.Just', V303} -> case V303 of {'Builtin.MkPair', V304, V305} -> begin (V306 = ('Idris.Idris2.TTImp.Elab.Check':'un--uniVar'(V19, V18, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19))))), fun (V307) -> begin (V308 = (V306(V307))), case V308 of {'Prelude.Types.Left', V309} -> {'Prelude.Types.Left', V309}; {'Prelude.Types.Right', V310} -> (begin (V477 = case V305 of {'Core.Context.Context.MkGlobalDef', V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332} -> case V328 of {'Core.Context.Context.None'} -> begin (V337 = ('Idris.Idris2.TTImp.Elab':'un--elabTerm'(V8, V19, V16, V18, V17, V15, V304, {'TTImp.Elab.Check.InType'}, [], V9, V10, {'TTImp.TTImp.IBindHere', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), {'TTImp.TTImp.PI', ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V333) -> fun (V334) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V333, V334)) end end, 0, fun (V335) -> fun (V336) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V335, V336)) end end, 1}))}, V250}, {'Prelude.Types.Just', ('Idris.Idris2.Core.Normalise.Eval':'un--gType'(('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V310))}))), fun (V338) -> begin (V339 = (V337(V338))), case V339 of {'Prelude.Types.Left', V340} -> {'Prelude.Types.Left', V340}; {'Prelude.Types.Right', V341} -> (begin (V475 = case V341 of {'Builtin.MkPair', V342, V343} -> begin (V344 = ('Idris.Idris2.Core.Env':'un--abstractFullEnvType'(V8, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V10, V342))), begin (V367 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_Term'(V19, [], V23, {'Core.Env.Nil'}, V344, case V305 of {'Core.Context.Context.MkGlobalDef', V345, V346, V347, V348, V349, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366} -> V347 end))), fun (V368) -> begin (V369 = (V367(V368))), case V369 of {'Prelude.Types.Left', V370} -> {'Prelude.Types.Left', V370}; {'Prelude.Types.Right', V371} -> (begin (V474 = case V371 of 1 -> fun (V372) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> begin (V401 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V19, (begin (V374 = fun (V373) -> V373 end), fun (V375) -> (V374(V375)) end end(<<"elab.implementation"/utf8>>)), 1, fun () -> (begin (V377 = fun (V376) -> V376 end), fun (V378) -> (V377(V378)) end end(<<"Previous"/utf8>>)) end, {'Core.Env.Nil'}, case V305 of {'Core.Context.Context.MkGlobalDef', V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400} -> V381 end))), fun (V402) -> begin (V403 = (V401(V402))), case V403 of {'Prelude.Types.Left', V404} -> {'Prelude.Types.Left', V404}; {'Prelude.Types.Right', V405} -> (begin (V473 = begin (V412 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V19, (begin (V407 = fun (V406) -> V406 end), fun (V408) -> (V407(V408)) end end(<<"elab.implementation"/utf8>>)), 1, fun () -> (begin (V410 = fun (V409) -> V409 end), fun (V411) -> (V410(V411)) end end(<<"Now"/utf8>>)) end, {'Core.Env.Nil'}, V344))), fun (V413) -> begin (V414 = (V412(V413))), case V414 of {'Prelude.Types.Left', V415} -> {'Prelude.Types.Left', V415}; {'Prelude.Types.Right', V416} -> (begin (V472 = fun (V417) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.CantConvert', [], ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V250)), case V23 of {'Core.Context.MkDefs', V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431, V432, V433, V434, V435, V436, V437, V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448, V449} -> V418 end, {'Core.Env.Nil'}, V344, case V305 of {'Core.Context.Context.MkGlobalDef', V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470, V471} -> V452 end}, V417)) end), V472 end(V413)) end end end end), V473 end(V402)) end end end end end), V474 end(V368)) end end end end end end), V475 end(V338)) end end end end; _ -> fun (V476) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.AlreadyDefined', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21}, V476)) end end end), V477 end(V307)) end end end end end end), V478 end(V299)) end end end end; 0 -> fun (V479) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V481) -> begin (V482 = (V480(V481))), case V482 of {'Prelude.Types.Left', V483} -> {'Prelude.Types.Left', V483}; {'Prelude.Types.Right', V484} -> (begin (V655 = case ('Idris.Idris2.Idris.Syntax':'un--defPass'(V11)) of 1 -> case V0 of {'Prelude.Types.Just', V485} -> begin (V491 = begin (V486 = V19), fun (V487) -> begin (V490 = (begin (V488 = V486), fun (V489) -> ('erlang':'get'(V488)) end end(V487))), {'Prelude.Types.Right', V490} end end end), fun (V492) -> begin (V493 = (V491(V492))), case V493 of {'Prelude.Types.Left', V494} -> {'Prelude.Types.Left', V494}; {'Prelude.Types.Right', V495} -> (begin (V652 = begin (V528 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V21, case V495 of {'Core.Context.MkDefs', V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514, V515, V516, V517, V518, V519, V520, V521, V522, V523, V524, V525, V526, V527} -> V496 end))), fun (V529) -> begin (V530 = (V528(V529))), case V530 of {'Prelude.Types.Left', V531} -> {'Prelude.Types.Left', V531}; {'Prelude.Types.Right', V532} -> (begin (V651 = begin (V533 = {'Prelude.Types.Just', V112}), case V532 of {'Prelude.Types.Just', V534} -> begin (V535 = ('un--getMethImps'([], V19, {'Core.Env.Nil'}, V534))), fun (V536) -> begin (V537 = (V535(V536))), case V537 of {'Prelude.Types.Left', V538} -> {'Prelude.Types.Left', V538}; {'Prelude.Types.Right', V539} -> (begin (V646 = begin (V609 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, (begin (V541 = fun (V540) -> V540 end), fun (V542) -> (V541(V542)) end end(<<"elab.implementation"/utf8>>)), 3, fun () -> <<(begin (V544 = fun (V543) -> V543 end), fun (V545) -> (V544(V545)) end end(<<"Bind implicits to each method: "/utf8>>))/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V546) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V547) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V547)) end, fun (V548) -> fun (V549) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V548, V549)) end end}, {'Prelude.Show.MkShow', fun (V550) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V551) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V551)) end, fun (V552) -> fun (V553) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V552, V553)) end end}, {'Prelude.Show.MkShow', fun (V554) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V555) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V555)) end, fun (V556) -> fun (V557) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V556, V557)) end end}, V554)) end, fun (V558) -> fun (V559) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V560) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V560)) end, fun (V561) -> fun (V562) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V561, V562)) end end}, V558, V559)) end end}}, V550)) end, fun (V563) -> fun (V564) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V565) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V565)) end, fun (V566) -> fun (V567) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V566, V567)) end end}, {'Prelude.Show.MkShow', fun (V568) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V569) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V569)) end, fun (V570) -> fun (V571) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V570, V571)) end end}, V568)) end, fun (V572) -> fun (V573) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V574) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V574)) end, fun (V575) -> fun (V576) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V575, V576)) end end}, V572, V573)) end end}}, V563, V564)) end end}}, V546)) end, fun (V577) -> fun (V578) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V579) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V579)) end, fun (V580) -> fun (V581) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V580, V581)) end end}, {'Prelude.Show.MkShow', fun (V582) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V583) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V583)) end, fun (V584) -> fun (V585) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V584, V585)) end end}, {'Prelude.Show.MkShow', fun (V586) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V587) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V587)) end, fun (V588) -> fun (V589) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V588, V589)) end end}, V586)) end, fun (V590) -> fun (V591) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V592) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V592)) end, fun (V593) -> fun (V594) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V593, V594)) end end}, V590, V591)) end end}}, V582)) end, fun (V595) -> fun (V596) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V597) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V597)) end, fun (V598) -> fun (V599) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V598, V599)) end end}, {'Prelude.Show.MkShow', fun (V600) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V601) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V601)) end, fun (V602) -> fun (V603) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V602, V603)) end end}, V600)) end, fun (V604) -> fun (V605) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V606) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V606)) end, fun (V607) -> fun (V608) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V607, V608)) end end}, V604, V605)) end end}}, V595, V596)) end end}}, V577, V578)) end end}, V539))/binary>> end))), fun (V610) -> begin (V611 = (V609(V610))), case V611 of {'Prelude.Types.Left', V612} -> {'Prelude.Types.Left', V612}; {'Prelude.Types.Right', V613} -> (begin (V645 = begin (V614 = {'Prelude.Types.Just', V534}), ('case--case block in case block in case block in case block in elabImplementation-17157'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V26, V28, V29, V67, V111, V112, V533, V131, V242, V243, V248, V249, V250, V251, V485, V495, V534, V614, V539, ('un--addDefaults'(('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V21, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(case V29 of {'Idris.Syntax.MkIFaceInfo', V615, V616, V617, V618, V619, V620} -> V617 end, V4)), ((begin (V636 = fun (V632) -> fun (V633) -> fun (V634) -> fun (V635) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V634, V635)) end end end end), fun (V637) -> fun (V638) -> ((((V636('erased'))('erased'))(V637))(V638)) end end end(fun (V627) -> ('Idris.Idris2.Core.Name':'un--dropNS'(case V627 of {'Idris.Syntax.MkMethod', V628, V629, V630, V631} -> V628 end)) end))(case V29 of {'Idris.Syntax.MkIFaceInfo', V621, V622, V623, V624, V625, V626} -> V625 end)), case V29 of {'Idris.Syntax.MkIFaceInfo', V639, V640, V641, V642, V643, V644} -> V644 end, V485)))) end), V645 end(V610)) end end end end), V646 end(V536)) end end end end; {'Prelude.Types.Nothing'} -> fun (V647) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<(begin (V649 = fun (V648) -> V648 end), fun (V650) -> (V649(V650)) end end(<<"Can\x{27}t happen, can\x{27}t find type of "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V21))/binary>>}, V647)) end end end), V651 end(V529)) end end end end), V652 end(V492)) end end end end; {'Prelude.Types.Nothing'} -> fun (V653) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; 0 -> fun (V654) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V655 end(V481)) end end end end), V656 end(V262)) end end end end end end end), V657 end(V245)) end end end end end end), V658 end(V238)) end end end end), V659 end(V227)) end end end end), V660 end(V216)) end end end end), V661 end(V139)) end end end end end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), case V29 of {'Idris.Syntax.MkIFaceInfo', V662, V663, V664, V665, V666, V667} -> V662 end)) end end), V668 end(V107)) end end end end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V28)) end), V669 end(V63)) end end end end end end; _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V5, ((begin (V675 = fun (V671) -> fun (V672) -> fun (V673) -> fun (V674) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V673, V674)) end end end end), fun (V676) -> fun (V677) -> ((((V675('erased'))('erased'))(V676))(V677)) end end end(fun (V670) -> ('Idris.Idris2.Builtin':'un--fst'(V670)) end))(V25)))) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Context':'un--ambiguousName'(V19, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V5, ((begin (V683 = fun (V679) -> fun (V680) -> fun (V681) -> fun (V682) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V681, V682)) end end end end), fun (V684) -> fun (V685) -> ((((V683('erased'))('erased'))(V684))(V685)) end end end(fun (V678) -> ('Idris.Idris2.Builtin':'un--fst'(V678)) end))(V25)))) end.
'case--elabImplementation,topMethType-14447'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> case V32 of {'Builtin.MkPair', V33, V34} -> begin (V35 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, V27, V34))), begin (V44 = ('Idris.Idris2.TTImp.Utils':'un--substBindVars'(V8, ((begin (V41 = fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V39, V40)) end end end end), fun (V42) -> fun (V43) -> ((((V41('erased'))('erased'))(V42))(V43)) end end end(fun (V36) -> {'Builtin.MkPair', V36, {'TTImp.TTImp.Implicit', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), 0}} end))(V23)), V35))), begin (V45 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V22, V4)), V44))), begin (V82 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"Substitute implicits "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V47, V48)) end end}, V23))/binary, <<<<" parameters "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V49) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V50) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V50)) end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V51, V52)) end end}, {'Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V54) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V55, V56)) end end}, V53)) end, fun (V57) -> fun (V58) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V59) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V59)) end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V60, V61)) end end}, V57, V58)) end end}}, V49)) end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V64) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V64)) end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V65, V66)) end end}, {'Prelude.Show.MkShow', fun (V67) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V68) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V69, V70)) end end}, V67)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V73) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V73)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V74, V75)) end end}, V71, V72)) end end}}, V62, V63)) end end}, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V22, V4))))/binary, <<<<" "/utf8>>/binary, <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V76)) end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V77, V78)) end end}, V35))/binary, <<<<" is "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V79) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V79)) end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V80, V81)) end end}, V45))/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>> end))), fun (V83) -> begin (V84 = (V82(V83))), case V84 of {'Prelude.Types.Left', V85} -> {'Prelude.Types.Left', V85}; {'Prelude.Types.Right', V86} -> (begin (V229 = begin (V87 = ('nested--11310-13776--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V25, ('un--bindConstraints'(('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), {'Core.TT.AutoImplicit'}, V6, V45))))), begin (V88 = ('Idris.Idris2.TTImp.TTImp':'un--findImplicits'(V87))), begin (V89 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNamesUsed'(V19, V14, V88, V8, V87))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V228 = begin (V101 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 3, fun () -> <<<<"Method "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V20 of {'Idris.Syntax.MkMethod', V94, V95, V96, V97} -> V94 end))/binary, <<<<" ==> "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V28))/binary, <<<<" : "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V98) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V98)) end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V99, V100)) end end}, V93))/binary>>/binary>>/binary>>/binary>>/binary>> end))), fun (V102) -> begin (V103 = (V101(V102))), case V103 of {'Prelude.Types.Left', V104} -> {'Prelude.Types.Left', V104}; {'Prelude.Types.Right', V105} -> (begin (V227 = begin (V109 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 3, fun () -> <<<<"    (initially "/utf8>>/binary, <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V106) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V106)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V107, V108)) end end}, V35))/binary, <<")"/utf8>>/binary>>/binary>> end))), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V226 = begin (V141 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"Updates "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V114) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V115) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V115)) end, fun (V116) -> fun (V117) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V116, V117)) end end}, {'Prelude.Show.MkShow', fun (V118) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V119) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V119)) end, fun (V120) -> fun (V121) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V120, V121)) end end}, V118)) end, fun (V122) -> fun (V123) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V124) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V124)) end, fun (V125) -> fun (V126) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V125, V126)) end end}, V122, V123)) end end}}, V114)) end, fun (V127) -> fun (V128) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V129) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V129)) end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V130, V131)) end end}, {'Prelude.Show.MkShow', fun (V132) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V133) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V133)) end, fun (V134) -> fun (V135) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V134, V135)) end end}, V132)) end, fun (V136) -> fun (V137) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V138) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V138)) end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V139, V140)) end end}, V136, V137)) end end}}, V127, V128)) end end}, V27))/binary>> end))), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V225 = begin (V149 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"From "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V146) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V146)) end, fun (V147) -> fun (V148) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V147, V148)) end end}, V87))/binary>> end))), fun (V150) -> begin (V151 = (V149(V150))), case V151 of {'Prelude.Types.Left', V152} -> {'Prelude.Types.Left', V152}; {'Prelude.Types.Right', V153} -> (begin (V224 = begin (V169 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 3, fun () -> <<<<"Name updates "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V154) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V155) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V155)) end, fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V156, V157)) end end}, {'Prelude.Show.MkShow', fun (V158) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V158)) end, fun (V159) -> fun (V160) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V159, V160)) end end}}, V154)) end, fun (V161) -> fun (V162) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V163) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V163)) end, fun (V164) -> fun (V165) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V164, V165)) end end}, {'Prelude.Show.MkShow', fun (V166) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V166)) end, fun (V167) -> fun (V168) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V167, V168)) end end}}, V161, V162)) end end}, V33))/binary>> end))), fun (V170) -> begin (V171 = (V169(V170))), case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> (begin (V223 = begin (V177 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 3, fun () -> <<<<"Param names: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V174) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V174)) end, fun (V175) -> fun (V176) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V175, V176)) end end}, V22))/binary>> end))), fun (V178) -> begin (V179 = (V177(V178))), case V179 of {'Prelude.Types.Left', V180} -> {'Prelude.Types.Left', V180}; {'Prelude.Types.Right', V181} -> (begin (V222 = begin (V185 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 10, fun () -> <<<<"Used names "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V182) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V182)) end, fun (V183) -> fun (V184) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V183, V184)) end end}, V88))/binary>> end))), fun (V186) -> begin (V187 = (V185(V186))), case V187 of {'Prelude.Types.Left', V188} -> {'Prelude.Types.Left', V188}; {'Prelude.Types.Right', V189} -> (begin (V221 = begin (V198 = ((begin (V195 = fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V193, V194)) end end end end), fun (V196) -> fun (V197) -> ((((V195('erased'))('erased'))(V196))(V197)) end end end(fun (V190) -> ('Idris.Idris2.Builtin':'un--fst'(V190)) end))(V25))), begin (V207 = case ('Idris.Idris2.Data.List':'un--isNil'(V198)) of 1 -> []; 0 -> [{'Builtin.MkPair', V28, ('nested--11310-13769--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V28}, ((begin (V204 = fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V202, V203)) end end end end), fun (V205) -> fun (V206) -> ((((V204('erased'))('erased'))(V205))(V206)) end end end(fun (V199) -> {'Builtin.MkPair', V199, {'TTImp.TTImp.IBindVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V199))}} end))(V198))))} | []] end), fun (V208) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Builtin.MkPair', case V20 of {'Idris.Syntax.MkMethod', V209, V210, V211, V212} -> V209 end, {'Builtin.MkPair', V28, {'Builtin.MkPair', V33, {'Builtin.MkPair', case V20 of {'Idris.Syntax.MkMethod', V213, V214, V215, V216} -> V214 end, {'Builtin.MkPair', case V20 of {'Idris.Syntax.MkMethod', V217, V218, V219, V220} -> V219 end, V93}}}}}, V207}} end end end), V221 end(V186)) end end end end), V222 end(V178)) end end end end), V223 end(V170)) end end end end), V224 end(V150)) end end end end), V225 end(V142)) end end end end), V226 end(V110)) end end end end), V227 end(V102)) end end end end), V228 end(V90)) end end end end end end), V229 end(V83)) end end end end end end end end.
'nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V14)).
'nested--11310-13783--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'TTImp.TTImp.PatClause', V22, V23, V24} -> begin (V25 = ('nested--11310-13782--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V23))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V31 = fun (V30) -> {'Prelude.Types.Right', {'TTImp.TTImp.PatClause', V22, V29, V24}} end), V31 end(V26)) end end end end; {'TTImp.TTImp.WithClause', V32, V33, V34, V35, V36, V37, V38} -> begin (V39 = ('nested--11310-13782--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V33))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V52 = begin (V45 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V44) -> ('nested--11310-13783--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V44)) end, V38, []))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V51 = fun (V50) -> {'Prelude.Types.Right', {'TTImp.TTImp.WithClause', V32, V43, V34, V35, V36, V37, V49}} end), V51 end(V46)) end end end end), V52 end(V40)) end end end end; {'TTImp.TTImp.ImpossibleClause', V53, V54} -> begin (V55 = ('nested--11310-13782--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V54))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V61 = fun (V60) -> {'Prelude.Types.Right', {'TTImp.TTImp.ImpossibleClause', V53, V59}} end), V61 end(V56)) end end end end end.
'nested--11310-13784--in--un--updateBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'TTImp.TTImp.IDef', V22, V23, V24} -> begin (V26 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V25) -> ('nested--11310-13783--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V25)) end, V24, []))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V63 = begin (V32 = fun (V31) -> ('nested--11310-13781--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V22, V23, V31)) end), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V62 = begin (V55 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"ide-mode.highlight"/utf8>>, 1, fun () -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V38, V39)) end end}, {'Prelude.Show.MkShow', fun (V40) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V41) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V41)) end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V42, V43)) end end}, {'Prelude.Show.MkShow', fun (V44) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V44)) end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_FC'(V45, V46)) end end}}, V40)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V49) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V50, V51)) end end}, {'Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_FC'(V53, V54)) end end}}, V47, V48)) end end}}, {'Builtin.MkPair', V23, {'Builtin.MkPair', V36, V22}})) end))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V61 = fun (V60) -> {'Prelude.Types.Right', {'TTImp.TTImp.IDef', V22, V36, V30}} end), V61 end(V56)) end end end end), V62 end(V33)) end end end end), V63 end(V27)) end end end end; _ -> fun (V64) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', ('Idris.Idris2.TTImp.TTImp.ImpDecl':'un--getFC'(V21)), <<"Implementation body can only contain definitions"/utf8>>}, V64)) end end.
'nested--11310-13782--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'TTImp.TTImp.IVar', V22, V23} -> begin (V25 = fun (V24) -> ('nested--11310-13781--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V22, V23, V24)) end), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V31 = fun (V30) -> {'Prelude.Types.Right', {'TTImp.TTImp.IVar', V22, V29}} end), V31 end(V26)) end end end end; {'TTImp.TTImp.IApp', V32, V33, V34} -> begin (V35 = ('nested--11310-13782--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V33))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V41 = fun (V40) -> {'Prelude.Types.Right', {'TTImp.TTImp.IApp', V32, V39, V34}} end), V41 end(V36)) end end end end; {'TTImp.TTImp.IAutoApp', V42, V43, V44} -> begin (V45 = ('nested--11310-13782--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V43))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V51 = fun (V50) -> {'Prelude.Types.Right', {'TTImp.TTImp.IAutoApp', V42, V49, V44}} end), V51 end(V46)) end end end end; {'TTImp.TTImp.INamedApp', V52, V53, V54, V55} -> begin (V56 = ('nested--11310-13782--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V53))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V62 = fun (V61) -> {'Prelude.Types.Right', {'TTImp.TTImp.INamedApp', V52, V60, V54, V55}} end), V62 end(V57)) end end end end; _ -> fun (V63) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V21)), <<"Invalid method definition"/utf8>>}, V63)) end end.
'nested--11310-13778--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V27 of [] -> fun (V28) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V29, V30) -> begin (V31 = ('nested--11310-13777--in--un--topMethType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V29))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V45 = case V35 of {'Builtin.MkPair', V36, V37} -> begin (V38 = ('nested--11310-13778--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V37, V20)), V21, V22, V23, V24, V25, V26, V30))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V44 = fun (V43) -> {'Prelude.Types.Right', [V36 | V42]} end), V44 end(V39)) end end end end end), V45 end(V32)) end end end end end(E0, E1)) end.
'nested--11310-13777--in--un--topMethType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> begin (V32 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V19, ('nested--11310-13774--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, case V27 of {'Idris.Syntax.MkMethod', V28, V29, V30, V31} -> V28 end))))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V52 = begin (V38 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V37) -> ('nested--11310-13775--in--un--applyCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V21, V37)) end, V26, []))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V51 = begin (V43 = V42), begin (V48 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, V43, case V27 of {'Idris.Syntax.MkMethod', V44, V45, V46, V47} -> V47 end))), ('case--elabImplementation,topMethType-14447'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V27, V26, V25, V24, V23, V22, V21, V20, V36, V42, V43, V48, begin (V50 = (begin (V49 = ('Idris.Idris2.TTImp.BindImplicits':'un--renameIBinds'(V23, ('Idris.Idris2.TTImp.TTImp':'un--findImplicits'(V48)), V48))), V49 end([]))), V50 end)) end end), V51 end(V39)) end end end end), V52 end(V33)) end end end end.
'nested--10878-13273--in--un--toForward'(V0) -> case V0 of $\x{5c} -> $/; _ -> V0 end.
'nested--11022-13434--in--un--specialiseMeth'(V0, V1, V2, V3, V4, V5, V6) -> {'Builtin.MkPair', V6, {'TTImp.TTImp.INamedApp', V5, {'TTImp.TTImp.IVar', V5, V6}, {'Core.Name.UN', {'Core.Name.Basic', <<"__con"/utf8>>}}, {'TTImp.TTImp.IVar', V5, V4}}}.
'nested--11310-13779--in--un--mkTopMethDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Builtin.MkPair', V21, V22} -> case V22 of {'Builtin.MkPair', V23, V24} -> case V24 of {'Builtin.MkPair', V25, V26} -> case V26 of {'Builtin.MkPair', V27, V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> begin (V32 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V12 end, fun () -> fun (V31) -> [{'TTImp.TTImp.Totality', V31} | V12] end end, V29))), {'TTImp.TTImp.IClaim', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V27, V13, V32, {'TTImp.TTImp.MkImpTy', {'Core.FC.EmptyFC'}, {'Core.FC.EmptyFC'}, V23, V30}} end end end end end end.
'nested--11310-13773--in--un--mkMethField'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V22 of {'Builtin.MkPair', V23, V24} -> case V24 of {'Builtin.MkPair', V25, V26} -> case V26 of {'Builtin.MkPair', V27, V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> case V30 of {'Builtin.MkPair', V31, V32} -> begin (V46 = ((begin (V43 = fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V41, V42)) end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end(fun (V38) -> ('nested--11415-14095--in--un--applyUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, V25, V27, V29, V31, V32, V21, V20, V38)) end))(('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [] end, fun () -> fun (V33) -> V33 end end, ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V36, V37)) end end}, ('Idris.Idris2.Core.Name':'un--dropNS'(V23)), V21))))))), begin (V55 = ((begin (V52 = fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V50, V51)) end end end end), fun (V53) -> fun (V54) -> ((((V52('erased'))('erased'))(V53))(V54)) end end end(fun (V47) -> ('Idris.Idris2.Builtin':'un--fst'(V47)) end))(V20))), ('nested--11310-13771--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V46, ('nested--11310-13769--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, ('nested--11310-13772--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V25}, V46)), ((begin (V61 = fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V59, V60)) end end end end), fun (V62) -> fun (V63) -> ((((V61('erased'))('erased'))(V62))(V63)) end end end(fun (V56) -> {'Builtin.MkPair', V56, {'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), {'Core.Name.UN', {'Core.Name.Basic', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V56))}}}} end))(V55)))))) end end end end end end end.
'nested--11310-13771--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of [] -> V21; [E0 | E1] -> (fun (V22, V23) -> case V22 of {'Builtin.MkPair', V24, V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> {'TTImp.TTImp.ILam', {'Core.FC.EmptyFC'}, V26, V27, {'Prelude.Types.Just', V24}, {'TTImp.TTImp.Implicit', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), 0}, ('nested--11310-13771--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, V21))} end end end(E0, E1)) end.
'nested--11310-13780--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Builtin.MkPair', V21, V22} -> case V21 of {'Core.Name.UN', V23} -> case V22 of {'Builtin.MkPair', V24, V25} -> {'Builtin.MkPair', {'Core.Name.UN', V23}, V24}; _ -> case V22 of {'Builtin.MkPair', V26, V27} -> {'Builtin.MkPair', {'Core.Name.UN', {'Core.Name.Basic', ('Idris.Idris2.Core.Name':'un--nameRoot'(V21))}}, V26} end end; {'Core.Name.NS', V28, V29} -> case V22 of {'Builtin.MkPair', V30, V31} -> ('nested--11310-13780--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'Builtin.MkPair', V29, {'Builtin.MkPair', V30, V31}})); _ -> case V22 of {'Builtin.MkPair', V32, V33} -> {'Builtin.MkPair', {'Core.Name.UN', {'Core.Name.Basic', ('Idris.Idris2.Core.Name':'un--nameRoot'(V21))}}, V32} end end; _ -> case V22 of {'Builtin.MkPair', V34, V35} -> {'Builtin.MkPair', {'Core.Name.UN', {'Core.Name.Basic', ('Idris.Idris2.Core.Name':'un--nameRoot'(V21))}}, V34} end end end.
'nested--11310-13774--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Core.Name.NS', V21, V22} -> ('nested--11310-13774--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V22)); _ -> {'Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20)), {'Core.Name.UN', {'Core.Name.Basic', <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20))/binary, <<<<"_"/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5))/binary, <<<<"_"/utf8>>/binary, <<case V3 of 1 -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)); 0 -> <<""/utf8>> end/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"_"/utf8>>, ((begin (V31 = fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V29, V30)) end end end end), fun (V32) -> fun (V33) -> ((((V31('erased'))('erased'))(V32))(V33)) end end end(fun (V23) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V25, V26)) end end}, V23)) end))(V4))))/binary>>/binary>>/binary>>/binary>>/binary>>}}} end.
'nested--11310-13769--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of [] -> V20; [E0 | E1] -> (fun (V22, V23) -> case V22 of {'Builtin.MkPair', V24, V25} -> ('nested--11310-13769--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.INamedApp', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V20, V24, V25}, V23)) end end(E0, E1)) end.
'nested--11310-13768--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Core.TT.Bind', V21, V22, V23, V24} -> case V23 of {'Core.TT.Pi', V25, V26, V27, V28} -> [{'Builtin.MkPair', V22, ('nested--11410-13857--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V21, V25, V26, V27, V28, V22, V24, V28))} | ('nested--11310-13768--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V24))]; _ -> [] end; _ -> [] end.
'nested--11410-13857--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V27 of {'Core.TT.Bind', V28, V29, V30, V31} -> case V30 of {'Core.TT.Pi', V32, V33, V34, V35} -> [{'Builtin.MkPair', V29, {'Builtin.MkPair', V33, ('Idris.Idris2.Core.TT':'un--forgetDef'(V34))}} | ('nested--11410-13857--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V31))]; _ -> [] end; _ -> [] end.
'nested--11310-13781--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V24, V25)) end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V26, V27)) end end}, V22, V20)) of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V21, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V22))/binary, <<<<" is not a method of "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5))/binary>>/binary>>}, V23)); {'Prelude.Types.Just', V28} -> {'Prelude.Types.Right', V28} end.
'nested--11022-13435--in--un--extendBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of [] -> {'Builtin.MkPair', V8, V6}; [E0 | E1] -> (fun (V9, V10) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V14)) end end}, V9, V1)) of {'Prelude.Types.Nothing'} -> ('nested--11022-13435--in--un--extendBody'(V0, V1, V2, V3, V4, V5, [V9 | V6], V10, V8)); {'Prelude.Types.Just', V15} -> begin (V24 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3, ((begin (V21 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V19, V20)) end end end end), fun (V22) -> fun (V23) -> ((((V21('erased'))('erased'))(V22))(V23)) end end end(fun (V16) -> ('nested--11022-13434--in--un--specialiseMeth'(V0, V1, V2, V3, V4, V5, V16)) end))(V2))))), begin (V33 = ((begin (V30 = fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V28, V29)) end end end end), fun (V31) -> fun (V32) -> ((((V30('erased'))('erased'))(V31))(V32)) end end end(fun (V25) -> ('Idris.Idris2.TTImp.Utils':'un--substNamesClause'([], V24, V25)) end))(V15))), ('nested--11022-13435--in--un--extendBody'(V0, V1, V2, V3, V4, V5, V6, V10, [{'TTImp.TTImp.IDef', V5, V9, ((begin (V39 = fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V37, V38)) end end end end), fun (V40) -> fun (V41) -> ((((V39('erased'))('erased'))(V40))(V41)) end end end(fun (V34) -> ('Idris.Idris2.TTImp.Utils':'un--substLocClause'(V5, V34)) end))(V33))} | V8])) end end end end(E0, E1)) end.
'nested--11022-13436--in--un--dropGot'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> V6; [E0 | E1] -> (fun (V8, V9) -> case V8 of {'TTImp.TTImp.IDef', V10, V11, V12} -> ('nested--11022-13436--in--un--dropGot'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V11)) end, V6)), V9)); _ -> ('nested--11022-13436--in--un--dropGot'(V0, V1, V2, V3, V4, V5, V6, V9)) end end(E0, E1)) end.
'nested--11310-13776--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of [] -> V21; [E0 | E1] -> (fun (V22, V23) -> case V22 of {'Builtin.MkPair', V24, V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> {'TTImp.TTImp.IPi', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V26, {'Core.TT.Implicit'}, {'Prelude.Types.Just', V24}, V27, ('nested--11310-13776--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, V21))} end end end(E0, E1)) end.
'nested--11310-13770--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of [] -> V20; [E0 | E1] -> (fun (V22, V23) -> ('nested--11310-13770--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.IAutoApp', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V20)), V20, V22}, V23)) end(E0, E1)) end.
'nested--11415-14095--in--un--applyUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> case V28 of {'Builtin.MkPair', V29, V30} -> case V29 of {'Core.Name.UN', V31} -> case V31 of {'Core.Name.Basic', V32} -> case V30 of {'Builtin.MkPair', V33, V34} -> ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> {'Builtin.MkPair', {'Core.Name.UN', {'Core.Name.Basic', V32}}, {'Builtin.MkPair', V33, V34}} end, fun () -> fun (V35) -> {'Builtin.MkPair', {'Core.Name.UN', {'Core.Name.Basic', V35}}, {'Builtin.MkPair', V33, V34}} end end, ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V36, V37)) end end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V38, V39)) end end}, V32, V22)))); _ -> V28 end; _ -> V28 end; _ -> V28 end; _ -> V28 end.
'nested--11310-13772--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of [] -> V20; [E0 | E1] -> (fun (V22, V23) -> case V22 of {'Builtin.MkPair', V24, V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> case V27 of {'Core.TT.Explicit'} -> ('nested--11310-13772--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.IApp', {'Core.FC.EmptyFC'}, V20, {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V24}}, V23)); {'Core.TT.AutoImplicit'} -> ('nested--11310-13772--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.INamedApp', {'Core.FC.EmptyFC'}, V20, V24, {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V24}}, V23)); {'Core.TT.Implicit'} -> ('nested--11310-13772--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.INamedApp', {'Core.FC.EmptyFC'}, V20, V24, {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V24}}, V23)); {'Core.TT.DefImplicit', V28} -> ('nested--11310-13772--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, {'TTImp.TTImp.INamedApp', {'Core.FC.EmptyFC'}, V20, V24, {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V24}}, V23)) end end end end(E0, E1)) end.
'nested--11310-13767--in--un--applyEnv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> begin (V21 = ('Idris.Idris2.Core.Context':'un--resolveName'(V19, V20))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V29 = fun (V26) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Core.Name.Resolved', V25}, {'Builtin.MkPair', {'Prelude.Types.Nothing'}, {'Builtin.MkPair', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('Idris.Idris2.Core.Env':'un--allVars'(V8, V10)))), fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.UnifyState':'un--applyToFull'(V8, ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), {'Core.TT.Ref', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V28, {'Core.Name.Resolved', V25}}, V10)) end end}}}} end), V29 end(V22)) end end end end.
'nested--11310-13775--in--un--applyCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> begin (V22 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V19, ('nested--11310-13774--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V21))))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V28 = fun (V27) -> {'Prelude.Types.Right', {'Builtin.MkPair', ('Idris.Idris2.Core.Name':'un--dropNS'(V21)), {'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V26}}} end), V28 end(V23)) end end end end.
'nested--11310-13785--in--un--addTransform'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> begin (V49 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 3, fun () -> <<<<"Adding transform for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V22 of {'Idris.Syntax.MkMethod', V23, V24, V25, V26} -> V23 end))/binary, <<<<" : "/utf8>>/binary, <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V27) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V28, V29)) end end}, case V22 of {'Idris.Syntax.MkMethod', V30, V31, V32, V33} -> V33 end))/binary, <<<<"\x{a}\x{9}for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20))/binary, <<<<" in "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V36, V37)) end end}, {'Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V39, V40)) end end}}, V34)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}, {'Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V47, V48)) end end}}, V41, V42)) end end}, V21))/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>> end))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V93 = begin (V58 = {'TTImp.TTImp.INamedApp', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), {'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), case V22 of {'Idris.Syntax.MkMethod', V54, V55, V56, V57} -> V54 end}, {'Core.Name.UN', {'Core.Name.Basic', <<"__con"/utf8>>}}, {'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V20}}), case ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V59, V60)) end end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V61, V62)) end end}, ('Idris.Idris2.Core.Name':'un--dropNS'(case V22 of {'Idris.Syntax.MkMethod', V63, V64, V65, V66} -> V63 end)), V21)) of {'Prelude.Types.Just', V67} -> begin (V68 = {'TTImp.TTImp.IVar', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), V67}), begin (V75 = ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V69)) end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V70, V71)) end end}, V58))/binary, <<<<" ==> "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V72) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V73, V74)) end end}, V68))/binary>>/binary>> end))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V91 = ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V19, V18, ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V19, V16, V18, V17, V15, [], V9, V10, {'TTImp.TTImp.ITransform', ('nested--11310-13766--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19)), {'Core.Name.UN', {'Core.Name.Basic', <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V22 of {'Idris.Syntax.MkMethod', V80, V81, V82, V83} -> V80 end))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20))/binary>>/binary>>}}, V58, V68})), fun (V84) -> ('Idris.Idris2.Core.Context.Log':'un--log'(V19, <<"elab.implementation"/utf8>>, 5, fun () -> <<<<"Can\x{27}t add transform "/utf8>>/binary, <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V85)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V86, V87)) end end}, V58))/binary, <<<<" ==> "/utf8>>/binary, <<('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V88) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V88)) end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V89, V90)) end end}, V68))/binary, <<<<"\x{a}\x{9}"/utf8>>/binary, ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V84))/binary>>/binary>>/binary>>/binary>>/binary>> end)) end))), V91 end(V76)) end end end end end; {'Prelude.Types.Nothing'} -> fun (V92) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end end), V93 end(V50)) end end end end.
'un--replaceSep'(V0) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(((begin (V6 = fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4, V5)) end end end end), fun (V7) -> fun (V8) -> ((((V6('erased'))('erased'))(V7))(V8)) end end end(fun (V1) -> ('nested--10878-13273--in--un--toForward'(V1)) end))(('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V0)))))).
'un--mkImplName'(V0, V1, V2) -> {'Core.Name.DN', <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))/binary, <<<<" implementation at "/utf8>>/binary, ('un--replaceSep'(('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V0))))/binary>>/binary>>, {'Core.Name.UN', {'Core.Name.Basic', <<<<"__Impl_"/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))/binary, <<<<"_"/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"_"/utf8>>, ((begin (V11 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V9, V10)) end end end end), fun (V12) -> fun (V13) -> ((((V11('erased'))('erased'))(V12))(V13)) end end end(fun (V3) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V4) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)) end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V5, V6)) end end}, V3)) end))(V2))))/binary>>/binary>>/binary>>}}}.
'un--getMethImps'(V0, V1, V2, V3) -> case V3 of {'Core.TT.Bind', V4, V5, V6, V7} -> case V6 of {'Core.TT.Pi', V8, V9, V10, V11} -> case V10 of {'Core.TT.Implicit'} -> begin (V35 = begin (V12 = ('Idris.Idris2.TTImp.Unelab':'un--unelabNoSugar'(V0, V1, V2, V11))), ((begin (V32 = fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V29, V30, V31)) end end end end end), fun (V33) -> fun (V34) -> ((((V32('erased'))('erased'))(V33))(V34)) end end end((begin (V24 = fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> {'Prelude.Types.Right', (V20(V23))} end end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end(fun (V13) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V14) -> case V14 of {'Core.TT.MkKindedName', V15, V16, V17} -> V17 end end, V13)) end))))(V12)) end), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V47 = begin (V40 = ('un--getMethImps'([V5 | V0], V1, {'Core.Env.::', {'Core.TT.Pi', V8, V9, {'Core.TT.Implicit'}, V11}, V2}, V7))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V46 = fun (V45) -> {'Prelude.Types.Right', [{'Builtin.MkPair', V5, {'Builtin.MkPair', V9, V39}} | V44]} end), V46 end(V41)) end end end end), V47 end(V36)) end end end end; _ -> fun (V48) -> {'Prelude.Types.Right', []} end end; _ -> fun (V49) -> {'Prelude.Types.Right', []} end end; _ -> fun (V50) -> {'Prelude.Types.Right', []} end end.
'un--elabImplementation'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> begin (V29 = case ('Idris.Idris2.Data.List':'un--lookup'({'Prelude.EqOrd.MkEq', fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V22, V23)) end end}, V17, begin (V24 = V11), V24 end)) of {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> case V26 of {'Prelude.Types.Just', V28} -> V28; _ -> V17 end; _ -> V17 end; _ -> V17 end), begin (V30 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, V29))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V119 = begin (V40 = begin (V35 = V3), fun (V36) -> begin (V39 = (begin (V37 = V35), fun (V38) -> ('erlang':'get'(V37)) end end(V36))), {'Prelude.Types.Right', V39} end end end), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V118 = begin (V50 = begin (V45 = V1), fun (V46) -> begin (V49 = (begin (V47 = V45), fun (V48) -> ('erlang':'get'(V47)) end end(V46))), {'Prelude.Types.Right', V49} end end end), fun (V51) -> begin (V52 = (V50(V51))), case V52 of {'Prelude.Types.Left', V53} -> {'Prelude.Types.Left', V53}; {'Prelude.Types.Right', V54} -> (begin (V117 = begin (V87 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V14, case V54 of {'Core.Context.MkDefs', V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86} -> V55 end))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V116 = ('case--elabImplementation-16016'(V19, V18, V17, V16, V15, V14, V13, V12, V0, V11, V10, V9, V8, V7, V6, V5, V4, V3, V2, V1, V29, V34, V44, V54, V91, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V92) -> fun (V93) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V92, V93)) end end, []}, fun (V94) -> ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V94, case V44 of {'Idris.Syntax.MkSyntax', V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107} -> V101 end)) end, ((begin (V113 = fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V111, V112)) end end end end), fun (V114) -> fun (V115) -> ((((V113('erased'))('erased'))(V114))(V115)) end end end(fun (V108) -> ('Idris.Idris2.Builtin':'un--fst'(V108)) end))(V91))))))), V116 end(V88)) end end end end), V117 end(V51)) end end end end), V118 end(V41)) end end end end), V119 end(V31)) end end end end end.
'un--bindImpls'(V0, V1) -> case V0 of [] -> V1; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Builtin.MkPair', V4, V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> case V7 of {'Builtin.MkPair', V8, V9} -> {'TTImp.TTImp.IPi', V4, V6, {'Core.TT.Implicit'}, {'Prelude.Types.Just', V8}, V9, ('un--bindImpls'(V3, V1))} end end end end(E0, E1)) end.
'un--bindConstraints'(V0, V1, V2, V3) -> case V2 of [] -> V3; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Builtin.MkPair', V6, V7} -> {'TTImp.TTImp.IPi', V0, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V1, V6, V7, ('un--bindConstraints'(V0, V1, V5, V3))} end end(E0, E1)) end.
'un--addDefaults'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('nested--11022-13436--in--un--dropGot'(V5, V4, V3, V2, V1, V0, V3, V5))), ('nested--11022-13435--in--un--extendBody'(V5, V4, V3, V2, V1, V0, [], V6, V5)) end.
