-module('Idris.Idris2.Idris.Pretty.Render').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--renderWithoutColor'/2,
  'un--renderWithSpans'/2,
  'un--render'/3,
  'un--getPageWidth'/1
]).
'un--renderWithoutColor'(V0, V1) -> begin (V2 = ('un--getPageWidth'(V0))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V10 = begin (V7 = V6), begin (V8 = (('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--layoutPretty'(V7))(V1))), fun (V9) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.Terminal':'un--renderString'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unAnnotateS'(V8))))} end end end), V10 end(V3)) end end end end.
'un--renderWithSpans'(V0, V1) -> begin (V2 = ('un--getPageWidth'(V0))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V10 = begin (V7 = V6), begin (V8 = (('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--layoutPretty'(V7))(V1))), fun (V9) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--displaySpans'(V8))} end end end), V10 end(V3)) end end end end.
'un--render'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Idris.REPL.Opts':'un--getColor'(V0))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V75 = begin (V60 = begin (V37 = fun (V8) -> begin (V36 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V11, V12, V13)) end end end end end, fun (V14) -> fun (V15) -> fun (V16) -> V15 end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> begin (V22 = (V19(V21))), begin (V23 = (V20(V21))), (V22(V23)) end end end end end end end}, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), ((V27(V29))(V28)) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V31(V32))), (V33(V32)) end end end end}, fun (V34) -> fun (V35) -> V35 end end}, <<"TERM"/utf8>>))(V8))), {'Prelude.Types.Right', V36} end end), ((begin (V57 = fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V54, V55, V56)) end end end end end), fun (V58) -> fun (V59) -> ((((V57('erased'))('erased'))(V58))(V59)) end end end((begin (V49 = fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> {'Prelude.Types.Right', (V45(V48))} end end end end end), fun (V50) -> fun (V51) -> ((((V49('erased'))('erased'))(V50))(V51)) end end end(fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'({'Prelude.EqOrd.MkEq', fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V41, V42)) end end}, {'Prelude.Types.Just', <<"dumb"/utf8>>}, V38)) end))))(V37)) end), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V74 = begin (V65 = ('un--getPageWidth'(V0))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V73 = begin (V70 = V69), begin (V71 = (('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--layoutPretty'(V70))(V2))), fun (V72) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.Terminal':'un--renderString'(case case V7 of 1 -> case V64 of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotateS'(V1, V71)); 0 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unAnnotateS'(V71)) end))} end end end), V73 end(V66)) end end end end), V74 end(V61)) end end end end), V75 end(V4)) end end end end.
'un--getPageWidth'(V0) -> begin (V1 = ('Idris.Idris2.Idris.REPL.Opts':'un--getConsoleWidth'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V22 = case V5 of {'Prelude.Types.Nothing'} -> begin (V8 = fun (V6) -> begin (V7 = ('Idris.Idris2.Libraries.Utils.Term':'un--getTermCols'(V6))), {'Prelude.Types.Right', V7} end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V15 = fun (V13) -> {'Prelude.Types.Right', case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V12, begin (V14 = 0), case ((V14 band 9223372036854775808) =/= 0) of 'true' -> (V14 bor -9223372036854775808); _ -> (V14 band 9223372036854775807) end end)) of 1 -> {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.Unbounded'}; 0 -> {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.AvailablePerLine', V12, 1.0} end} end), V15 end(V9)) end end end end; {'Prelude.Types.Just', V16} -> fun (V17) -> case V16 of 0 -> {'Prelude.Types.Right', {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.Unbounded'}}; _ -> {'Prelude.Types.Right', {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.AvailablePerLine', (begin (V20 = fun (V18) -> begin (V19 = V18), case ((V19 band 9223372036854775808) =/= 0) of 'true' -> (V19 bor -9223372036854775808); _ -> (V19 band 9223372036854775807) end end end), fun (V21) -> (V20(V21)) end end(V16)), 1.0}} end end end), V22 end(V2)) end end end end.
