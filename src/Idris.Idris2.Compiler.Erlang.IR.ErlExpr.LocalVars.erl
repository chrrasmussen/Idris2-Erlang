-module('Idris.Idris2.Compiler.Erlang.IR.ErlExpr.LocalVars').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--show_Show_LocalVar'/1,
  'dn--un--showPrec_Show_LocalVar'/2,
  'dn--un--__Impl_Show_LocalVar'/0,
  'un--newLocalVar'/0,
  'un--initLocalVars'/1
]).
'dn--un--show_Show_LocalVar'(V0) -> case V0 of {'Compiler.Erlang.IR.ErlExpr.LocalVars.MkLocalVar', V1, V2} -> <<V1/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V2))/binary>> end.
'dn--un--showPrec_Show_LocalVar'(V0, V1) -> ('dn--un--show_Show_LocalVar'(V1)).
'dn--un--__Impl_Show_LocalVar'() -> {'Prelude.Show.MkShow', fun (V0) -> ('dn--un--show_Show_LocalVar'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_LocalVar'(V1, V2)) end end}.
'un--newLocalVar'() -> ('Idris.Idris2.Control.Monad.State.State':'dn--un-->>=_Monad_((StateT $stateType) $m)'({'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'(V2, V3)) end end end end, fun (V4) -> fun (V5) -> V5 end end, fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--<*>_Applicative_Identity'(V8, V9)) end end end end}, fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un-->>=_Monad_Identity'(V12, V13)) end end end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--join_Monad_Identity'(V15)) end end}, fun (V16) -> {'Builtin.MkPair', V16, V16} end, fun (V17) -> case V17 of {'Compiler.Erlang.IR.ErlExpr.LocalVars.MkLocalVars', V18, V19} -> ('Idris.Idris2.Control.Monad.State.State':'dn--un-->>=_Monad_((StateT $stateType) $m)'({'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'(V22, V23)) end end end end, fun (V24) -> fun (V25) -> V25 end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--<*>_Applicative_Identity'(V28, V29)) end end end end}, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un-->>=_Monad_Identity'(V32, V33)) end end end end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--join_Monad_Identity'(V35)) end end}, fun (V36) -> {'Builtin.MkPair', {'Compiler.Erlang.IR.ErlExpr.LocalVars.MkLocalVars', V18, begin (V37 = (V19 + 1)), case ((V37 band 9223372036854775808) =/= 0) of 'true' -> (V37 bor -9223372036854775808); _ -> (V37 band 9223372036854775807) end end}, {'Builtin.MkUnit'}} end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Control.Monad.State.State':'dn--un--pure_Applicative_((StateT $stateType) $f)'({'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'(V42, V43)) end end end end, fun (V44) -> fun (V45) -> V45 end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--<*>_Applicative_Identity'(V48, V49)) end end end end}, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un-->>=_Monad_Identity'(V52, V53)) end end end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--join_Monad_Identity'(V55)) end end}, {'Compiler.Erlang.IR.ErlExpr.LocalVars.MkLocalVar', V18, V19}, V39)) end end)) end end)).
'un--initLocalVars'(V0) -> {'Compiler.Erlang.IR.ErlExpr.LocalVars.MkLocalVars', V0, 0}.
