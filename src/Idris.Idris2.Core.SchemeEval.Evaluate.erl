-module('Idris.Idris2.Core.SchemeEval.Evaluate').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in snfVector-7108'/9,
  'case--case block in case block in quoteVector-4450'/12,
  'nested--7090-3085--in--un--mkEnv'/7,
  'nested--10954-8393--in--un--findName'/5,
  'nested--8008-6062--in--un--findName'/6,
  'un--toSNF'/2,
  'un--snfVector'/4,
  'un--snfPiInfo'/3,
  'un--snfPLet'/8,
  'un--snfBinder'/9,
  'un--snf\x{27}'/3,
  'un--seval'/4,
  'un--quoteWhyErased'/2,
  'un--quoteVector'/5,
  'un--quoteTypeLevel'/1,
  'un--quoteRigCount'/1,
  'un--quotePiInfo'/4,
  'un--quotePLet'/8,
  'un--quoteOrInvalidS'/3,
  'un--quoteOrInvalid'/3,
  'un--quoteObj'/2,
  'un--quoteLazyReason'/1,
  'un--quoteFC'/1,
  'un--quoteBinderName'/1,
  'un--quoteBinder'/9,
  'un--quote\x{27}'/4,
  'un--invalidS'/1,
  'un--invalid'/1,
  'un--getArgList'/1,
  'un--getAllNames'/3
]).
'case--case block in snfVector-7108'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Libraries.Utils.Scheme.Procedure', V9} -> begin (V39 = begin (V12 = fun (V10) -> begin (V11 = (('Idris.Idris2.Libraries.Utils.Scheme':'un--evalSchemeStr'(<<"(ct-setBlockAll #t)"/utf8>>))(V10))), {'Prelude.Types.Right', V11} end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V38 = case V16 of {'Prelude.Types.Just', V17} -> begin (V18 = ('un--snf\x{27}'(V0, V6, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeForce'(V7))))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V36 = begin (V28 = fun (V23) -> begin (V27 = (('Idris.Idris2.Libraries.Utils.Scheme':'un--evalSchemeStr'((begin (V25 = fun (V24) -> V24 end), fun (V26) -> (V25(V26)) end end(<<"(ct-setBlockAll #f)"/utf8>>))))(V23))), {'Prelude.Types.Right', V27} end end), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V35 = fun (V33) -> case V32 of {'Prelude.Types.Just', V34} -> {'Prelude.Types.Right', V22}; {'Prelude.Types.Nothing'} -> ('un--invalidS'(V33)) end end), V35 end(V29)) end end end end), V36 end(V19)) end end end end; {'Prelude.Types.Nothing'} -> fun (V37) -> ('un--invalidS'(V37)) end end), V38 end(V13)) end end end end), begin (V40 = ('un--snf\x{27}'(V0, V6, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeForce'(V9))))), begin (V41 = ('un--quoteFC'(V3))), begin (V42 = ('un--quoteLazyReason'(V2))), fun (V43) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDelay', V41, V42, V40, V39}} end end end end end; _ -> fun (V44) -> ('un--invalidS'(V44)) end end.
'case--case block in case block in quoteVector-4450'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Libraries.Utils.Scheme.Procedure', V12} -> begin (V13 = ('un--quote\x{27}'(V0, V1, V7, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeForce'(V10))))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V37 = begin (V18 = ('un--quote\x{27}'(V0, V1, V7, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeForce'(V12))))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V36 = begin (V25 = fun (V23) -> begin (V24 = (('Idris.Idris2.Libraries.Utils.Scheme':'un--evalSchemeStr'(<<"(ct-setBlockAll #f)"/utf8>>))(V23))), {'Prelude.Types.Right', V24} end end), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V35 = case V29 of {'Prelude.Types.Just', V30} -> begin (V31 = ('un--quoteFC'(V4))), begin (V32 = ('un--quoteLazyReason'(V3))), fun (V33) -> {'Prelude.Types.Right', {'Core.TT.TDelay', V31, V32, V22, V17}} end end end; {'Prelude.Types.Nothing'} -> fun (V34) -> ('un--invalid'(V34)) end end), V35 end(V26)) end end end end), V36 end(V19)) end end end end), V37 end(V14)) end end end end; _ -> fun (V38) -> ('un--invalid'(V38)) end end.
'nested--7090-3085--in--un--mkEnv'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Core.Env.Nil'} -> fun (V7) -> {'Prelude.Types.Right', {'Builtin.MkPair', V6, {'Core.SchemeEval.Compile.Nil'}}} end; {'Core.Env.::', V8, V9} -> case V8 of {'Core.TT.Let', V10, V11, V12, V13} -> begin (V14 = ('Idris.Idris2.Core.SchemeEval.Compile':'un--nextName'(V4))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V36 = begin (V19 = ('nested--7090-3085--in--un--mkEnv'(V0, V1, V2, V3, V4, V9, V6))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V35 = case V23 of {'Builtin.MkPair', V24, V25} -> begin (V26 = ('Idris.Idris2.Core.SchemeEval.Compile':'un--compile'(V4, V3, V25, V12))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V34 = begin (V31 = <<<<"let-var-"/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Integer'(V18))/binary>>), fun (V32) -> {'Prelude.Types.Right', {'Builtin.MkPair', fun (V33) -> {'Libraries.Utils.Scheme.Let', V31, V30, (V24(V33))} end, {'Core.SchemeEval.Compile.::', {'Core.SchemeEval.Compile.Bound', V31}, V25}}} end end), V34 end(V27)) end end end end end), V35 end(V20)) end end end end), V36 end(V15)) end end end end; _ -> begin (V37 = ('Idris.Idris2.Core.SchemeEval.Compile':'un--nextName'(V4))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V51 = begin (V42 = ('nested--7090-3085--in--un--mkEnv'(V0, V1, V2, V3, V4, V9, V6))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V50 = fun (V47) -> case V46 of {'Builtin.MkPair', V48, V49} -> {'Prelude.Types.Right', {'Builtin.MkPair', V48, {'Core.SchemeEval.Compile.::', {'Core.SchemeEval.Compile.Free', <<<<"free-"/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Integer'(V41))/binary>>}, V49}}} end end), V50 end(V43)) end end end end), V51 end(V38)) end end end end end end.
'nested--10954-8393--in--un--findName'(V0, V1, V2, V3, V4) -> case V3 of {'Core.SchemeEval.Compile.Nil'} -> {'Core.SchemeEval.Evaluate.SApp', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.SchemeEval.Evaluate.SRef', {'Core.TT.Func'}, {'Core.Name.UN', {'Core.Name.Basic', V4}}}, []}; {'Core.SchemeEval.Compile.::', V5, V6} -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(('Idris.Idris2.Core.SchemeEval.Compile':'un--getName'(V5)), V4)) of 1 -> {'Core.SchemeEval.Evaluate.SApp', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.SchemeEval.Evaluate.SLocal', 0}, []}; 0 -> case ('nested--10954-8393--in--un--findName'(V0, V1, V2, V6, V4)) of {'Core.SchemeEval.Evaluate.SApp', V7, V8, V9} -> case V8 of {'Core.SchemeEval.Evaluate.SLocal', V10} -> {'Core.SchemeEval.Evaluate.SApp', V7, {'Core.SchemeEval.Evaluate.SLocal', (V10 + 1)}, []}; _ -> {'Core.SchemeEval.Evaluate.SApp', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.SchemeEval.Evaluate.SRef', {'Core.TT.Func'}, {'Core.Name.UN', {'Core.Name.Basic', V4}}}, []} end; _ -> {'Core.SchemeEval.Evaluate.SApp', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.SchemeEval.Evaluate.SRef', {'Core.TT.Func'}, {'Core.Name.UN', {'Core.Name.Basic', V4}}}, []} end end end.
'nested--8008-6062--in--un--findName'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Core.SchemeEval.Compile.Nil'} -> {'Core.TT.Ref', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Func'}, {'Core.Name.UN', {'Core.Name.Basic', V5}}}; {'Core.SchemeEval.Compile.::', V6, V7} -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(('Idris.Idris2.Core.SchemeEval.Compile':'un--getName'(V6)), V5)) of 1 -> {'Core.TT.Local', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Prelude.Types.Nothing'}, 0}; 0 -> case ('nested--8008-6062--in--un--findName'(V0, V1, V2, V3, V7, V5)) of {'Core.TT.Local', V8, V9, V10} -> {'Core.TT.Local', V8, V9, (V10 + 1)}; _ -> {'Core.TT.Ref', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Func'}, {'Core.Name.UN', {'Core.Name.Basic', V5}}} end end end.
'un--toSNF'(V0, V1) -> case V1 of {'Core.SchemeEval.Evaluate.MkSObj', V2, V3} -> ('un--snf\x{27}'(V0, V3, V2)) end.
'un--snfVector'(V0, V1, V2, V3) -> case V2 of -2 -> case V3 of [E12 | E13] -> (fun (V4, V5) -> case V5 of [E20 | E21] -> (fun (V6, V7) -> case V7 of [E28 | E29] -> (fun (V8, V9) -> case V9 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V10) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V10)) end, fun (V11) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V11)) end}, V6, fun (V12) -> begin (V21 = ((begin (V18 = fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V16, V17)) end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end(fun (V13) -> ('un--snf\x{27}'(V0, V1, V13)) end))(('un--getArgList'(V8))))), fun (V22) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SApp', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.SchemeEval.Evaluate.SRef', {'Core.TT.Func'}, V12}, V21}} end end end)); _ -> case V3 of [E30 | E31] -> (fun (V23, V24) -> case V24 of [E32 | E33] -> (fun (V25, V26) -> case V26 of [E34 | E35] -> (fun (V27, V28) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V29) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V29)) end, fun (V30) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V30)) end}, V25, fun (V31) -> begin (V32 = ('un--quoteFC'(V27))), begin (V41 = ((begin (V38 = fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V36, V37)) end end end end), fun (V39) -> fun (V40) -> ((((V38('erased'))('erased'))(V39))(V40)) end end end(fun (V33) -> ('un--snf\x{27}'(V0, V1, V33)) end))(V28))), fun (V42) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V32, V31, begin (V43 = V2), case ((V43 band 9223372036854775808) =/= 0) of 'true' -> (V43 bor -9223372036854775808); _ -> (V43 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V41)), V41}} end end end end)); 0 -> fun (V44) -> ('un--invalidS'(V44)) end end end(E34, E35)); _ -> fun (V45) -> ('un--invalidS'(V45)) end end end(E32, E33)); _ -> fun (V46) -> ('un--invalidS'(V46)) end end end(E30, E31)); _ -> fun (V47) -> ('un--invalidS'(V47)) end end end end(E28, E29)); _ -> case V3 of [E22 | E23] -> (fun (V48, V49) -> case V49 of [E24 | E25] -> (fun (V50, V51) -> case V51 of [E26 | E27] -> (fun (V52, V53) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V54) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V54)) end, fun (V55) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V55)) end}, V50, fun (V56) -> begin (V57 = ('un--quoteFC'(V52))), begin (V66 = ((begin (V63 = fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V61, V62)) end end end end), fun (V64) -> fun (V65) -> ((((V63('erased'))('erased'))(V64))(V65)) end end end(fun (V58) -> ('un--snf\x{27}'(V0, V1, V58)) end))(V53))), fun (V67) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V57, V56, begin (V68 = V2), case ((V68 band 9223372036854775808) =/= 0) of 'true' -> (V68 bor -9223372036854775808); _ -> (V68 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V66)), V66}} end end end end)); 0 -> fun (V69) -> ('un--invalidS'(V69)) end end end(E26, E27)); _ -> fun (V70) -> ('un--invalidS'(V70)) end end end(E24, E25)); _ -> fun (V71) -> ('un--invalidS'(V71)) end end end(E22, E23)); _ -> fun (V72) -> ('un--invalidS'(V72)) end end end end(E20, E21)); _ -> case V3 of [E14 | E15] -> (fun (V73, V74) -> case V74 of [E16 | E17] -> (fun (V75, V76) -> case V76 of [E18 | E19] -> (fun (V77, V78) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V79) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V79)) end, fun (V80) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V80)) end}, V75, fun (V81) -> begin (V82 = ('un--quoteFC'(V77))), begin (V91 = ((begin (V88 = fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V86, V87)) end end end end), fun (V89) -> fun (V90) -> ((((V88('erased'))('erased'))(V89))(V90)) end end end(fun (V83) -> ('un--snf\x{27}'(V0, V1, V83)) end))(V78))), fun (V92) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V82, V81, begin (V93 = V2), case ((V93 band 9223372036854775808) =/= 0) of 'true' -> (V93 bor -9223372036854775808); _ -> (V93 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V91)), V91}} end end end end)); 0 -> fun (V94) -> ('un--invalidS'(V94)) end end end(E18, E19)); _ -> fun (V95) -> ('un--invalidS'(V95)) end end end(E16, E17)); _ -> fun (V96) -> ('un--invalidS'(V96)) end end end(E14, E15)); _ -> fun (V97) -> ('un--invalidS'(V97)) end end end end(E12, E13)); _ -> case V3 of [E6 | E7] -> (fun (V98, V99) -> case V99 of [E8 | E9] -> (fun (V100, V101) -> case V101 of [E10 | E11] -> (fun (V102, V103) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V104) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V104)) end, fun (V105) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V105)) end}, V100, fun (V106) -> begin (V107 = ('un--quoteFC'(V102))), begin (V116 = ((begin (V113 = fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V111, V112)) end end end end), fun (V114) -> fun (V115) -> ((((V113('erased'))('erased'))(V114))(V115)) end end end(fun (V108) -> ('un--snf\x{27}'(V0, V1, V108)) end))(V103))), fun (V117) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V107, V106, begin (V118 = V2), case ((V118 band 9223372036854775808) =/= 0) of 'true' -> (V118 bor -9223372036854775808); _ -> (V118 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V116)), V116}} end end end end)); 0 -> fun (V119) -> ('un--invalidS'(V119)) end end end(E10, E11)); _ -> fun (V120) -> ('un--invalidS'(V120)) end end end(E8, E9)); _ -> fun (V121) -> ('un--invalidS'(V121)) end end end(E6, E7)); _ -> fun (V122) -> ('un--invalidS'(V122)) end end end; -10 -> case V3 of [E42 | E43] -> (fun (V123, V124) -> case V124 of [E50 | E51] -> (fun (V125, V126) -> case V126 of [E58 | E59] -> (fun (V127, V128) -> case V128 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V129) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V130) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V130)) end, fun (V131) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V131)) end}, {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V132) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V132)) end, fun (V133) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V133)) end}}, V129)) end, fun (V134) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V135) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V135)) end, fun (V136) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V136)) end}, {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V137) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V137)) end, fun (V138) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V138)) end}}, V134)) end}, V125, fun (V139) -> case V139 of {'Builtin.MkPair', V140, V141} -> begin (V145 = (begin (V143 = fun (V142) -> ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(V142)) end), fun (V144) -> (V143(V144)) end end(V141))), begin (V154 = ((begin (V151 = fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V149, V150)) end end end end), fun (V152) -> fun (V153) -> ((((V151('erased'))('erased'))(V152))(V153)) end end end(fun (V146) -> ('un--snf\x{27}'(V0, V1, V146)) end))(('un--getArgList'(V127))))), begin (V160 = begin (V155 = V0), fun (V156) -> begin (V159 = (begin (V157 = V155), fun (V158) -> ('erlang':'get'(V157)) end end(V156))), {'Prelude.Types.Right', V159} end end end), fun (V161) -> begin (V162 = (V160(V161))), case V162 of {'Prelude.Types.Left', V163} -> {'Prelude.Types.Left', V163}; {'Prelude.Types.Right', V164} -> (begin (V217 = begin (V170 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V165) -> fun (V166) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V165, V166)) end end, fun (V167) -> fun (V168) -> fun (V169) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V167, V168, V169)) end end end}, V140))), fun (V171) -> begin (V172 = (V170(V171))), case V172 of {'Prelude.Types.Left', V173} -> {'Prelude.Types.Left', V173}; {'Prelude.Types.Right', V174} -> (begin (V216 = begin (V207 = ('Idris.Idris2.Core.Context':'un--getPosition'(V174, case V164 of {'Core.Context.MkDefs', V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206} -> V175 end))), fun (V208) -> begin (V209 = (V207(V208))), case V209 of {'Prelude.Types.Left', V210} -> {'Prelude.Types.Left', V210}; {'Prelude.Types.Right', V211} -> (begin (V215 = fun (V212) -> case V211 of {'Builtin.MkPair', V213, V214} -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SApp', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.SchemeEval.Evaluate.SMeta', V174, V213, ('Idris.Idris2.Data.List':'un--take'(V145, V154))}, ('Idris.Idris2.Data.List':'un--drop'(V145, V154))}} end end), V215 end(V208)) end end end end), V216 end(V171)) end end end end), V217 end(V161)) end end end end end end end end)); _ -> case V3 of [E60 | E61] -> (fun (V218, V219) -> case V219 of [E62 | E63] -> (fun (V220, V221) -> case V221 of [E64 | E65] -> (fun (V222, V223) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V224) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V224)) end, fun (V225) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V225)) end}, V220, fun (V226) -> begin (V227 = ('un--quoteFC'(V222))), begin (V236 = ((begin (V233 = fun (V229) -> fun (V230) -> fun (V231) -> fun (V232) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V231, V232)) end end end end), fun (V234) -> fun (V235) -> ((((V233('erased'))('erased'))(V234))(V235)) end end end(fun (V228) -> ('un--snf\x{27}'(V0, V1, V228)) end))(V223))), fun (V237) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V227, V226, begin (V238 = V2), case ((V238 band 9223372036854775808) =/= 0) of 'true' -> (V238 bor -9223372036854775808); _ -> (V238 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V236)), V236}} end end end end)); 0 -> fun (V239) -> ('un--invalidS'(V239)) end end end(E64, E65)); _ -> fun (V240) -> ('un--invalidS'(V240)) end end end(E62, E63)); _ -> fun (V241) -> ('un--invalidS'(V241)) end end end(E60, E61)); _ -> fun (V242) -> ('un--invalidS'(V242)) end end end end(E58, E59)); _ -> case V3 of [E52 | E53] -> (fun (V243, V244) -> case V244 of [E54 | E55] -> (fun (V245, V246) -> case V246 of [E56 | E57] -> (fun (V247, V248) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V249) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V249)) end, fun (V250) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V250)) end}, V245, fun (V251) -> begin (V252 = ('un--quoteFC'(V247))), begin (V261 = ((begin (V258 = fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V256, V257)) end end end end), fun (V259) -> fun (V260) -> ((((V258('erased'))('erased'))(V259))(V260)) end end end(fun (V253) -> ('un--snf\x{27}'(V0, V1, V253)) end))(V248))), fun (V262) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V252, V251, begin (V263 = V2), case ((V263 band 9223372036854775808) =/= 0) of 'true' -> (V263 bor -9223372036854775808); _ -> (V263 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V261)), V261}} end end end end)); 0 -> fun (V264) -> ('un--invalidS'(V264)) end end end(E56, E57)); _ -> fun (V265) -> ('un--invalidS'(V265)) end end end(E54, E55)); _ -> fun (V266) -> ('un--invalidS'(V266)) end end end(E52, E53)); _ -> fun (V267) -> ('un--invalidS'(V267)) end end end end(E50, E51)); _ -> case V3 of [E44 | E45] -> (fun (V268, V269) -> case V269 of [E46 | E47] -> (fun (V270, V271) -> case V271 of [E48 | E49] -> (fun (V272, V273) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V274) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V274)) end, fun (V275) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V275)) end}, V270, fun (V276) -> begin (V277 = ('un--quoteFC'(V272))), begin (V286 = ((begin (V283 = fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V281, V282)) end end end end), fun (V284) -> fun (V285) -> ((((V283('erased'))('erased'))(V284))(V285)) end end end(fun (V278) -> ('un--snf\x{27}'(V0, V1, V278)) end))(V273))), fun (V287) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V277, V276, begin (V288 = V2), case ((V288 band 9223372036854775808) =/= 0) of 'true' -> (V288 bor -9223372036854775808); _ -> (V288 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V286)), V286}} end end end end)); 0 -> fun (V289) -> ('un--invalidS'(V289)) end end end(E48, E49)); _ -> fun (V290) -> ('un--invalidS'(V290)) end end end(E46, E47)); _ -> fun (V291) -> ('un--invalidS'(V291)) end end end(E44, E45)); _ -> fun (V292) -> ('un--invalidS'(V292)) end end end end(E42, E43)); _ -> case V3 of [E36 | E37] -> (fun (V293, V294) -> case V294 of [E38 | E39] -> (fun (V295, V296) -> case V296 of [E40 | E41] -> (fun (V297, V298) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V299) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V299)) end, fun (V300) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V300)) end}, V295, fun (V301) -> begin (V302 = ('un--quoteFC'(V297))), begin (V311 = ((begin (V308 = fun (V304) -> fun (V305) -> fun (V306) -> fun (V307) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V306, V307)) end end end end), fun (V309) -> fun (V310) -> ((((V308('erased'))('erased'))(V309))(V310)) end end end(fun (V303) -> ('un--snf\x{27}'(V0, V1, V303)) end))(V298))), fun (V312) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V302, V301, begin (V313 = V2), case ((V313 band 9223372036854775808) =/= 0) of 'true' -> (V313 bor -9223372036854775808); _ -> (V313 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V311)), V311}} end end end end)); 0 -> fun (V314) -> ('un--invalidS'(V314)) end end end(E40, E41)); _ -> fun (V315) -> ('un--invalidS'(V315)) end end end(E38, E39)); _ -> fun (V316) -> ('un--invalidS'(V316)) end end end(E36, E37)); _ -> fun (V317) -> ('un--invalidS'(V317)) end end end; -11 -> case V3 of [E72 | E73] -> (fun (V318, V319) -> case V319 of [E80 | E81] -> (fun (V320, V321) -> case V321 of [E88 | E89] -> (fun (V322, V323) -> case V323 of [] -> begin (V324 = ('un--snf\x{27}'(V0, V1, V320))), fun (V325) -> begin (V326 = (V324(V325))), case V326 of {'Prelude.Types.Left', V327} -> {'Prelude.Types.Left', V327}; {'Prelude.Types.Right', V328} -> (begin (V343 = case V328 of {'Core.SchemeEval.Evaluate.SApp', V329, V330, V331} -> begin (V340 = ((begin (V337 = fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V335, V336)) end end end end), fun (V338) -> fun (V339) -> ((((V337('erased'))('erased'))(V338))(V339)) end end end(fun (V332) -> ('un--snf\x{27}'(V0, V1, V332)) end))(('un--getArgList'(V322))))), fun (V341) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SApp', V329, V330, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V331, V340))}} end end; _ -> fun (V342) -> ('un--invalidS'(V342)) end end), V343 end(V325)) end end end end; _ -> case V3 of [E90 | E91] -> (fun (V344, V345) -> case V345 of [E92 | E93] -> (fun (V346, V347) -> case V347 of [E94 | E95] -> (fun (V348, V349) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V350) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V350)) end, fun (V351) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V351)) end}, V346, fun (V352) -> begin (V353 = ('un--quoteFC'(V348))), begin (V362 = ((begin (V359 = fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V357, V358)) end end end end), fun (V360) -> fun (V361) -> ((((V359('erased'))('erased'))(V360))(V361)) end end end(fun (V354) -> ('un--snf\x{27}'(V0, V1, V354)) end))(V349))), fun (V363) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V353, V352, begin (V364 = V2), case ((V364 band 9223372036854775808) =/= 0) of 'true' -> (V364 bor -9223372036854775808); _ -> (V364 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V362)), V362}} end end end end)); 0 -> fun (V365) -> ('un--invalidS'(V365)) end end end(E94, E95)); _ -> fun (V366) -> ('un--invalidS'(V366)) end end end(E92, E93)); _ -> fun (V367) -> ('un--invalidS'(V367)) end end end(E90, E91)); _ -> fun (V368) -> ('un--invalidS'(V368)) end end end end(E88, E89)); _ -> case V3 of [E82 | E83] -> (fun (V369, V370) -> case V370 of [E84 | E85] -> (fun (V371, V372) -> case V372 of [E86 | E87] -> (fun (V373, V374) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V375) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V375)) end, fun (V376) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V376)) end}, V371, fun (V377) -> begin (V378 = ('un--quoteFC'(V373))), begin (V387 = ((begin (V384 = fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V382, V383)) end end end end), fun (V385) -> fun (V386) -> ((((V384('erased'))('erased'))(V385))(V386)) end end end(fun (V379) -> ('un--snf\x{27}'(V0, V1, V379)) end))(V374))), fun (V388) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V378, V377, begin (V389 = V2), case ((V389 band 9223372036854775808) =/= 0) of 'true' -> (V389 bor -9223372036854775808); _ -> (V389 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V387)), V387}} end end end end)); 0 -> fun (V390) -> ('un--invalidS'(V390)) end end end(E86, E87)); _ -> fun (V391) -> ('un--invalidS'(V391)) end end end(E84, E85)); _ -> fun (V392) -> ('un--invalidS'(V392)) end end end(E82, E83)); _ -> fun (V393) -> ('un--invalidS'(V393)) end end end end(E80, E81)); _ -> case V3 of [E74 | E75] -> (fun (V394, V395) -> case V395 of [E76 | E77] -> (fun (V396, V397) -> case V397 of [E78 | E79] -> (fun (V398, V399) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V400) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V400)) end, fun (V401) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V401)) end}, V396, fun (V402) -> begin (V403 = ('un--quoteFC'(V398))), begin (V412 = ((begin (V409 = fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V407, V408)) end end end end), fun (V410) -> fun (V411) -> ((((V409('erased'))('erased'))(V410))(V411)) end end end(fun (V404) -> ('un--snf\x{27}'(V0, V1, V404)) end))(V399))), fun (V413) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V403, V402, begin (V414 = V2), case ((V414 band 9223372036854775808) =/= 0) of 'true' -> (V414 bor -9223372036854775808); _ -> (V414 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V412)), V412}} end end end end)); 0 -> fun (V415) -> ('un--invalidS'(V415)) end end end(E78, E79)); _ -> fun (V416) -> ('un--invalidS'(V416)) end end end(E76, E77)); _ -> fun (V417) -> ('un--invalidS'(V417)) end end end(E74, E75)); _ -> fun (V418) -> ('un--invalidS'(V418)) end end end end(E72, E73)); _ -> case V3 of [E66 | E67] -> (fun (V419, V420) -> case V420 of [E68 | E69] -> (fun (V421, V422) -> case V422 of [E70 | E71] -> (fun (V423, V424) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V425) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V425)) end, fun (V426) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V426)) end}, V421, fun (V427) -> begin (V428 = ('un--quoteFC'(V423))), begin (V437 = ((begin (V434 = fun (V430) -> fun (V431) -> fun (V432) -> fun (V433) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V432, V433)) end end end end), fun (V435) -> fun (V436) -> ((((V434('erased'))('erased'))(V435))(V436)) end end end(fun (V429) -> ('un--snf\x{27}'(V0, V1, V429)) end))(V424))), fun (V438) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V428, V427, begin (V439 = V2), case ((V439 band 9223372036854775808) =/= 0) of 'true' -> (V439 bor -9223372036854775808); _ -> (V439 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V437)), V437}} end end end end)); 0 -> fun (V440) -> ('un--invalidS'(V440)) end end end(E70, E71)); _ -> fun (V441) -> ('un--invalidS'(V441)) end end end(E68, E69)); _ -> fun (V442) -> ('un--invalidS'(V442)) end end end(E66, E67)); _ -> fun (V443) -> ('un--invalidS'(V443)) end end end; -1 -> case V3 of [E102 | E103] -> (fun (V444, V445) -> case V445 of [E110 | E111] -> (fun (V446, V447) -> case V447 of [E118 | E119] -> (fun (V448, V449) -> case V449 of [E126 | E127] -> (fun (V450, V451) -> case V451 of [E134 | E135] -> (fun (V452, V453) -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V454) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V454)) end, fun (V455) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V455)) end}, V450, fun (V456) -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V457) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V457)) end, fun (V458) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V458)) end}, V446, fun (V459) -> begin (V460 = ('un--quoteFC'(V452))), begin (V469 = ((begin (V466 = fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V464, V465)) end end end end), fun (V467) -> fun (V468) -> ((((V466('erased'))('erased'))(V467))(V468)) end end end(fun (V461) -> ('un--snf\x{27}'(V0, V1, V461)) end))(V453))), fun (V470) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.STCon', V460, V456, begin (V471 = V459), case ((V471 band 9223372036854775808) =/= 0) of 'true' -> (V471 bor -9223372036854775808); _ -> (V471 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V469)), V469}} end end end end)) end)) end(E134, E135)); _ -> case V3 of [E128 | E129] -> (fun (V472, V473) -> case V473 of [E130 | E131] -> (fun (V474, V475) -> case V475 of [E132 | E133] -> (fun (V476, V477) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V478) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V478)) end, fun (V479) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V479)) end}, V474, fun (V480) -> begin (V481 = ('un--quoteFC'(V476))), begin (V490 = ((begin (V487 = fun (V483) -> fun (V484) -> fun (V485) -> fun (V486) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V485, V486)) end end end end), fun (V488) -> fun (V489) -> ((((V487('erased'))('erased'))(V488))(V489)) end end end(fun (V482) -> ('un--snf\x{27}'(V0, V1, V482)) end))(V477))), fun (V491) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V481, V480, begin (V492 = V2), case ((V492 band 9223372036854775808) =/= 0) of 'true' -> (V492 bor -9223372036854775808); _ -> (V492 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V490)), V490}} end end end end)); 0 -> fun (V493) -> ('un--invalidS'(V493)) end end end(E132, E133)); _ -> fun (V494) -> ('un--invalidS'(V494)) end end end(E130, E131)); _ -> fun (V495) -> ('un--invalidS'(V495)) end end end(E128, E129)); _ -> fun (V496) -> ('un--invalidS'(V496)) end end end end(E126, E127)); _ -> case V3 of [E120 | E121] -> (fun (V497, V498) -> case V498 of [E122 | E123] -> (fun (V499, V500) -> case V500 of [E124 | E125] -> (fun (V501, V502) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V503) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V503)) end, fun (V504) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V504)) end}, V499, fun (V505) -> begin (V506 = ('un--quoteFC'(V501))), begin (V515 = ((begin (V512 = fun (V508) -> fun (V509) -> fun (V510) -> fun (V511) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V510, V511)) end end end end), fun (V513) -> fun (V514) -> ((((V512('erased'))('erased'))(V513))(V514)) end end end(fun (V507) -> ('un--snf\x{27}'(V0, V1, V507)) end))(V502))), fun (V516) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V506, V505, begin (V517 = V2), case ((V517 band 9223372036854775808) =/= 0) of 'true' -> (V517 bor -9223372036854775808); _ -> (V517 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V515)), V515}} end end end end)); 0 -> fun (V518) -> ('un--invalidS'(V518)) end end end(E124, E125)); _ -> fun (V519) -> ('un--invalidS'(V519)) end end end(E122, E123)); _ -> fun (V520) -> ('un--invalidS'(V520)) end end end(E120, E121)); _ -> fun (V521) -> ('un--invalidS'(V521)) end end end end(E118, E119)); _ -> case V3 of [E112 | E113] -> (fun (V522, V523) -> case V523 of [E114 | E115] -> (fun (V524, V525) -> case V525 of [E116 | E117] -> (fun (V526, V527) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V528) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V528)) end, fun (V529) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V529)) end}, V524, fun (V530) -> begin (V531 = ('un--quoteFC'(V526))), begin (V540 = ((begin (V537 = fun (V533) -> fun (V534) -> fun (V535) -> fun (V536) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V535, V536)) end end end end), fun (V538) -> fun (V539) -> ((((V537('erased'))('erased'))(V538))(V539)) end end end(fun (V532) -> ('un--snf\x{27}'(V0, V1, V532)) end))(V527))), fun (V541) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V531, V530, begin (V542 = V2), case ((V542 band 9223372036854775808) =/= 0) of 'true' -> (V542 bor -9223372036854775808); _ -> (V542 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V540)), V540}} end end end end)); 0 -> fun (V543) -> ('un--invalidS'(V543)) end end end(E116, E117)); _ -> fun (V544) -> ('un--invalidS'(V544)) end end end(E114, E115)); _ -> fun (V545) -> ('un--invalidS'(V545)) end end end(E112, E113)); _ -> fun (V546) -> ('un--invalidS'(V546)) end end end end(E110, E111)); _ -> case V3 of [E104 | E105] -> (fun (V547, V548) -> case V548 of [E106 | E107] -> (fun (V549, V550) -> case V550 of [E108 | E109] -> (fun (V551, V552) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V553) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V553)) end, fun (V554) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V554)) end}, V549, fun (V555) -> begin (V556 = ('un--quoteFC'(V551))), begin (V565 = ((begin (V562 = fun (V558) -> fun (V559) -> fun (V560) -> fun (V561) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V560, V561)) end end end end), fun (V563) -> fun (V564) -> ((((V562('erased'))('erased'))(V563))(V564)) end end end(fun (V557) -> ('un--snf\x{27}'(V0, V1, V557)) end))(V552))), fun (V566) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V556, V555, begin (V567 = V2), case ((V567 band 9223372036854775808) =/= 0) of 'true' -> (V567 bor -9223372036854775808); _ -> (V567 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V565)), V565}} end end end end)); 0 -> fun (V568) -> ('un--invalidS'(V568)) end end end(E108, E109)); _ -> fun (V569) -> ('un--invalidS'(V569)) end end end(E106, E107)); _ -> fun (V570) -> ('un--invalidS'(V570)) end end end(E104, E105)); _ -> fun (V571) -> ('un--invalidS'(V571)) end end end end(E102, E103)); _ -> case V3 of [E96 | E97] -> (fun (V572, V573) -> case V573 of [E98 | E99] -> (fun (V574, V575) -> case V575 of [E100 | E101] -> (fun (V576, V577) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V578) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V578)) end, fun (V579) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V579)) end}, V574, fun (V580) -> begin (V581 = ('un--quoteFC'(V576))), begin (V590 = ((begin (V587 = fun (V583) -> fun (V584) -> fun (V585) -> fun (V586) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V585, V586)) end end end end), fun (V588) -> fun (V589) -> ((((V587('erased'))('erased'))(V588))(V589)) end end end(fun (V582) -> ('un--snf\x{27}'(V0, V1, V582)) end))(V577))), fun (V591) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V581, V580, begin (V592 = V2), case ((V592 band 9223372036854775808) =/= 0) of 'true' -> (V592 bor -9223372036854775808); _ -> (V592 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V590)), V590}} end end end end)); 0 -> fun (V593) -> ('un--invalidS'(V593)) end end end(E100, E101)); _ -> fun (V594) -> ('un--invalidS'(V594)) end end end(E98, E99)); _ -> fun (V595) -> ('un--invalidS'(V595)) end end end(E96, E97)); _ -> fun (V596) -> ('un--invalidS'(V596)) end end end; -15 -> case V3 of [E142 | E143] -> (fun (V597, V598) -> case V598 of [E150 | E151] -> (fun (V599, V600) -> case V600 of [E158 | E159] -> (fun (V601, V602) -> case V602 of [] -> begin (V603 = ('un--snf\x{27}'(V0, V1, V601))), fun (V604) -> begin (V605 = (V603(V604))), case V605 of {'Prelude.Types.Left', V606} -> {'Prelude.Types.Left', V606}; {'Prelude.Types.Right', V607} -> (begin (V610 = begin (V608 = ('un--quoteLazyReason'(V599))), fun (V609) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDelayed', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V608, V607}} end end), V610 end(V604)) end end end end; _ -> case V3 of [E160 | E161] -> (fun (V611, V612) -> case V612 of [E162 | E163] -> (fun (V613, V614) -> case V614 of [E164 | E165] -> (fun (V615, V616) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V617) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V617)) end, fun (V618) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V618)) end}, V613, fun (V619) -> begin (V620 = ('un--quoteFC'(V615))), begin (V629 = ((begin (V626 = fun (V622) -> fun (V623) -> fun (V624) -> fun (V625) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V624, V625)) end end end end), fun (V627) -> fun (V628) -> ((((V626('erased'))('erased'))(V627))(V628)) end end end(fun (V621) -> ('un--snf\x{27}'(V0, V1, V621)) end))(V616))), fun (V630) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V620, V619, begin (V631 = V2), case ((V631 band 9223372036854775808) =/= 0) of 'true' -> (V631 bor -9223372036854775808); _ -> (V631 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V629)), V629}} end end end end)); 0 -> fun (V632) -> ('un--invalidS'(V632)) end end end(E164, E165)); _ -> fun (V633) -> ('un--invalidS'(V633)) end end end(E162, E163)); _ -> fun (V634) -> ('un--invalidS'(V634)) end end end(E160, E161)); _ -> fun (V635) -> ('un--invalidS'(V635)) end end end end(E158, E159)); _ -> case V3 of [E152 | E153] -> (fun (V636, V637) -> case V637 of [E154 | E155] -> (fun (V638, V639) -> case V639 of [E156 | E157] -> (fun (V640, V641) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V642) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V642)) end, fun (V643) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V643)) end}, V638, fun (V644) -> begin (V645 = ('un--quoteFC'(V640))), begin (V654 = ((begin (V651 = fun (V647) -> fun (V648) -> fun (V649) -> fun (V650) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V649, V650)) end end end end), fun (V652) -> fun (V653) -> ((((V651('erased'))('erased'))(V652))(V653)) end end end(fun (V646) -> ('un--snf\x{27}'(V0, V1, V646)) end))(V641))), fun (V655) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V645, V644, begin (V656 = V2), case ((V656 band 9223372036854775808) =/= 0) of 'true' -> (V656 bor -9223372036854775808); _ -> (V656 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V654)), V654}} end end end end)); 0 -> fun (V657) -> ('un--invalidS'(V657)) end end end(E156, E157)); _ -> fun (V658) -> ('un--invalidS'(V658)) end end end(E154, E155)); _ -> fun (V659) -> ('un--invalidS'(V659)) end end end(E152, E153)); _ -> fun (V660) -> ('un--invalidS'(V660)) end end end end(E150, E151)); _ -> case V3 of [E144 | E145] -> (fun (V661, V662) -> case V662 of [E146 | E147] -> (fun (V663, V664) -> case V664 of [E148 | E149] -> (fun (V665, V666) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V667) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V667)) end, fun (V668) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V668)) end}, V663, fun (V669) -> begin (V670 = ('un--quoteFC'(V665))), begin (V679 = ((begin (V676 = fun (V672) -> fun (V673) -> fun (V674) -> fun (V675) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V674, V675)) end end end end), fun (V677) -> fun (V678) -> ((((V676('erased'))('erased'))(V677))(V678)) end end end(fun (V671) -> ('un--snf\x{27}'(V0, V1, V671)) end))(V666))), fun (V680) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V670, V669, begin (V681 = V2), case ((V681 band 9223372036854775808) =/= 0) of 'true' -> (V681 bor -9223372036854775808); _ -> (V681 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V679)), V679}} end end end end)); 0 -> fun (V682) -> ('un--invalidS'(V682)) end end end(E148, E149)); _ -> fun (V683) -> ('un--invalidS'(V683)) end end end(E146, E147)); _ -> fun (V684) -> ('un--invalidS'(V684)) end end end(E144, E145)); _ -> fun (V685) -> ('un--invalidS'(V685)) end end end end(E142, E143)); _ -> case V3 of [E136 | E137] -> (fun (V686, V687) -> case V687 of [E138 | E139] -> (fun (V688, V689) -> case V689 of [E140 | E141] -> (fun (V690, V691) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V692) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V692)) end, fun (V693) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V693)) end}, V688, fun (V694) -> begin (V695 = ('un--quoteFC'(V690))), begin (V704 = ((begin (V701 = fun (V697) -> fun (V698) -> fun (V699) -> fun (V700) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V699, V700)) end end end end), fun (V702) -> fun (V703) -> ((((V701('erased'))('erased'))(V702))(V703)) end end end(fun (V696) -> ('un--snf\x{27}'(V0, V1, V696)) end))(V691))), fun (V705) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V695, V694, begin (V706 = V2), case ((V706 band 9223372036854775808) =/= 0) of 'true' -> (V706 bor -9223372036854775808); _ -> (V706 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V704)), V704}} end end end end)); 0 -> fun (V707) -> ('un--invalidS'(V707)) end end end(E140, E141)); _ -> fun (V708) -> ('un--invalidS'(V708)) end end end(E138, E139)); _ -> fun (V709) -> ('un--invalidS'(V709)) end end end(E136, E137)); _ -> fun (V710) -> ('un--invalidS'(V710)) end end end; -4 -> case V3 of [E172 | E173] -> (fun (V711, V712) -> case V712 of [E180 | E181] -> (fun (V713, V714) -> case V714 of [E188 | E189] -> (fun (V715, V716) -> case V716 of [E196 | E197] -> (fun (V717, V718) -> case V718 of [E204 | E205] -> (fun (V719, V720) -> case V720 of [] -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V719)) of {'Libraries.Utils.Scheme.Procedure', V721} -> ('case--case block in snfVector-7108'(V0, V711, V713, V715, V717, V719, V1, V721, ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V717)))); _ -> fun (V722) -> ('un--invalidS'(V722)) end end; _ -> case V3 of [E206 | E207] -> (fun (V723, V724) -> case V724 of [E208 | E209] -> (fun (V725, V726) -> case V726 of [E210 | E211] -> (fun (V727, V728) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V729) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V729)) end, fun (V730) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V730)) end}, V725, fun (V731) -> begin (V732 = ('un--quoteFC'(V727))), begin (V741 = ((begin (V738 = fun (V734) -> fun (V735) -> fun (V736) -> fun (V737) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V736, V737)) end end end end), fun (V739) -> fun (V740) -> ((((V738('erased'))('erased'))(V739))(V740)) end end end(fun (V733) -> ('un--snf\x{27}'(V0, V1, V733)) end))(V728))), fun (V742) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V732, V731, begin (V743 = V2), case ((V743 band 9223372036854775808) =/= 0) of 'true' -> (V743 bor -9223372036854775808); _ -> (V743 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V741)), V741}} end end end end)); 0 -> fun (V744) -> ('un--invalidS'(V744)) end end end(E210, E211)); _ -> fun (V745) -> ('un--invalidS'(V745)) end end end(E208, E209)); _ -> fun (V746) -> ('un--invalidS'(V746)) end end end(E206, E207)); _ -> fun (V747) -> ('un--invalidS'(V747)) end end end end(E204, E205)); _ -> case V3 of [E198 | E199] -> (fun (V748, V749) -> case V749 of [E200 | E201] -> (fun (V750, V751) -> case V751 of [E202 | E203] -> (fun (V752, V753) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V754) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V754)) end, fun (V755) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V755)) end}, V750, fun (V756) -> begin (V757 = ('un--quoteFC'(V752))), begin (V766 = ((begin (V763 = fun (V759) -> fun (V760) -> fun (V761) -> fun (V762) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V761, V762)) end end end end), fun (V764) -> fun (V765) -> ((((V763('erased'))('erased'))(V764))(V765)) end end end(fun (V758) -> ('un--snf\x{27}'(V0, V1, V758)) end))(V753))), fun (V767) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V757, V756, begin (V768 = V2), case ((V768 band 9223372036854775808) =/= 0) of 'true' -> (V768 bor -9223372036854775808); _ -> (V768 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V766)), V766}} end end end end)); 0 -> fun (V769) -> ('un--invalidS'(V769)) end end end(E202, E203)); _ -> fun (V770) -> ('un--invalidS'(V770)) end end end(E200, E201)); _ -> fun (V771) -> ('un--invalidS'(V771)) end end end(E198, E199)); _ -> fun (V772) -> ('un--invalidS'(V772)) end end end end(E196, E197)); _ -> case V3 of [E190 | E191] -> (fun (V773, V774) -> case V774 of [E192 | E193] -> (fun (V775, V776) -> case V776 of [E194 | E195] -> (fun (V777, V778) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V779) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V779)) end, fun (V780) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V780)) end}, V775, fun (V781) -> begin (V782 = ('un--quoteFC'(V777))), begin (V791 = ((begin (V788 = fun (V784) -> fun (V785) -> fun (V786) -> fun (V787) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V786, V787)) end end end end), fun (V789) -> fun (V790) -> ((((V788('erased'))('erased'))(V789))(V790)) end end end(fun (V783) -> ('un--snf\x{27}'(V0, V1, V783)) end))(V778))), fun (V792) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V782, V781, begin (V793 = V2), case ((V793 band 9223372036854775808) =/= 0) of 'true' -> (V793 bor -9223372036854775808); _ -> (V793 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V791)), V791}} end end end end)); 0 -> fun (V794) -> ('un--invalidS'(V794)) end end end(E194, E195)); _ -> fun (V795) -> ('un--invalidS'(V795)) end end end(E192, E193)); _ -> fun (V796) -> ('un--invalidS'(V796)) end end end(E190, E191)); _ -> fun (V797) -> ('un--invalidS'(V797)) end end end end(E188, E189)); _ -> case V3 of [E182 | E183] -> (fun (V798, V799) -> case V799 of [E184 | E185] -> (fun (V800, V801) -> case V801 of [E186 | E187] -> (fun (V802, V803) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V804) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V804)) end, fun (V805) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V805)) end}, V800, fun (V806) -> begin (V807 = ('un--quoteFC'(V802))), begin (V816 = ((begin (V813 = fun (V809) -> fun (V810) -> fun (V811) -> fun (V812) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V811, V812)) end end end end), fun (V814) -> fun (V815) -> ((((V813('erased'))('erased'))(V814))(V815)) end end end(fun (V808) -> ('un--snf\x{27}'(V0, V1, V808)) end))(V803))), fun (V817) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V807, V806, begin (V818 = V2), case ((V818 band 9223372036854775808) =/= 0) of 'true' -> (V818 bor -9223372036854775808); _ -> (V818 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V816)), V816}} end end end end)); 0 -> fun (V819) -> ('un--invalidS'(V819)) end end end(E186, E187)); _ -> fun (V820) -> ('un--invalidS'(V820)) end end end(E184, E185)); _ -> fun (V821) -> ('un--invalidS'(V821)) end end end(E182, E183)); _ -> fun (V822) -> ('un--invalidS'(V822)) end end end end(E180, E181)); _ -> case V3 of [E174 | E175] -> (fun (V823, V824) -> case V824 of [E176 | E177] -> (fun (V825, V826) -> case V826 of [E178 | E179] -> (fun (V827, V828) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V829) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V829)) end, fun (V830) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V830)) end}, V825, fun (V831) -> begin (V832 = ('un--quoteFC'(V827))), begin (V841 = ((begin (V838 = fun (V834) -> fun (V835) -> fun (V836) -> fun (V837) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V836, V837)) end end end end), fun (V839) -> fun (V840) -> ((((V838('erased'))('erased'))(V839))(V840)) end end end(fun (V833) -> ('un--snf\x{27}'(V0, V1, V833)) end))(V828))), fun (V842) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V832, V831, begin (V843 = V2), case ((V843 band 9223372036854775808) =/= 0) of 'true' -> (V843 bor -9223372036854775808); _ -> (V843 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V841)), V841}} end end end end)); 0 -> fun (V844) -> ('un--invalidS'(V844)) end end end(E178, E179)); _ -> fun (V845) -> ('un--invalidS'(V845)) end end end(E176, E177)); _ -> fun (V846) -> ('un--invalidS'(V846)) end end end(E174, E175)); _ -> fun (V847) -> ('un--invalidS'(V847)) end end end end(E172, E173)); _ -> case V3 of [E166 | E167] -> (fun (V848, V849) -> case V849 of [E168 | E169] -> (fun (V850, V851) -> case V851 of [E170 | E171] -> (fun (V852, V853) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V854) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V854)) end, fun (V855) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V855)) end}, V850, fun (V856) -> begin (V857 = ('un--quoteFC'(V852))), begin (V866 = ((begin (V863 = fun (V859) -> fun (V860) -> fun (V861) -> fun (V862) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V861, V862)) end end end end), fun (V864) -> fun (V865) -> ((((V863('erased'))('erased'))(V864))(V865)) end end end(fun (V858) -> ('un--snf\x{27}'(V0, V1, V858)) end))(V853))), fun (V867) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V857, V856, begin (V868 = V2), case ((V868 band 9223372036854775808) =/= 0) of 'true' -> (V868 bor -9223372036854775808); _ -> (V868 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V866)), V866}} end end end end)); 0 -> fun (V869) -> ('un--invalidS'(V869)) end end end(E170, E171)); _ -> fun (V870) -> ('un--invalidS'(V870)) end end end(E168, E169)); _ -> fun (V871) -> ('un--invalidS'(V871)) end end end(E166, E167)); _ -> fun (V872) -> ('un--invalidS'(V872)) end end end; -5 -> case V3 of [E218 | E219] -> (fun (V873, V874) -> case V874 of [E226 | E227] -> (fun (V875, V876) -> case V876 of [E234 | E235] -> (fun (V877, V878) -> case V878 of [E242 | E243] -> (fun (V879, V880) -> case V880 of [] -> begin (V881 = ('un--snf\x{27}'(V0, V1, V879))), fun (V882) -> begin (V883 = (V881(V882))), case V883 of {'Prelude.Types.Left', V884} -> {'Prelude.Types.Left', V884}; {'Prelude.Types.Right', V885} -> (begin (V889 = begin (V886 = ('un--quoteFC'(V877))), begin (V887 = ('un--quoteLazyReason'(V875))), fun (V888) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SForce', V886, V887, V885}} end end end), V889 end(V882)) end end end end; _ -> case V3 of [E244 | E245] -> (fun (V890, V891) -> case V891 of [E246 | E247] -> (fun (V892, V893) -> case V893 of [E248 | E249] -> (fun (V894, V895) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V896) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V896)) end, fun (V897) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V897)) end}, V892, fun (V898) -> begin (V899 = ('un--quoteFC'(V894))), begin (V908 = ((begin (V905 = fun (V901) -> fun (V902) -> fun (V903) -> fun (V904) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V903, V904)) end end end end), fun (V906) -> fun (V907) -> ((((V905('erased'))('erased'))(V906))(V907)) end end end(fun (V900) -> ('un--snf\x{27}'(V0, V1, V900)) end))(V895))), fun (V909) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V899, V898, begin (V910 = V2), case ((V910 band 9223372036854775808) =/= 0) of 'true' -> (V910 bor -9223372036854775808); _ -> (V910 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V908)), V908}} end end end end)); 0 -> fun (V911) -> ('un--invalidS'(V911)) end end end(E248, E249)); _ -> fun (V912) -> ('un--invalidS'(V912)) end end end(E246, E247)); _ -> fun (V913) -> ('un--invalidS'(V913)) end end end(E244, E245)); _ -> fun (V914) -> ('un--invalidS'(V914)) end end end end(E242, E243)); _ -> case V3 of [E236 | E237] -> (fun (V915, V916) -> case V916 of [E238 | E239] -> (fun (V917, V918) -> case V918 of [E240 | E241] -> (fun (V919, V920) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V921) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V921)) end, fun (V922) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V922)) end}, V917, fun (V923) -> begin (V924 = ('un--quoteFC'(V919))), begin (V933 = ((begin (V930 = fun (V926) -> fun (V927) -> fun (V928) -> fun (V929) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V928, V929)) end end end end), fun (V931) -> fun (V932) -> ((((V930('erased'))('erased'))(V931))(V932)) end end end(fun (V925) -> ('un--snf\x{27}'(V0, V1, V925)) end))(V920))), fun (V934) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V924, V923, begin (V935 = V2), case ((V935 band 9223372036854775808) =/= 0) of 'true' -> (V935 bor -9223372036854775808); _ -> (V935 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V933)), V933}} end end end end)); 0 -> fun (V936) -> ('un--invalidS'(V936)) end end end(E240, E241)); _ -> fun (V937) -> ('un--invalidS'(V937)) end end end(E238, E239)); _ -> fun (V938) -> ('un--invalidS'(V938)) end end end(E236, E237)); _ -> fun (V939) -> ('un--invalidS'(V939)) end end end end(E234, E235)); _ -> case V3 of [E228 | E229] -> (fun (V940, V941) -> case V941 of [E230 | E231] -> (fun (V942, V943) -> case V943 of [E232 | E233] -> (fun (V944, V945) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V946) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V946)) end, fun (V947) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V947)) end}, V942, fun (V948) -> begin (V949 = ('un--quoteFC'(V944))), begin (V958 = ((begin (V955 = fun (V951) -> fun (V952) -> fun (V953) -> fun (V954) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V953, V954)) end end end end), fun (V956) -> fun (V957) -> ((((V955('erased'))('erased'))(V956))(V957)) end end end(fun (V950) -> ('un--snf\x{27}'(V0, V1, V950)) end))(V945))), fun (V959) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V949, V948, begin (V960 = V2), case ((V960 band 9223372036854775808) =/= 0) of 'true' -> (V960 bor -9223372036854775808); _ -> (V960 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V958)), V958}} end end end end)); 0 -> fun (V961) -> ('un--invalidS'(V961)) end end end(E232, E233)); _ -> fun (V962) -> ('un--invalidS'(V962)) end end end(E230, E231)); _ -> fun (V963) -> ('un--invalidS'(V963)) end end end(E228, E229)); _ -> fun (V964) -> ('un--invalidS'(V964)) end end end end(E226, E227)); _ -> case V3 of [E220 | E221] -> (fun (V965, V966) -> case V966 of [E222 | E223] -> (fun (V967, V968) -> case V968 of [E224 | E225] -> (fun (V969, V970) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V971) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V971)) end, fun (V972) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V972)) end}, V967, fun (V973) -> begin (V974 = ('un--quoteFC'(V969))), begin (V983 = ((begin (V980 = fun (V976) -> fun (V977) -> fun (V978) -> fun (V979) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V978, V979)) end end end end), fun (V981) -> fun (V982) -> ((((V980('erased'))('erased'))(V981))(V982)) end end end(fun (V975) -> ('un--snf\x{27}'(V0, V1, V975)) end))(V970))), fun (V984) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V974, V973, begin (V985 = V2), case ((V985 band 9223372036854775808) =/= 0) of 'true' -> (V985 bor -9223372036854775808); _ -> (V985 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V983)), V983}} end end end end)); 0 -> fun (V986) -> ('un--invalidS'(V986)) end end end(E224, E225)); _ -> fun (V987) -> ('un--invalidS'(V987)) end end end(E222, E223)); _ -> fun (V988) -> ('un--invalidS'(V988)) end end end(E220, E221)); _ -> fun (V989) -> ('un--invalidS'(V989)) end end end end(E218, E219)); _ -> case V3 of [E212 | E213] -> (fun (V990, V991) -> case V991 of [E214 | E215] -> (fun (V992, V993) -> case V993 of [E216 | E217] -> (fun (V994, V995) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V996) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V996)) end, fun (V997) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V997)) end}, V992, fun (V998) -> begin (V999 = ('un--quoteFC'(V994))), begin (V1008 = ((begin (V1005 = fun (V1001) -> fun (V1002) -> fun (V1003) -> fun (V1004) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1003, V1004)) end end end end), fun (V1006) -> fun (V1007) -> ((((V1005('erased'))('erased'))(V1006))(V1007)) end end end(fun (V1000) -> ('un--snf\x{27}'(V0, V1, V1000)) end))(V995))), fun (V1009) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V999, V998, begin (V1010 = V2), case ((V1010 band 9223372036854775808) =/= 0) of 'true' -> (V1010 bor -9223372036854775808); _ -> (V1010 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1008)), V1008}} end end end end)); 0 -> fun (V1011) -> ('un--invalidS'(V1011)) end end end(E216, E217)); _ -> fun (V1012) -> ('un--invalidS'(V1012)) end end end(E214, E215)); _ -> fun (V1013) -> ('un--invalidS'(V1013)) end end end(E212, E213)); _ -> fun (V1014) -> ('un--invalidS'(V1014)) end end end; -6 -> case V3 of [E256 | E257] -> (fun (V1015, V1016) -> case V1016 of [E264 | E265] -> (fun (V1017, V1018) -> case V1018 of [E272 | E273] -> (fun (V1019, V1020) -> case V1020 of [] -> begin (V1021 = ('un--quoteFC'(V1017))), begin (V1023 = ('un--quoteWhyErased'(fun (V1022) -> ('un--snf\x{27}'(V0, V1, V1022)) end, V1019))), fun (V1024) -> begin (V1025 = (V1023(V1024))), case V1025 of {'Prelude.Types.Left', V1026} -> {'Prelude.Types.Left', V1026}; {'Prelude.Types.Right', V1027} -> (begin (V1029 = fun (V1028) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SErased', V1021, V1027}} end), V1029 end(V1024)) end end end end end; _ -> case V3 of [E274 | E275] -> (fun (V1030, V1031) -> case V1031 of [E276 | E277] -> (fun (V1032, V1033) -> case V1033 of [E278 | E279] -> (fun (V1034, V1035) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1036) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1036)) end, fun (V1037) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1037)) end}, V1032, fun (V1038) -> begin (V1039 = ('un--quoteFC'(V1034))), begin (V1048 = ((begin (V1045 = fun (V1041) -> fun (V1042) -> fun (V1043) -> fun (V1044) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1043, V1044)) end end end end), fun (V1046) -> fun (V1047) -> ((((V1045('erased'))('erased'))(V1046))(V1047)) end end end(fun (V1040) -> ('un--snf\x{27}'(V0, V1, V1040)) end))(V1035))), fun (V1049) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1039, V1038, begin (V1050 = V2), case ((V1050 band 9223372036854775808) =/= 0) of 'true' -> (V1050 bor -9223372036854775808); _ -> (V1050 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1048)), V1048}} end end end end)); 0 -> fun (V1051) -> ('un--invalidS'(V1051)) end end end(E278, E279)); _ -> fun (V1052) -> ('un--invalidS'(V1052)) end end end(E276, E277)); _ -> fun (V1053) -> ('un--invalidS'(V1053)) end end end(E274, E275)); _ -> fun (V1054) -> ('un--invalidS'(V1054)) end end end end(E272, E273)); _ -> case V3 of [E266 | E267] -> (fun (V1055, V1056) -> case V1056 of [E268 | E269] -> (fun (V1057, V1058) -> case V1058 of [E270 | E271] -> (fun (V1059, V1060) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1061) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1061)) end, fun (V1062) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1062)) end}, V1057, fun (V1063) -> begin (V1064 = ('un--quoteFC'(V1059))), begin (V1073 = ((begin (V1070 = fun (V1066) -> fun (V1067) -> fun (V1068) -> fun (V1069) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1068, V1069)) end end end end), fun (V1071) -> fun (V1072) -> ((((V1070('erased'))('erased'))(V1071))(V1072)) end end end(fun (V1065) -> ('un--snf\x{27}'(V0, V1, V1065)) end))(V1060))), fun (V1074) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1064, V1063, begin (V1075 = V2), case ((V1075 band 9223372036854775808) =/= 0) of 'true' -> (V1075 bor -9223372036854775808); _ -> (V1075 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1073)), V1073}} end end end end)); 0 -> fun (V1076) -> ('un--invalidS'(V1076)) end end end(E270, E271)); _ -> fun (V1077) -> ('un--invalidS'(V1077)) end end end(E268, E269)); _ -> fun (V1078) -> ('un--invalidS'(V1078)) end end end(E266, E267)); _ -> fun (V1079) -> ('un--invalidS'(V1079)) end end end end(E264, E265)); _ -> case V3 of [E258 | E259] -> (fun (V1080, V1081) -> case V1081 of [E260 | E261] -> (fun (V1082, V1083) -> case V1083 of [E262 | E263] -> (fun (V1084, V1085) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1086) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1086)) end, fun (V1087) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1087)) end}, V1082, fun (V1088) -> begin (V1089 = ('un--quoteFC'(V1084))), begin (V1098 = ((begin (V1095 = fun (V1091) -> fun (V1092) -> fun (V1093) -> fun (V1094) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1093, V1094)) end end end end), fun (V1096) -> fun (V1097) -> ((((V1095('erased'))('erased'))(V1096))(V1097)) end end end(fun (V1090) -> ('un--snf\x{27}'(V0, V1, V1090)) end))(V1085))), fun (V1099) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1089, V1088, begin (V1100 = V2), case ((V1100 band 9223372036854775808) =/= 0) of 'true' -> (V1100 bor -9223372036854775808); _ -> (V1100 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1098)), V1098}} end end end end)); 0 -> fun (V1101) -> ('un--invalidS'(V1101)) end end end(E262, E263)); _ -> fun (V1102) -> ('un--invalidS'(V1102)) end end end(E260, E261)); _ -> fun (V1103) -> ('un--invalidS'(V1103)) end end end(E258, E259)); _ -> fun (V1104) -> ('un--invalidS'(V1104)) end end end end(E256, E257)); _ -> case V3 of [E250 | E251] -> (fun (V1105, V1106) -> case V1106 of [E252 | E253] -> (fun (V1107, V1108) -> case V1108 of [E254 | E255] -> (fun (V1109, V1110) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1111) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1111)) end, fun (V1112) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1112)) end}, V1107, fun (V1113) -> begin (V1114 = ('un--quoteFC'(V1109))), begin (V1123 = ((begin (V1120 = fun (V1116) -> fun (V1117) -> fun (V1118) -> fun (V1119) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1118, V1119)) end end end end), fun (V1121) -> fun (V1122) -> ((((V1120('erased'))('erased'))(V1121))(V1122)) end end end(fun (V1115) -> ('un--snf\x{27}'(V0, V1, V1115)) end))(V1110))), fun (V1124) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1114, V1113, begin (V1125 = V2), case ((V1125 band 9223372036854775808) =/= 0) of 'true' -> (V1125 bor -9223372036854775808); _ -> (V1125 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1123)), V1123}} end end end end)); 0 -> fun (V1126) -> ('un--invalidS'(V1126)) end end end(E254, E255)); _ -> fun (V1127) -> ('un--invalidS'(V1127)) end end end(E252, E253)); _ -> fun (V1128) -> ('un--invalidS'(V1128)) end end end(E250, E251)); _ -> fun (V1129) -> ('un--invalidS'(V1129)) end end end; -7 -> case V3 of [E286 | E287] -> (fun (V1130, V1131) -> case V1131 of [E294 | E295] -> (fun (V1132, V1133) -> case V1133 of [E302 | E303] -> (fun (V1134, V1135) -> case V1135 of [] -> begin (V1136 = ('un--quoteFC'(V1132))), begin (V1137 = ('un--quoteTypeLevel'(V1134))), fun (V1138) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SType', V1136, V1137}} end end end; _ -> case V3 of [E304 | E305] -> (fun (V1139, V1140) -> case V1140 of [E306 | E307] -> (fun (V1141, V1142) -> case V1142 of [E308 | E309] -> (fun (V1143, V1144) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1145) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1145)) end, fun (V1146) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1146)) end}, V1141, fun (V1147) -> begin (V1148 = ('un--quoteFC'(V1143))), begin (V1157 = ((begin (V1154 = fun (V1150) -> fun (V1151) -> fun (V1152) -> fun (V1153) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1152, V1153)) end end end end), fun (V1155) -> fun (V1156) -> ((((V1154('erased'))('erased'))(V1155))(V1156)) end end end(fun (V1149) -> ('un--snf\x{27}'(V0, V1, V1149)) end))(V1144))), fun (V1158) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1148, V1147, begin (V1159 = V2), case ((V1159 band 9223372036854775808) =/= 0) of 'true' -> (V1159 bor -9223372036854775808); _ -> (V1159 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1157)), V1157}} end end end end)); 0 -> fun (V1160) -> ('un--invalidS'(V1160)) end end end(E308, E309)); _ -> fun (V1161) -> ('un--invalidS'(V1161)) end end end(E306, E307)); _ -> fun (V1162) -> ('un--invalidS'(V1162)) end end end(E304, E305)); _ -> fun (V1163) -> ('un--invalidS'(V1163)) end end end end(E302, E303)); _ -> case V3 of [E296 | E297] -> (fun (V1164, V1165) -> case V1165 of [E298 | E299] -> (fun (V1166, V1167) -> case V1167 of [E300 | E301] -> (fun (V1168, V1169) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1170) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1170)) end, fun (V1171) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1171)) end}, V1166, fun (V1172) -> begin (V1173 = ('un--quoteFC'(V1168))), begin (V1182 = ((begin (V1179 = fun (V1175) -> fun (V1176) -> fun (V1177) -> fun (V1178) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1177, V1178)) end end end end), fun (V1180) -> fun (V1181) -> ((((V1179('erased'))('erased'))(V1180))(V1181)) end end end(fun (V1174) -> ('un--snf\x{27}'(V0, V1, V1174)) end))(V1169))), fun (V1183) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1173, V1172, begin (V1184 = V2), case ((V1184 band 9223372036854775808) =/= 0) of 'true' -> (V1184 bor -9223372036854775808); _ -> (V1184 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1182)), V1182}} end end end end)); 0 -> fun (V1185) -> ('un--invalidS'(V1185)) end end end(E300, E301)); _ -> fun (V1186) -> ('un--invalidS'(V1186)) end end end(E298, E299)); _ -> fun (V1187) -> ('un--invalidS'(V1187)) end end end(E296, E297)); _ -> fun (V1188) -> ('un--invalidS'(V1188)) end end end end(E294, E295)); _ -> case V3 of [E288 | E289] -> (fun (V1189, V1190) -> case V1190 of [E290 | E291] -> (fun (V1191, V1192) -> case V1192 of [E292 | E293] -> (fun (V1193, V1194) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1195) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1195)) end, fun (V1196) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1196)) end}, V1191, fun (V1197) -> begin (V1198 = ('un--quoteFC'(V1193))), begin (V1207 = ((begin (V1204 = fun (V1200) -> fun (V1201) -> fun (V1202) -> fun (V1203) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1202, V1203)) end end end end), fun (V1205) -> fun (V1206) -> ((((V1204('erased'))('erased'))(V1205))(V1206)) end end end(fun (V1199) -> ('un--snf\x{27}'(V0, V1, V1199)) end))(V1194))), fun (V1208) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1198, V1197, begin (V1209 = V2), case ((V1209 band 9223372036854775808) =/= 0) of 'true' -> (V1209 bor -9223372036854775808); _ -> (V1209 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1207)), V1207}} end end end end)); 0 -> fun (V1210) -> ('un--invalidS'(V1210)) end end end(E292, E293)); _ -> fun (V1211) -> ('un--invalidS'(V1211)) end end end(E290, E291)); _ -> fun (V1212) -> ('un--invalidS'(V1212)) end end end(E288, E289)); _ -> fun (V1213) -> ('un--invalidS'(V1213)) end end end end(E286, E287)); _ -> case V3 of [E280 | E281] -> (fun (V1214, V1215) -> case V1215 of [E282 | E283] -> (fun (V1216, V1217) -> case V1217 of [E284 | E285] -> (fun (V1218, V1219) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1220) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1220)) end, fun (V1221) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1221)) end}, V1216, fun (V1222) -> begin (V1223 = ('un--quoteFC'(V1218))), begin (V1232 = ((begin (V1229 = fun (V1225) -> fun (V1226) -> fun (V1227) -> fun (V1228) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1227, V1228)) end end end end), fun (V1230) -> fun (V1231) -> ((((V1229('erased'))('erased'))(V1230))(V1231)) end end end(fun (V1224) -> ('un--snf\x{27}'(V0, V1, V1224)) end))(V1219))), fun (V1233) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1223, V1222, begin (V1234 = V2), case ((V1234 band 9223372036854775808) =/= 0) of 'true' -> (V1234 bor -9223372036854775808); _ -> (V1234 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1232)), V1232}} end end end end)); 0 -> fun (V1235) -> ('un--invalidS'(V1235)) end end end(E284, E285)); _ -> fun (V1236) -> ('un--invalidS'(V1236)) end end end(E282, E283)); _ -> fun (V1237) -> ('un--invalidS'(V1237)) end end end(E280, E281)); _ -> fun (V1238) -> ('un--invalidS'(V1238)) end end end; -8 -> case V3 of [E316 | E317] -> (fun (V1239, V1240) -> case V1240 of [E324 | E325] -> (fun (V1241, V1242) -> case V1242 of [E332 | E333] -> (fun (V1243, V1244) -> case V1244 of [E340 | E341] -> (fun (V1245, V1246) -> case V1246 of [E348 | E349] -> (fun (V1247, V1248) -> case V1248 of [E356 | E357] -> (fun (V1249, V1250) -> case V1250 of [] -> begin (V1251 = ('un--quoteBinderName'(V1249))), begin (V1252 = ('un--quoteRigCount'(V1243))), begin (V1253 = ('un--snf\x{27}'(V0, V1, V1247))), fun (V1254) -> begin (V1255 = (V1253(V1254))), case V1255 of {'Prelude.Types.Left', V1256} -> {'Prelude.Types.Left', V1256}; {'Prelude.Types.Right', V1257} -> (begin (V1270 = begin (V1258 = ('un--snfPiInfo'(V0, V1, V1245))), fun (V1259) -> begin (V1260 = (V1258(V1259))), case V1260 of {'Prelude.Types.Left', V1261} -> {'Prelude.Types.Left', V1261}; {'Prelude.Types.Right', V1262} -> (begin (V1269 = fun (V1263) -> ('un--snfBinder'(V0, V1, fun (V1264) -> fun (V1265) -> fun (V1266) -> fun (V1267) -> fun (V1268) -> {'Core.TT.Lam', V1265, V1266, V1267, V1268} end end end end end, V1241, V1252, V1262, V1257, V1251, V1263)) end), V1269 end(V1259)) end end end end), V1270 end(V1254)) end end end end end end; _ -> case V3 of [E358 | E359] -> (fun (V1271, V1272) -> case V1272 of [E360 | E361] -> (fun (V1273, V1274) -> case V1274 of [E362 | E363] -> (fun (V1275, V1276) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1277) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1277)) end, fun (V1278) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1278)) end}, V1273, fun (V1279) -> begin (V1280 = ('un--quoteFC'(V1275))), begin (V1289 = ((begin (V1286 = fun (V1282) -> fun (V1283) -> fun (V1284) -> fun (V1285) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1284, V1285)) end end end end), fun (V1287) -> fun (V1288) -> ((((V1286('erased'))('erased'))(V1287))(V1288)) end end end(fun (V1281) -> ('un--snf\x{27}'(V0, V1, V1281)) end))(V1276))), fun (V1290) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1280, V1279, begin (V1291 = V2), case ((V1291 band 9223372036854775808) =/= 0) of 'true' -> (V1291 bor -9223372036854775808); _ -> (V1291 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1289)), V1289}} end end end end)); 0 -> fun (V1292) -> ('un--invalidS'(V1292)) end end end(E362, E363)); _ -> fun (V1293) -> ('un--invalidS'(V1293)) end end end(E360, E361)); _ -> fun (V1294) -> ('un--invalidS'(V1294)) end end end(E358, E359)); _ -> fun (V1295) -> ('un--invalidS'(V1295)) end end end end(E356, E357)); _ -> case V3 of [E350 | E351] -> (fun (V1296, V1297) -> case V1297 of [E352 | E353] -> (fun (V1298, V1299) -> case V1299 of [E354 | E355] -> (fun (V1300, V1301) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1302) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1302)) end, fun (V1303) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1303)) end}, V1298, fun (V1304) -> begin (V1305 = ('un--quoteFC'(V1300))), begin (V1314 = ((begin (V1311 = fun (V1307) -> fun (V1308) -> fun (V1309) -> fun (V1310) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1309, V1310)) end end end end), fun (V1312) -> fun (V1313) -> ((((V1311('erased'))('erased'))(V1312))(V1313)) end end end(fun (V1306) -> ('un--snf\x{27}'(V0, V1, V1306)) end))(V1301))), fun (V1315) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1305, V1304, begin (V1316 = V2), case ((V1316 band 9223372036854775808) =/= 0) of 'true' -> (V1316 bor -9223372036854775808); _ -> (V1316 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1314)), V1314}} end end end end)); 0 -> fun (V1317) -> ('un--invalidS'(V1317)) end end end(E354, E355)); _ -> fun (V1318) -> ('un--invalidS'(V1318)) end end end(E352, E353)); _ -> fun (V1319) -> ('un--invalidS'(V1319)) end end end(E350, E351)); _ -> fun (V1320) -> ('un--invalidS'(V1320)) end end end end(E348, E349)); _ -> case V3 of [E342 | E343] -> (fun (V1321, V1322) -> case V1322 of [E344 | E345] -> (fun (V1323, V1324) -> case V1324 of [E346 | E347] -> (fun (V1325, V1326) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1327) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1327)) end, fun (V1328) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1328)) end}, V1323, fun (V1329) -> begin (V1330 = ('un--quoteFC'(V1325))), begin (V1339 = ((begin (V1336 = fun (V1332) -> fun (V1333) -> fun (V1334) -> fun (V1335) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1334, V1335)) end end end end), fun (V1337) -> fun (V1338) -> ((((V1336('erased'))('erased'))(V1337))(V1338)) end end end(fun (V1331) -> ('un--snf\x{27}'(V0, V1, V1331)) end))(V1326))), fun (V1340) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1330, V1329, begin (V1341 = V2), case ((V1341 band 9223372036854775808) =/= 0) of 'true' -> (V1341 bor -9223372036854775808); _ -> (V1341 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1339)), V1339}} end end end end)); 0 -> fun (V1342) -> ('un--invalidS'(V1342)) end end end(E346, E347)); _ -> fun (V1343) -> ('un--invalidS'(V1343)) end end end(E344, E345)); _ -> fun (V1344) -> ('un--invalidS'(V1344)) end end end(E342, E343)); _ -> fun (V1345) -> ('un--invalidS'(V1345)) end end end end(E340, E341)); _ -> case V3 of [E334 | E335] -> (fun (V1346, V1347) -> case V1347 of [E336 | E337] -> (fun (V1348, V1349) -> case V1349 of [E338 | E339] -> (fun (V1350, V1351) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1352) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1352)) end, fun (V1353) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1353)) end}, V1348, fun (V1354) -> begin (V1355 = ('un--quoteFC'(V1350))), begin (V1364 = ((begin (V1361 = fun (V1357) -> fun (V1358) -> fun (V1359) -> fun (V1360) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1359, V1360)) end end end end), fun (V1362) -> fun (V1363) -> ((((V1361('erased'))('erased'))(V1362))(V1363)) end end end(fun (V1356) -> ('un--snf\x{27}'(V0, V1, V1356)) end))(V1351))), fun (V1365) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1355, V1354, begin (V1366 = V2), case ((V1366 band 9223372036854775808) =/= 0) of 'true' -> (V1366 bor -9223372036854775808); _ -> (V1366 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1364)), V1364}} end end end end)); 0 -> fun (V1367) -> ('un--invalidS'(V1367)) end end end(E338, E339)); _ -> fun (V1368) -> ('un--invalidS'(V1368)) end end end(E336, E337)); _ -> fun (V1369) -> ('un--invalidS'(V1369)) end end end(E334, E335)); _ -> fun (V1370) -> ('un--invalidS'(V1370)) end end end end(E332, E333)); _ -> case V3 of [E326 | E327] -> (fun (V1371, V1372) -> case V1372 of [E328 | E329] -> (fun (V1373, V1374) -> case V1374 of [E330 | E331] -> (fun (V1375, V1376) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1377) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1377)) end, fun (V1378) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1378)) end}, V1373, fun (V1379) -> begin (V1380 = ('un--quoteFC'(V1375))), begin (V1389 = ((begin (V1386 = fun (V1382) -> fun (V1383) -> fun (V1384) -> fun (V1385) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1384, V1385)) end end end end), fun (V1387) -> fun (V1388) -> ((((V1386('erased'))('erased'))(V1387))(V1388)) end end end(fun (V1381) -> ('un--snf\x{27}'(V0, V1, V1381)) end))(V1376))), fun (V1390) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1380, V1379, begin (V1391 = V2), case ((V1391 band 9223372036854775808) =/= 0) of 'true' -> (V1391 bor -9223372036854775808); _ -> (V1391 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1389)), V1389}} end end end end)); 0 -> fun (V1392) -> ('un--invalidS'(V1392)) end end end(E330, E331)); _ -> fun (V1393) -> ('un--invalidS'(V1393)) end end end(E328, E329)); _ -> fun (V1394) -> ('un--invalidS'(V1394)) end end end(E326, E327)); _ -> fun (V1395) -> ('un--invalidS'(V1395)) end end end end(E324, E325)); _ -> case V3 of [E318 | E319] -> (fun (V1396, V1397) -> case V1397 of [E320 | E321] -> (fun (V1398, V1399) -> case V1399 of [E322 | E323] -> (fun (V1400, V1401) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1402) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1402)) end, fun (V1403) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1403)) end}, V1398, fun (V1404) -> begin (V1405 = ('un--quoteFC'(V1400))), begin (V1414 = ((begin (V1411 = fun (V1407) -> fun (V1408) -> fun (V1409) -> fun (V1410) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1409, V1410)) end end end end), fun (V1412) -> fun (V1413) -> ((((V1411('erased'))('erased'))(V1412))(V1413)) end end end(fun (V1406) -> ('un--snf\x{27}'(V0, V1, V1406)) end))(V1401))), fun (V1415) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1405, V1404, begin (V1416 = V2), case ((V1416 band 9223372036854775808) =/= 0) of 'true' -> (V1416 bor -9223372036854775808); _ -> (V1416 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1414)), V1414}} end end end end)); 0 -> fun (V1417) -> ('un--invalidS'(V1417)) end end end(E322, E323)); _ -> fun (V1418) -> ('un--invalidS'(V1418)) end end end(E320, E321)); _ -> fun (V1419) -> ('un--invalidS'(V1419)) end end end(E318, E319)); _ -> fun (V1420) -> ('un--invalidS'(V1420)) end end end end(E316, E317)); _ -> case V3 of [E310 | E311] -> (fun (V1421, V1422) -> case V1422 of [E312 | E313] -> (fun (V1423, V1424) -> case V1424 of [E314 | E315] -> (fun (V1425, V1426) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1427) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1427)) end, fun (V1428) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1428)) end}, V1423, fun (V1429) -> begin (V1430 = ('un--quoteFC'(V1425))), begin (V1439 = ((begin (V1436 = fun (V1432) -> fun (V1433) -> fun (V1434) -> fun (V1435) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1434, V1435)) end end end end), fun (V1437) -> fun (V1438) -> ((((V1436('erased'))('erased'))(V1437))(V1438)) end end end(fun (V1431) -> ('un--snf\x{27}'(V0, V1, V1431)) end))(V1426))), fun (V1440) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1430, V1429, begin (V1441 = V2), case ((V1441 band 9223372036854775808) =/= 0) of 'true' -> (V1441 bor -9223372036854775808); _ -> (V1441 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1439)), V1439}} end end end end)); 0 -> fun (V1442) -> ('un--invalidS'(V1442)) end end end(E314, E315)); _ -> fun (V1443) -> ('un--invalidS'(V1443)) end end end(E312, E313)); _ -> fun (V1444) -> ('un--invalidS'(V1444)) end end end(E310, E311)); _ -> fun (V1445) -> ('un--invalidS'(V1445)) end end end; -3 -> case V3 of [E370 | E371] -> (fun (V1446, V1447) -> case V1447 of [E378 | E379] -> (fun (V1448, V1449) -> case V1449 of [E386 | E387] -> (fun (V1450, V1451) -> case V1451 of [E394 | E395] -> (fun (V1452, V1453) -> case V1453 of [E402 | E403] -> (fun (V1454, V1455) -> case V1455 of [E410 | E411] -> (fun (V1456, V1457) -> case V1457 of [] -> begin (V1458 = ('un--quoteBinderName'(V1456))), begin (V1459 = ('un--quoteRigCount'(V1450))), begin (V1460 = ('un--snf\x{27}'(V0, V1, V1454))), fun (V1461) -> begin (V1462 = (V1460(V1461))), case V1462 of {'Prelude.Types.Left', V1463} -> {'Prelude.Types.Left', V1463}; {'Prelude.Types.Right', V1464} -> (begin (V1477 = begin (V1465 = ('un--snfPiInfo'(V0, V1, V1452))), fun (V1466) -> begin (V1467 = (V1465(V1466))), case V1467 of {'Prelude.Types.Left', V1468} -> {'Prelude.Types.Left', V1468}; {'Prelude.Types.Right', V1469} -> (begin (V1476 = fun (V1470) -> ('un--snfBinder'(V0, V1, fun (V1471) -> fun (V1472) -> fun (V1473) -> fun (V1474) -> fun (V1475) -> {'Core.TT.Pi', V1472, V1473, V1474, V1475} end end end end end, V1448, V1459, V1469, V1464, V1458, V1470)) end), V1476 end(V1466)) end end end end), V1477 end(V1461)) end end end end end end; _ -> case V3 of [E412 | E413] -> (fun (V1478, V1479) -> case V1479 of [E414 | E415] -> (fun (V1480, V1481) -> case V1481 of [E416 | E417] -> (fun (V1482, V1483) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1484) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1484)) end, fun (V1485) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1485)) end}, V1480, fun (V1486) -> begin (V1487 = ('un--quoteFC'(V1482))), begin (V1496 = ((begin (V1493 = fun (V1489) -> fun (V1490) -> fun (V1491) -> fun (V1492) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1491, V1492)) end end end end), fun (V1494) -> fun (V1495) -> ((((V1493('erased'))('erased'))(V1494))(V1495)) end end end(fun (V1488) -> ('un--snf\x{27}'(V0, V1, V1488)) end))(V1483))), fun (V1497) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1487, V1486, begin (V1498 = V2), case ((V1498 band 9223372036854775808) =/= 0) of 'true' -> (V1498 bor -9223372036854775808); _ -> (V1498 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1496)), V1496}} end end end end)); 0 -> fun (V1499) -> ('un--invalidS'(V1499)) end end end(E416, E417)); _ -> fun (V1500) -> ('un--invalidS'(V1500)) end end end(E414, E415)); _ -> fun (V1501) -> ('un--invalidS'(V1501)) end end end(E412, E413)); _ -> fun (V1502) -> ('un--invalidS'(V1502)) end end end end(E410, E411)); _ -> case V3 of [E404 | E405] -> (fun (V1503, V1504) -> case V1504 of [E406 | E407] -> (fun (V1505, V1506) -> case V1506 of [E408 | E409] -> (fun (V1507, V1508) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1509) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1509)) end, fun (V1510) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1510)) end}, V1505, fun (V1511) -> begin (V1512 = ('un--quoteFC'(V1507))), begin (V1521 = ((begin (V1518 = fun (V1514) -> fun (V1515) -> fun (V1516) -> fun (V1517) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1516, V1517)) end end end end), fun (V1519) -> fun (V1520) -> ((((V1518('erased'))('erased'))(V1519))(V1520)) end end end(fun (V1513) -> ('un--snf\x{27}'(V0, V1, V1513)) end))(V1508))), fun (V1522) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1512, V1511, begin (V1523 = V2), case ((V1523 band 9223372036854775808) =/= 0) of 'true' -> (V1523 bor -9223372036854775808); _ -> (V1523 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1521)), V1521}} end end end end)); 0 -> fun (V1524) -> ('un--invalidS'(V1524)) end end end(E408, E409)); _ -> fun (V1525) -> ('un--invalidS'(V1525)) end end end(E406, E407)); _ -> fun (V1526) -> ('un--invalidS'(V1526)) end end end(E404, E405)); _ -> fun (V1527) -> ('un--invalidS'(V1527)) end end end end(E402, E403)); _ -> case V3 of [E396 | E397] -> (fun (V1528, V1529) -> case V1529 of [E398 | E399] -> (fun (V1530, V1531) -> case V1531 of [E400 | E401] -> (fun (V1532, V1533) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1534) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1534)) end, fun (V1535) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1535)) end}, V1530, fun (V1536) -> begin (V1537 = ('un--quoteFC'(V1532))), begin (V1546 = ((begin (V1543 = fun (V1539) -> fun (V1540) -> fun (V1541) -> fun (V1542) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1541, V1542)) end end end end), fun (V1544) -> fun (V1545) -> ((((V1543('erased'))('erased'))(V1544))(V1545)) end end end(fun (V1538) -> ('un--snf\x{27}'(V0, V1, V1538)) end))(V1533))), fun (V1547) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1537, V1536, begin (V1548 = V2), case ((V1548 band 9223372036854775808) =/= 0) of 'true' -> (V1548 bor -9223372036854775808); _ -> (V1548 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1546)), V1546}} end end end end)); 0 -> fun (V1549) -> ('un--invalidS'(V1549)) end end end(E400, E401)); _ -> fun (V1550) -> ('un--invalidS'(V1550)) end end end(E398, E399)); _ -> fun (V1551) -> ('un--invalidS'(V1551)) end end end(E396, E397)); _ -> fun (V1552) -> ('un--invalidS'(V1552)) end end end end(E394, E395)); _ -> case V3 of [E388 | E389] -> (fun (V1553, V1554) -> case V1554 of [E390 | E391] -> (fun (V1555, V1556) -> case V1556 of [E392 | E393] -> (fun (V1557, V1558) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1559) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1559)) end, fun (V1560) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1560)) end}, V1555, fun (V1561) -> begin (V1562 = ('un--quoteFC'(V1557))), begin (V1571 = ((begin (V1568 = fun (V1564) -> fun (V1565) -> fun (V1566) -> fun (V1567) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1566, V1567)) end end end end), fun (V1569) -> fun (V1570) -> ((((V1568('erased'))('erased'))(V1569))(V1570)) end end end(fun (V1563) -> ('un--snf\x{27}'(V0, V1, V1563)) end))(V1558))), fun (V1572) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1562, V1561, begin (V1573 = V2), case ((V1573 band 9223372036854775808) =/= 0) of 'true' -> (V1573 bor -9223372036854775808); _ -> (V1573 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1571)), V1571}} end end end end)); 0 -> fun (V1574) -> ('un--invalidS'(V1574)) end end end(E392, E393)); _ -> fun (V1575) -> ('un--invalidS'(V1575)) end end end(E390, E391)); _ -> fun (V1576) -> ('un--invalidS'(V1576)) end end end(E388, E389)); _ -> fun (V1577) -> ('un--invalidS'(V1577)) end end end end(E386, E387)); _ -> case V3 of [E380 | E381] -> (fun (V1578, V1579) -> case V1579 of [E382 | E383] -> (fun (V1580, V1581) -> case V1581 of [E384 | E385] -> (fun (V1582, V1583) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1584) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1584)) end, fun (V1585) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1585)) end}, V1580, fun (V1586) -> begin (V1587 = ('un--quoteFC'(V1582))), begin (V1596 = ((begin (V1593 = fun (V1589) -> fun (V1590) -> fun (V1591) -> fun (V1592) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1591, V1592)) end end end end), fun (V1594) -> fun (V1595) -> ((((V1593('erased'))('erased'))(V1594))(V1595)) end end end(fun (V1588) -> ('un--snf\x{27}'(V0, V1, V1588)) end))(V1583))), fun (V1597) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1587, V1586, begin (V1598 = V2), case ((V1598 band 9223372036854775808) =/= 0) of 'true' -> (V1598 bor -9223372036854775808); _ -> (V1598 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1596)), V1596}} end end end end)); 0 -> fun (V1599) -> ('un--invalidS'(V1599)) end end end(E384, E385)); _ -> fun (V1600) -> ('un--invalidS'(V1600)) end end end(E382, E383)); _ -> fun (V1601) -> ('un--invalidS'(V1601)) end end end(E380, E381)); _ -> fun (V1602) -> ('un--invalidS'(V1602)) end end end end(E378, E379)); _ -> case V3 of [E372 | E373] -> (fun (V1603, V1604) -> case V1604 of [E374 | E375] -> (fun (V1605, V1606) -> case V1606 of [E376 | E377] -> (fun (V1607, V1608) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1609) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1609)) end, fun (V1610) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1610)) end}, V1605, fun (V1611) -> begin (V1612 = ('un--quoteFC'(V1607))), begin (V1621 = ((begin (V1618 = fun (V1614) -> fun (V1615) -> fun (V1616) -> fun (V1617) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1616, V1617)) end end end end), fun (V1619) -> fun (V1620) -> ((((V1618('erased'))('erased'))(V1619))(V1620)) end end end(fun (V1613) -> ('un--snf\x{27}'(V0, V1, V1613)) end))(V1608))), fun (V1622) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1612, V1611, begin (V1623 = V2), case ((V1623 band 9223372036854775808) =/= 0) of 'true' -> (V1623 bor -9223372036854775808); _ -> (V1623 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1621)), V1621}} end end end end)); 0 -> fun (V1624) -> ('un--invalidS'(V1624)) end end end(E376, E377)); _ -> fun (V1625) -> ('un--invalidS'(V1625)) end end end(E374, E375)); _ -> fun (V1626) -> ('un--invalidS'(V1626)) end end end(E372, E373)); _ -> fun (V1627) -> ('un--invalidS'(V1627)) end end end end(E370, E371)); _ -> case V3 of [E364 | E365] -> (fun (V1628, V1629) -> case V1629 of [E366 | E367] -> (fun (V1630, V1631) -> case V1631 of [E368 | E369] -> (fun (V1632, V1633) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1634) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1634)) end, fun (V1635) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1635)) end}, V1630, fun (V1636) -> begin (V1637 = ('un--quoteFC'(V1632))), begin (V1646 = ((begin (V1643 = fun (V1639) -> fun (V1640) -> fun (V1641) -> fun (V1642) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1641, V1642)) end end end end), fun (V1644) -> fun (V1645) -> ((((V1643('erased'))('erased'))(V1644))(V1645)) end end end(fun (V1638) -> ('un--snf\x{27}'(V0, V1, V1638)) end))(V1633))), fun (V1647) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1637, V1636, begin (V1648 = V2), case ((V1648 band 9223372036854775808) =/= 0) of 'true' -> (V1648 bor -9223372036854775808); _ -> (V1648 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1646)), V1646}} end end end end)); 0 -> fun (V1649) -> ('un--invalidS'(V1649)) end end end(E368, E369)); _ -> fun (V1650) -> ('un--invalidS'(V1650)) end end end(E366, E367)); _ -> fun (V1651) -> ('un--invalidS'(V1651)) end end end(E364, E365)); _ -> fun (V1652) -> ('un--invalidS'(V1652)) end end end; -12 -> case V3 of [E424 | E425] -> (fun (V1653, V1654) -> case V1654 of [E432 | E433] -> (fun (V1655, V1656) -> case V1656 of [E440 | E441] -> (fun (V1657, V1658) -> case V1658 of [E448 | E449] -> (fun (V1659, V1660) -> case V1660 of [E456 | E457] -> (fun (V1661, V1662) -> case V1662 of [E464 | E465] -> (fun (V1663, V1664) -> case V1664 of [] -> begin (V1665 = ('un--quoteBinderName'(V1663))), begin (V1666 = ('un--quoteRigCount'(V1657))), begin (V1667 = ('un--snf\x{27}'(V0, V1, V1661))), fun (V1668) -> begin (V1669 = (V1667(V1668))), case V1669 of {'Prelude.Types.Left', V1670} -> {'Prelude.Types.Left', V1670}; {'Prelude.Types.Right', V1671} -> (begin (V1684 = begin (V1672 = ('un--snfPiInfo'(V0, V1, V1659))), fun (V1673) -> begin (V1674 = (V1672(V1673))), case V1674 of {'Prelude.Types.Left', V1675} -> {'Prelude.Types.Left', V1675}; {'Prelude.Types.Right', V1676} -> (begin (V1683 = fun (V1677) -> ('un--snfBinder'(V0, V1, fun (V1678) -> fun (V1679) -> fun (V1680) -> fun (V1681) -> fun (V1682) -> {'Core.TT.PVar', V1679, V1680, V1681, V1682} end end end end end, V1655, V1666, V1676, V1671, V1665, V1677)) end), V1683 end(V1673)) end end end end), V1684 end(V1668)) end end end end end end; _ -> case V3 of [E466 | E467] -> (fun (V1685, V1686) -> case V1686 of [E468 | E469] -> (fun (V1687, V1688) -> case V1688 of [E470 | E471] -> (fun (V1689, V1690) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1691) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1691)) end, fun (V1692) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1692)) end}, V1687, fun (V1693) -> begin (V1694 = ('un--quoteFC'(V1689))), begin (V1703 = ((begin (V1700 = fun (V1696) -> fun (V1697) -> fun (V1698) -> fun (V1699) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1698, V1699)) end end end end), fun (V1701) -> fun (V1702) -> ((((V1700('erased'))('erased'))(V1701))(V1702)) end end end(fun (V1695) -> ('un--snf\x{27}'(V0, V1, V1695)) end))(V1690))), fun (V1704) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1694, V1693, begin (V1705 = V2), case ((V1705 band 9223372036854775808) =/= 0) of 'true' -> (V1705 bor -9223372036854775808); _ -> (V1705 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1703)), V1703}} end end end end)); 0 -> fun (V1706) -> ('un--invalidS'(V1706)) end end end(E470, E471)); _ -> fun (V1707) -> ('un--invalidS'(V1707)) end end end(E468, E469)); _ -> fun (V1708) -> ('un--invalidS'(V1708)) end end end(E466, E467)); _ -> fun (V1709) -> ('un--invalidS'(V1709)) end end end end(E464, E465)); _ -> case V3 of [E458 | E459] -> (fun (V1710, V1711) -> case V1711 of [E460 | E461] -> (fun (V1712, V1713) -> case V1713 of [E462 | E463] -> (fun (V1714, V1715) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1716) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1716)) end, fun (V1717) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1717)) end}, V1712, fun (V1718) -> begin (V1719 = ('un--quoteFC'(V1714))), begin (V1728 = ((begin (V1725 = fun (V1721) -> fun (V1722) -> fun (V1723) -> fun (V1724) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1723, V1724)) end end end end), fun (V1726) -> fun (V1727) -> ((((V1725('erased'))('erased'))(V1726))(V1727)) end end end(fun (V1720) -> ('un--snf\x{27}'(V0, V1, V1720)) end))(V1715))), fun (V1729) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1719, V1718, begin (V1730 = V2), case ((V1730 band 9223372036854775808) =/= 0) of 'true' -> (V1730 bor -9223372036854775808); _ -> (V1730 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1728)), V1728}} end end end end)); 0 -> fun (V1731) -> ('un--invalidS'(V1731)) end end end(E462, E463)); _ -> fun (V1732) -> ('un--invalidS'(V1732)) end end end(E460, E461)); _ -> fun (V1733) -> ('un--invalidS'(V1733)) end end end(E458, E459)); _ -> fun (V1734) -> ('un--invalidS'(V1734)) end end end end(E456, E457)); _ -> case V3 of [E450 | E451] -> (fun (V1735, V1736) -> case V1736 of [E452 | E453] -> (fun (V1737, V1738) -> case V1738 of [E454 | E455] -> (fun (V1739, V1740) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1741) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1741)) end, fun (V1742) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1742)) end}, V1737, fun (V1743) -> begin (V1744 = ('un--quoteFC'(V1739))), begin (V1753 = ((begin (V1750 = fun (V1746) -> fun (V1747) -> fun (V1748) -> fun (V1749) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1748, V1749)) end end end end), fun (V1751) -> fun (V1752) -> ((((V1750('erased'))('erased'))(V1751))(V1752)) end end end(fun (V1745) -> ('un--snf\x{27}'(V0, V1, V1745)) end))(V1740))), fun (V1754) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1744, V1743, begin (V1755 = V2), case ((V1755 band 9223372036854775808) =/= 0) of 'true' -> (V1755 bor -9223372036854775808); _ -> (V1755 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1753)), V1753}} end end end end)); 0 -> fun (V1756) -> ('un--invalidS'(V1756)) end end end(E454, E455)); _ -> fun (V1757) -> ('un--invalidS'(V1757)) end end end(E452, E453)); _ -> fun (V1758) -> ('un--invalidS'(V1758)) end end end(E450, E451)); _ -> fun (V1759) -> ('un--invalidS'(V1759)) end end end end(E448, E449)); _ -> case V3 of [E442 | E443] -> (fun (V1760, V1761) -> case V1761 of [E444 | E445] -> (fun (V1762, V1763) -> case V1763 of [E446 | E447] -> (fun (V1764, V1765) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1766) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1766)) end, fun (V1767) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1767)) end}, V1762, fun (V1768) -> begin (V1769 = ('un--quoteFC'(V1764))), begin (V1778 = ((begin (V1775 = fun (V1771) -> fun (V1772) -> fun (V1773) -> fun (V1774) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1773, V1774)) end end end end), fun (V1776) -> fun (V1777) -> ((((V1775('erased'))('erased'))(V1776))(V1777)) end end end(fun (V1770) -> ('un--snf\x{27}'(V0, V1, V1770)) end))(V1765))), fun (V1779) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1769, V1768, begin (V1780 = V2), case ((V1780 band 9223372036854775808) =/= 0) of 'true' -> (V1780 bor -9223372036854775808); _ -> (V1780 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1778)), V1778}} end end end end)); 0 -> fun (V1781) -> ('un--invalidS'(V1781)) end end end(E446, E447)); _ -> fun (V1782) -> ('un--invalidS'(V1782)) end end end(E444, E445)); _ -> fun (V1783) -> ('un--invalidS'(V1783)) end end end(E442, E443)); _ -> fun (V1784) -> ('un--invalidS'(V1784)) end end end end(E440, E441)); _ -> case V3 of [E434 | E435] -> (fun (V1785, V1786) -> case V1786 of [E436 | E437] -> (fun (V1787, V1788) -> case V1788 of [E438 | E439] -> (fun (V1789, V1790) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1791) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1791)) end, fun (V1792) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1792)) end}, V1787, fun (V1793) -> begin (V1794 = ('un--quoteFC'(V1789))), begin (V1803 = ((begin (V1800 = fun (V1796) -> fun (V1797) -> fun (V1798) -> fun (V1799) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1798, V1799)) end end end end), fun (V1801) -> fun (V1802) -> ((((V1800('erased'))('erased'))(V1801))(V1802)) end end end(fun (V1795) -> ('un--snf\x{27}'(V0, V1, V1795)) end))(V1790))), fun (V1804) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1794, V1793, begin (V1805 = V2), case ((V1805 band 9223372036854775808) =/= 0) of 'true' -> (V1805 bor -9223372036854775808); _ -> (V1805 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1803)), V1803}} end end end end)); 0 -> fun (V1806) -> ('un--invalidS'(V1806)) end end end(E438, E439)); _ -> fun (V1807) -> ('un--invalidS'(V1807)) end end end(E436, E437)); _ -> fun (V1808) -> ('un--invalidS'(V1808)) end end end(E434, E435)); _ -> fun (V1809) -> ('un--invalidS'(V1809)) end end end end(E432, E433)); _ -> case V3 of [E426 | E427] -> (fun (V1810, V1811) -> case V1811 of [E428 | E429] -> (fun (V1812, V1813) -> case V1813 of [E430 | E431] -> (fun (V1814, V1815) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1816) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1816)) end, fun (V1817) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1817)) end}, V1812, fun (V1818) -> begin (V1819 = ('un--quoteFC'(V1814))), begin (V1828 = ((begin (V1825 = fun (V1821) -> fun (V1822) -> fun (V1823) -> fun (V1824) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1823, V1824)) end end end end), fun (V1826) -> fun (V1827) -> ((((V1825('erased'))('erased'))(V1826))(V1827)) end end end(fun (V1820) -> ('un--snf\x{27}'(V0, V1, V1820)) end))(V1815))), fun (V1829) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1819, V1818, begin (V1830 = V2), case ((V1830 band 9223372036854775808) =/= 0) of 'true' -> (V1830 bor -9223372036854775808); _ -> (V1830 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1828)), V1828}} end end end end)); 0 -> fun (V1831) -> ('un--invalidS'(V1831)) end end end(E430, E431)); _ -> fun (V1832) -> ('un--invalidS'(V1832)) end end end(E428, E429)); _ -> fun (V1833) -> ('un--invalidS'(V1833)) end end end(E426, E427)); _ -> fun (V1834) -> ('un--invalidS'(V1834)) end end end end(E424, E425)); _ -> case V3 of [E418 | E419] -> (fun (V1835, V1836) -> case V1836 of [E420 | E421] -> (fun (V1837, V1838) -> case V1838 of [E422 | E423] -> (fun (V1839, V1840) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1841) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1841)) end, fun (V1842) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1842)) end}, V1837, fun (V1843) -> begin (V1844 = ('un--quoteFC'(V1839))), begin (V1853 = ((begin (V1850 = fun (V1846) -> fun (V1847) -> fun (V1848) -> fun (V1849) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1848, V1849)) end end end end), fun (V1851) -> fun (V1852) -> ((((V1850('erased'))('erased'))(V1851))(V1852)) end end end(fun (V1845) -> ('un--snf\x{27}'(V0, V1, V1845)) end))(V1840))), fun (V1854) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1844, V1843, begin (V1855 = V2), case ((V1855 band 9223372036854775808) =/= 0) of 'true' -> (V1855 bor -9223372036854775808); _ -> (V1855 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1853)), V1853}} end end end end)); 0 -> fun (V1856) -> ('un--invalidS'(V1856)) end end end(E422, E423)); _ -> fun (V1857) -> ('un--invalidS'(V1857)) end end end(E420, E421)); _ -> fun (V1858) -> ('un--invalidS'(V1858)) end end end(E418, E419)); _ -> fun (V1859) -> ('un--invalidS'(V1859)) end end end; -13 -> case V3 of [E478 | E479] -> (fun (V1860, V1861) -> case V1861 of [E486 | E487] -> (fun (V1862, V1863) -> case V1863 of [E494 | E495] -> (fun (V1864, V1865) -> case V1865 of [E502 | E503] -> (fun (V1866, V1867) -> case V1867 of [E510 | E511] -> (fun (V1868, V1869) -> case V1869 of [] -> begin (V1870 = ('un--quoteBinderName'(V1868))), begin (V1871 = ('un--quoteRigCount'(V1864))), begin (V1872 = ('un--snf\x{27}'(V0, V1, V1866))), fun (V1873) -> begin (V1874 = (V1872(V1873))), case V1874 of {'Prelude.Types.Left', V1875} -> {'Prelude.Types.Left', V1875}; {'Prelude.Types.Right', V1876} -> (begin (V1883 = fun (V1877) -> ('un--snfBinder'(V0, V1, fun (V1878) -> fun (V1879) -> fun (V1880) -> fun (V1881) -> fun (V1882) -> {'Core.TT.PVTy', V1879, V1880, V1882} end end end end end, V1862, V1871, {'Core.TT.Explicit'}, V1876, V1870, V1877)) end), V1883 end(V1873)) end end end end end end; _ -> case V3 of [E512 | E513] -> (fun (V1884, V1885) -> case V1885 of [E514 | E515] -> (fun (V1886, V1887) -> case V1887 of [E516 | E517] -> (fun (V1888, V1889) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1890) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1890)) end, fun (V1891) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1891)) end}, V1886, fun (V1892) -> begin (V1893 = ('un--quoteFC'(V1888))), begin (V1902 = ((begin (V1899 = fun (V1895) -> fun (V1896) -> fun (V1897) -> fun (V1898) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1897, V1898)) end end end end), fun (V1900) -> fun (V1901) -> ((((V1899('erased'))('erased'))(V1900))(V1901)) end end end(fun (V1894) -> ('un--snf\x{27}'(V0, V1, V1894)) end))(V1889))), fun (V1903) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1893, V1892, begin (V1904 = V2), case ((V1904 band 9223372036854775808) =/= 0) of 'true' -> (V1904 bor -9223372036854775808); _ -> (V1904 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1902)), V1902}} end end end end)); 0 -> fun (V1905) -> ('un--invalidS'(V1905)) end end end(E516, E517)); _ -> fun (V1906) -> ('un--invalidS'(V1906)) end end end(E514, E515)); _ -> fun (V1907) -> ('un--invalidS'(V1907)) end end end(E512, E513)); _ -> fun (V1908) -> ('un--invalidS'(V1908)) end end end end(E510, E511)); _ -> case V3 of [E504 | E505] -> (fun (V1909, V1910) -> case V1910 of [E506 | E507] -> (fun (V1911, V1912) -> case V1912 of [E508 | E509] -> (fun (V1913, V1914) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1915) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1915)) end, fun (V1916) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1916)) end}, V1911, fun (V1917) -> begin (V1918 = ('un--quoteFC'(V1913))), begin (V1927 = ((begin (V1924 = fun (V1920) -> fun (V1921) -> fun (V1922) -> fun (V1923) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1922, V1923)) end end end end), fun (V1925) -> fun (V1926) -> ((((V1924('erased'))('erased'))(V1925))(V1926)) end end end(fun (V1919) -> ('un--snf\x{27}'(V0, V1, V1919)) end))(V1914))), fun (V1928) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1918, V1917, begin (V1929 = V2), case ((V1929 band 9223372036854775808) =/= 0) of 'true' -> (V1929 bor -9223372036854775808); _ -> (V1929 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1927)), V1927}} end end end end)); 0 -> fun (V1930) -> ('un--invalidS'(V1930)) end end end(E508, E509)); _ -> fun (V1931) -> ('un--invalidS'(V1931)) end end end(E506, E507)); _ -> fun (V1932) -> ('un--invalidS'(V1932)) end end end(E504, E505)); _ -> fun (V1933) -> ('un--invalidS'(V1933)) end end end end(E502, E503)); _ -> case V3 of [E496 | E497] -> (fun (V1934, V1935) -> case V1935 of [E498 | E499] -> (fun (V1936, V1937) -> case V1937 of [E500 | E501] -> (fun (V1938, V1939) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1940) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1940)) end, fun (V1941) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1941)) end}, V1936, fun (V1942) -> begin (V1943 = ('un--quoteFC'(V1938))), begin (V1952 = ((begin (V1949 = fun (V1945) -> fun (V1946) -> fun (V1947) -> fun (V1948) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1947, V1948)) end end end end), fun (V1950) -> fun (V1951) -> ((((V1949('erased'))('erased'))(V1950))(V1951)) end end end(fun (V1944) -> ('un--snf\x{27}'(V0, V1, V1944)) end))(V1939))), fun (V1953) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1943, V1942, begin (V1954 = V2), case ((V1954 band 9223372036854775808) =/= 0) of 'true' -> (V1954 bor -9223372036854775808); _ -> (V1954 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1952)), V1952}} end end end end)); 0 -> fun (V1955) -> ('un--invalidS'(V1955)) end end end(E500, E501)); _ -> fun (V1956) -> ('un--invalidS'(V1956)) end end end(E498, E499)); _ -> fun (V1957) -> ('un--invalidS'(V1957)) end end end(E496, E497)); _ -> fun (V1958) -> ('un--invalidS'(V1958)) end end end end(E494, E495)); _ -> case V3 of [E488 | E489] -> (fun (V1959, V1960) -> case V1960 of [E490 | E491] -> (fun (V1961, V1962) -> case V1962 of [E492 | E493] -> (fun (V1963, V1964) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1965) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1965)) end, fun (V1966) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1966)) end}, V1961, fun (V1967) -> begin (V1968 = ('un--quoteFC'(V1963))), begin (V1977 = ((begin (V1974 = fun (V1970) -> fun (V1971) -> fun (V1972) -> fun (V1973) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1972, V1973)) end end end end), fun (V1975) -> fun (V1976) -> ((((V1974('erased'))('erased'))(V1975))(V1976)) end end end(fun (V1969) -> ('un--snf\x{27}'(V0, V1, V1969)) end))(V1964))), fun (V1978) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1968, V1967, begin (V1979 = V2), case ((V1979 band 9223372036854775808) =/= 0) of 'true' -> (V1979 bor -9223372036854775808); _ -> (V1979 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1977)), V1977}} end end end end)); 0 -> fun (V1980) -> ('un--invalidS'(V1980)) end end end(E492, E493)); _ -> fun (V1981) -> ('un--invalidS'(V1981)) end end end(E490, E491)); _ -> fun (V1982) -> ('un--invalidS'(V1982)) end end end(E488, E489)); _ -> fun (V1983) -> ('un--invalidS'(V1983)) end end end end(E486, E487)); _ -> case V3 of [E480 | E481] -> (fun (V1984, V1985) -> case V1985 of [E482 | E483] -> (fun (V1986, V1987) -> case V1987 of [E484 | E485] -> (fun (V1988, V1989) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1990) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1990)) end, fun (V1991) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1991)) end}, V1986, fun (V1992) -> begin (V1993 = ('un--quoteFC'(V1988))), begin (V2002 = ((begin (V1999 = fun (V1995) -> fun (V1996) -> fun (V1997) -> fun (V1998) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1997, V1998)) end end end end), fun (V2000) -> fun (V2001) -> ((((V1999('erased'))('erased'))(V2000))(V2001)) end end end(fun (V1994) -> ('un--snf\x{27}'(V0, V1, V1994)) end))(V1989))), fun (V2003) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V1993, V1992, begin (V2004 = V2), case ((V2004 band 9223372036854775808) =/= 0) of 'true' -> (V2004 bor -9223372036854775808); _ -> (V2004 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2002)), V2002}} end end end end)); 0 -> fun (V2005) -> ('un--invalidS'(V2005)) end end end(E484, E485)); _ -> fun (V2006) -> ('un--invalidS'(V2006)) end end end(E482, E483)); _ -> fun (V2007) -> ('un--invalidS'(V2007)) end end end(E480, E481)); _ -> fun (V2008) -> ('un--invalidS'(V2008)) end end end end(E478, E479)); _ -> case V3 of [E472 | E473] -> (fun (V2009, V2010) -> case V2010 of [E474 | E475] -> (fun (V2011, V2012) -> case V2012 of [E476 | E477] -> (fun (V2013, V2014) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2015) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2015)) end, fun (V2016) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2016)) end}, V2011, fun (V2017) -> begin (V2018 = ('un--quoteFC'(V2013))), begin (V2027 = ((begin (V2024 = fun (V2020) -> fun (V2021) -> fun (V2022) -> fun (V2023) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2022, V2023)) end end end end), fun (V2025) -> fun (V2026) -> ((((V2024('erased'))('erased'))(V2025))(V2026)) end end end(fun (V2019) -> ('un--snf\x{27}'(V0, V1, V2019)) end))(V2014))), fun (V2028) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2018, V2017, begin (V2029 = V2), case ((V2029 band 9223372036854775808) =/= 0) of 'true' -> (V2029 bor -9223372036854775808); _ -> (V2029 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2027)), V2027}} end end end end)); 0 -> fun (V2030) -> ('un--invalidS'(V2030)) end end end(E476, E477)); _ -> fun (V2031) -> ('un--invalidS'(V2031)) end end end(E474, E475)); _ -> fun (V2032) -> ('un--invalidS'(V2032)) end end end(E472, E473)); _ -> fun (V2033) -> ('un--invalidS'(V2033)) end end end; -14 -> case V3 of [E524 | E525] -> (fun (V2034, V2035) -> case V2035 of [E532 | E533] -> (fun (V2036, V2037) -> case V2037 of [E540 | E541] -> (fun (V2038, V2039) -> case V2039 of [E548 | E549] -> (fun (V2040, V2041) -> case V2041 of [E556 | E557] -> (fun (V2042, V2043) -> case V2043 of [E564 | E565] -> (fun (V2044, V2045) -> case V2045 of [] -> begin (V2046 = ('un--quoteBinderName'(V2044))), begin (V2047 = ('un--quoteRigCount'(V2038))), begin (V2048 = ('un--snf\x{27}'(V0, V1, V2042))), fun (V2049) -> begin (V2050 = (V2048(V2049))), case V2050 of {'Prelude.Types.Left', V2051} -> {'Prelude.Types.Left', V2051}; {'Prelude.Types.Right', V2052} -> (begin (V2060 = begin (V2053 = ('un--snf\x{27}'(V0, V1, V2040))), fun (V2054) -> begin (V2055 = (V2053(V2054))), case V2055 of {'Prelude.Types.Left', V2056} -> {'Prelude.Types.Left', V2056}; {'Prelude.Types.Right', V2057} -> (begin (V2059 = fun (V2058) -> ('un--snfPLet'(V0, V1, V2036, V2047, V2057, V2052, V2046, V2058)) end), V2059 end(V2054)) end end end end), V2060 end(V2049)) end end end end end end; _ -> case V3 of [E566 | E567] -> (fun (V2061, V2062) -> case V2062 of [E568 | E569] -> (fun (V2063, V2064) -> case V2064 of [E570 | E571] -> (fun (V2065, V2066) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2067) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2067)) end, fun (V2068) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2068)) end}, V2063, fun (V2069) -> begin (V2070 = ('un--quoteFC'(V2065))), begin (V2079 = ((begin (V2076 = fun (V2072) -> fun (V2073) -> fun (V2074) -> fun (V2075) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2074, V2075)) end end end end), fun (V2077) -> fun (V2078) -> ((((V2076('erased'))('erased'))(V2077))(V2078)) end end end(fun (V2071) -> ('un--snf\x{27}'(V0, V1, V2071)) end))(V2066))), fun (V2080) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2070, V2069, begin (V2081 = V2), case ((V2081 band 9223372036854775808) =/= 0) of 'true' -> (V2081 bor -9223372036854775808); _ -> (V2081 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2079)), V2079}} end end end end)); 0 -> fun (V2082) -> ('un--invalidS'(V2082)) end end end(E570, E571)); _ -> fun (V2083) -> ('un--invalidS'(V2083)) end end end(E568, E569)); _ -> fun (V2084) -> ('un--invalidS'(V2084)) end end end(E566, E567)); _ -> fun (V2085) -> ('un--invalidS'(V2085)) end end end end(E564, E565)); _ -> case V3 of [E558 | E559] -> (fun (V2086, V2087) -> case V2087 of [E560 | E561] -> (fun (V2088, V2089) -> case V2089 of [E562 | E563] -> (fun (V2090, V2091) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2092) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2092)) end, fun (V2093) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2093)) end}, V2088, fun (V2094) -> begin (V2095 = ('un--quoteFC'(V2090))), begin (V2104 = ((begin (V2101 = fun (V2097) -> fun (V2098) -> fun (V2099) -> fun (V2100) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2099, V2100)) end end end end), fun (V2102) -> fun (V2103) -> ((((V2101('erased'))('erased'))(V2102))(V2103)) end end end(fun (V2096) -> ('un--snf\x{27}'(V0, V1, V2096)) end))(V2091))), fun (V2105) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2095, V2094, begin (V2106 = V2), case ((V2106 band 9223372036854775808) =/= 0) of 'true' -> (V2106 bor -9223372036854775808); _ -> (V2106 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2104)), V2104}} end end end end)); 0 -> fun (V2107) -> ('un--invalidS'(V2107)) end end end(E562, E563)); _ -> fun (V2108) -> ('un--invalidS'(V2108)) end end end(E560, E561)); _ -> fun (V2109) -> ('un--invalidS'(V2109)) end end end(E558, E559)); _ -> fun (V2110) -> ('un--invalidS'(V2110)) end end end end(E556, E557)); _ -> case V3 of [E550 | E551] -> (fun (V2111, V2112) -> case V2112 of [E552 | E553] -> (fun (V2113, V2114) -> case V2114 of [E554 | E555] -> (fun (V2115, V2116) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2117) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2117)) end, fun (V2118) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2118)) end}, V2113, fun (V2119) -> begin (V2120 = ('un--quoteFC'(V2115))), begin (V2129 = ((begin (V2126 = fun (V2122) -> fun (V2123) -> fun (V2124) -> fun (V2125) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2124, V2125)) end end end end), fun (V2127) -> fun (V2128) -> ((((V2126('erased'))('erased'))(V2127))(V2128)) end end end(fun (V2121) -> ('un--snf\x{27}'(V0, V1, V2121)) end))(V2116))), fun (V2130) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2120, V2119, begin (V2131 = V2), case ((V2131 band 9223372036854775808) =/= 0) of 'true' -> (V2131 bor -9223372036854775808); _ -> (V2131 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2129)), V2129}} end end end end)); 0 -> fun (V2132) -> ('un--invalidS'(V2132)) end end end(E554, E555)); _ -> fun (V2133) -> ('un--invalidS'(V2133)) end end end(E552, E553)); _ -> fun (V2134) -> ('un--invalidS'(V2134)) end end end(E550, E551)); _ -> fun (V2135) -> ('un--invalidS'(V2135)) end end end end(E548, E549)); _ -> case V3 of [E542 | E543] -> (fun (V2136, V2137) -> case V2137 of [E544 | E545] -> (fun (V2138, V2139) -> case V2139 of [E546 | E547] -> (fun (V2140, V2141) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2142) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2142)) end, fun (V2143) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2143)) end}, V2138, fun (V2144) -> begin (V2145 = ('un--quoteFC'(V2140))), begin (V2154 = ((begin (V2151 = fun (V2147) -> fun (V2148) -> fun (V2149) -> fun (V2150) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2149, V2150)) end end end end), fun (V2152) -> fun (V2153) -> ((((V2151('erased'))('erased'))(V2152))(V2153)) end end end(fun (V2146) -> ('un--snf\x{27}'(V0, V1, V2146)) end))(V2141))), fun (V2155) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2145, V2144, begin (V2156 = V2), case ((V2156 band 9223372036854775808) =/= 0) of 'true' -> (V2156 bor -9223372036854775808); _ -> (V2156 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2154)), V2154}} end end end end)); 0 -> fun (V2157) -> ('un--invalidS'(V2157)) end end end(E546, E547)); _ -> fun (V2158) -> ('un--invalidS'(V2158)) end end end(E544, E545)); _ -> fun (V2159) -> ('un--invalidS'(V2159)) end end end(E542, E543)); _ -> fun (V2160) -> ('un--invalidS'(V2160)) end end end end(E540, E541)); _ -> case V3 of [E534 | E535] -> (fun (V2161, V2162) -> case V2162 of [E536 | E537] -> (fun (V2163, V2164) -> case V2164 of [E538 | E539] -> (fun (V2165, V2166) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2167) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2167)) end, fun (V2168) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2168)) end}, V2163, fun (V2169) -> begin (V2170 = ('un--quoteFC'(V2165))), begin (V2179 = ((begin (V2176 = fun (V2172) -> fun (V2173) -> fun (V2174) -> fun (V2175) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2174, V2175)) end end end end), fun (V2177) -> fun (V2178) -> ((((V2176('erased'))('erased'))(V2177))(V2178)) end end end(fun (V2171) -> ('un--snf\x{27}'(V0, V1, V2171)) end))(V2166))), fun (V2180) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2170, V2169, begin (V2181 = V2), case ((V2181 band 9223372036854775808) =/= 0) of 'true' -> (V2181 bor -9223372036854775808); _ -> (V2181 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2179)), V2179}} end end end end)); 0 -> fun (V2182) -> ('un--invalidS'(V2182)) end end end(E538, E539)); _ -> fun (V2183) -> ('un--invalidS'(V2183)) end end end(E536, E537)); _ -> fun (V2184) -> ('un--invalidS'(V2184)) end end end(E534, E535)); _ -> fun (V2185) -> ('un--invalidS'(V2185)) end end end end(E532, E533)); _ -> case V3 of [E526 | E527] -> (fun (V2186, V2187) -> case V2187 of [E528 | E529] -> (fun (V2188, V2189) -> case V2189 of [E530 | E531] -> (fun (V2190, V2191) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2192) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2192)) end, fun (V2193) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2193)) end}, V2188, fun (V2194) -> begin (V2195 = ('un--quoteFC'(V2190))), begin (V2204 = ((begin (V2201 = fun (V2197) -> fun (V2198) -> fun (V2199) -> fun (V2200) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2199, V2200)) end end end end), fun (V2202) -> fun (V2203) -> ((((V2201('erased'))('erased'))(V2202))(V2203)) end end end(fun (V2196) -> ('un--snf\x{27}'(V0, V1, V2196)) end))(V2191))), fun (V2205) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2195, V2194, begin (V2206 = V2), case ((V2206 band 9223372036854775808) =/= 0) of 'true' -> (V2206 bor -9223372036854775808); _ -> (V2206 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2204)), V2204}} end end end end)); 0 -> fun (V2207) -> ('un--invalidS'(V2207)) end end end(E530, E531)); _ -> fun (V2208) -> ('un--invalidS'(V2208)) end end end(E528, E529)); _ -> fun (V2209) -> ('un--invalidS'(V2209)) end end end(E526, E527)); _ -> fun (V2210) -> ('un--invalidS'(V2210)) end end end end(E524, E525)); _ -> case V3 of [E518 | E519] -> (fun (V2211, V2212) -> case V2212 of [E520 | E521] -> (fun (V2213, V2214) -> case V2214 of [E522 | E523] -> (fun (V2215, V2216) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2217) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2217)) end, fun (V2218) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2218)) end}, V2213, fun (V2219) -> begin (V2220 = ('un--quoteFC'(V2215))), begin (V2229 = ((begin (V2226 = fun (V2222) -> fun (V2223) -> fun (V2224) -> fun (V2225) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2224, V2225)) end end end end), fun (V2227) -> fun (V2228) -> ((((V2226('erased'))('erased'))(V2227))(V2228)) end end end(fun (V2221) -> ('un--snf\x{27}'(V0, V1, V2221)) end))(V2216))), fun (V2230) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2220, V2219, begin (V2231 = V2), case ((V2231 band 9223372036854775808) =/= 0) of 'true' -> (V2231 bor -9223372036854775808); _ -> (V2231 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2229)), V2229}} end end end end)); 0 -> fun (V2232) -> ('un--invalidS'(V2232)) end end end(E522, E523)); _ -> fun (V2233) -> ('un--invalidS'(V2233)) end end end(E520, E521)); _ -> fun (V2234) -> ('un--invalidS'(V2234)) end end end(E518, E519)); _ -> fun (V2235) -> ('un--invalidS'(V2235)) end end end; -9 -> case V3 of [E578 | E579] -> (fun (V2236, V2237) -> case V2237 of [E586 | E587] -> (fun (V2238, V2239) -> case V2239 of [E594 | E595] -> (fun (V2240, V2241) -> case V2241 of [] -> ('un--snf\x{27}'(V0, V1, V2238)); _ -> case V3 of [E596 | E597] -> (fun (V2242, V2243) -> case V2243 of [E598 | E599] -> (fun (V2244, V2245) -> case V2245 of [E600 | E601] -> (fun (V2246, V2247) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2248) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2248)) end, fun (V2249) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2249)) end}, V2244, fun (V2250) -> begin (V2251 = ('un--quoteFC'(V2246))), begin (V2260 = ((begin (V2257 = fun (V2253) -> fun (V2254) -> fun (V2255) -> fun (V2256) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2255, V2256)) end end end end), fun (V2258) -> fun (V2259) -> ((((V2257('erased'))('erased'))(V2258))(V2259)) end end end(fun (V2252) -> ('un--snf\x{27}'(V0, V1, V2252)) end))(V2247))), fun (V2261) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2251, V2250, begin (V2262 = V2), case ((V2262 band 9223372036854775808) =/= 0) of 'true' -> (V2262 bor -9223372036854775808); _ -> (V2262 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2260)), V2260}} end end end end)); 0 -> fun (V2263) -> ('un--invalidS'(V2263)) end end end(E600, E601)); _ -> fun (V2264) -> ('un--invalidS'(V2264)) end end end(E598, E599)); _ -> fun (V2265) -> ('un--invalidS'(V2265)) end end end(E596, E597)); _ -> fun (V2266) -> ('un--invalidS'(V2266)) end end end end(E594, E595)); _ -> case V3 of [E588 | E589] -> (fun (V2267, V2268) -> case V2268 of [E590 | E591] -> (fun (V2269, V2270) -> case V2270 of [E592 | E593] -> (fun (V2271, V2272) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2273) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2273)) end, fun (V2274) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2274)) end}, V2269, fun (V2275) -> begin (V2276 = ('un--quoteFC'(V2271))), begin (V2285 = ((begin (V2282 = fun (V2278) -> fun (V2279) -> fun (V2280) -> fun (V2281) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2280, V2281)) end end end end), fun (V2283) -> fun (V2284) -> ((((V2282('erased'))('erased'))(V2283))(V2284)) end end end(fun (V2277) -> ('un--snf\x{27}'(V0, V1, V2277)) end))(V2272))), fun (V2286) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2276, V2275, begin (V2287 = V2), case ((V2287 band 9223372036854775808) =/= 0) of 'true' -> (V2287 bor -9223372036854775808); _ -> (V2287 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2285)), V2285}} end end end end)); 0 -> fun (V2288) -> ('un--invalidS'(V2288)) end end end(E592, E593)); _ -> fun (V2289) -> ('un--invalidS'(V2289)) end end end(E590, E591)); _ -> fun (V2290) -> ('un--invalidS'(V2290)) end end end(E588, E589)); _ -> fun (V2291) -> ('un--invalidS'(V2291)) end end end end(E586, E587)); _ -> case V3 of [E580 | E581] -> (fun (V2292, V2293) -> case V2293 of [E582 | E583] -> (fun (V2294, V2295) -> case V2295 of [E584 | E585] -> (fun (V2296, V2297) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2298) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2298)) end, fun (V2299) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2299)) end}, V2294, fun (V2300) -> begin (V2301 = ('un--quoteFC'(V2296))), begin (V2310 = ((begin (V2307 = fun (V2303) -> fun (V2304) -> fun (V2305) -> fun (V2306) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2305, V2306)) end end end end), fun (V2308) -> fun (V2309) -> ((((V2307('erased'))('erased'))(V2308))(V2309)) end end end(fun (V2302) -> ('un--snf\x{27}'(V0, V1, V2302)) end))(V2297))), fun (V2311) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2301, V2300, begin (V2312 = V2), case ((V2312 band 9223372036854775808) =/= 0) of 'true' -> (V2312 bor -9223372036854775808); _ -> (V2312 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2310)), V2310}} end end end end)); 0 -> fun (V2313) -> ('un--invalidS'(V2313)) end end end(E584, E585)); _ -> fun (V2314) -> ('un--invalidS'(V2314)) end end end(E582, E583)); _ -> fun (V2315) -> ('un--invalidS'(V2315)) end end end(E580, E581)); _ -> fun (V2316) -> ('un--invalidS'(V2316)) end end end end(E578, E579)); _ -> case V3 of [E572 | E573] -> (fun (V2317, V2318) -> case V2318 of [E574 | E575] -> (fun (V2319, V2320) -> case V2320 of [E576 | E577] -> (fun (V2321, V2322) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2323) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2323)) end, fun (V2324) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2324)) end}, V2319, fun (V2325) -> begin (V2326 = ('un--quoteFC'(V2321))), begin (V2335 = ((begin (V2332 = fun (V2328) -> fun (V2329) -> fun (V2330) -> fun (V2331) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2330, V2331)) end end end end), fun (V2333) -> fun (V2334) -> ((((V2332('erased'))('erased'))(V2333))(V2334)) end end end(fun (V2327) -> ('un--snf\x{27}'(V0, V1, V2327)) end))(V2322))), fun (V2336) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2326, V2325, begin (V2337 = V2), case ((V2337 band 9223372036854775808) =/= 0) of 'true' -> (V2337 bor -9223372036854775808); _ -> (V2337 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2335)), V2335}} end end end end)); 0 -> fun (V2338) -> ('un--invalidS'(V2338)) end end end(E576, E577)); _ -> fun (V2339) -> ('un--invalidS'(V2339)) end end end(E574, E575)); _ -> fun (V2340) -> ('un--invalidS'(V2340)) end end end(E572, E573)); _ -> fun (V2341) -> ('un--invalidS'(V2341)) end end end; -100 -> case V3 of [E608 | E609] -> (fun (V2342, V2343) -> case V2343 of [E616 | E617] -> (fun (V2344, V2345) -> case V2345 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2346) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int'(V2346)) end, fun (V2347) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int'(V2347)) end}, V2344, fun (V2348) -> fun (V2349) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I', V2348}}} end end)); _ -> case V3 of [E618 | E619] -> (fun (V2350, V2351) -> case V2351 of [E620 | E621] -> (fun (V2352, V2353) -> case V2353 of [E622 | E623] -> (fun (V2354, V2355) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2356) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2356)) end, fun (V2357) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2357)) end}, V2352, fun (V2358) -> begin (V2359 = ('un--quoteFC'(V2354))), begin (V2368 = ((begin (V2365 = fun (V2361) -> fun (V2362) -> fun (V2363) -> fun (V2364) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2363, V2364)) end end end end), fun (V2366) -> fun (V2367) -> ((((V2365('erased'))('erased'))(V2366))(V2367)) end end end(fun (V2360) -> ('un--snf\x{27}'(V0, V1, V2360)) end))(V2355))), fun (V2369) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2359, V2358, begin (V2370 = V2), case ((V2370 band 9223372036854775808) =/= 0) of 'true' -> (V2370 bor -9223372036854775808); _ -> (V2370 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2368)), V2368}} end end end end)); 0 -> fun (V2371) -> ('un--invalidS'(V2371)) end end end(E622, E623)); _ -> fun (V2372) -> ('un--invalidS'(V2372)) end end end(E620, E621)); _ -> fun (V2373) -> ('un--invalidS'(V2373)) end end end(E618, E619)); _ -> fun (V2374) -> ('un--invalidS'(V2374)) end end end end(E616, E617)); _ -> case V3 of [E610 | E611] -> (fun (V2375, V2376) -> case V2376 of [E612 | E613] -> (fun (V2377, V2378) -> case V2378 of [E614 | E615] -> (fun (V2379, V2380) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2381) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2381)) end, fun (V2382) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2382)) end}, V2377, fun (V2383) -> begin (V2384 = ('un--quoteFC'(V2379))), begin (V2393 = ((begin (V2390 = fun (V2386) -> fun (V2387) -> fun (V2388) -> fun (V2389) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2388, V2389)) end end end end), fun (V2391) -> fun (V2392) -> ((((V2390('erased'))('erased'))(V2391))(V2392)) end end end(fun (V2385) -> ('un--snf\x{27}'(V0, V1, V2385)) end))(V2380))), fun (V2394) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2384, V2383, begin (V2395 = V2), case ((V2395 band 9223372036854775808) =/= 0) of 'true' -> (V2395 bor -9223372036854775808); _ -> (V2395 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2393)), V2393}} end end end end)); 0 -> fun (V2396) -> ('un--invalidS'(V2396)) end end end(E614, E615)); _ -> fun (V2397) -> ('un--invalidS'(V2397)) end end end(E612, E613)); _ -> fun (V2398) -> ('un--invalidS'(V2398)) end end end(E610, E611)); _ -> fun (V2399) -> ('un--invalidS'(V2399)) end end end end(E608, E609)); _ -> case V3 of [E602 | E603] -> (fun (V2400, V2401) -> case V2401 of [E604 | E605] -> (fun (V2402, V2403) -> case V2403 of [E606 | E607] -> (fun (V2404, V2405) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2406) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2406)) end, fun (V2407) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2407)) end}, V2402, fun (V2408) -> begin (V2409 = ('un--quoteFC'(V2404))), begin (V2418 = ((begin (V2415 = fun (V2411) -> fun (V2412) -> fun (V2413) -> fun (V2414) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2413, V2414)) end end end end), fun (V2416) -> fun (V2417) -> ((((V2415('erased'))('erased'))(V2416))(V2417)) end end end(fun (V2410) -> ('un--snf\x{27}'(V0, V1, V2410)) end))(V2405))), fun (V2419) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2409, V2408, begin (V2420 = V2), case ((V2420 band 9223372036854775808) =/= 0) of 'true' -> (V2420 bor -9223372036854775808); _ -> (V2420 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2418)), V2418}} end end end end)); 0 -> fun (V2421) -> ('un--invalidS'(V2421)) end end end(E606, E607)); _ -> fun (V2422) -> ('un--invalidS'(V2422)) end end end(E604, E605)); _ -> fun (V2423) -> ('un--invalidS'(V2423)) end end end(E602, E603)); _ -> fun (V2424) -> ('un--invalidS'(V2424)) end end end; -101 -> case V3 of [E630 | E631] -> (fun (V2425, V2426) -> case V2426 of [E638 | E639] -> (fun (V2427, V2428) -> case V2428 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2429) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int8'(V2429)) end, fun (V2430) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int8'(V2430)) end}, V2427, fun (V2431) -> fun (V2432) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I8', V2431}}} end end)); _ -> case V3 of [E640 | E641] -> (fun (V2433, V2434) -> case V2434 of [E642 | E643] -> (fun (V2435, V2436) -> case V2436 of [E644 | E645] -> (fun (V2437, V2438) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2439) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2439)) end, fun (V2440) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2440)) end}, V2435, fun (V2441) -> begin (V2442 = ('un--quoteFC'(V2437))), begin (V2451 = ((begin (V2448 = fun (V2444) -> fun (V2445) -> fun (V2446) -> fun (V2447) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2446, V2447)) end end end end), fun (V2449) -> fun (V2450) -> ((((V2448('erased'))('erased'))(V2449))(V2450)) end end end(fun (V2443) -> ('un--snf\x{27}'(V0, V1, V2443)) end))(V2438))), fun (V2452) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2442, V2441, begin (V2453 = V2), case ((V2453 band 9223372036854775808) =/= 0) of 'true' -> (V2453 bor -9223372036854775808); _ -> (V2453 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2451)), V2451}} end end end end)); 0 -> fun (V2454) -> ('un--invalidS'(V2454)) end end end(E644, E645)); _ -> fun (V2455) -> ('un--invalidS'(V2455)) end end end(E642, E643)); _ -> fun (V2456) -> ('un--invalidS'(V2456)) end end end(E640, E641)); _ -> fun (V2457) -> ('un--invalidS'(V2457)) end end end end(E638, E639)); _ -> case V3 of [E632 | E633] -> (fun (V2458, V2459) -> case V2459 of [E634 | E635] -> (fun (V2460, V2461) -> case V2461 of [E636 | E637] -> (fun (V2462, V2463) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2464) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2464)) end, fun (V2465) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2465)) end}, V2460, fun (V2466) -> begin (V2467 = ('un--quoteFC'(V2462))), begin (V2476 = ((begin (V2473 = fun (V2469) -> fun (V2470) -> fun (V2471) -> fun (V2472) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2471, V2472)) end end end end), fun (V2474) -> fun (V2475) -> ((((V2473('erased'))('erased'))(V2474))(V2475)) end end end(fun (V2468) -> ('un--snf\x{27}'(V0, V1, V2468)) end))(V2463))), fun (V2477) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2467, V2466, begin (V2478 = V2), case ((V2478 band 9223372036854775808) =/= 0) of 'true' -> (V2478 bor -9223372036854775808); _ -> (V2478 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2476)), V2476}} end end end end)); 0 -> fun (V2479) -> ('un--invalidS'(V2479)) end end end(E636, E637)); _ -> fun (V2480) -> ('un--invalidS'(V2480)) end end end(E634, E635)); _ -> fun (V2481) -> ('un--invalidS'(V2481)) end end end(E632, E633)); _ -> fun (V2482) -> ('un--invalidS'(V2482)) end end end end(E630, E631)); _ -> case V3 of [E624 | E625] -> (fun (V2483, V2484) -> case V2484 of [E626 | E627] -> (fun (V2485, V2486) -> case V2486 of [E628 | E629] -> (fun (V2487, V2488) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2489) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2489)) end, fun (V2490) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2490)) end}, V2485, fun (V2491) -> begin (V2492 = ('un--quoteFC'(V2487))), begin (V2501 = ((begin (V2498 = fun (V2494) -> fun (V2495) -> fun (V2496) -> fun (V2497) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2496, V2497)) end end end end), fun (V2499) -> fun (V2500) -> ((((V2498('erased'))('erased'))(V2499))(V2500)) end end end(fun (V2493) -> ('un--snf\x{27}'(V0, V1, V2493)) end))(V2488))), fun (V2502) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2492, V2491, begin (V2503 = V2), case ((V2503 band 9223372036854775808) =/= 0) of 'true' -> (V2503 bor -9223372036854775808); _ -> (V2503 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2501)), V2501}} end end end end)); 0 -> fun (V2504) -> ('un--invalidS'(V2504)) end end end(E628, E629)); _ -> fun (V2505) -> ('un--invalidS'(V2505)) end end end(E626, E627)); _ -> fun (V2506) -> ('un--invalidS'(V2506)) end end end(E624, E625)); _ -> fun (V2507) -> ('un--invalidS'(V2507)) end end end; -102 -> case V3 of [E652 | E653] -> (fun (V2508, V2509) -> case V2509 of [E660 | E661] -> (fun (V2510, V2511) -> case V2511 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2512) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int16'(V2512)) end, fun (V2513) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int16'(V2513)) end}, V2510, fun (V2514) -> fun (V2515) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I16', V2514}}} end end)); _ -> case V3 of [E662 | E663] -> (fun (V2516, V2517) -> case V2517 of [E664 | E665] -> (fun (V2518, V2519) -> case V2519 of [E666 | E667] -> (fun (V2520, V2521) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2522) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2522)) end, fun (V2523) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2523)) end}, V2518, fun (V2524) -> begin (V2525 = ('un--quoteFC'(V2520))), begin (V2534 = ((begin (V2531 = fun (V2527) -> fun (V2528) -> fun (V2529) -> fun (V2530) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2529, V2530)) end end end end), fun (V2532) -> fun (V2533) -> ((((V2531('erased'))('erased'))(V2532))(V2533)) end end end(fun (V2526) -> ('un--snf\x{27}'(V0, V1, V2526)) end))(V2521))), fun (V2535) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2525, V2524, begin (V2536 = V2), case ((V2536 band 9223372036854775808) =/= 0) of 'true' -> (V2536 bor -9223372036854775808); _ -> (V2536 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2534)), V2534}} end end end end)); 0 -> fun (V2537) -> ('un--invalidS'(V2537)) end end end(E666, E667)); _ -> fun (V2538) -> ('un--invalidS'(V2538)) end end end(E664, E665)); _ -> fun (V2539) -> ('un--invalidS'(V2539)) end end end(E662, E663)); _ -> fun (V2540) -> ('un--invalidS'(V2540)) end end end end(E660, E661)); _ -> case V3 of [E654 | E655] -> (fun (V2541, V2542) -> case V2542 of [E656 | E657] -> (fun (V2543, V2544) -> case V2544 of [E658 | E659] -> (fun (V2545, V2546) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2547) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2547)) end, fun (V2548) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2548)) end}, V2543, fun (V2549) -> begin (V2550 = ('un--quoteFC'(V2545))), begin (V2559 = ((begin (V2556 = fun (V2552) -> fun (V2553) -> fun (V2554) -> fun (V2555) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2554, V2555)) end end end end), fun (V2557) -> fun (V2558) -> ((((V2556('erased'))('erased'))(V2557))(V2558)) end end end(fun (V2551) -> ('un--snf\x{27}'(V0, V1, V2551)) end))(V2546))), fun (V2560) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2550, V2549, begin (V2561 = V2), case ((V2561 band 9223372036854775808) =/= 0) of 'true' -> (V2561 bor -9223372036854775808); _ -> (V2561 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2559)), V2559}} end end end end)); 0 -> fun (V2562) -> ('un--invalidS'(V2562)) end end end(E658, E659)); _ -> fun (V2563) -> ('un--invalidS'(V2563)) end end end(E656, E657)); _ -> fun (V2564) -> ('un--invalidS'(V2564)) end end end(E654, E655)); _ -> fun (V2565) -> ('un--invalidS'(V2565)) end end end end(E652, E653)); _ -> case V3 of [E646 | E647] -> (fun (V2566, V2567) -> case V2567 of [E648 | E649] -> (fun (V2568, V2569) -> case V2569 of [E650 | E651] -> (fun (V2570, V2571) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2572) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2572)) end, fun (V2573) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2573)) end}, V2568, fun (V2574) -> begin (V2575 = ('un--quoteFC'(V2570))), begin (V2584 = ((begin (V2581 = fun (V2577) -> fun (V2578) -> fun (V2579) -> fun (V2580) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2579, V2580)) end end end end), fun (V2582) -> fun (V2583) -> ((((V2581('erased'))('erased'))(V2582))(V2583)) end end end(fun (V2576) -> ('un--snf\x{27}'(V0, V1, V2576)) end))(V2571))), fun (V2585) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2575, V2574, begin (V2586 = V2), case ((V2586 band 9223372036854775808) =/= 0) of 'true' -> (V2586 bor -9223372036854775808); _ -> (V2586 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2584)), V2584}} end end end end)); 0 -> fun (V2587) -> ('un--invalidS'(V2587)) end end end(E650, E651)); _ -> fun (V2588) -> ('un--invalidS'(V2588)) end end end(E648, E649)); _ -> fun (V2589) -> ('un--invalidS'(V2589)) end end end(E646, E647)); _ -> fun (V2590) -> ('un--invalidS'(V2590)) end end end; -103 -> case V3 of [E674 | E675] -> (fun (V2591, V2592) -> case V2592 of [E682 | E683] -> (fun (V2593, V2594) -> case V2594 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2595) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int32'(V2595)) end, fun (V2596) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int32'(V2596)) end}, V2593, fun (V2597) -> fun (V2598) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I32', V2597}}} end end)); _ -> case V3 of [E684 | E685] -> (fun (V2599, V2600) -> case V2600 of [E686 | E687] -> (fun (V2601, V2602) -> case V2602 of [E688 | E689] -> (fun (V2603, V2604) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2605) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2605)) end, fun (V2606) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2606)) end}, V2601, fun (V2607) -> begin (V2608 = ('un--quoteFC'(V2603))), begin (V2617 = ((begin (V2614 = fun (V2610) -> fun (V2611) -> fun (V2612) -> fun (V2613) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2612, V2613)) end end end end), fun (V2615) -> fun (V2616) -> ((((V2614('erased'))('erased'))(V2615))(V2616)) end end end(fun (V2609) -> ('un--snf\x{27}'(V0, V1, V2609)) end))(V2604))), fun (V2618) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2608, V2607, begin (V2619 = V2), case ((V2619 band 9223372036854775808) =/= 0) of 'true' -> (V2619 bor -9223372036854775808); _ -> (V2619 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2617)), V2617}} end end end end)); 0 -> fun (V2620) -> ('un--invalidS'(V2620)) end end end(E688, E689)); _ -> fun (V2621) -> ('un--invalidS'(V2621)) end end end(E686, E687)); _ -> fun (V2622) -> ('un--invalidS'(V2622)) end end end(E684, E685)); _ -> fun (V2623) -> ('un--invalidS'(V2623)) end end end end(E682, E683)); _ -> case V3 of [E676 | E677] -> (fun (V2624, V2625) -> case V2625 of [E678 | E679] -> (fun (V2626, V2627) -> case V2627 of [E680 | E681] -> (fun (V2628, V2629) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2630) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2630)) end, fun (V2631) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2631)) end}, V2626, fun (V2632) -> begin (V2633 = ('un--quoteFC'(V2628))), begin (V2642 = ((begin (V2639 = fun (V2635) -> fun (V2636) -> fun (V2637) -> fun (V2638) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2637, V2638)) end end end end), fun (V2640) -> fun (V2641) -> ((((V2639('erased'))('erased'))(V2640))(V2641)) end end end(fun (V2634) -> ('un--snf\x{27}'(V0, V1, V2634)) end))(V2629))), fun (V2643) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2633, V2632, begin (V2644 = V2), case ((V2644 band 9223372036854775808) =/= 0) of 'true' -> (V2644 bor -9223372036854775808); _ -> (V2644 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2642)), V2642}} end end end end)); 0 -> fun (V2645) -> ('un--invalidS'(V2645)) end end end(E680, E681)); _ -> fun (V2646) -> ('un--invalidS'(V2646)) end end end(E678, E679)); _ -> fun (V2647) -> ('un--invalidS'(V2647)) end end end(E676, E677)); _ -> fun (V2648) -> ('un--invalidS'(V2648)) end end end end(E674, E675)); _ -> case V3 of [E668 | E669] -> (fun (V2649, V2650) -> case V2650 of [E670 | E671] -> (fun (V2651, V2652) -> case V2652 of [E672 | E673] -> (fun (V2653, V2654) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2655) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2655)) end, fun (V2656) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2656)) end}, V2651, fun (V2657) -> begin (V2658 = ('un--quoteFC'(V2653))), begin (V2667 = ((begin (V2664 = fun (V2660) -> fun (V2661) -> fun (V2662) -> fun (V2663) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2662, V2663)) end end end end), fun (V2665) -> fun (V2666) -> ((((V2664('erased'))('erased'))(V2665))(V2666)) end end end(fun (V2659) -> ('un--snf\x{27}'(V0, V1, V2659)) end))(V2654))), fun (V2668) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2658, V2657, begin (V2669 = V2), case ((V2669 band 9223372036854775808) =/= 0) of 'true' -> (V2669 bor -9223372036854775808); _ -> (V2669 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2667)), V2667}} end end end end)); 0 -> fun (V2670) -> ('un--invalidS'(V2670)) end end end(E672, E673)); _ -> fun (V2671) -> ('un--invalidS'(V2671)) end end end(E670, E671)); _ -> fun (V2672) -> ('un--invalidS'(V2672)) end end end(E668, E669)); _ -> fun (V2673) -> ('un--invalidS'(V2673)) end end end; -104 -> case V3 of [E696 | E697] -> (fun (V2674, V2675) -> case V2675 of [E704 | E705] -> (fun (V2676, V2677) -> case V2677 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2678) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int64'(V2678)) end, fun (V2679) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int64'(V2679)) end}, V2676, fun (V2680) -> fun (V2681) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I64', V2680}}} end end)); _ -> case V3 of [E706 | E707] -> (fun (V2682, V2683) -> case V2683 of [E708 | E709] -> (fun (V2684, V2685) -> case V2685 of [E710 | E711] -> (fun (V2686, V2687) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2688) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2688)) end, fun (V2689) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2689)) end}, V2684, fun (V2690) -> begin (V2691 = ('un--quoteFC'(V2686))), begin (V2700 = ((begin (V2697 = fun (V2693) -> fun (V2694) -> fun (V2695) -> fun (V2696) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2695, V2696)) end end end end), fun (V2698) -> fun (V2699) -> ((((V2697('erased'))('erased'))(V2698))(V2699)) end end end(fun (V2692) -> ('un--snf\x{27}'(V0, V1, V2692)) end))(V2687))), fun (V2701) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2691, V2690, begin (V2702 = V2), case ((V2702 band 9223372036854775808) =/= 0) of 'true' -> (V2702 bor -9223372036854775808); _ -> (V2702 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2700)), V2700}} end end end end)); 0 -> fun (V2703) -> ('un--invalidS'(V2703)) end end end(E710, E711)); _ -> fun (V2704) -> ('un--invalidS'(V2704)) end end end(E708, E709)); _ -> fun (V2705) -> ('un--invalidS'(V2705)) end end end(E706, E707)); _ -> fun (V2706) -> ('un--invalidS'(V2706)) end end end end(E704, E705)); _ -> case V3 of [E698 | E699] -> (fun (V2707, V2708) -> case V2708 of [E700 | E701] -> (fun (V2709, V2710) -> case V2710 of [E702 | E703] -> (fun (V2711, V2712) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2713) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2713)) end, fun (V2714) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2714)) end}, V2709, fun (V2715) -> begin (V2716 = ('un--quoteFC'(V2711))), begin (V2725 = ((begin (V2722 = fun (V2718) -> fun (V2719) -> fun (V2720) -> fun (V2721) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2720, V2721)) end end end end), fun (V2723) -> fun (V2724) -> ((((V2722('erased'))('erased'))(V2723))(V2724)) end end end(fun (V2717) -> ('un--snf\x{27}'(V0, V1, V2717)) end))(V2712))), fun (V2726) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2716, V2715, begin (V2727 = V2), case ((V2727 band 9223372036854775808) =/= 0) of 'true' -> (V2727 bor -9223372036854775808); _ -> (V2727 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2725)), V2725}} end end end end)); 0 -> fun (V2728) -> ('un--invalidS'(V2728)) end end end(E702, E703)); _ -> fun (V2729) -> ('un--invalidS'(V2729)) end end end(E700, E701)); _ -> fun (V2730) -> ('un--invalidS'(V2730)) end end end(E698, E699)); _ -> fun (V2731) -> ('un--invalidS'(V2731)) end end end end(E696, E697)); _ -> case V3 of [E690 | E691] -> (fun (V2732, V2733) -> case V2733 of [E692 | E693] -> (fun (V2734, V2735) -> case V2735 of [E694 | E695] -> (fun (V2736, V2737) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2738) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2738)) end, fun (V2739) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2739)) end}, V2734, fun (V2740) -> begin (V2741 = ('un--quoteFC'(V2736))), begin (V2750 = ((begin (V2747 = fun (V2743) -> fun (V2744) -> fun (V2745) -> fun (V2746) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2745, V2746)) end end end end), fun (V2748) -> fun (V2749) -> ((((V2747('erased'))('erased'))(V2748))(V2749)) end end end(fun (V2742) -> ('un--snf\x{27}'(V0, V1, V2742)) end))(V2737))), fun (V2751) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2741, V2740, begin (V2752 = V2), case ((V2752 band 9223372036854775808) =/= 0) of 'true' -> (V2752 bor -9223372036854775808); _ -> (V2752 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2750)), V2750}} end end end end)); 0 -> fun (V2753) -> ('un--invalidS'(V2753)) end end end(E694, E695)); _ -> fun (V2754) -> ('un--invalidS'(V2754)) end end end(E692, E693)); _ -> fun (V2755) -> ('un--invalidS'(V2755)) end end end(E690, E691)); _ -> fun (V2756) -> ('un--invalidS'(V2756)) end end end; -105 -> case V3 of [E718 | E719] -> (fun (V2757, V2758) -> case V2758 of [E726 | E727] -> (fun (V2759, V2760) -> case V2760 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2761) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V2761)) end, fun (V2762) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V2762)) end}, V2759, fun (V2763) -> fun (V2764) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.BI', V2763}}} end end)); _ -> case V3 of [E728 | E729] -> (fun (V2765, V2766) -> case V2766 of [E730 | E731] -> (fun (V2767, V2768) -> case V2768 of [E732 | E733] -> (fun (V2769, V2770) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2771) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2771)) end, fun (V2772) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2772)) end}, V2767, fun (V2773) -> begin (V2774 = ('un--quoteFC'(V2769))), begin (V2783 = ((begin (V2780 = fun (V2776) -> fun (V2777) -> fun (V2778) -> fun (V2779) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2778, V2779)) end end end end), fun (V2781) -> fun (V2782) -> ((((V2780('erased'))('erased'))(V2781))(V2782)) end end end(fun (V2775) -> ('un--snf\x{27}'(V0, V1, V2775)) end))(V2770))), fun (V2784) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2774, V2773, begin (V2785 = V2), case ((V2785 band 9223372036854775808) =/= 0) of 'true' -> (V2785 bor -9223372036854775808); _ -> (V2785 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2783)), V2783}} end end end end)); 0 -> fun (V2786) -> ('un--invalidS'(V2786)) end end end(E732, E733)); _ -> fun (V2787) -> ('un--invalidS'(V2787)) end end end(E730, E731)); _ -> fun (V2788) -> ('un--invalidS'(V2788)) end end end(E728, E729)); _ -> fun (V2789) -> ('un--invalidS'(V2789)) end end end end(E726, E727)); _ -> case V3 of [E720 | E721] -> (fun (V2790, V2791) -> case V2791 of [E722 | E723] -> (fun (V2792, V2793) -> case V2793 of [E724 | E725] -> (fun (V2794, V2795) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2796) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2796)) end, fun (V2797) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2797)) end}, V2792, fun (V2798) -> begin (V2799 = ('un--quoteFC'(V2794))), begin (V2808 = ((begin (V2805 = fun (V2801) -> fun (V2802) -> fun (V2803) -> fun (V2804) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2803, V2804)) end end end end), fun (V2806) -> fun (V2807) -> ((((V2805('erased'))('erased'))(V2806))(V2807)) end end end(fun (V2800) -> ('un--snf\x{27}'(V0, V1, V2800)) end))(V2795))), fun (V2809) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2799, V2798, begin (V2810 = V2), case ((V2810 band 9223372036854775808) =/= 0) of 'true' -> (V2810 bor -9223372036854775808); _ -> (V2810 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2808)), V2808}} end end end end)); 0 -> fun (V2811) -> ('un--invalidS'(V2811)) end end end(E724, E725)); _ -> fun (V2812) -> ('un--invalidS'(V2812)) end end end(E722, E723)); _ -> fun (V2813) -> ('un--invalidS'(V2813)) end end end(E720, E721)); _ -> fun (V2814) -> ('un--invalidS'(V2814)) end end end end(E718, E719)); _ -> case V3 of [E712 | E713] -> (fun (V2815, V2816) -> case V2816 of [E714 | E715] -> (fun (V2817, V2818) -> case V2818 of [E716 | E717] -> (fun (V2819, V2820) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2821) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2821)) end, fun (V2822) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2822)) end}, V2817, fun (V2823) -> begin (V2824 = ('un--quoteFC'(V2819))), begin (V2833 = ((begin (V2830 = fun (V2826) -> fun (V2827) -> fun (V2828) -> fun (V2829) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2828, V2829)) end end end end), fun (V2831) -> fun (V2832) -> ((((V2830('erased'))('erased'))(V2831))(V2832)) end end end(fun (V2825) -> ('un--snf\x{27}'(V0, V1, V2825)) end))(V2820))), fun (V2834) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2824, V2823, begin (V2835 = V2), case ((V2835 band 9223372036854775808) =/= 0) of 'true' -> (V2835 bor -9223372036854775808); _ -> (V2835 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2833)), V2833}} end end end end)); 0 -> fun (V2836) -> ('un--invalidS'(V2836)) end end end(E716, E717)); _ -> fun (V2837) -> ('un--invalidS'(V2837)) end end end(E714, E715)); _ -> fun (V2838) -> ('un--invalidS'(V2838)) end end end(E712, E713)); _ -> fun (V2839) -> ('un--invalidS'(V2839)) end end end; -106 -> case V3 of [E740 | E741] -> (fun (V2840, V2841) -> case V2841 of [E748 | E749] -> (fun (V2842, V2843) -> case V2843 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2844) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits8'(V2844)) end, fun (V2845) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits8'(V2845)) end}, V2842, fun (V2846) -> fun (V2847) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B8', V2846}}} end end)); _ -> case V3 of [E750 | E751] -> (fun (V2848, V2849) -> case V2849 of [E752 | E753] -> (fun (V2850, V2851) -> case V2851 of [E754 | E755] -> (fun (V2852, V2853) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2854) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2854)) end, fun (V2855) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2855)) end}, V2850, fun (V2856) -> begin (V2857 = ('un--quoteFC'(V2852))), begin (V2866 = ((begin (V2863 = fun (V2859) -> fun (V2860) -> fun (V2861) -> fun (V2862) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2861, V2862)) end end end end), fun (V2864) -> fun (V2865) -> ((((V2863('erased'))('erased'))(V2864))(V2865)) end end end(fun (V2858) -> ('un--snf\x{27}'(V0, V1, V2858)) end))(V2853))), fun (V2867) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2857, V2856, begin (V2868 = V2), case ((V2868 band 9223372036854775808) =/= 0) of 'true' -> (V2868 bor -9223372036854775808); _ -> (V2868 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2866)), V2866}} end end end end)); 0 -> fun (V2869) -> ('un--invalidS'(V2869)) end end end(E754, E755)); _ -> fun (V2870) -> ('un--invalidS'(V2870)) end end end(E752, E753)); _ -> fun (V2871) -> ('un--invalidS'(V2871)) end end end(E750, E751)); _ -> fun (V2872) -> ('un--invalidS'(V2872)) end end end end(E748, E749)); _ -> case V3 of [E742 | E743] -> (fun (V2873, V2874) -> case V2874 of [E744 | E745] -> (fun (V2875, V2876) -> case V2876 of [E746 | E747] -> (fun (V2877, V2878) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2879) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2879)) end, fun (V2880) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2880)) end}, V2875, fun (V2881) -> begin (V2882 = ('un--quoteFC'(V2877))), begin (V2891 = ((begin (V2888 = fun (V2884) -> fun (V2885) -> fun (V2886) -> fun (V2887) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2886, V2887)) end end end end), fun (V2889) -> fun (V2890) -> ((((V2888('erased'))('erased'))(V2889))(V2890)) end end end(fun (V2883) -> ('un--snf\x{27}'(V0, V1, V2883)) end))(V2878))), fun (V2892) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2882, V2881, begin (V2893 = V2), case ((V2893 band 9223372036854775808) =/= 0) of 'true' -> (V2893 bor -9223372036854775808); _ -> (V2893 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2891)), V2891}} end end end end)); 0 -> fun (V2894) -> ('un--invalidS'(V2894)) end end end(E746, E747)); _ -> fun (V2895) -> ('un--invalidS'(V2895)) end end end(E744, E745)); _ -> fun (V2896) -> ('un--invalidS'(V2896)) end end end(E742, E743)); _ -> fun (V2897) -> ('un--invalidS'(V2897)) end end end end(E740, E741)); _ -> case V3 of [E734 | E735] -> (fun (V2898, V2899) -> case V2899 of [E736 | E737] -> (fun (V2900, V2901) -> case V2901 of [E738 | E739] -> (fun (V2902, V2903) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2904) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2904)) end, fun (V2905) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2905)) end}, V2900, fun (V2906) -> begin (V2907 = ('un--quoteFC'(V2902))), begin (V2916 = ((begin (V2913 = fun (V2909) -> fun (V2910) -> fun (V2911) -> fun (V2912) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2911, V2912)) end end end end), fun (V2914) -> fun (V2915) -> ((((V2913('erased'))('erased'))(V2914))(V2915)) end end end(fun (V2908) -> ('un--snf\x{27}'(V0, V1, V2908)) end))(V2903))), fun (V2917) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2907, V2906, begin (V2918 = V2), case ((V2918 band 9223372036854775808) =/= 0) of 'true' -> (V2918 bor -9223372036854775808); _ -> (V2918 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2916)), V2916}} end end end end)); 0 -> fun (V2919) -> ('un--invalidS'(V2919)) end end end(E738, E739)); _ -> fun (V2920) -> ('un--invalidS'(V2920)) end end end(E736, E737)); _ -> fun (V2921) -> ('un--invalidS'(V2921)) end end end(E734, E735)); _ -> fun (V2922) -> ('un--invalidS'(V2922)) end end end; -107 -> case V3 of [E762 | E763] -> (fun (V2923, V2924) -> case V2924 of [E770 | E771] -> (fun (V2925, V2926) -> case V2926 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2927) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits16'(V2927)) end, fun (V2928) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits16'(V2928)) end}, V2925, fun (V2929) -> fun (V2930) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B16', V2929}}} end end)); _ -> case V3 of [E772 | E773] -> (fun (V2931, V2932) -> case V2932 of [E774 | E775] -> (fun (V2933, V2934) -> case V2934 of [E776 | E777] -> (fun (V2935, V2936) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2937) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2937)) end, fun (V2938) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2938)) end}, V2933, fun (V2939) -> begin (V2940 = ('un--quoteFC'(V2935))), begin (V2949 = ((begin (V2946 = fun (V2942) -> fun (V2943) -> fun (V2944) -> fun (V2945) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2944, V2945)) end end end end), fun (V2947) -> fun (V2948) -> ((((V2946('erased'))('erased'))(V2947))(V2948)) end end end(fun (V2941) -> ('un--snf\x{27}'(V0, V1, V2941)) end))(V2936))), fun (V2950) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2940, V2939, begin (V2951 = V2), case ((V2951 band 9223372036854775808) =/= 0) of 'true' -> (V2951 bor -9223372036854775808); _ -> (V2951 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2949)), V2949}} end end end end)); 0 -> fun (V2952) -> ('un--invalidS'(V2952)) end end end(E776, E777)); _ -> fun (V2953) -> ('un--invalidS'(V2953)) end end end(E774, E775)); _ -> fun (V2954) -> ('un--invalidS'(V2954)) end end end(E772, E773)); _ -> fun (V2955) -> ('un--invalidS'(V2955)) end end end end(E770, E771)); _ -> case V3 of [E764 | E765] -> (fun (V2956, V2957) -> case V2957 of [E766 | E767] -> (fun (V2958, V2959) -> case V2959 of [E768 | E769] -> (fun (V2960, V2961) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2962) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2962)) end, fun (V2963) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2963)) end}, V2958, fun (V2964) -> begin (V2965 = ('un--quoteFC'(V2960))), begin (V2974 = ((begin (V2971 = fun (V2967) -> fun (V2968) -> fun (V2969) -> fun (V2970) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2969, V2970)) end end end end), fun (V2972) -> fun (V2973) -> ((((V2971('erased'))('erased'))(V2972))(V2973)) end end end(fun (V2966) -> ('un--snf\x{27}'(V0, V1, V2966)) end))(V2961))), fun (V2975) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2965, V2964, begin (V2976 = V2), case ((V2976 band 9223372036854775808) =/= 0) of 'true' -> (V2976 bor -9223372036854775808); _ -> (V2976 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2974)), V2974}} end end end end)); 0 -> fun (V2977) -> ('un--invalidS'(V2977)) end end end(E768, E769)); _ -> fun (V2978) -> ('un--invalidS'(V2978)) end end end(E766, E767)); _ -> fun (V2979) -> ('un--invalidS'(V2979)) end end end(E764, E765)); _ -> fun (V2980) -> ('un--invalidS'(V2980)) end end end end(E762, E763)); _ -> case V3 of [E756 | E757] -> (fun (V2981, V2982) -> case V2982 of [E758 | E759] -> (fun (V2983, V2984) -> case V2984 of [E760 | E761] -> (fun (V2985, V2986) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2987) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2987)) end, fun (V2988) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2988)) end}, V2983, fun (V2989) -> begin (V2990 = ('un--quoteFC'(V2985))), begin (V2999 = ((begin (V2996 = fun (V2992) -> fun (V2993) -> fun (V2994) -> fun (V2995) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2994, V2995)) end end end end), fun (V2997) -> fun (V2998) -> ((((V2996('erased'))('erased'))(V2997))(V2998)) end end end(fun (V2991) -> ('un--snf\x{27}'(V0, V1, V2991)) end))(V2986))), fun (V3000) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V2990, V2989, begin (V3001 = V2), case ((V3001 band 9223372036854775808) =/= 0) of 'true' -> (V3001 bor -9223372036854775808); _ -> (V3001 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2999)), V2999}} end end end end)); 0 -> fun (V3002) -> ('un--invalidS'(V3002)) end end end(E760, E761)); _ -> fun (V3003) -> ('un--invalidS'(V3003)) end end end(E758, E759)); _ -> fun (V3004) -> ('un--invalidS'(V3004)) end end end(E756, E757)); _ -> fun (V3005) -> ('un--invalidS'(V3005)) end end end; -108 -> case V3 of [E784 | E785] -> (fun (V3006, V3007) -> case V3007 of [E792 | E793] -> (fun (V3008, V3009) -> case V3009 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3010) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits32'(V3010)) end, fun (V3011) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits32'(V3011)) end}, V3008, fun (V3012) -> fun (V3013) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B32', V3012}}} end end)); _ -> case V3 of [E794 | E795] -> (fun (V3014, V3015) -> case V3015 of [E796 | E797] -> (fun (V3016, V3017) -> case V3017 of [E798 | E799] -> (fun (V3018, V3019) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3020) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V3020)) end, fun (V3021) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V3021)) end}, V3016, fun (V3022) -> begin (V3023 = ('un--quoteFC'(V3018))), begin (V3032 = ((begin (V3029 = fun (V3025) -> fun (V3026) -> fun (V3027) -> fun (V3028) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3027, V3028)) end end end end), fun (V3030) -> fun (V3031) -> ((((V3029('erased'))('erased'))(V3030))(V3031)) end end end(fun (V3024) -> ('un--snf\x{27}'(V0, V1, V3024)) end))(V3019))), fun (V3033) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V3023, V3022, begin (V3034 = V2), case ((V3034 band 9223372036854775808) =/= 0) of 'true' -> (V3034 bor -9223372036854775808); _ -> (V3034 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V3032)), V3032}} end end end end)); 0 -> fun (V3035) -> ('un--invalidS'(V3035)) end end end(E798, E799)); _ -> fun (V3036) -> ('un--invalidS'(V3036)) end end end(E796, E797)); _ -> fun (V3037) -> ('un--invalidS'(V3037)) end end end(E794, E795)); _ -> fun (V3038) -> ('un--invalidS'(V3038)) end end end end(E792, E793)); _ -> case V3 of [E786 | E787] -> (fun (V3039, V3040) -> case V3040 of [E788 | E789] -> (fun (V3041, V3042) -> case V3042 of [E790 | E791] -> (fun (V3043, V3044) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3045) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V3045)) end, fun (V3046) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V3046)) end}, V3041, fun (V3047) -> begin (V3048 = ('un--quoteFC'(V3043))), begin (V3057 = ((begin (V3054 = fun (V3050) -> fun (V3051) -> fun (V3052) -> fun (V3053) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3052, V3053)) end end end end), fun (V3055) -> fun (V3056) -> ((((V3054('erased'))('erased'))(V3055))(V3056)) end end end(fun (V3049) -> ('un--snf\x{27}'(V0, V1, V3049)) end))(V3044))), fun (V3058) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V3048, V3047, begin (V3059 = V2), case ((V3059 band 9223372036854775808) =/= 0) of 'true' -> (V3059 bor -9223372036854775808); _ -> (V3059 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V3057)), V3057}} end end end end)); 0 -> fun (V3060) -> ('un--invalidS'(V3060)) end end end(E790, E791)); _ -> fun (V3061) -> ('un--invalidS'(V3061)) end end end(E788, E789)); _ -> fun (V3062) -> ('un--invalidS'(V3062)) end end end(E786, E787)); _ -> fun (V3063) -> ('un--invalidS'(V3063)) end end end end(E784, E785)); _ -> case V3 of [E778 | E779] -> (fun (V3064, V3065) -> case V3065 of [E780 | E781] -> (fun (V3066, V3067) -> case V3067 of [E782 | E783] -> (fun (V3068, V3069) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3070) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V3070)) end, fun (V3071) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V3071)) end}, V3066, fun (V3072) -> begin (V3073 = ('un--quoteFC'(V3068))), begin (V3082 = ((begin (V3079 = fun (V3075) -> fun (V3076) -> fun (V3077) -> fun (V3078) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3077, V3078)) end end end end), fun (V3080) -> fun (V3081) -> ((((V3079('erased'))('erased'))(V3080))(V3081)) end end end(fun (V3074) -> ('un--snf\x{27}'(V0, V1, V3074)) end))(V3069))), fun (V3083) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V3073, V3072, begin (V3084 = V2), case ((V3084 band 9223372036854775808) =/= 0) of 'true' -> (V3084 bor -9223372036854775808); _ -> (V3084 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V3082)), V3082}} end end end end)); 0 -> fun (V3085) -> ('un--invalidS'(V3085)) end end end(E782, E783)); _ -> fun (V3086) -> ('un--invalidS'(V3086)) end end end(E780, E781)); _ -> fun (V3087) -> ('un--invalidS'(V3087)) end end end(E778, E779)); _ -> fun (V3088) -> ('un--invalidS'(V3088)) end end end; -109 -> case V3 of [E806 | E807] -> (fun (V3089, V3090) -> case V3090 of [E814 | E815] -> (fun (V3091, V3092) -> case V3092 of [] -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3093) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits64'(V3093)) end, fun (V3094) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits64'(V3094)) end}, V3091, fun (V3095) -> fun (V3096) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B64', V3095}}} end end)); _ -> case V3 of [E816 | E817] -> (fun (V3097, V3098) -> case V3098 of [E818 | E819] -> (fun (V3099, V3100) -> case V3100 of [E820 | E821] -> (fun (V3101, V3102) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3103) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V3103)) end, fun (V3104) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V3104)) end}, V3099, fun (V3105) -> begin (V3106 = ('un--quoteFC'(V3101))), begin (V3115 = ((begin (V3112 = fun (V3108) -> fun (V3109) -> fun (V3110) -> fun (V3111) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3110, V3111)) end end end end), fun (V3113) -> fun (V3114) -> ((((V3112('erased'))('erased'))(V3113))(V3114)) end end end(fun (V3107) -> ('un--snf\x{27}'(V0, V1, V3107)) end))(V3102))), fun (V3116) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V3106, V3105, begin (V3117 = V2), case ((V3117 band 9223372036854775808) =/= 0) of 'true' -> (V3117 bor -9223372036854775808); _ -> (V3117 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V3115)), V3115}} end end end end)); 0 -> fun (V3118) -> ('un--invalidS'(V3118)) end end end(E820, E821)); _ -> fun (V3119) -> ('un--invalidS'(V3119)) end end end(E818, E819)); _ -> fun (V3120) -> ('un--invalidS'(V3120)) end end end(E816, E817)); _ -> fun (V3121) -> ('un--invalidS'(V3121)) end end end end(E814, E815)); _ -> case V3 of [E808 | E809] -> (fun (V3122, V3123) -> case V3123 of [E810 | E811] -> (fun (V3124, V3125) -> case V3125 of [E812 | E813] -> (fun (V3126, V3127) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3128) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V3128)) end, fun (V3129) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V3129)) end}, V3124, fun (V3130) -> begin (V3131 = ('un--quoteFC'(V3126))), begin (V3140 = ((begin (V3137 = fun (V3133) -> fun (V3134) -> fun (V3135) -> fun (V3136) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3135, V3136)) end end end end), fun (V3138) -> fun (V3139) -> ((((V3137('erased'))('erased'))(V3138))(V3139)) end end end(fun (V3132) -> ('un--snf\x{27}'(V0, V1, V3132)) end))(V3127))), fun (V3141) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V3131, V3130, begin (V3142 = V2), case ((V3142 band 9223372036854775808) =/= 0) of 'true' -> (V3142 bor -9223372036854775808); _ -> (V3142 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V3140)), V3140}} end end end end)); 0 -> fun (V3143) -> ('un--invalidS'(V3143)) end end end(E812, E813)); _ -> fun (V3144) -> ('un--invalidS'(V3144)) end end end(E810, E811)); _ -> fun (V3145) -> ('un--invalidS'(V3145)) end end end(E808, E809)); _ -> fun (V3146) -> ('un--invalidS'(V3146)) end end end end(E806, E807)); _ -> case V3 of [E800 | E801] -> (fun (V3147, V3148) -> case V3148 of [E802 | E803] -> (fun (V3149, V3150) -> case V3150 of [E804 | E805] -> (fun (V3151, V3152) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3153) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V3153)) end, fun (V3154) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V3154)) end}, V3149, fun (V3155) -> begin (V3156 = ('un--quoteFC'(V3151))), begin (V3165 = ((begin (V3162 = fun (V3158) -> fun (V3159) -> fun (V3160) -> fun (V3161) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3160, V3161)) end end end end), fun (V3163) -> fun (V3164) -> ((((V3162('erased'))('erased'))(V3163))(V3164)) end end end(fun (V3157) -> ('un--snf\x{27}'(V0, V1, V3157)) end))(V3152))), fun (V3166) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V3156, V3155, begin (V3167 = V2), case ((V3167 band 9223372036854775808) =/= 0) of 'true' -> (V3167 bor -9223372036854775808); _ -> (V3167 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V3165)), V3165}} end end end end)); 0 -> fun (V3168) -> ('un--invalidS'(V3168)) end end end(E804, E805)); _ -> fun (V3169) -> ('un--invalidS'(V3169)) end end end(E802, E803)); _ -> fun (V3170) -> ('un--invalidS'(V3170)) end end end(E800, E801)); _ -> fun (V3171) -> ('un--invalidS'(V3171)) end end end; _ -> case V3 of [E0 | E1] -> (fun (V3172, V3173) -> case V3173 of [E2 | E3] -> (fun (V3174, V3175) -> case V3175 of [E4 | E5] -> (fun (V3176, V3177) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V2, 0)) of 1 -> ('un--quoteOrInvalidS'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V3178) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V3178)) end, fun (V3179) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V3179)) end}, V3174, fun (V3180) -> begin (V3181 = ('un--quoteFC'(V3176))), begin (V3190 = ((begin (V3187 = fun (V3183) -> fun (V3184) -> fun (V3185) -> fun (V3186) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3185, V3186)) end end end end), fun (V3188) -> fun (V3189) -> ((((V3187('erased'))('erased'))(V3188))(V3189)) end end end(fun (V3182) -> ('un--snf\x{27}'(V0, V1, V3182)) end))(V3177))), fun (V3191) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SDCon', V3181, V3180, begin (V3192 = V2), case ((V3192 band 9223372036854775808) =/= 0) of 'true' -> (V3192 bor -9223372036854775808); _ -> (V3192 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V3190)), V3190}} end end end end)); 0 -> fun (V3193) -> ('un--invalidS'(V3193)) end end end(E4, E5)); _ -> fun (V3194) -> ('un--invalidS'(V3194)) end end end(E2, E3)); _ -> fun (V3195) -> ('un--invalidS'(V3195)) end end end(E0, E1)); _ -> fun (V3196) -> ('un--invalidS'(V3196)) end end end.
'un--snfPiInfo'(V0, V1, V2) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isInteger'(V2)) of 1 -> fun (V3) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetInteger'(V2)) of 0 -> {'Prelude.Types.Right', {'Core.TT.Implicit'}}; 1 -> {'Prelude.Types.Right', {'Core.TT.Explicit'}}; 2 -> {'Prelude.Types.Right', {'Core.TT.AutoImplicit'}}; _ -> {'Prelude.Types.Right', {'Core.TT.Explicit'}} end end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isBox'(V2)) of 1 -> begin (V4 = ('un--snf\x{27}'(V0, V1, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeUnbox'(V2))))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V10 = fun (V9) -> {'Prelude.Types.Right', {'Core.TT.DefImplicit', V8}} end), V10 end(V5)) end end end end; 0 -> fun (V11) -> {'Prelude.Types.Right', {'Core.TT.Explicit'}} end end end.
'un--snfPLet'(V0, V1, V2, V3, V4, V5, V6, V7) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V2)) of {'Libraries.Utils.Scheme.Procedure', V8} -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SBind', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V6, {'Core.TT.PLet', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V3, V4, V5}, fun (V9) -> case V9 of {'Core.SchemeEval.Evaluate.MkSObj', V10, V11} -> begin (V12 = ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeApply'(V8, V10))), ('un--snf\x{27}'(V0, V1, V12)) end end end}}; _ -> ('un--invalidS'(V7)) end.
'un--snfBinder'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V3)) of {'Libraries.Utils.Scheme.Procedure', V9} -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SBind', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V7, (((((V2('erased'))(('Idris.Idris2.Core.FC':'un--emptyFC'())))(V4))(V5))(V6)), fun (V10) -> case V10 of {'Core.SchemeEval.Evaluate.MkSObj', V11, V12} -> begin (V13 = ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeApply'(V9, V11))), ('un--snf\x{27}'(V0, V1, V13)) end end end}}; _ -> ('un--invalidS'(V8)) end.
'un--snf\x{27}'(V0, V1, V2) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isVector'(V2)) of 1 -> ('un--snfVector'(V0, V1, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetInteger'(('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeVectorRef'(V2, 0)))), ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeVectorToList'(V2)))); 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isProcedure'(V2)) of 1 -> fun (V3) -> ('un--snfBinder'(V0, V1, fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> {'Core.TT.Lam', V5, V6, V7, V8} end end end end end, V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Core.TT.Explicit'}, {'Core.SchemeEval.Evaluate.SErased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}, {'Core.Name.UN', {'Core.Name.Basic', <<"x"/utf8>>}}, V3)) end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isSymbol'(V2)) of 1 -> fun (V9) -> {'Prelude.Types.Right', ('nested--10954-8393--in--un--findName'(V0, V2, V1, V1, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeReadSymbol'(V2))))} end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isFloat'(V2)) of 1 -> fun (V10) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Db', ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetFloat'(V2))}}} end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isInteger'(V2)) of 1 -> fun (V11) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I', begin (V12 = ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetInteger'(V2))), case ((V12 band 9223372036854775808) =/= 0) of 'true' -> (V12 bor -9223372036854775808); _ -> (V12 band 9223372036854775807) end end}}} end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isString'(V2)) of 1 -> fun (V13) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Str', ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetString'(V2))}}} end; 0 -> fun (V14) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isChar'(V2)) of 1 -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SPrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Ch', ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetChar'(V2))}}}; 0 -> ('un--invalidS'(V14)) end end end end end end end end.
'un--seval'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.Context.Log':'un--logTimeWhen'(V0, 0, 0, fun () -> <<"Scheme eval"/utf8>> end, ('Idris.Idris2.Core.SchemeEval.Compile':'un--initialiseSchemeEval'(V0))))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V72 = case V8 of 1 -> begin (V9 = ('Idris.Idris2.Core.TT':'un--getRefs'({'Core.Name.MN', <<""/utf8>>, 0}, V3))), begin (V10 = ('Idris.Idris2.Core.TT':'un--addMetas'(0, V9, V3))), begin (V11 = ('un--getAllNames'(V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--empty'()), ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V10))))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V67 = begin (V17 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V16) -> ('Idris.Idris2.Core.SchemeEval.Compile':'un--compileDef'(V0, V1, V16)) end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V15))))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V66 = begin (V22 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.SchemeEval.Compile.Sym'}, 0))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V65 = begin (V28 = ('nested--7090-3085--in--un--mkEnv'(V3, V2, V1, V0, V26, V2, fun (V27) -> V27 end))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V64 = case V32 of {'Builtin.MkPair', V33, V34} -> begin (V45 = begin (V39 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V37, V38)) end end}, V3))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V44 = ('Idris.Idris2.Core.SchemeEval.Compile':'un--compile'(V26, V0, V34, V43))), V44 end(V40)) end end end end), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V63 = begin (V52 = fun (V50) -> begin (V51 = (('Idris.Idris2.Libraries.Utils.Scheme':'un--evalSchemeObj'((V33(V49))))(V50))), {'Prelude.Types.Right', V51} end end), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V62 = fun (V57) -> case V56 of {'Prelude.Types.Just', V58} -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.MkSObj', V58, V34}}; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', (begin (V60 = fun (V59) -> V59 end), fun (V61) -> (V60(V61)) end end(<<"Compiling expression failed"/utf8>>))}, V57)) end end), V62 end(V53)) end end end end), V63 end(V46)) end end end end end), V64 end(V29)) end end end end), V65 end(V23)) end end end end), V66 end(V18)) end end end end), V67 end(V12)) end end end end end end; 0 -> fun (V68) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', (begin (V70 = fun (V69) -> V69 end), fun (V71) -> (V70(V71)) end end(<<"Loading scheme support failed"/utf8>>))}, V68)) end end), V72 end(V5)) end end end end.
'un--quoteWhyErased'(V0, V1) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isInteger'(V1)) of 1 -> fun (V2) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetInteger'(V1)) of 0 -> {'Prelude.Types.Right', {'Core.TT.Impossible'}}; _ -> {'Prelude.Types.Right', {'Core.TT.Placeholder'}} end end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isBox'(V1)) of 1 -> begin (V3 = (V0(('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeUnbox'(V1))))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V9 = fun (V8) -> {'Prelude.Types.Right', {'Core.TT.Dotted', V7}} end), V9 end(V4)) end end end end; 0 -> fun (V10) -> {'Prelude.Types.Right', {'Core.TT.Placeholder'}} end end end.
'un--quoteVector'(V0, V1, V2, V3, V4) -> case V3 of -2 -> case V4 of [E12 | E13] -> (fun (V5, V6) -> case V6 of [E20 | E21] -> (fun (V7, V8) -> case V8 of [E28 | E29] -> (fun (V9, V10) -> case V10 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V11) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V11)) end, fun (V12) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V12)) end}, V7, fun (V13) -> begin (V14 = ('un--getArgList'(V9))), begin (V16 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V15) -> ('un--quote\x{27}'(V0, V1, V2, V15)) end, V14, []))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V22 = fun (V21) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Ref', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Func'}, V13}, V20))} end), V22 end(V17)) end end end end end end)); _ -> case V4 of [E30 | E31] -> (fun (V23, V24) -> case V24 of [E32 | E33] -> (fun (V25, V26) -> case V26 of [E34 | E35] -> (fun (V27, V28) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V29) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V29)) end, fun (V30) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V30)) end}, V25, fun (V31) -> begin (V32 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V34 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V33) -> ('un--quote\x{27}'(V0, V1, V2, V33)) end, V28, []))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V41 = fun (V39) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V32, {'Core.TT.Ref', V32, {'Core.TT.DataCon', begin (V40 = V3), case ((V40 band 9223372036854775808) =/= 0) of 'true' -> (V40 bor -9223372036854775808); _ -> (V40 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V38))}, V31}, V38))} end), V41 end(V35)) end end end end end end)); 0 -> fun (V42) -> ('un--invalid'(V42)) end end end(E34, E35)); _ -> fun (V43) -> ('un--invalid'(V43)) end end end(E32, E33)); _ -> fun (V44) -> ('un--invalid'(V44)) end end end(E30, E31)); _ -> fun (V45) -> ('un--invalid'(V45)) end end end end(E28, E29)); _ -> case V4 of [E22 | E23] -> (fun (V46, V47) -> case V47 of [E24 | E25] -> (fun (V48, V49) -> case V49 of [E26 | E27] -> (fun (V50, V51) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V52) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V52)) end, fun (V53) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V53)) end}, V48, fun (V54) -> begin (V55 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V57 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V56) -> ('un--quote\x{27}'(V0, V1, V2, V56)) end, V51, []))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V64 = fun (V62) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V55, {'Core.TT.Ref', V55, {'Core.TT.DataCon', begin (V63 = V3), case ((V63 band 9223372036854775808) =/= 0) of 'true' -> (V63 bor -9223372036854775808); _ -> (V63 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V61))}, V54}, V61))} end), V64 end(V58)) end end end end end end)); 0 -> fun (V65) -> ('un--invalid'(V65)) end end end(E26, E27)); _ -> fun (V66) -> ('un--invalid'(V66)) end end end(E24, E25)); _ -> fun (V67) -> ('un--invalid'(V67)) end end end(E22, E23)); _ -> fun (V68) -> ('un--invalid'(V68)) end end end end(E20, E21)); _ -> case V4 of [E14 | E15] -> (fun (V69, V70) -> case V70 of [E16 | E17] -> (fun (V71, V72) -> case V72 of [E18 | E19] -> (fun (V73, V74) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V75) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V75)) end, fun (V76) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V76)) end}, V71, fun (V77) -> begin (V78 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V80 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V79) -> ('un--quote\x{27}'(V0, V1, V2, V79)) end, V74, []))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V87 = fun (V85) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V78, {'Core.TT.Ref', V78, {'Core.TT.DataCon', begin (V86 = V3), case ((V86 band 9223372036854775808) =/= 0) of 'true' -> (V86 bor -9223372036854775808); _ -> (V86 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V84))}, V77}, V84))} end), V87 end(V81)) end end end end end end)); 0 -> fun (V88) -> ('un--invalid'(V88)) end end end(E18, E19)); _ -> fun (V89) -> ('un--invalid'(V89)) end end end(E16, E17)); _ -> fun (V90) -> ('un--invalid'(V90)) end end end(E14, E15)); _ -> fun (V91) -> ('un--invalid'(V91)) end end end end(E12, E13)); _ -> case V4 of [E6 | E7] -> (fun (V92, V93) -> case V93 of [E8 | E9] -> (fun (V94, V95) -> case V95 of [E10 | E11] -> (fun (V96, V97) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V98) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V98)) end, fun (V99) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V99)) end}, V94, fun (V100) -> begin (V101 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V103 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V102) -> ('un--quote\x{27}'(V0, V1, V2, V102)) end, V97, []))), fun (V104) -> begin (V105 = (V103(V104))), case V105 of {'Prelude.Types.Left', V106} -> {'Prelude.Types.Left', V106}; {'Prelude.Types.Right', V107} -> (begin (V110 = fun (V108) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V101, {'Core.TT.Ref', V101, {'Core.TT.DataCon', begin (V109 = V3), case ((V109 band 9223372036854775808) =/= 0) of 'true' -> (V109 bor -9223372036854775808); _ -> (V109 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V107))}, V100}, V107))} end), V110 end(V104)) end end end end end end)); 0 -> fun (V111) -> ('un--invalid'(V111)) end end end(E10, E11)); _ -> fun (V112) -> ('un--invalid'(V112)) end end end(E8, E9)); _ -> fun (V113) -> ('un--invalid'(V113)) end end end(E6, E7)); _ -> fun (V114) -> ('un--invalid'(V114)) end end end; -10 -> case V4 of [E42 | E43] -> (fun (V115, V116) -> case V116 of [E50 | E51] -> (fun (V117, V118) -> case V118 of [E58 | E59] -> (fun (V119, V120) -> case V120 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V121) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V122) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V122)) end, fun (V123) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V123)) end}, {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V124) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V124)) end, fun (V125) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V125)) end}}, V121)) end, fun (V126) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V127) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V127)) end, fun (V128) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V128)) end}, {'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V129) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V129)) end, fun (V130) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V130)) end}}, V126)) end}, V117, fun (V131) -> case V131 of {'Builtin.MkPair', V132, V133} -> begin (V137 = (begin (V135 = fun (V134) -> ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(V134)) end), fun (V136) -> (V135(V136)) end end(V133))), begin (V138 = ('un--getArgList'(V119))), begin (V140 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V139) -> ('un--quote\x{27}'(V0, V1, V2, V139)) end, V138, []))), fun (V141) -> begin (V142 = (V140(V141))), case V142 of {'Prelude.Types.Left', V143} -> {'Prelude.Types.Left', V143}; {'Prelude.Types.Right', V144} -> (begin (V208 = begin (V150 = begin (V145 = V1), fun (V146) -> begin (V149 = (begin (V147 = V145), fun (V148) -> ('erlang':'get'(V147)) end end(V146))), {'Prelude.Types.Right', V149} end end end), fun (V151) -> begin (V152 = (V150(V151))), case V152 of {'Prelude.Types.Left', V153} -> {'Prelude.Types.Left', V153}; {'Prelude.Types.Right', V154} -> (begin (V207 = begin (V160 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Core.Context.dn--un--__mkHasNames', fun (V155) -> fun (V156) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V155, V156)) end end, fun (V157) -> fun (V158) -> fun (V159) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V157, V158, V159)) end end end}, V132))), fun (V161) -> begin (V162 = (V160(V161))), case V162 of {'Prelude.Types.Left', V163} -> {'Prelude.Types.Left', V163}; {'Prelude.Types.Right', V164} -> (begin (V206 = begin (V197 = ('Idris.Idris2.Core.Context':'un--getPosition'(V132, case V154 of {'Core.Context.MkDefs', V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196} -> V165 end))), fun (V198) -> begin (V199 = (V197(V198))), case V199 of {'Prelude.Types.Left', V200} -> {'Prelude.Types.Left', V200}; {'Prelude.Types.Right', V201} -> (begin (V205 = fun (V202) -> case V201 of {'Builtin.MkPair', V203, V204} -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Meta', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V164, V203, ('Idris.Idris2.Data.List':'un--take'(V137, V144))}, ('Idris.Idris2.Data.List':'un--drop'(V137, V144))))} end end), V205 end(V198)) end end end end), V206 end(V161)) end end end end), V207 end(V151)) end end end end), V208 end(V141)) end end end end end end end end)); _ -> case V4 of [E60 | E61] -> (fun (V209, V210) -> case V210 of [E62 | E63] -> (fun (V211, V212) -> case V212 of [E64 | E65] -> (fun (V213, V214) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V215) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V215)) end, fun (V216) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V216)) end}, V211, fun (V217) -> begin (V218 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V220 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V219) -> ('un--quote\x{27}'(V0, V1, V2, V219)) end, V214, []))), fun (V221) -> begin (V222 = (V220(V221))), case V222 of {'Prelude.Types.Left', V223} -> {'Prelude.Types.Left', V223}; {'Prelude.Types.Right', V224} -> (begin (V227 = fun (V225) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V218, {'Core.TT.Ref', V218, {'Core.TT.DataCon', begin (V226 = V3), case ((V226 band 9223372036854775808) =/= 0) of 'true' -> (V226 bor -9223372036854775808); _ -> (V226 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V224))}, V217}, V224))} end), V227 end(V221)) end end end end end end)); 0 -> fun (V228) -> ('un--invalid'(V228)) end end end(E64, E65)); _ -> fun (V229) -> ('un--invalid'(V229)) end end end(E62, E63)); _ -> fun (V230) -> ('un--invalid'(V230)) end end end(E60, E61)); _ -> fun (V231) -> ('un--invalid'(V231)) end end end end(E58, E59)); _ -> case V4 of [E52 | E53] -> (fun (V232, V233) -> case V233 of [E54 | E55] -> (fun (V234, V235) -> case V235 of [E56 | E57] -> (fun (V236, V237) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V238) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V238)) end, fun (V239) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V239)) end}, V234, fun (V240) -> begin (V241 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V243 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V242) -> ('un--quote\x{27}'(V0, V1, V2, V242)) end, V237, []))), fun (V244) -> begin (V245 = (V243(V244))), case V245 of {'Prelude.Types.Left', V246} -> {'Prelude.Types.Left', V246}; {'Prelude.Types.Right', V247} -> (begin (V250 = fun (V248) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V241, {'Core.TT.Ref', V241, {'Core.TT.DataCon', begin (V249 = V3), case ((V249 band 9223372036854775808) =/= 0) of 'true' -> (V249 bor -9223372036854775808); _ -> (V249 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V247))}, V240}, V247))} end), V250 end(V244)) end end end end end end)); 0 -> fun (V251) -> ('un--invalid'(V251)) end end end(E56, E57)); _ -> fun (V252) -> ('un--invalid'(V252)) end end end(E54, E55)); _ -> fun (V253) -> ('un--invalid'(V253)) end end end(E52, E53)); _ -> fun (V254) -> ('un--invalid'(V254)) end end end end(E50, E51)); _ -> case V4 of [E44 | E45] -> (fun (V255, V256) -> case V256 of [E46 | E47] -> (fun (V257, V258) -> case V258 of [E48 | E49] -> (fun (V259, V260) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V261) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V261)) end, fun (V262) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V262)) end}, V257, fun (V263) -> begin (V264 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V266 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V265) -> ('un--quote\x{27}'(V0, V1, V2, V265)) end, V260, []))), fun (V267) -> begin (V268 = (V266(V267))), case V268 of {'Prelude.Types.Left', V269} -> {'Prelude.Types.Left', V269}; {'Prelude.Types.Right', V270} -> (begin (V273 = fun (V271) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V264, {'Core.TT.Ref', V264, {'Core.TT.DataCon', begin (V272 = V3), case ((V272 band 9223372036854775808) =/= 0) of 'true' -> (V272 bor -9223372036854775808); _ -> (V272 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V270))}, V263}, V270))} end), V273 end(V267)) end end end end end end)); 0 -> fun (V274) -> ('un--invalid'(V274)) end end end(E48, E49)); _ -> fun (V275) -> ('un--invalid'(V275)) end end end(E46, E47)); _ -> fun (V276) -> ('un--invalid'(V276)) end end end(E44, E45)); _ -> fun (V277) -> ('un--invalid'(V277)) end end end end(E42, E43)); _ -> case V4 of [E36 | E37] -> (fun (V278, V279) -> case V279 of [E38 | E39] -> (fun (V280, V281) -> case V281 of [E40 | E41] -> (fun (V282, V283) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V284) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V284)) end, fun (V285) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V285)) end}, V280, fun (V286) -> begin (V287 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V289 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V288) -> ('un--quote\x{27}'(V0, V1, V2, V288)) end, V283, []))), fun (V290) -> begin (V291 = (V289(V290))), case V291 of {'Prelude.Types.Left', V292} -> {'Prelude.Types.Left', V292}; {'Prelude.Types.Right', V293} -> (begin (V296 = fun (V294) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V287, {'Core.TT.Ref', V287, {'Core.TT.DataCon', begin (V295 = V3), case ((V295 band 9223372036854775808) =/= 0) of 'true' -> (V295 bor -9223372036854775808); _ -> (V295 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V293))}, V286}, V293))} end), V296 end(V290)) end end end end end end)); 0 -> fun (V297) -> ('un--invalid'(V297)) end end end(E40, E41)); _ -> fun (V298) -> ('un--invalid'(V298)) end end end(E38, E39)); _ -> fun (V299) -> ('un--invalid'(V299)) end end end(E36, E37)); _ -> fun (V300) -> ('un--invalid'(V300)) end end end; -11 -> case V4 of [E72 | E73] -> (fun (V301, V302) -> case V302 of [E80 | E81] -> (fun (V303, V304) -> case V304 of [E88 | E89] -> (fun (V305, V306) -> case V306 of [] -> begin (V307 = ('un--quote\x{27}'(V0, V1, V2, V303))), fun (V308) -> begin (V309 = (V307(V308))), case V309 of {'Prelude.Types.Left', V310} -> {'Prelude.Types.Left', V310}; {'Prelude.Types.Right', V311} -> (begin (V321 = begin (V312 = ('un--getArgList'(V305))), begin (V314 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V313) -> ('un--quote\x{27}'(V0, V1, V2, V313)) end, V312, []))), fun (V315) -> begin (V316 = (V314(V315))), case V316 of {'Prelude.Types.Left', V317} -> {'Prelude.Types.Left', V317}; {'Prelude.Types.Right', V318} -> (begin (V320 = fun (V319) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(('Idris.Idris2.Core.FC':'un--emptyFC'()), V311, V318))} end), V320 end(V315)) end end end end end), V321 end(V308)) end end end end; _ -> case V4 of [E90 | E91] -> (fun (V322, V323) -> case V323 of [E92 | E93] -> (fun (V324, V325) -> case V325 of [E94 | E95] -> (fun (V326, V327) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V328) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V328)) end, fun (V329) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V329)) end}, V324, fun (V330) -> begin (V331 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V333 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V332) -> ('un--quote\x{27}'(V0, V1, V2, V332)) end, V327, []))), fun (V334) -> begin (V335 = (V333(V334))), case V335 of {'Prelude.Types.Left', V336} -> {'Prelude.Types.Left', V336}; {'Prelude.Types.Right', V337} -> (begin (V340 = fun (V338) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V331, {'Core.TT.Ref', V331, {'Core.TT.DataCon', begin (V339 = V3), case ((V339 band 9223372036854775808) =/= 0) of 'true' -> (V339 bor -9223372036854775808); _ -> (V339 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V337))}, V330}, V337))} end), V340 end(V334)) end end end end end end)); 0 -> fun (V341) -> ('un--invalid'(V341)) end end end(E94, E95)); _ -> fun (V342) -> ('un--invalid'(V342)) end end end(E92, E93)); _ -> fun (V343) -> ('un--invalid'(V343)) end end end(E90, E91)); _ -> fun (V344) -> ('un--invalid'(V344)) end end end end(E88, E89)); _ -> case V4 of [E82 | E83] -> (fun (V345, V346) -> case V346 of [E84 | E85] -> (fun (V347, V348) -> case V348 of [E86 | E87] -> (fun (V349, V350) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V351) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V351)) end, fun (V352) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V352)) end}, V347, fun (V353) -> begin (V354 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V356 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V355) -> ('un--quote\x{27}'(V0, V1, V2, V355)) end, V350, []))), fun (V357) -> begin (V358 = (V356(V357))), case V358 of {'Prelude.Types.Left', V359} -> {'Prelude.Types.Left', V359}; {'Prelude.Types.Right', V360} -> (begin (V363 = fun (V361) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V354, {'Core.TT.Ref', V354, {'Core.TT.DataCon', begin (V362 = V3), case ((V362 band 9223372036854775808) =/= 0) of 'true' -> (V362 bor -9223372036854775808); _ -> (V362 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V360))}, V353}, V360))} end), V363 end(V357)) end end end end end end)); 0 -> fun (V364) -> ('un--invalid'(V364)) end end end(E86, E87)); _ -> fun (V365) -> ('un--invalid'(V365)) end end end(E84, E85)); _ -> fun (V366) -> ('un--invalid'(V366)) end end end(E82, E83)); _ -> fun (V367) -> ('un--invalid'(V367)) end end end end(E80, E81)); _ -> case V4 of [E74 | E75] -> (fun (V368, V369) -> case V369 of [E76 | E77] -> (fun (V370, V371) -> case V371 of [E78 | E79] -> (fun (V372, V373) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V374) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V374)) end, fun (V375) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V375)) end}, V370, fun (V376) -> begin (V377 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V379 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V378) -> ('un--quote\x{27}'(V0, V1, V2, V378)) end, V373, []))), fun (V380) -> begin (V381 = (V379(V380))), case V381 of {'Prelude.Types.Left', V382} -> {'Prelude.Types.Left', V382}; {'Prelude.Types.Right', V383} -> (begin (V386 = fun (V384) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V377, {'Core.TT.Ref', V377, {'Core.TT.DataCon', begin (V385 = V3), case ((V385 band 9223372036854775808) =/= 0) of 'true' -> (V385 bor -9223372036854775808); _ -> (V385 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V383))}, V376}, V383))} end), V386 end(V380)) end end end end end end)); 0 -> fun (V387) -> ('un--invalid'(V387)) end end end(E78, E79)); _ -> fun (V388) -> ('un--invalid'(V388)) end end end(E76, E77)); _ -> fun (V389) -> ('un--invalid'(V389)) end end end(E74, E75)); _ -> fun (V390) -> ('un--invalid'(V390)) end end end end(E72, E73)); _ -> case V4 of [E66 | E67] -> (fun (V391, V392) -> case V392 of [E68 | E69] -> (fun (V393, V394) -> case V394 of [E70 | E71] -> (fun (V395, V396) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V397) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V397)) end, fun (V398) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V398)) end}, V393, fun (V399) -> begin (V400 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V402 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V401) -> ('un--quote\x{27}'(V0, V1, V2, V401)) end, V396, []))), fun (V403) -> begin (V404 = (V402(V403))), case V404 of {'Prelude.Types.Left', V405} -> {'Prelude.Types.Left', V405}; {'Prelude.Types.Right', V406} -> (begin (V409 = fun (V407) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V400, {'Core.TT.Ref', V400, {'Core.TT.DataCon', begin (V408 = V3), case ((V408 band 9223372036854775808) =/= 0) of 'true' -> (V408 bor -9223372036854775808); _ -> (V408 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V406))}, V399}, V406))} end), V409 end(V403)) end end end end end end)); 0 -> fun (V410) -> ('un--invalid'(V410)) end end end(E70, E71)); _ -> fun (V411) -> ('un--invalid'(V411)) end end end(E68, E69)); _ -> fun (V412) -> ('un--invalid'(V412)) end end end(E66, E67)); _ -> fun (V413) -> ('un--invalid'(V413)) end end end; -1 -> case V4 of [E102 | E103] -> (fun (V414, V415) -> case V415 of [E110 | E111] -> (fun (V416, V417) -> case V417 of [E118 | E119] -> (fun (V418, V419) -> case V419 of [E126 | E127] -> (fun (V420, V421) -> case V421 of [E134 | E135] -> (fun (V422, V423) -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V424) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V424)) end, fun (V425) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V425)) end}, V420, fun (V426) -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V427) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V427)) end, fun (V428) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V428)) end}, V416, fun (V429) -> begin (V430 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V432 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V431) -> ('un--quote\x{27}'(V0, V1, V2, V431)) end, V423, []))), fun (V433) -> begin (V434 = (V432(V433))), case V434 of {'Prelude.Types.Left', V435} -> {'Prelude.Types.Left', V435}; {'Prelude.Types.Right', V436} -> (begin (V439 = fun (V437) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V430, {'Core.TT.Ref', V430, {'Core.TT.TyCon', begin (V438 = V429), case ((V438 band 9223372036854775808) =/= 0) of 'true' -> (V438 bor -9223372036854775808); _ -> (V438 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V436))}, V426}, V436))} end), V439 end(V433)) end end end end end end)) end)) end(E134, E135)); _ -> case V4 of [E128 | E129] -> (fun (V440, V441) -> case V441 of [E130 | E131] -> (fun (V442, V443) -> case V443 of [E132 | E133] -> (fun (V444, V445) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V446) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V446)) end, fun (V447) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V447)) end}, V442, fun (V448) -> begin (V449 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V451 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V450) -> ('un--quote\x{27}'(V0, V1, V2, V450)) end, V445, []))), fun (V452) -> begin (V453 = (V451(V452))), case V453 of {'Prelude.Types.Left', V454} -> {'Prelude.Types.Left', V454}; {'Prelude.Types.Right', V455} -> (begin (V458 = fun (V456) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V449, {'Core.TT.Ref', V449, {'Core.TT.DataCon', begin (V457 = V3), case ((V457 band 9223372036854775808) =/= 0) of 'true' -> (V457 bor -9223372036854775808); _ -> (V457 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V455))}, V448}, V455))} end), V458 end(V452)) end end end end end end)); 0 -> fun (V459) -> ('un--invalid'(V459)) end end end(E132, E133)); _ -> fun (V460) -> ('un--invalid'(V460)) end end end(E130, E131)); _ -> fun (V461) -> ('un--invalid'(V461)) end end end(E128, E129)); _ -> fun (V462) -> ('un--invalid'(V462)) end end end end(E126, E127)); _ -> case V4 of [E120 | E121] -> (fun (V463, V464) -> case V464 of [E122 | E123] -> (fun (V465, V466) -> case V466 of [E124 | E125] -> (fun (V467, V468) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V469) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V469)) end, fun (V470) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V470)) end}, V465, fun (V471) -> begin (V472 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V474 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V473) -> ('un--quote\x{27}'(V0, V1, V2, V473)) end, V468, []))), fun (V475) -> begin (V476 = (V474(V475))), case V476 of {'Prelude.Types.Left', V477} -> {'Prelude.Types.Left', V477}; {'Prelude.Types.Right', V478} -> (begin (V481 = fun (V479) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V472, {'Core.TT.Ref', V472, {'Core.TT.DataCon', begin (V480 = V3), case ((V480 band 9223372036854775808) =/= 0) of 'true' -> (V480 bor -9223372036854775808); _ -> (V480 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V478))}, V471}, V478))} end), V481 end(V475)) end end end end end end)); 0 -> fun (V482) -> ('un--invalid'(V482)) end end end(E124, E125)); _ -> fun (V483) -> ('un--invalid'(V483)) end end end(E122, E123)); _ -> fun (V484) -> ('un--invalid'(V484)) end end end(E120, E121)); _ -> fun (V485) -> ('un--invalid'(V485)) end end end end(E118, E119)); _ -> case V4 of [E112 | E113] -> (fun (V486, V487) -> case V487 of [E114 | E115] -> (fun (V488, V489) -> case V489 of [E116 | E117] -> (fun (V490, V491) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V492) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V492)) end, fun (V493) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V493)) end}, V488, fun (V494) -> begin (V495 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V497 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V496) -> ('un--quote\x{27}'(V0, V1, V2, V496)) end, V491, []))), fun (V498) -> begin (V499 = (V497(V498))), case V499 of {'Prelude.Types.Left', V500} -> {'Prelude.Types.Left', V500}; {'Prelude.Types.Right', V501} -> (begin (V504 = fun (V502) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V495, {'Core.TT.Ref', V495, {'Core.TT.DataCon', begin (V503 = V3), case ((V503 band 9223372036854775808) =/= 0) of 'true' -> (V503 bor -9223372036854775808); _ -> (V503 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V501))}, V494}, V501))} end), V504 end(V498)) end end end end end end)); 0 -> fun (V505) -> ('un--invalid'(V505)) end end end(E116, E117)); _ -> fun (V506) -> ('un--invalid'(V506)) end end end(E114, E115)); _ -> fun (V507) -> ('un--invalid'(V507)) end end end(E112, E113)); _ -> fun (V508) -> ('un--invalid'(V508)) end end end end(E110, E111)); _ -> case V4 of [E104 | E105] -> (fun (V509, V510) -> case V510 of [E106 | E107] -> (fun (V511, V512) -> case V512 of [E108 | E109] -> (fun (V513, V514) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V515) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V515)) end, fun (V516) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V516)) end}, V511, fun (V517) -> begin (V518 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V520 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V519) -> ('un--quote\x{27}'(V0, V1, V2, V519)) end, V514, []))), fun (V521) -> begin (V522 = (V520(V521))), case V522 of {'Prelude.Types.Left', V523} -> {'Prelude.Types.Left', V523}; {'Prelude.Types.Right', V524} -> (begin (V527 = fun (V525) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V518, {'Core.TT.Ref', V518, {'Core.TT.DataCon', begin (V526 = V3), case ((V526 band 9223372036854775808) =/= 0) of 'true' -> (V526 bor -9223372036854775808); _ -> (V526 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V524))}, V517}, V524))} end), V527 end(V521)) end end end end end end)); 0 -> fun (V528) -> ('un--invalid'(V528)) end end end(E108, E109)); _ -> fun (V529) -> ('un--invalid'(V529)) end end end(E106, E107)); _ -> fun (V530) -> ('un--invalid'(V530)) end end end(E104, E105)); _ -> fun (V531) -> ('un--invalid'(V531)) end end end end(E102, E103)); _ -> case V4 of [E96 | E97] -> (fun (V532, V533) -> case V533 of [E98 | E99] -> (fun (V534, V535) -> case V535 of [E100 | E101] -> (fun (V536, V537) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V538) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V538)) end, fun (V539) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V539)) end}, V534, fun (V540) -> begin (V541 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V543 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V542) -> ('un--quote\x{27}'(V0, V1, V2, V542)) end, V537, []))), fun (V544) -> begin (V545 = (V543(V544))), case V545 of {'Prelude.Types.Left', V546} -> {'Prelude.Types.Left', V546}; {'Prelude.Types.Right', V547} -> (begin (V550 = fun (V548) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V541, {'Core.TT.Ref', V541, {'Core.TT.DataCon', begin (V549 = V3), case ((V549 band 9223372036854775808) =/= 0) of 'true' -> (V549 bor -9223372036854775808); _ -> (V549 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V547))}, V540}, V547))} end), V550 end(V544)) end end end end end end)); 0 -> fun (V551) -> ('un--invalid'(V551)) end end end(E100, E101)); _ -> fun (V552) -> ('un--invalid'(V552)) end end end(E98, E99)); _ -> fun (V553) -> ('un--invalid'(V553)) end end end(E96, E97)); _ -> fun (V554) -> ('un--invalid'(V554)) end end end; -15 -> case V4 of [E142 | E143] -> (fun (V555, V556) -> case V556 of [E150 | E151] -> (fun (V557, V558) -> case V558 of [E158 | E159] -> (fun (V559, V560) -> case V560 of [] -> begin (V561 = ('un--quote\x{27}'(V0, V1, V2, V559))), fun (V562) -> begin (V563 = (V561(V562))), case V563 of {'Prelude.Types.Left', V564} -> {'Prelude.Types.Left', V564}; {'Prelude.Types.Right', V565} -> (begin (V568 = begin (V566 = ('un--quoteLazyReason'(V557))), fun (V567) -> {'Prelude.Types.Right', {'Core.TT.TDelayed', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V566, V565}} end end), V568 end(V562)) end end end end; _ -> case V4 of [E160 | E161] -> (fun (V569, V570) -> case V570 of [E162 | E163] -> (fun (V571, V572) -> case V572 of [E164 | E165] -> (fun (V573, V574) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V575) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V575)) end, fun (V576) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V576)) end}, V571, fun (V577) -> begin (V578 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V580 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V579) -> ('un--quote\x{27}'(V0, V1, V2, V579)) end, V574, []))), fun (V581) -> begin (V582 = (V580(V581))), case V582 of {'Prelude.Types.Left', V583} -> {'Prelude.Types.Left', V583}; {'Prelude.Types.Right', V584} -> (begin (V587 = fun (V585) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V578, {'Core.TT.Ref', V578, {'Core.TT.DataCon', begin (V586 = V3), case ((V586 band 9223372036854775808) =/= 0) of 'true' -> (V586 bor -9223372036854775808); _ -> (V586 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V584))}, V577}, V584))} end), V587 end(V581)) end end end end end end)); 0 -> fun (V588) -> ('un--invalid'(V588)) end end end(E164, E165)); _ -> fun (V589) -> ('un--invalid'(V589)) end end end(E162, E163)); _ -> fun (V590) -> ('un--invalid'(V590)) end end end(E160, E161)); _ -> fun (V591) -> ('un--invalid'(V591)) end end end end(E158, E159)); _ -> case V4 of [E152 | E153] -> (fun (V592, V593) -> case V593 of [E154 | E155] -> (fun (V594, V595) -> case V595 of [E156 | E157] -> (fun (V596, V597) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V598) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V598)) end, fun (V599) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V599)) end}, V594, fun (V600) -> begin (V601 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V603 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V602) -> ('un--quote\x{27}'(V0, V1, V2, V602)) end, V597, []))), fun (V604) -> begin (V605 = (V603(V604))), case V605 of {'Prelude.Types.Left', V606} -> {'Prelude.Types.Left', V606}; {'Prelude.Types.Right', V607} -> (begin (V610 = fun (V608) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V601, {'Core.TT.Ref', V601, {'Core.TT.DataCon', begin (V609 = V3), case ((V609 band 9223372036854775808) =/= 0) of 'true' -> (V609 bor -9223372036854775808); _ -> (V609 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V607))}, V600}, V607))} end), V610 end(V604)) end end end end end end)); 0 -> fun (V611) -> ('un--invalid'(V611)) end end end(E156, E157)); _ -> fun (V612) -> ('un--invalid'(V612)) end end end(E154, E155)); _ -> fun (V613) -> ('un--invalid'(V613)) end end end(E152, E153)); _ -> fun (V614) -> ('un--invalid'(V614)) end end end end(E150, E151)); _ -> case V4 of [E144 | E145] -> (fun (V615, V616) -> case V616 of [E146 | E147] -> (fun (V617, V618) -> case V618 of [E148 | E149] -> (fun (V619, V620) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V621) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V621)) end, fun (V622) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V622)) end}, V617, fun (V623) -> begin (V624 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V626 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V625) -> ('un--quote\x{27}'(V0, V1, V2, V625)) end, V620, []))), fun (V627) -> begin (V628 = (V626(V627))), case V628 of {'Prelude.Types.Left', V629} -> {'Prelude.Types.Left', V629}; {'Prelude.Types.Right', V630} -> (begin (V633 = fun (V631) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V624, {'Core.TT.Ref', V624, {'Core.TT.DataCon', begin (V632 = V3), case ((V632 band 9223372036854775808) =/= 0) of 'true' -> (V632 bor -9223372036854775808); _ -> (V632 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V630))}, V623}, V630))} end), V633 end(V627)) end end end end end end)); 0 -> fun (V634) -> ('un--invalid'(V634)) end end end(E148, E149)); _ -> fun (V635) -> ('un--invalid'(V635)) end end end(E146, E147)); _ -> fun (V636) -> ('un--invalid'(V636)) end end end(E144, E145)); _ -> fun (V637) -> ('un--invalid'(V637)) end end end end(E142, E143)); _ -> case V4 of [E136 | E137] -> (fun (V638, V639) -> case V639 of [E138 | E139] -> (fun (V640, V641) -> case V641 of [E140 | E141] -> (fun (V642, V643) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V644) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V644)) end, fun (V645) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V645)) end}, V640, fun (V646) -> begin (V647 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V649 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V648) -> ('un--quote\x{27}'(V0, V1, V2, V648)) end, V643, []))), fun (V650) -> begin (V651 = (V649(V650))), case V651 of {'Prelude.Types.Left', V652} -> {'Prelude.Types.Left', V652}; {'Prelude.Types.Right', V653} -> (begin (V656 = fun (V654) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V647, {'Core.TT.Ref', V647, {'Core.TT.DataCon', begin (V655 = V3), case ((V655 band 9223372036854775808) =/= 0) of 'true' -> (V655 bor -9223372036854775808); _ -> (V655 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V653))}, V646}, V653))} end), V656 end(V650)) end end end end end end)); 0 -> fun (V657) -> ('un--invalid'(V657)) end end end(E140, E141)); _ -> fun (V658) -> ('un--invalid'(V658)) end end end(E138, E139)); _ -> fun (V659) -> ('un--invalid'(V659)) end end end(E136, E137)); _ -> fun (V660) -> ('un--invalid'(V660)) end end end; -4 -> case V4 of [E172 | E173] -> (fun (V661, V662) -> case V662 of [E180 | E181] -> (fun (V663, V664) -> case V664 of [E188 | E189] -> (fun (V665, V666) -> case V666 of [E196 | E197] -> (fun (V667, V668) -> case V668 of [E204 | E205] -> (fun (V669, V670) -> case V670 of [] -> begin (V673 = fun (V671) -> begin (V672 = (('Idris.Idris2.Libraries.Utils.Scheme':'un--evalSchemeStr'(<<"(ct-setBlockAll #t)"/utf8>>))(V671))), {'Prelude.Types.Right', V672} end end), fun (V674) -> begin (V675 = (V673(V674))), case V675 of {'Prelude.Types.Left', V676} -> {'Prelude.Types.Left', V676}; {'Prelude.Types.Right', V677} -> (begin (V683 = case V677 of {'Prelude.Types.Just', V678} -> begin (V679 = {'Prelude.Types.Just', V678}), case ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V669)) of {'Libraries.Utils.Scheme.Procedure', V680} -> ('case--case block in case block in quoteVector-4450'(V0, V1, V661, V663, V665, V667, V669, V2, V678, V679, V680, ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V667)))); _ -> fun (V681) -> ('un--invalid'(V681)) end end end; {'Prelude.Types.Nothing'} -> fun (V682) -> ('un--invalid'(V682)) end end), V683 end(V674)) end end end end; _ -> case V4 of [E206 | E207] -> (fun (V684, V685) -> case V685 of [E208 | E209] -> (fun (V686, V687) -> case V687 of [E210 | E211] -> (fun (V688, V689) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V690) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V690)) end, fun (V691) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V691)) end}, V686, fun (V692) -> begin (V693 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V695 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V694) -> ('un--quote\x{27}'(V0, V1, V2, V694)) end, V689, []))), fun (V696) -> begin (V697 = (V695(V696))), case V697 of {'Prelude.Types.Left', V698} -> {'Prelude.Types.Left', V698}; {'Prelude.Types.Right', V699} -> (begin (V702 = fun (V700) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V693, {'Core.TT.Ref', V693, {'Core.TT.DataCon', begin (V701 = V3), case ((V701 band 9223372036854775808) =/= 0) of 'true' -> (V701 bor -9223372036854775808); _ -> (V701 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V699))}, V692}, V699))} end), V702 end(V696)) end end end end end end)); 0 -> fun (V703) -> ('un--invalid'(V703)) end end end(E210, E211)); _ -> fun (V704) -> ('un--invalid'(V704)) end end end(E208, E209)); _ -> fun (V705) -> ('un--invalid'(V705)) end end end(E206, E207)); _ -> fun (V706) -> ('un--invalid'(V706)) end end end end(E204, E205)); _ -> case V4 of [E198 | E199] -> (fun (V707, V708) -> case V708 of [E200 | E201] -> (fun (V709, V710) -> case V710 of [E202 | E203] -> (fun (V711, V712) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V713) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V713)) end, fun (V714) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V714)) end}, V709, fun (V715) -> begin (V716 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V718 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V717) -> ('un--quote\x{27}'(V0, V1, V2, V717)) end, V712, []))), fun (V719) -> begin (V720 = (V718(V719))), case V720 of {'Prelude.Types.Left', V721} -> {'Prelude.Types.Left', V721}; {'Prelude.Types.Right', V722} -> (begin (V725 = fun (V723) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V716, {'Core.TT.Ref', V716, {'Core.TT.DataCon', begin (V724 = V3), case ((V724 band 9223372036854775808) =/= 0) of 'true' -> (V724 bor -9223372036854775808); _ -> (V724 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V722))}, V715}, V722))} end), V725 end(V719)) end end end end end end)); 0 -> fun (V726) -> ('un--invalid'(V726)) end end end(E202, E203)); _ -> fun (V727) -> ('un--invalid'(V727)) end end end(E200, E201)); _ -> fun (V728) -> ('un--invalid'(V728)) end end end(E198, E199)); _ -> fun (V729) -> ('un--invalid'(V729)) end end end end(E196, E197)); _ -> case V4 of [E190 | E191] -> (fun (V730, V731) -> case V731 of [E192 | E193] -> (fun (V732, V733) -> case V733 of [E194 | E195] -> (fun (V734, V735) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V736) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V736)) end, fun (V737) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V737)) end}, V732, fun (V738) -> begin (V739 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V741 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V740) -> ('un--quote\x{27}'(V0, V1, V2, V740)) end, V735, []))), fun (V742) -> begin (V743 = (V741(V742))), case V743 of {'Prelude.Types.Left', V744} -> {'Prelude.Types.Left', V744}; {'Prelude.Types.Right', V745} -> (begin (V748 = fun (V746) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V739, {'Core.TT.Ref', V739, {'Core.TT.DataCon', begin (V747 = V3), case ((V747 band 9223372036854775808) =/= 0) of 'true' -> (V747 bor -9223372036854775808); _ -> (V747 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V745))}, V738}, V745))} end), V748 end(V742)) end end end end end end)); 0 -> fun (V749) -> ('un--invalid'(V749)) end end end(E194, E195)); _ -> fun (V750) -> ('un--invalid'(V750)) end end end(E192, E193)); _ -> fun (V751) -> ('un--invalid'(V751)) end end end(E190, E191)); _ -> fun (V752) -> ('un--invalid'(V752)) end end end end(E188, E189)); _ -> case V4 of [E182 | E183] -> (fun (V753, V754) -> case V754 of [E184 | E185] -> (fun (V755, V756) -> case V756 of [E186 | E187] -> (fun (V757, V758) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V759) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V759)) end, fun (V760) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V760)) end}, V755, fun (V761) -> begin (V762 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V764 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V763) -> ('un--quote\x{27}'(V0, V1, V2, V763)) end, V758, []))), fun (V765) -> begin (V766 = (V764(V765))), case V766 of {'Prelude.Types.Left', V767} -> {'Prelude.Types.Left', V767}; {'Prelude.Types.Right', V768} -> (begin (V771 = fun (V769) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V762, {'Core.TT.Ref', V762, {'Core.TT.DataCon', begin (V770 = V3), case ((V770 band 9223372036854775808) =/= 0) of 'true' -> (V770 bor -9223372036854775808); _ -> (V770 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V768))}, V761}, V768))} end), V771 end(V765)) end end end end end end)); 0 -> fun (V772) -> ('un--invalid'(V772)) end end end(E186, E187)); _ -> fun (V773) -> ('un--invalid'(V773)) end end end(E184, E185)); _ -> fun (V774) -> ('un--invalid'(V774)) end end end(E182, E183)); _ -> fun (V775) -> ('un--invalid'(V775)) end end end end(E180, E181)); _ -> case V4 of [E174 | E175] -> (fun (V776, V777) -> case V777 of [E176 | E177] -> (fun (V778, V779) -> case V779 of [E178 | E179] -> (fun (V780, V781) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V782) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V782)) end, fun (V783) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V783)) end}, V778, fun (V784) -> begin (V785 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V787 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V786) -> ('un--quote\x{27}'(V0, V1, V2, V786)) end, V781, []))), fun (V788) -> begin (V789 = (V787(V788))), case V789 of {'Prelude.Types.Left', V790} -> {'Prelude.Types.Left', V790}; {'Prelude.Types.Right', V791} -> (begin (V794 = fun (V792) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V785, {'Core.TT.Ref', V785, {'Core.TT.DataCon', begin (V793 = V3), case ((V793 band 9223372036854775808) =/= 0) of 'true' -> (V793 bor -9223372036854775808); _ -> (V793 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V791))}, V784}, V791))} end), V794 end(V788)) end end end end end end)); 0 -> fun (V795) -> ('un--invalid'(V795)) end end end(E178, E179)); _ -> fun (V796) -> ('un--invalid'(V796)) end end end(E176, E177)); _ -> fun (V797) -> ('un--invalid'(V797)) end end end(E174, E175)); _ -> fun (V798) -> ('un--invalid'(V798)) end end end end(E172, E173)); _ -> case V4 of [E166 | E167] -> (fun (V799, V800) -> case V800 of [E168 | E169] -> (fun (V801, V802) -> case V802 of [E170 | E171] -> (fun (V803, V804) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V805) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V805)) end, fun (V806) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V806)) end}, V801, fun (V807) -> begin (V808 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V810 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V809) -> ('un--quote\x{27}'(V0, V1, V2, V809)) end, V804, []))), fun (V811) -> begin (V812 = (V810(V811))), case V812 of {'Prelude.Types.Left', V813} -> {'Prelude.Types.Left', V813}; {'Prelude.Types.Right', V814} -> (begin (V817 = fun (V815) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V808, {'Core.TT.Ref', V808, {'Core.TT.DataCon', begin (V816 = V3), case ((V816 band 9223372036854775808) =/= 0) of 'true' -> (V816 bor -9223372036854775808); _ -> (V816 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V814))}, V807}, V814))} end), V817 end(V811)) end end end end end end)); 0 -> fun (V818) -> ('un--invalid'(V818)) end end end(E170, E171)); _ -> fun (V819) -> ('un--invalid'(V819)) end end end(E168, E169)); _ -> fun (V820) -> ('un--invalid'(V820)) end end end(E166, E167)); _ -> fun (V821) -> ('un--invalid'(V821)) end end end; -5 -> case V4 of [E218 | E219] -> (fun (V822, V823) -> case V823 of [E226 | E227] -> (fun (V824, V825) -> case V825 of [E234 | E235] -> (fun (V826, V827) -> case V827 of [E242 | E243] -> (fun (V828, V829) -> case V829 of [] -> begin (V830 = ('un--quote\x{27}'(V0, V1, V2, V828))), fun (V831) -> begin (V832 = (V830(V831))), case V832 of {'Prelude.Types.Left', V833} -> {'Prelude.Types.Left', V833}; {'Prelude.Types.Right', V834} -> (begin (V838 = begin (V835 = ('un--quoteFC'(V826))), begin (V836 = ('un--quoteLazyReason'(V824))), fun (V837) -> {'Prelude.Types.Right', {'Core.TT.TForce', V835, V836, V834}} end end end), V838 end(V831)) end end end end; _ -> case V4 of [E244 | E245] -> (fun (V839, V840) -> case V840 of [E246 | E247] -> (fun (V841, V842) -> case V842 of [E248 | E249] -> (fun (V843, V844) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V845) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V845)) end, fun (V846) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V846)) end}, V841, fun (V847) -> begin (V848 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V850 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V849) -> ('un--quote\x{27}'(V0, V1, V2, V849)) end, V844, []))), fun (V851) -> begin (V852 = (V850(V851))), case V852 of {'Prelude.Types.Left', V853} -> {'Prelude.Types.Left', V853}; {'Prelude.Types.Right', V854} -> (begin (V857 = fun (V855) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V848, {'Core.TT.Ref', V848, {'Core.TT.DataCon', begin (V856 = V3), case ((V856 band 9223372036854775808) =/= 0) of 'true' -> (V856 bor -9223372036854775808); _ -> (V856 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V854))}, V847}, V854))} end), V857 end(V851)) end end end end end end)); 0 -> fun (V858) -> ('un--invalid'(V858)) end end end(E248, E249)); _ -> fun (V859) -> ('un--invalid'(V859)) end end end(E246, E247)); _ -> fun (V860) -> ('un--invalid'(V860)) end end end(E244, E245)); _ -> fun (V861) -> ('un--invalid'(V861)) end end end end(E242, E243)); _ -> case V4 of [E236 | E237] -> (fun (V862, V863) -> case V863 of [E238 | E239] -> (fun (V864, V865) -> case V865 of [E240 | E241] -> (fun (V866, V867) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V868) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V868)) end, fun (V869) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V869)) end}, V864, fun (V870) -> begin (V871 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V873 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V872) -> ('un--quote\x{27}'(V0, V1, V2, V872)) end, V867, []))), fun (V874) -> begin (V875 = (V873(V874))), case V875 of {'Prelude.Types.Left', V876} -> {'Prelude.Types.Left', V876}; {'Prelude.Types.Right', V877} -> (begin (V880 = fun (V878) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V871, {'Core.TT.Ref', V871, {'Core.TT.DataCon', begin (V879 = V3), case ((V879 band 9223372036854775808) =/= 0) of 'true' -> (V879 bor -9223372036854775808); _ -> (V879 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V877))}, V870}, V877))} end), V880 end(V874)) end end end end end end)); 0 -> fun (V881) -> ('un--invalid'(V881)) end end end(E240, E241)); _ -> fun (V882) -> ('un--invalid'(V882)) end end end(E238, E239)); _ -> fun (V883) -> ('un--invalid'(V883)) end end end(E236, E237)); _ -> fun (V884) -> ('un--invalid'(V884)) end end end end(E234, E235)); _ -> case V4 of [E228 | E229] -> (fun (V885, V886) -> case V886 of [E230 | E231] -> (fun (V887, V888) -> case V888 of [E232 | E233] -> (fun (V889, V890) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V891) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V891)) end, fun (V892) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V892)) end}, V887, fun (V893) -> begin (V894 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V896 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V895) -> ('un--quote\x{27}'(V0, V1, V2, V895)) end, V890, []))), fun (V897) -> begin (V898 = (V896(V897))), case V898 of {'Prelude.Types.Left', V899} -> {'Prelude.Types.Left', V899}; {'Prelude.Types.Right', V900} -> (begin (V903 = fun (V901) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V894, {'Core.TT.Ref', V894, {'Core.TT.DataCon', begin (V902 = V3), case ((V902 band 9223372036854775808) =/= 0) of 'true' -> (V902 bor -9223372036854775808); _ -> (V902 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V900))}, V893}, V900))} end), V903 end(V897)) end end end end end end)); 0 -> fun (V904) -> ('un--invalid'(V904)) end end end(E232, E233)); _ -> fun (V905) -> ('un--invalid'(V905)) end end end(E230, E231)); _ -> fun (V906) -> ('un--invalid'(V906)) end end end(E228, E229)); _ -> fun (V907) -> ('un--invalid'(V907)) end end end end(E226, E227)); _ -> case V4 of [E220 | E221] -> (fun (V908, V909) -> case V909 of [E222 | E223] -> (fun (V910, V911) -> case V911 of [E224 | E225] -> (fun (V912, V913) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V914) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V914)) end, fun (V915) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V915)) end}, V910, fun (V916) -> begin (V917 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V919 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V918) -> ('un--quote\x{27}'(V0, V1, V2, V918)) end, V913, []))), fun (V920) -> begin (V921 = (V919(V920))), case V921 of {'Prelude.Types.Left', V922} -> {'Prelude.Types.Left', V922}; {'Prelude.Types.Right', V923} -> (begin (V926 = fun (V924) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V917, {'Core.TT.Ref', V917, {'Core.TT.DataCon', begin (V925 = V3), case ((V925 band 9223372036854775808) =/= 0) of 'true' -> (V925 bor -9223372036854775808); _ -> (V925 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V923))}, V916}, V923))} end), V926 end(V920)) end end end end end end)); 0 -> fun (V927) -> ('un--invalid'(V927)) end end end(E224, E225)); _ -> fun (V928) -> ('un--invalid'(V928)) end end end(E222, E223)); _ -> fun (V929) -> ('un--invalid'(V929)) end end end(E220, E221)); _ -> fun (V930) -> ('un--invalid'(V930)) end end end end(E218, E219)); _ -> case V4 of [E212 | E213] -> (fun (V931, V932) -> case V932 of [E214 | E215] -> (fun (V933, V934) -> case V934 of [E216 | E217] -> (fun (V935, V936) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V937) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V937)) end, fun (V938) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V938)) end}, V933, fun (V939) -> begin (V940 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V942 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V941) -> ('un--quote\x{27}'(V0, V1, V2, V941)) end, V936, []))), fun (V943) -> begin (V944 = (V942(V943))), case V944 of {'Prelude.Types.Left', V945} -> {'Prelude.Types.Left', V945}; {'Prelude.Types.Right', V946} -> (begin (V949 = fun (V947) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V940, {'Core.TT.Ref', V940, {'Core.TT.DataCon', begin (V948 = V3), case ((V948 band 9223372036854775808) =/= 0) of 'true' -> (V948 bor -9223372036854775808); _ -> (V948 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V946))}, V939}, V946))} end), V949 end(V943)) end end end end end end)); 0 -> fun (V950) -> ('un--invalid'(V950)) end end end(E216, E217)); _ -> fun (V951) -> ('un--invalid'(V951)) end end end(E214, E215)); _ -> fun (V952) -> ('un--invalid'(V952)) end end end(E212, E213)); _ -> fun (V953) -> ('un--invalid'(V953)) end end end; -6 -> case V4 of [E256 | E257] -> (fun (V954, V955) -> case V955 of [E264 | E265] -> (fun (V956, V957) -> case V957 of [E272 | E273] -> (fun (V958, V959) -> case V959 of [] -> begin (V960 = ('un--quoteFC'(V956))), begin (V962 = ('un--quoteWhyErased'(fun (V961) -> ('un--quote\x{27}'(V0, V1, V2, V961)) end, V958))), fun (V963) -> begin (V964 = (V962(V963))), case V964 of {'Prelude.Types.Left', V965} -> {'Prelude.Types.Left', V965}; {'Prelude.Types.Right', V966} -> (begin (V968 = fun (V967) -> {'Prelude.Types.Right', {'Core.TT.Erased', V960, V966}} end), V968 end(V963)) end end end end end; _ -> case V4 of [E274 | E275] -> (fun (V969, V970) -> case V970 of [E276 | E277] -> (fun (V971, V972) -> case V972 of [E278 | E279] -> (fun (V973, V974) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V975) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V975)) end, fun (V976) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V976)) end}, V971, fun (V977) -> begin (V978 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V980 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V979) -> ('un--quote\x{27}'(V0, V1, V2, V979)) end, V974, []))), fun (V981) -> begin (V982 = (V980(V981))), case V982 of {'Prelude.Types.Left', V983} -> {'Prelude.Types.Left', V983}; {'Prelude.Types.Right', V984} -> (begin (V987 = fun (V985) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V978, {'Core.TT.Ref', V978, {'Core.TT.DataCon', begin (V986 = V3), case ((V986 band 9223372036854775808) =/= 0) of 'true' -> (V986 bor -9223372036854775808); _ -> (V986 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V984))}, V977}, V984))} end), V987 end(V981)) end end end end end end)); 0 -> fun (V988) -> ('un--invalid'(V988)) end end end(E278, E279)); _ -> fun (V989) -> ('un--invalid'(V989)) end end end(E276, E277)); _ -> fun (V990) -> ('un--invalid'(V990)) end end end(E274, E275)); _ -> fun (V991) -> ('un--invalid'(V991)) end end end end(E272, E273)); _ -> case V4 of [E266 | E267] -> (fun (V992, V993) -> case V993 of [E268 | E269] -> (fun (V994, V995) -> case V995 of [E270 | E271] -> (fun (V996, V997) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V998) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V998)) end, fun (V999) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V999)) end}, V994, fun (V1000) -> begin (V1001 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1003 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1002) -> ('un--quote\x{27}'(V0, V1, V2, V1002)) end, V997, []))), fun (V1004) -> begin (V1005 = (V1003(V1004))), case V1005 of {'Prelude.Types.Left', V1006} -> {'Prelude.Types.Left', V1006}; {'Prelude.Types.Right', V1007} -> (begin (V1010 = fun (V1008) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1001, {'Core.TT.Ref', V1001, {'Core.TT.DataCon', begin (V1009 = V3), case ((V1009 band 9223372036854775808) =/= 0) of 'true' -> (V1009 bor -9223372036854775808); _ -> (V1009 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1007))}, V1000}, V1007))} end), V1010 end(V1004)) end end end end end end)); 0 -> fun (V1011) -> ('un--invalid'(V1011)) end end end(E270, E271)); _ -> fun (V1012) -> ('un--invalid'(V1012)) end end end(E268, E269)); _ -> fun (V1013) -> ('un--invalid'(V1013)) end end end(E266, E267)); _ -> fun (V1014) -> ('un--invalid'(V1014)) end end end end(E264, E265)); _ -> case V4 of [E258 | E259] -> (fun (V1015, V1016) -> case V1016 of [E260 | E261] -> (fun (V1017, V1018) -> case V1018 of [E262 | E263] -> (fun (V1019, V1020) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1021) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1021)) end, fun (V1022) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1022)) end}, V1017, fun (V1023) -> begin (V1024 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1026 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1025) -> ('un--quote\x{27}'(V0, V1, V2, V1025)) end, V1020, []))), fun (V1027) -> begin (V1028 = (V1026(V1027))), case V1028 of {'Prelude.Types.Left', V1029} -> {'Prelude.Types.Left', V1029}; {'Prelude.Types.Right', V1030} -> (begin (V1033 = fun (V1031) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1024, {'Core.TT.Ref', V1024, {'Core.TT.DataCon', begin (V1032 = V3), case ((V1032 band 9223372036854775808) =/= 0) of 'true' -> (V1032 bor -9223372036854775808); _ -> (V1032 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1030))}, V1023}, V1030))} end), V1033 end(V1027)) end end end end end end)); 0 -> fun (V1034) -> ('un--invalid'(V1034)) end end end(E262, E263)); _ -> fun (V1035) -> ('un--invalid'(V1035)) end end end(E260, E261)); _ -> fun (V1036) -> ('un--invalid'(V1036)) end end end(E258, E259)); _ -> fun (V1037) -> ('un--invalid'(V1037)) end end end end(E256, E257)); _ -> case V4 of [E250 | E251] -> (fun (V1038, V1039) -> case V1039 of [E252 | E253] -> (fun (V1040, V1041) -> case V1041 of [E254 | E255] -> (fun (V1042, V1043) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1044) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1044)) end, fun (V1045) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1045)) end}, V1040, fun (V1046) -> begin (V1047 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1049 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1048) -> ('un--quote\x{27}'(V0, V1, V2, V1048)) end, V1043, []))), fun (V1050) -> begin (V1051 = (V1049(V1050))), case V1051 of {'Prelude.Types.Left', V1052} -> {'Prelude.Types.Left', V1052}; {'Prelude.Types.Right', V1053} -> (begin (V1056 = fun (V1054) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1047, {'Core.TT.Ref', V1047, {'Core.TT.DataCon', begin (V1055 = V3), case ((V1055 band 9223372036854775808) =/= 0) of 'true' -> (V1055 bor -9223372036854775808); _ -> (V1055 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1053))}, V1046}, V1053))} end), V1056 end(V1050)) end end end end end end)); 0 -> fun (V1057) -> ('un--invalid'(V1057)) end end end(E254, E255)); _ -> fun (V1058) -> ('un--invalid'(V1058)) end end end(E252, E253)); _ -> fun (V1059) -> ('un--invalid'(V1059)) end end end(E250, E251)); _ -> fun (V1060) -> ('un--invalid'(V1060)) end end end; -7 -> case V4 of [E286 | E287] -> (fun (V1061, V1062) -> case V1062 of [E294 | E295] -> (fun (V1063, V1064) -> case V1064 of [E302 | E303] -> (fun (V1065, V1066) -> case V1066 of [] -> begin (V1067 = ('un--quoteFC'(V1063))), begin (V1068 = ('un--quoteTypeLevel'(V1065))), fun (V1069) -> {'Prelude.Types.Right', {'Core.TT.TType', V1067, V1068}} end end end; _ -> case V4 of [E304 | E305] -> (fun (V1070, V1071) -> case V1071 of [E306 | E307] -> (fun (V1072, V1073) -> case V1073 of [E308 | E309] -> (fun (V1074, V1075) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1076) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1076)) end, fun (V1077) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1077)) end}, V1072, fun (V1078) -> begin (V1079 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1081 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1080) -> ('un--quote\x{27}'(V0, V1, V2, V1080)) end, V1075, []))), fun (V1082) -> begin (V1083 = (V1081(V1082))), case V1083 of {'Prelude.Types.Left', V1084} -> {'Prelude.Types.Left', V1084}; {'Prelude.Types.Right', V1085} -> (begin (V1088 = fun (V1086) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1079, {'Core.TT.Ref', V1079, {'Core.TT.DataCon', begin (V1087 = V3), case ((V1087 band 9223372036854775808) =/= 0) of 'true' -> (V1087 bor -9223372036854775808); _ -> (V1087 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1085))}, V1078}, V1085))} end), V1088 end(V1082)) end end end end end end)); 0 -> fun (V1089) -> ('un--invalid'(V1089)) end end end(E308, E309)); _ -> fun (V1090) -> ('un--invalid'(V1090)) end end end(E306, E307)); _ -> fun (V1091) -> ('un--invalid'(V1091)) end end end(E304, E305)); _ -> fun (V1092) -> ('un--invalid'(V1092)) end end end end(E302, E303)); _ -> case V4 of [E296 | E297] -> (fun (V1093, V1094) -> case V1094 of [E298 | E299] -> (fun (V1095, V1096) -> case V1096 of [E300 | E301] -> (fun (V1097, V1098) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1099) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1099)) end, fun (V1100) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1100)) end}, V1095, fun (V1101) -> begin (V1102 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1104 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1103) -> ('un--quote\x{27}'(V0, V1, V2, V1103)) end, V1098, []))), fun (V1105) -> begin (V1106 = (V1104(V1105))), case V1106 of {'Prelude.Types.Left', V1107} -> {'Prelude.Types.Left', V1107}; {'Prelude.Types.Right', V1108} -> (begin (V1111 = fun (V1109) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1102, {'Core.TT.Ref', V1102, {'Core.TT.DataCon', begin (V1110 = V3), case ((V1110 band 9223372036854775808) =/= 0) of 'true' -> (V1110 bor -9223372036854775808); _ -> (V1110 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1108))}, V1101}, V1108))} end), V1111 end(V1105)) end end end end end end)); 0 -> fun (V1112) -> ('un--invalid'(V1112)) end end end(E300, E301)); _ -> fun (V1113) -> ('un--invalid'(V1113)) end end end(E298, E299)); _ -> fun (V1114) -> ('un--invalid'(V1114)) end end end(E296, E297)); _ -> fun (V1115) -> ('un--invalid'(V1115)) end end end end(E294, E295)); _ -> case V4 of [E288 | E289] -> (fun (V1116, V1117) -> case V1117 of [E290 | E291] -> (fun (V1118, V1119) -> case V1119 of [E292 | E293] -> (fun (V1120, V1121) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1122) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1122)) end, fun (V1123) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1123)) end}, V1118, fun (V1124) -> begin (V1125 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1127 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1126) -> ('un--quote\x{27}'(V0, V1, V2, V1126)) end, V1121, []))), fun (V1128) -> begin (V1129 = (V1127(V1128))), case V1129 of {'Prelude.Types.Left', V1130} -> {'Prelude.Types.Left', V1130}; {'Prelude.Types.Right', V1131} -> (begin (V1134 = fun (V1132) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1125, {'Core.TT.Ref', V1125, {'Core.TT.DataCon', begin (V1133 = V3), case ((V1133 band 9223372036854775808) =/= 0) of 'true' -> (V1133 bor -9223372036854775808); _ -> (V1133 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1131))}, V1124}, V1131))} end), V1134 end(V1128)) end end end end end end)); 0 -> fun (V1135) -> ('un--invalid'(V1135)) end end end(E292, E293)); _ -> fun (V1136) -> ('un--invalid'(V1136)) end end end(E290, E291)); _ -> fun (V1137) -> ('un--invalid'(V1137)) end end end(E288, E289)); _ -> fun (V1138) -> ('un--invalid'(V1138)) end end end end(E286, E287)); _ -> case V4 of [E280 | E281] -> (fun (V1139, V1140) -> case V1140 of [E282 | E283] -> (fun (V1141, V1142) -> case V1142 of [E284 | E285] -> (fun (V1143, V1144) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1145) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1145)) end, fun (V1146) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1146)) end}, V1141, fun (V1147) -> begin (V1148 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1150 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1149) -> ('un--quote\x{27}'(V0, V1, V2, V1149)) end, V1144, []))), fun (V1151) -> begin (V1152 = (V1150(V1151))), case V1152 of {'Prelude.Types.Left', V1153} -> {'Prelude.Types.Left', V1153}; {'Prelude.Types.Right', V1154} -> (begin (V1157 = fun (V1155) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1148, {'Core.TT.Ref', V1148, {'Core.TT.DataCon', begin (V1156 = V3), case ((V1156 band 9223372036854775808) =/= 0) of 'true' -> (V1156 bor -9223372036854775808); _ -> (V1156 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1154))}, V1147}, V1154))} end), V1157 end(V1151)) end end end end end end)); 0 -> fun (V1158) -> ('un--invalid'(V1158)) end end end(E284, E285)); _ -> fun (V1159) -> ('un--invalid'(V1159)) end end end(E282, E283)); _ -> fun (V1160) -> ('un--invalid'(V1160)) end end end(E280, E281)); _ -> fun (V1161) -> ('un--invalid'(V1161)) end end end; -8 -> case V4 of [E316 | E317] -> (fun (V1162, V1163) -> case V1163 of [E324 | E325] -> (fun (V1164, V1165) -> case V1165 of [E332 | E333] -> (fun (V1166, V1167) -> case V1167 of [E340 | E341] -> (fun (V1168, V1169) -> case V1169 of [E348 | E349] -> (fun (V1170, V1171) -> case V1171 of [E356 | E357] -> (fun (V1172, V1173) -> case V1173 of [] -> begin (V1174 = ('un--quoteBinderName'(V1172))), begin (V1175 = ('un--quoteRigCount'(V1166))), begin (V1176 = ('un--quote\x{27}'(V0, V1, V2, V1170))), fun (V1177) -> begin (V1178 = (V1176(V1177))), case V1178 of {'Prelude.Types.Left', V1179} -> {'Prelude.Types.Left', V1179}; {'Prelude.Types.Right', V1180} -> (begin (V1192 = begin (V1181 = ('un--quotePiInfo'(V0, V1, V2, V1168))), fun (V1182) -> begin (V1183 = (V1181(V1182))), case V1183 of {'Prelude.Types.Left', V1184} -> {'Prelude.Types.Left', V1184}; {'Prelude.Types.Right', V1185} -> (begin (V1191 = ('un--quoteBinder'(V0, V1, V2, fun (V1186) -> fun (V1187) -> fun (V1188) -> fun (V1189) -> fun (V1190) -> {'Core.TT.Lam', V1187, V1188, V1189, V1190} end end end end end, V1164, V1175, V1185, V1180, V1174))), V1191 end(V1182)) end end end end), V1192 end(V1177)) end end end end end end; _ -> case V4 of [E358 | E359] -> (fun (V1193, V1194) -> case V1194 of [E360 | E361] -> (fun (V1195, V1196) -> case V1196 of [E362 | E363] -> (fun (V1197, V1198) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1199) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1199)) end, fun (V1200) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1200)) end}, V1195, fun (V1201) -> begin (V1202 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1204 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1203) -> ('un--quote\x{27}'(V0, V1, V2, V1203)) end, V1198, []))), fun (V1205) -> begin (V1206 = (V1204(V1205))), case V1206 of {'Prelude.Types.Left', V1207} -> {'Prelude.Types.Left', V1207}; {'Prelude.Types.Right', V1208} -> (begin (V1211 = fun (V1209) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1202, {'Core.TT.Ref', V1202, {'Core.TT.DataCon', begin (V1210 = V3), case ((V1210 band 9223372036854775808) =/= 0) of 'true' -> (V1210 bor -9223372036854775808); _ -> (V1210 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1208))}, V1201}, V1208))} end), V1211 end(V1205)) end end end end end end)); 0 -> fun (V1212) -> ('un--invalid'(V1212)) end end end(E362, E363)); _ -> fun (V1213) -> ('un--invalid'(V1213)) end end end(E360, E361)); _ -> fun (V1214) -> ('un--invalid'(V1214)) end end end(E358, E359)); _ -> fun (V1215) -> ('un--invalid'(V1215)) end end end end(E356, E357)); _ -> case V4 of [E350 | E351] -> (fun (V1216, V1217) -> case V1217 of [E352 | E353] -> (fun (V1218, V1219) -> case V1219 of [E354 | E355] -> (fun (V1220, V1221) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1222) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1222)) end, fun (V1223) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1223)) end}, V1218, fun (V1224) -> begin (V1225 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1227 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1226) -> ('un--quote\x{27}'(V0, V1, V2, V1226)) end, V1221, []))), fun (V1228) -> begin (V1229 = (V1227(V1228))), case V1229 of {'Prelude.Types.Left', V1230} -> {'Prelude.Types.Left', V1230}; {'Prelude.Types.Right', V1231} -> (begin (V1234 = fun (V1232) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1225, {'Core.TT.Ref', V1225, {'Core.TT.DataCon', begin (V1233 = V3), case ((V1233 band 9223372036854775808) =/= 0) of 'true' -> (V1233 bor -9223372036854775808); _ -> (V1233 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1231))}, V1224}, V1231))} end), V1234 end(V1228)) end end end end end end)); 0 -> fun (V1235) -> ('un--invalid'(V1235)) end end end(E354, E355)); _ -> fun (V1236) -> ('un--invalid'(V1236)) end end end(E352, E353)); _ -> fun (V1237) -> ('un--invalid'(V1237)) end end end(E350, E351)); _ -> fun (V1238) -> ('un--invalid'(V1238)) end end end end(E348, E349)); _ -> case V4 of [E342 | E343] -> (fun (V1239, V1240) -> case V1240 of [E344 | E345] -> (fun (V1241, V1242) -> case V1242 of [E346 | E347] -> (fun (V1243, V1244) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1245) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1245)) end, fun (V1246) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1246)) end}, V1241, fun (V1247) -> begin (V1248 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1250 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1249) -> ('un--quote\x{27}'(V0, V1, V2, V1249)) end, V1244, []))), fun (V1251) -> begin (V1252 = (V1250(V1251))), case V1252 of {'Prelude.Types.Left', V1253} -> {'Prelude.Types.Left', V1253}; {'Prelude.Types.Right', V1254} -> (begin (V1257 = fun (V1255) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1248, {'Core.TT.Ref', V1248, {'Core.TT.DataCon', begin (V1256 = V3), case ((V1256 band 9223372036854775808) =/= 0) of 'true' -> (V1256 bor -9223372036854775808); _ -> (V1256 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1254))}, V1247}, V1254))} end), V1257 end(V1251)) end end end end end end)); 0 -> fun (V1258) -> ('un--invalid'(V1258)) end end end(E346, E347)); _ -> fun (V1259) -> ('un--invalid'(V1259)) end end end(E344, E345)); _ -> fun (V1260) -> ('un--invalid'(V1260)) end end end(E342, E343)); _ -> fun (V1261) -> ('un--invalid'(V1261)) end end end end(E340, E341)); _ -> case V4 of [E334 | E335] -> (fun (V1262, V1263) -> case V1263 of [E336 | E337] -> (fun (V1264, V1265) -> case V1265 of [E338 | E339] -> (fun (V1266, V1267) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1268) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1268)) end, fun (V1269) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1269)) end}, V1264, fun (V1270) -> begin (V1271 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1273 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1272) -> ('un--quote\x{27}'(V0, V1, V2, V1272)) end, V1267, []))), fun (V1274) -> begin (V1275 = (V1273(V1274))), case V1275 of {'Prelude.Types.Left', V1276} -> {'Prelude.Types.Left', V1276}; {'Prelude.Types.Right', V1277} -> (begin (V1280 = fun (V1278) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1271, {'Core.TT.Ref', V1271, {'Core.TT.DataCon', begin (V1279 = V3), case ((V1279 band 9223372036854775808) =/= 0) of 'true' -> (V1279 bor -9223372036854775808); _ -> (V1279 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1277))}, V1270}, V1277))} end), V1280 end(V1274)) end end end end end end)); 0 -> fun (V1281) -> ('un--invalid'(V1281)) end end end(E338, E339)); _ -> fun (V1282) -> ('un--invalid'(V1282)) end end end(E336, E337)); _ -> fun (V1283) -> ('un--invalid'(V1283)) end end end(E334, E335)); _ -> fun (V1284) -> ('un--invalid'(V1284)) end end end end(E332, E333)); _ -> case V4 of [E326 | E327] -> (fun (V1285, V1286) -> case V1286 of [E328 | E329] -> (fun (V1287, V1288) -> case V1288 of [E330 | E331] -> (fun (V1289, V1290) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1291) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1291)) end, fun (V1292) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1292)) end}, V1287, fun (V1293) -> begin (V1294 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1296 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1295) -> ('un--quote\x{27}'(V0, V1, V2, V1295)) end, V1290, []))), fun (V1297) -> begin (V1298 = (V1296(V1297))), case V1298 of {'Prelude.Types.Left', V1299} -> {'Prelude.Types.Left', V1299}; {'Prelude.Types.Right', V1300} -> (begin (V1303 = fun (V1301) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1294, {'Core.TT.Ref', V1294, {'Core.TT.DataCon', begin (V1302 = V3), case ((V1302 band 9223372036854775808) =/= 0) of 'true' -> (V1302 bor -9223372036854775808); _ -> (V1302 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1300))}, V1293}, V1300))} end), V1303 end(V1297)) end end end end end end)); 0 -> fun (V1304) -> ('un--invalid'(V1304)) end end end(E330, E331)); _ -> fun (V1305) -> ('un--invalid'(V1305)) end end end(E328, E329)); _ -> fun (V1306) -> ('un--invalid'(V1306)) end end end(E326, E327)); _ -> fun (V1307) -> ('un--invalid'(V1307)) end end end end(E324, E325)); _ -> case V4 of [E318 | E319] -> (fun (V1308, V1309) -> case V1309 of [E320 | E321] -> (fun (V1310, V1311) -> case V1311 of [E322 | E323] -> (fun (V1312, V1313) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1314) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1314)) end, fun (V1315) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1315)) end}, V1310, fun (V1316) -> begin (V1317 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1319 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1318) -> ('un--quote\x{27}'(V0, V1, V2, V1318)) end, V1313, []))), fun (V1320) -> begin (V1321 = (V1319(V1320))), case V1321 of {'Prelude.Types.Left', V1322} -> {'Prelude.Types.Left', V1322}; {'Prelude.Types.Right', V1323} -> (begin (V1326 = fun (V1324) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1317, {'Core.TT.Ref', V1317, {'Core.TT.DataCon', begin (V1325 = V3), case ((V1325 band 9223372036854775808) =/= 0) of 'true' -> (V1325 bor -9223372036854775808); _ -> (V1325 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1323))}, V1316}, V1323))} end), V1326 end(V1320)) end end end end end end)); 0 -> fun (V1327) -> ('un--invalid'(V1327)) end end end(E322, E323)); _ -> fun (V1328) -> ('un--invalid'(V1328)) end end end(E320, E321)); _ -> fun (V1329) -> ('un--invalid'(V1329)) end end end(E318, E319)); _ -> fun (V1330) -> ('un--invalid'(V1330)) end end end end(E316, E317)); _ -> case V4 of [E310 | E311] -> (fun (V1331, V1332) -> case V1332 of [E312 | E313] -> (fun (V1333, V1334) -> case V1334 of [E314 | E315] -> (fun (V1335, V1336) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1337) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1337)) end, fun (V1338) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1338)) end}, V1333, fun (V1339) -> begin (V1340 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1342 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1341) -> ('un--quote\x{27}'(V0, V1, V2, V1341)) end, V1336, []))), fun (V1343) -> begin (V1344 = (V1342(V1343))), case V1344 of {'Prelude.Types.Left', V1345} -> {'Prelude.Types.Left', V1345}; {'Prelude.Types.Right', V1346} -> (begin (V1349 = fun (V1347) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1340, {'Core.TT.Ref', V1340, {'Core.TT.DataCon', begin (V1348 = V3), case ((V1348 band 9223372036854775808) =/= 0) of 'true' -> (V1348 bor -9223372036854775808); _ -> (V1348 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1346))}, V1339}, V1346))} end), V1349 end(V1343)) end end end end end end)); 0 -> fun (V1350) -> ('un--invalid'(V1350)) end end end(E314, E315)); _ -> fun (V1351) -> ('un--invalid'(V1351)) end end end(E312, E313)); _ -> fun (V1352) -> ('un--invalid'(V1352)) end end end(E310, E311)); _ -> fun (V1353) -> ('un--invalid'(V1353)) end end end; -3 -> case V4 of [E370 | E371] -> (fun (V1354, V1355) -> case V1355 of [E378 | E379] -> (fun (V1356, V1357) -> case V1357 of [E386 | E387] -> (fun (V1358, V1359) -> case V1359 of [E394 | E395] -> (fun (V1360, V1361) -> case V1361 of [E402 | E403] -> (fun (V1362, V1363) -> case V1363 of [E410 | E411] -> (fun (V1364, V1365) -> case V1365 of [] -> begin (V1366 = ('un--quoteBinderName'(V1364))), begin (V1367 = ('un--quoteRigCount'(V1358))), begin (V1368 = ('un--quote\x{27}'(V0, V1, V2, V1362))), fun (V1369) -> begin (V1370 = (V1368(V1369))), case V1370 of {'Prelude.Types.Left', V1371} -> {'Prelude.Types.Left', V1371}; {'Prelude.Types.Right', V1372} -> (begin (V1384 = begin (V1373 = ('un--quotePiInfo'(V0, V1, V2, V1360))), fun (V1374) -> begin (V1375 = (V1373(V1374))), case V1375 of {'Prelude.Types.Left', V1376} -> {'Prelude.Types.Left', V1376}; {'Prelude.Types.Right', V1377} -> (begin (V1383 = ('un--quoteBinder'(V0, V1, V2, fun (V1378) -> fun (V1379) -> fun (V1380) -> fun (V1381) -> fun (V1382) -> {'Core.TT.Pi', V1379, V1380, V1381, V1382} end end end end end, V1356, V1367, V1377, V1372, V1366))), V1383 end(V1374)) end end end end), V1384 end(V1369)) end end end end end end; _ -> case V4 of [E412 | E413] -> (fun (V1385, V1386) -> case V1386 of [E414 | E415] -> (fun (V1387, V1388) -> case V1388 of [E416 | E417] -> (fun (V1389, V1390) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1391) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1391)) end, fun (V1392) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1392)) end}, V1387, fun (V1393) -> begin (V1394 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1396 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1395) -> ('un--quote\x{27}'(V0, V1, V2, V1395)) end, V1390, []))), fun (V1397) -> begin (V1398 = (V1396(V1397))), case V1398 of {'Prelude.Types.Left', V1399} -> {'Prelude.Types.Left', V1399}; {'Prelude.Types.Right', V1400} -> (begin (V1403 = fun (V1401) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1394, {'Core.TT.Ref', V1394, {'Core.TT.DataCon', begin (V1402 = V3), case ((V1402 band 9223372036854775808) =/= 0) of 'true' -> (V1402 bor -9223372036854775808); _ -> (V1402 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1400))}, V1393}, V1400))} end), V1403 end(V1397)) end end end end end end)); 0 -> fun (V1404) -> ('un--invalid'(V1404)) end end end(E416, E417)); _ -> fun (V1405) -> ('un--invalid'(V1405)) end end end(E414, E415)); _ -> fun (V1406) -> ('un--invalid'(V1406)) end end end(E412, E413)); _ -> fun (V1407) -> ('un--invalid'(V1407)) end end end end(E410, E411)); _ -> case V4 of [E404 | E405] -> (fun (V1408, V1409) -> case V1409 of [E406 | E407] -> (fun (V1410, V1411) -> case V1411 of [E408 | E409] -> (fun (V1412, V1413) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1414) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1414)) end, fun (V1415) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1415)) end}, V1410, fun (V1416) -> begin (V1417 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1419 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1418) -> ('un--quote\x{27}'(V0, V1, V2, V1418)) end, V1413, []))), fun (V1420) -> begin (V1421 = (V1419(V1420))), case V1421 of {'Prelude.Types.Left', V1422} -> {'Prelude.Types.Left', V1422}; {'Prelude.Types.Right', V1423} -> (begin (V1426 = fun (V1424) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1417, {'Core.TT.Ref', V1417, {'Core.TT.DataCon', begin (V1425 = V3), case ((V1425 band 9223372036854775808) =/= 0) of 'true' -> (V1425 bor -9223372036854775808); _ -> (V1425 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1423))}, V1416}, V1423))} end), V1426 end(V1420)) end end end end end end)); 0 -> fun (V1427) -> ('un--invalid'(V1427)) end end end(E408, E409)); _ -> fun (V1428) -> ('un--invalid'(V1428)) end end end(E406, E407)); _ -> fun (V1429) -> ('un--invalid'(V1429)) end end end(E404, E405)); _ -> fun (V1430) -> ('un--invalid'(V1430)) end end end end(E402, E403)); _ -> case V4 of [E396 | E397] -> (fun (V1431, V1432) -> case V1432 of [E398 | E399] -> (fun (V1433, V1434) -> case V1434 of [E400 | E401] -> (fun (V1435, V1436) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1437) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1437)) end, fun (V1438) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1438)) end}, V1433, fun (V1439) -> begin (V1440 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1442 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1441) -> ('un--quote\x{27}'(V0, V1, V2, V1441)) end, V1436, []))), fun (V1443) -> begin (V1444 = (V1442(V1443))), case V1444 of {'Prelude.Types.Left', V1445} -> {'Prelude.Types.Left', V1445}; {'Prelude.Types.Right', V1446} -> (begin (V1449 = fun (V1447) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1440, {'Core.TT.Ref', V1440, {'Core.TT.DataCon', begin (V1448 = V3), case ((V1448 band 9223372036854775808) =/= 0) of 'true' -> (V1448 bor -9223372036854775808); _ -> (V1448 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1446))}, V1439}, V1446))} end), V1449 end(V1443)) end end end end end end)); 0 -> fun (V1450) -> ('un--invalid'(V1450)) end end end(E400, E401)); _ -> fun (V1451) -> ('un--invalid'(V1451)) end end end(E398, E399)); _ -> fun (V1452) -> ('un--invalid'(V1452)) end end end(E396, E397)); _ -> fun (V1453) -> ('un--invalid'(V1453)) end end end end(E394, E395)); _ -> case V4 of [E388 | E389] -> (fun (V1454, V1455) -> case V1455 of [E390 | E391] -> (fun (V1456, V1457) -> case V1457 of [E392 | E393] -> (fun (V1458, V1459) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1460) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1460)) end, fun (V1461) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1461)) end}, V1456, fun (V1462) -> begin (V1463 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1465 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1464) -> ('un--quote\x{27}'(V0, V1, V2, V1464)) end, V1459, []))), fun (V1466) -> begin (V1467 = (V1465(V1466))), case V1467 of {'Prelude.Types.Left', V1468} -> {'Prelude.Types.Left', V1468}; {'Prelude.Types.Right', V1469} -> (begin (V1472 = fun (V1470) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1463, {'Core.TT.Ref', V1463, {'Core.TT.DataCon', begin (V1471 = V3), case ((V1471 band 9223372036854775808) =/= 0) of 'true' -> (V1471 bor -9223372036854775808); _ -> (V1471 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1469))}, V1462}, V1469))} end), V1472 end(V1466)) end end end end end end)); 0 -> fun (V1473) -> ('un--invalid'(V1473)) end end end(E392, E393)); _ -> fun (V1474) -> ('un--invalid'(V1474)) end end end(E390, E391)); _ -> fun (V1475) -> ('un--invalid'(V1475)) end end end(E388, E389)); _ -> fun (V1476) -> ('un--invalid'(V1476)) end end end end(E386, E387)); _ -> case V4 of [E380 | E381] -> (fun (V1477, V1478) -> case V1478 of [E382 | E383] -> (fun (V1479, V1480) -> case V1480 of [E384 | E385] -> (fun (V1481, V1482) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1483) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1483)) end, fun (V1484) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1484)) end}, V1479, fun (V1485) -> begin (V1486 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1488 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1487) -> ('un--quote\x{27}'(V0, V1, V2, V1487)) end, V1482, []))), fun (V1489) -> begin (V1490 = (V1488(V1489))), case V1490 of {'Prelude.Types.Left', V1491} -> {'Prelude.Types.Left', V1491}; {'Prelude.Types.Right', V1492} -> (begin (V1495 = fun (V1493) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1486, {'Core.TT.Ref', V1486, {'Core.TT.DataCon', begin (V1494 = V3), case ((V1494 band 9223372036854775808) =/= 0) of 'true' -> (V1494 bor -9223372036854775808); _ -> (V1494 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1492))}, V1485}, V1492))} end), V1495 end(V1489)) end end end end end end)); 0 -> fun (V1496) -> ('un--invalid'(V1496)) end end end(E384, E385)); _ -> fun (V1497) -> ('un--invalid'(V1497)) end end end(E382, E383)); _ -> fun (V1498) -> ('un--invalid'(V1498)) end end end(E380, E381)); _ -> fun (V1499) -> ('un--invalid'(V1499)) end end end end(E378, E379)); _ -> case V4 of [E372 | E373] -> (fun (V1500, V1501) -> case V1501 of [E374 | E375] -> (fun (V1502, V1503) -> case V1503 of [E376 | E377] -> (fun (V1504, V1505) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1506) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1506)) end, fun (V1507) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1507)) end}, V1502, fun (V1508) -> begin (V1509 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1511 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1510) -> ('un--quote\x{27}'(V0, V1, V2, V1510)) end, V1505, []))), fun (V1512) -> begin (V1513 = (V1511(V1512))), case V1513 of {'Prelude.Types.Left', V1514} -> {'Prelude.Types.Left', V1514}; {'Prelude.Types.Right', V1515} -> (begin (V1518 = fun (V1516) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1509, {'Core.TT.Ref', V1509, {'Core.TT.DataCon', begin (V1517 = V3), case ((V1517 band 9223372036854775808) =/= 0) of 'true' -> (V1517 bor -9223372036854775808); _ -> (V1517 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1515))}, V1508}, V1515))} end), V1518 end(V1512)) end end end end end end)); 0 -> fun (V1519) -> ('un--invalid'(V1519)) end end end(E376, E377)); _ -> fun (V1520) -> ('un--invalid'(V1520)) end end end(E374, E375)); _ -> fun (V1521) -> ('un--invalid'(V1521)) end end end(E372, E373)); _ -> fun (V1522) -> ('un--invalid'(V1522)) end end end end(E370, E371)); _ -> case V4 of [E364 | E365] -> (fun (V1523, V1524) -> case V1524 of [E366 | E367] -> (fun (V1525, V1526) -> case V1526 of [E368 | E369] -> (fun (V1527, V1528) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1529) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1529)) end, fun (V1530) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1530)) end}, V1525, fun (V1531) -> begin (V1532 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1534 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1533) -> ('un--quote\x{27}'(V0, V1, V2, V1533)) end, V1528, []))), fun (V1535) -> begin (V1536 = (V1534(V1535))), case V1536 of {'Prelude.Types.Left', V1537} -> {'Prelude.Types.Left', V1537}; {'Prelude.Types.Right', V1538} -> (begin (V1541 = fun (V1539) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1532, {'Core.TT.Ref', V1532, {'Core.TT.DataCon', begin (V1540 = V3), case ((V1540 band 9223372036854775808) =/= 0) of 'true' -> (V1540 bor -9223372036854775808); _ -> (V1540 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1538))}, V1531}, V1538))} end), V1541 end(V1535)) end end end end end end)); 0 -> fun (V1542) -> ('un--invalid'(V1542)) end end end(E368, E369)); _ -> fun (V1543) -> ('un--invalid'(V1543)) end end end(E366, E367)); _ -> fun (V1544) -> ('un--invalid'(V1544)) end end end(E364, E365)); _ -> fun (V1545) -> ('un--invalid'(V1545)) end end end; -12 -> case V4 of [E424 | E425] -> (fun (V1546, V1547) -> case V1547 of [E432 | E433] -> (fun (V1548, V1549) -> case V1549 of [E440 | E441] -> (fun (V1550, V1551) -> case V1551 of [E448 | E449] -> (fun (V1552, V1553) -> case V1553 of [E456 | E457] -> (fun (V1554, V1555) -> case V1555 of [E464 | E465] -> (fun (V1556, V1557) -> case V1557 of [] -> begin (V1558 = ('un--quoteBinderName'(V1556))), begin (V1559 = ('un--quoteRigCount'(V1550))), begin (V1560 = ('un--quote\x{27}'(V0, V1, V2, V1554))), fun (V1561) -> begin (V1562 = (V1560(V1561))), case V1562 of {'Prelude.Types.Left', V1563} -> {'Prelude.Types.Left', V1563}; {'Prelude.Types.Right', V1564} -> (begin (V1576 = begin (V1565 = ('un--quotePiInfo'(V0, V1, V2, V1552))), fun (V1566) -> begin (V1567 = (V1565(V1566))), case V1567 of {'Prelude.Types.Left', V1568} -> {'Prelude.Types.Left', V1568}; {'Prelude.Types.Right', V1569} -> (begin (V1575 = ('un--quoteBinder'(V0, V1, V2, fun (V1570) -> fun (V1571) -> fun (V1572) -> fun (V1573) -> fun (V1574) -> {'Core.TT.PVar', V1571, V1572, V1573, V1574} end end end end end, V1548, V1559, V1569, V1564, V1558))), V1575 end(V1566)) end end end end), V1576 end(V1561)) end end end end end end; _ -> case V4 of [E466 | E467] -> (fun (V1577, V1578) -> case V1578 of [E468 | E469] -> (fun (V1579, V1580) -> case V1580 of [E470 | E471] -> (fun (V1581, V1582) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1583) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1583)) end, fun (V1584) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1584)) end}, V1579, fun (V1585) -> begin (V1586 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1588 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1587) -> ('un--quote\x{27}'(V0, V1, V2, V1587)) end, V1582, []))), fun (V1589) -> begin (V1590 = (V1588(V1589))), case V1590 of {'Prelude.Types.Left', V1591} -> {'Prelude.Types.Left', V1591}; {'Prelude.Types.Right', V1592} -> (begin (V1595 = fun (V1593) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1586, {'Core.TT.Ref', V1586, {'Core.TT.DataCon', begin (V1594 = V3), case ((V1594 band 9223372036854775808) =/= 0) of 'true' -> (V1594 bor -9223372036854775808); _ -> (V1594 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1592))}, V1585}, V1592))} end), V1595 end(V1589)) end end end end end end)); 0 -> fun (V1596) -> ('un--invalid'(V1596)) end end end(E470, E471)); _ -> fun (V1597) -> ('un--invalid'(V1597)) end end end(E468, E469)); _ -> fun (V1598) -> ('un--invalid'(V1598)) end end end(E466, E467)); _ -> fun (V1599) -> ('un--invalid'(V1599)) end end end end(E464, E465)); _ -> case V4 of [E458 | E459] -> (fun (V1600, V1601) -> case V1601 of [E460 | E461] -> (fun (V1602, V1603) -> case V1603 of [E462 | E463] -> (fun (V1604, V1605) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1606) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1606)) end, fun (V1607) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1607)) end}, V1602, fun (V1608) -> begin (V1609 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1611 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1610) -> ('un--quote\x{27}'(V0, V1, V2, V1610)) end, V1605, []))), fun (V1612) -> begin (V1613 = (V1611(V1612))), case V1613 of {'Prelude.Types.Left', V1614} -> {'Prelude.Types.Left', V1614}; {'Prelude.Types.Right', V1615} -> (begin (V1618 = fun (V1616) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1609, {'Core.TT.Ref', V1609, {'Core.TT.DataCon', begin (V1617 = V3), case ((V1617 band 9223372036854775808) =/= 0) of 'true' -> (V1617 bor -9223372036854775808); _ -> (V1617 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1615))}, V1608}, V1615))} end), V1618 end(V1612)) end end end end end end)); 0 -> fun (V1619) -> ('un--invalid'(V1619)) end end end(E462, E463)); _ -> fun (V1620) -> ('un--invalid'(V1620)) end end end(E460, E461)); _ -> fun (V1621) -> ('un--invalid'(V1621)) end end end(E458, E459)); _ -> fun (V1622) -> ('un--invalid'(V1622)) end end end end(E456, E457)); _ -> case V4 of [E450 | E451] -> (fun (V1623, V1624) -> case V1624 of [E452 | E453] -> (fun (V1625, V1626) -> case V1626 of [E454 | E455] -> (fun (V1627, V1628) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1629) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1629)) end, fun (V1630) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1630)) end}, V1625, fun (V1631) -> begin (V1632 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1634 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1633) -> ('un--quote\x{27}'(V0, V1, V2, V1633)) end, V1628, []))), fun (V1635) -> begin (V1636 = (V1634(V1635))), case V1636 of {'Prelude.Types.Left', V1637} -> {'Prelude.Types.Left', V1637}; {'Prelude.Types.Right', V1638} -> (begin (V1641 = fun (V1639) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1632, {'Core.TT.Ref', V1632, {'Core.TT.DataCon', begin (V1640 = V3), case ((V1640 band 9223372036854775808) =/= 0) of 'true' -> (V1640 bor -9223372036854775808); _ -> (V1640 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1638))}, V1631}, V1638))} end), V1641 end(V1635)) end end end end end end)); 0 -> fun (V1642) -> ('un--invalid'(V1642)) end end end(E454, E455)); _ -> fun (V1643) -> ('un--invalid'(V1643)) end end end(E452, E453)); _ -> fun (V1644) -> ('un--invalid'(V1644)) end end end(E450, E451)); _ -> fun (V1645) -> ('un--invalid'(V1645)) end end end end(E448, E449)); _ -> case V4 of [E442 | E443] -> (fun (V1646, V1647) -> case V1647 of [E444 | E445] -> (fun (V1648, V1649) -> case V1649 of [E446 | E447] -> (fun (V1650, V1651) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1652) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1652)) end, fun (V1653) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1653)) end}, V1648, fun (V1654) -> begin (V1655 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1657 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1656) -> ('un--quote\x{27}'(V0, V1, V2, V1656)) end, V1651, []))), fun (V1658) -> begin (V1659 = (V1657(V1658))), case V1659 of {'Prelude.Types.Left', V1660} -> {'Prelude.Types.Left', V1660}; {'Prelude.Types.Right', V1661} -> (begin (V1664 = fun (V1662) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1655, {'Core.TT.Ref', V1655, {'Core.TT.DataCon', begin (V1663 = V3), case ((V1663 band 9223372036854775808) =/= 0) of 'true' -> (V1663 bor -9223372036854775808); _ -> (V1663 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1661))}, V1654}, V1661))} end), V1664 end(V1658)) end end end end end end)); 0 -> fun (V1665) -> ('un--invalid'(V1665)) end end end(E446, E447)); _ -> fun (V1666) -> ('un--invalid'(V1666)) end end end(E444, E445)); _ -> fun (V1667) -> ('un--invalid'(V1667)) end end end(E442, E443)); _ -> fun (V1668) -> ('un--invalid'(V1668)) end end end end(E440, E441)); _ -> case V4 of [E434 | E435] -> (fun (V1669, V1670) -> case V1670 of [E436 | E437] -> (fun (V1671, V1672) -> case V1672 of [E438 | E439] -> (fun (V1673, V1674) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1675) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1675)) end, fun (V1676) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1676)) end}, V1671, fun (V1677) -> begin (V1678 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1680 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1679) -> ('un--quote\x{27}'(V0, V1, V2, V1679)) end, V1674, []))), fun (V1681) -> begin (V1682 = (V1680(V1681))), case V1682 of {'Prelude.Types.Left', V1683} -> {'Prelude.Types.Left', V1683}; {'Prelude.Types.Right', V1684} -> (begin (V1687 = fun (V1685) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1678, {'Core.TT.Ref', V1678, {'Core.TT.DataCon', begin (V1686 = V3), case ((V1686 band 9223372036854775808) =/= 0) of 'true' -> (V1686 bor -9223372036854775808); _ -> (V1686 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1684))}, V1677}, V1684))} end), V1687 end(V1681)) end end end end end end)); 0 -> fun (V1688) -> ('un--invalid'(V1688)) end end end(E438, E439)); _ -> fun (V1689) -> ('un--invalid'(V1689)) end end end(E436, E437)); _ -> fun (V1690) -> ('un--invalid'(V1690)) end end end(E434, E435)); _ -> fun (V1691) -> ('un--invalid'(V1691)) end end end end(E432, E433)); _ -> case V4 of [E426 | E427] -> (fun (V1692, V1693) -> case V1693 of [E428 | E429] -> (fun (V1694, V1695) -> case V1695 of [E430 | E431] -> (fun (V1696, V1697) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1698) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1698)) end, fun (V1699) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1699)) end}, V1694, fun (V1700) -> begin (V1701 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1703 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1702) -> ('un--quote\x{27}'(V0, V1, V2, V1702)) end, V1697, []))), fun (V1704) -> begin (V1705 = (V1703(V1704))), case V1705 of {'Prelude.Types.Left', V1706} -> {'Prelude.Types.Left', V1706}; {'Prelude.Types.Right', V1707} -> (begin (V1710 = fun (V1708) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1701, {'Core.TT.Ref', V1701, {'Core.TT.DataCon', begin (V1709 = V3), case ((V1709 band 9223372036854775808) =/= 0) of 'true' -> (V1709 bor -9223372036854775808); _ -> (V1709 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1707))}, V1700}, V1707))} end), V1710 end(V1704)) end end end end end end)); 0 -> fun (V1711) -> ('un--invalid'(V1711)) end end end(E430, E431)); _ -> fun (V1712) -> ('un--invalid'(V1712)) end end end(E428, E429)); _ -> fun (V1713) -> ('un--invalid'(V1713)) end end end(E426, E427)); _ -> fun (V1714) -> ('un--invalid'(V1714)) end end end end(E424, E425)); _ -> case V4 of [E418 | E419] -> (fun (V1715, V1716) -> case V1716 of [E420 | E421] -> (fun (V1717, V1718) -> case V1718 of [E422 | E423] -> (fun (V1719, V1720) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1721) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1721)) end, fun (V1722) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1722)) end}, V1717, fun (V1723) -> begin (V1724 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1726 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1725) -> ('un--quote\x{27}'(V0, V1, V2, V1725)) end, V1720, []))), fun (V1727) -> begin (V1728 = (V1726(V1727))), case V1728 of {'Prelude.Types.Left', V1729} -> {'Prelude.Types.Left', V1729}; {'Prelude.Types.Right', V1730} -> (begin (V1733 = fun (V1731) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1724, {'Core.TT.Ref', V1724, {'Core.TT.DataCon', begin (V1732 = V3), case ((V1732 band 9223372036854775808) =/= 0) of 'true' -> (V1732 bor -9223372036854775808); _ -> (V1732 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1730))}, V1723}, V1730))} end), V1733 end(V1727)) end end end end end end)); 0 -> fun (V1734) -> ('un--invalid'(V1734)) end end end(E422, E423)); _ -> fun (V1735) -> ('un--invalid'(V1735)) end end end(E420, E421)); _ -> fun (V1736) -> ('un--invalid'(V1736)) end end end(E418, E419)); _ -> fun (V1737) -> ('un--invalid'(V1737)) end end end; -13 -> case V4 of [E478 | E479] -> (fun (V1738, V1739) -> case V1739 of [E486 | E487] -> (fun (V1740, V1741) -> case V1741 of [E494 | E495] -> (fun (V1742, V1743) -> case V1743 of [E502 | E503] -> (fun (V1744, V1745) -> case V1745 of [E510 | E511] -> (fun (V1746, V1747) -> case V1747 of [] -> begin (V1748 = ('un--quoteBinderName'(V1746))), begin (V1749 = ('un--quoteRigCount'(V1742))), begin (V1750 = ('un--quote\x{27}'(V0, V1, V2, V1744))), fun (V1751) -> begin (V1752 = (V1750(V1751))), case V1752 of {'Prelude.Types.Left', V1753} -> {'Prelude.Types.Left', V1753}; {'Prelude.Types.Right', V1754} -> (begin (V1760 = ('un--quoteBinder'(V0, V1, V2, fun (V1755) -> fun (V1756) -> fun (V1757) -> fun (V1758) -> fun (V1759) -> {'Core.TT.PVTy', V1756, V1757, V1759} end end end end end, V1740, V1749, {'Core.TT.Explicit'}, V1754, V1748))), V1760 end(V1751)) end end end end end end; _ -> case V4 of [E512 | E513] -> (fun (V1761, V1762) -> case V1762 of [E514 | E515] -> (fun (V1763, V1764) -> case V1764 of [E516 | E517] -> (fun (V1765, V1766) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1767) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1767)) end, fun (V1768) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1768)) end}, V1763, fun (V1769) -> begin (V1770 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1772 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1771) -> ('un--quote\x{27}'(V0, V1, V2, V1771)) end, V1766, []))), fun (V1773) -> begin (V1774 = (V1772(V1773))), case V1774 of {'Prelude.Types.Left', V1775} -> {'Prelude.Types.Left', V1775}; {'Prelude.Types.Right', V1776} -> (begin (V1779 = fun (V1777) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1770, {'Core.TT.Ref', V1770, {'Core.TT.DataCon', begin (V1778 = V3), case ((V1778 band 9223372036854775808) =/= 0) of 'true' -> (V1778 bor -9223372036854775808); _ -> (V1778 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1776))}, V1769}, V1776))} end), V1779 end(V1773)) end end end end end end)); 0 -> fun (V1780) -> ('un--invalid'(V1780)) end end end(E516, E517)); _ -> fun (V1781) -> ('un--invalid'(V1781)) end end end(E514, E515)); _ -> fun (V1782) -> ('un--invalid'(V1782)) end end end(E512, E513)); _ -> fun (V1783) -> ('un--invalid'(V1783)) end end end end(E510, E511)); _ -> case V4 of [E504 | E505] -> (fun (V1784, V1785) -> case V1785 of [E506 | E507] -> (fun (V1786, V1787) -> case V1787 of [E508 | E509] -> (fun (V1788, V1789) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1790) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1790)) end, fun (V1791) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1791)) end}, V1786, fun (V1792) -> begin (V1793 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1795 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1794) -> ('un--quote\x{27}'(V0, V1, V2, V1794)) end, V1789, []))), fun (V1796) -> begin (V1797 = (V1795(V1796))), case V1797 of {'Prelude.Types.Left', V1798} -> {'Prelude.Types.Left', V1798}; {'Prelude.Types.Right', V1799} -> (begin (V1802 = fun (V1800) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1793, {'Core.TT.Ref', V1793, {'Core.TT.DataCon', begin (V1801 = V3), case ((V1801 band 9223372036854775808) =/= 0) of 'true' -> (V1801 bor -9223372036854775808); _ -> (V1801 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1799))}, V1792}, V1799))} end), V1802 end(V1796)) end end end end end end)); 0 -> fun (V1803) -> ('un--invalid'(V1803)) end end end(E508, E509)); _ -> fun (V1804) -> ('un--invalid'(V1804)) end end end(E506, E507)); _ -> fun (V1805) -> ('un--invalid'(V1805)) end end end(E504, E505)); _ -> fun (V1806) -> ('un--invalid'(V1806)) end end end end(E502, E503)); _ -> case V4 of [E496 | E497] -> (fun (V1807, V1808) -> case V1808 of [E498 | E499] -> (fun (V1809, V1810) -> case V1810 of [E500 | E501] -> (fun (V1811, V1812) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1813) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1813)) end, fun (V1814) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1814)) end}, V1809, fun (V1815) -> begin (V1816 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1818 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1817) -> ('un--quote\x{27}'(V0, V1, V2, V1817)) end, V1812, []))), fun (V1819) -> begin (V1820 = (V1818(V1819))), case V1820 of {'Prelude.Types.Left', V1821} -> {'Prelude.Types.Left', V1821}; {'Prelude.Types.Right', V1822} -> (begin (V1825 = fun (V1823) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1816, {'Core.TT.Ref', V1816, {'Core.TT.DataCon', begin (V1824 = V3), case ((V1824 band 9223372036854775808) =/= 0) of 'true' -> (V1824 bor -9223372036854775808); _ -> (V1824 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1822))}, V1815}, V1822))} end), V1825 end(V1819)) end end end end end end)); 0 -> fun (V1826) -> ('un--invalid'(V1826)) end end end(E500, E501)); _ -> fun (V1827) -> ('un--invalid'(V1827)) end end end(E498, E499)); _ -> fun (V1828) -> ('un--invalid'(V1828)) end end end(E496, E497)); _ -> fun (V1829) -> ('un--invalid'(V1829)) end end end end(E494, E495)); _ -> case V4 of [E488 | E489] -> (fun (V1830, V1831) -> case V1831 of [E490 | E491] -> (fun (V1832, V1833) -> case V1833 of [E492 | E493] -> (fun (V1834, V1835) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1836) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1836)) end, fun (V1837) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1837)) end}, V1832, fun (V1838) -> begin (V1839 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1841 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1840) -> ('un--quote\x{27}'(V0, V1, V2, V1840)) end, V1835, []))), fun (V1842) -> begin (V1843 = (V1841(V1842))), case V1843 of {'Prelude.Types.Left', V1844} -> {'Prelude.Types.Left', V1844}; {'Prelude.Types.Right', V1845} -> (begin (V1848 = fun (V1846) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1839, {'Core.TT.Ref', V1839, {'Core.TT.DataCon', begin (V1847 = V3), case ((V1847 band 9223372036854775808) =/= 0) of 'true' -> (V1847 bor -9223372036854775808); _ -> (V1847 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1845))}, V1838}, V1845))} end), V1848 end(V1842)) end end end end end end)); 0 -> fun (V1849) -> ('un--invalid'(V1849)) end end end(E492, E493)); _ -> fun (V1850) -> ('un--invalid'(V1850)) end end end(E490, E491)); _ -> fun (V1851) -> ('un--invalid'(V1851)) end end end(E488, E489)); _ -> fun (V1852) -> ('un--invalid'(V1852)) end end end end(E486, E487)); _ -> case V4 of [E480 | E481] -> (fun (V1853, V1854) -> case V1854 of [E482 | E483] -> (fun (V1855, V1856) -> case V1856 of [E484 | E485] -> (fun (V1857, V1858) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1859) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1859)) end, fun (V1860) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1860)) end}, V1855, fun (V1861) -> begin (V1862 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1864 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1863) -> ('un--quote\x{27}'(V0, V1, V2, V1863)) end, V1858, []))), fun (V1865) -> begin (V1866 = (V1864(V1865))), case V1866 of {'Prelude.Types.Left', V1867} -> {'Prelude.Types.Left', V1867}; {'Prelude.Types.Right', V1868} -> (begin (V1871 = fun (V1869) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1862, {'Core.TT.Ref', V1862, {'Core.TT.DataCon', begin (V1870 = V3), case ((V1870 band 9223372036854775808) =/= 0) of 'true' -> (V1870 bor -9223372036854775808); _ -> (V1870 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1868))}, V1861}, V1868))} end), V1871 end(V1865)) end end end end end end)); 0 -> fun (V1872) -> ('un--invalid'(V1872)) end end end(E484, E485)); _ -> fun (V1873) -> ('un--invalid'(V1873)) end end end(E482, E483)); _ -> fun (V1874) -> ('un--invalid'(V1874)) end end end(E480, E481)); _ -> fun (V1875) -> ('un--invalid'(V1875)) end end end end(E478, E479)); _ -> case V4 of [E472 | E473] -> (fun (V1876, V1877) -> case V1877 of [E474 | E475] -> (fun (V1878, V1879) -> case V1879 of [E476 | E477] -> (fun (V1880, V1881) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1882) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1882)) end, fun (V1883) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1883)) end}, V1878, fun (V1884) -> begin (V1885 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1887 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1886) -> ('un--quote\x{27}'(V0, V1, V2, V1886)) end, V1881, []))), fun (V1888) -> begin (V1889 = (V1887(V1888))), case V1889 of {'Prelude.Types.Left', V1890} -> {'Prelude.Types.Left', V1890}; {'Prelude.Types.Right', V1891} -> (begin (V1894 = fun (V1892) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1885, {'Core.TT.Ref', V1885, {'Core.TT.DataCon', begin (V1893 = V3), case ((V1893 band 9223372036854775808) =/= 0) of 'true' -> (V1893 bor -9223372036854775808); _ -> (V1893 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1891))}, V1884}, V1891))} end), V1894 end(V1888)) end end end end end end)); 0 -> fun (V1895) -> ('un--invalid'(V1895)) end end end(E476, E477)); _ -> fun (V1896) -> ('un--invalid'(V1896)) end end end(E474, E475)); _ -> fun (V1897) -> ('un--invalid'(V1897)) end end end(E472, E473)); _ -> fun (V1898) -> ('un--invalid'(V1898)) end end end; -14 -> case V4 of [E524 | E525] -> (fun (V1899, V1900) -> case V1900 of [E532 | E533] -> (fun (V1901, V1902) -> case V1902 of [E540 | E541] -> (fun (V1903, V1904) -> case V1904 of [E548 | E549] -> (fun (V1905, V1906) -> case V1906 of [E556 | E557] -> (fun (V1907, V1908) -> case V1908 of [E564 | E565] -> (fun (V1909, V1910) -> case V1910 of [] -> begin (V1911 = ('un--quoteBinderName'(V1909))), begin (V1912 = ('un--quoteRigCount'(V1903))), begin (V1913 = ('un--quote\x{27}'(V0, V1, V2, V1907))), fun (V1914) -> begin (V1915 = (V1913(V1914))), case V1915 of {'Prelude.Types.Left', V1916} -> {'Prelude.Types.Left', V1916}; {'Prelude.Types.Right', V1917} -> (begin (V1924 = begin (V1918 = ('un--quote\x{27}'(V0, V1, V2, V1905))), fun (V1919) -> begin (V1920 = (V1918(V1919))), case V1920 of {'Prelude.Types.Left', V1921} -> {'Prelude.Types.Left', V1921}; {'Prelude.Types.Right', V1922} -> (begin (V1923 = ('un--quotePLet'(V0, V1, V2, V1901, V1912, V1922, V1917, V1911))), V1923 end(V1919)) end end end end), V1924 end(V1914)) end end end end end end; _ -> case V4 of [E566 | E567] -> (fun (V1925, V1926) -> case V1926 of [E568 | E569] -> (fun (V1927, V1928) -> case V1928 of [E570 | E571] -> (fun (V1929, V1930) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1931) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1931)) end, fun (V1932) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1932)) end}, V1927, fun (V1933) -> begin (V1934 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1936 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1935) -> ('un--quote\x{27}'(V0, V1, V2, V1935)) end, V1930, []))), fun (V1937) -> begin (V1938 = (V1936(V1937))), case V1938 of {'Prelude.Types.Left', V1939} -> {'Prelude.Types.Left', V1939}; {'Prelude.Types.Right', V1940} -> (begin (V1943 = fun (V1941) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1934, {'Core.TT.Ref', V1934, {'Core.TT.DataCon', begin (V1942 = V3), case ((V1942 band 9223372036854775808) =/= 0) of 'true' -> (V1942 bor -9223372036854775808); _ -> (V1942 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1940))}, V1933}, V1940))} end), V1943 end(V1937)) end end end end end end)); 0 -> fun (V1944) -> ('un--invalid'(V1944)) end end end(E570, E571)); _ -> fun (V1945) -> ('un--invalid'(V1945)) end end end(E568, E569)); _ -> fun (V1946) -> ('un--invalid'(V1946)) end end end(E566, E567)); _ -> fun (V1947) -> ('un--invalid'(V1947)) end end end end(E564, E565)); _ -> case V4 of [E558 | E559] -> (fun (V1948, V1949) -> case V1949 of [E560 | E561] -> (fun (V1950, V1951) -> case V1951 of [E562 | E563] -> (fun (V1952, V1953) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1954) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1954)) end, fun (V1955) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1955)) end}, V1950, fun (V1956) -> begin (V1957 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1959 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1958) -> ('un--quote\x{27}'(V0, V1, V2, V1958)) end, V1953, []))), fun (V1960) -> begin (V1961 = (V1959(V1960))), case V1961 of {'Prelude.Types.Left', V1962} -> {'Prelude.Types.Left', V1962}; {'Prelude.Types.Right', V1963} -> (begin (V1966 = fun (V1964) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1957, {'Core.TT.Ref', V1957, {'Core.TT.DataCon', begin (V1965 = V3), case ((V1965 band 9223372036854775808) =/= 0) of 'true' -> (V1965 bor -9223372036854775808); _ -> (V1965 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1963))}, V1956}, V1963))} end), V1966 end(V1960)) end end end end end end)); 0 -> fun (V1967) -> ('un--invalid'(V1967)) end end end(E562, E563)); _ -> fun (V1968) -> ('un--invalid'(V1968)) end end end(E560, E561)); _ -> fun (V1969) -> ('un--invalid'(V1969)) end end end(E558, E559)); _ -> fun (V1970) -> ('un--invalid'(V1970)) end end end end(E556, E557)); _ -> case V4 of [E550 | E551] -> (fun (V1971, V1972) -> case V1972 of [E552 | E553] -> (fun (V1973, V1974) -> case V1974 of [E554 | E555] -> (fun (V1975, V1976) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V1977) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V1977)) end, fun (V1978) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V1978)) end}, V1973, fun (V1979) -> begin (V1980 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V1982 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1981) -> ('un--quote\x{27}'(V0, V1, V2, V1981)) end, V1976, []))), fun (V1983) -> begin (V1984 = (V1982(V1983))), case V1984 of {'Prelude.Types.Left', V1985} -> {'Prelude.Types.Left', V1985}; {'Prelude.Types.Right', V1986} -> (begin (V1989 = fun (V1987) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V1980, {'Core.TT.Ref', V1980, {'Core.TT.DataCon', begin (V1988 = V3), case ((V1988 band 9223372036854775808) =/= 0) of 'true' -> (V1988 bor -9223372036854775808); _ -> (V1988 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V1986))}, V1979}, V1986))} end), V1989 end(V1983)) end end end end end end)); 0 -> fun (V1990) -> ('un--invalid'(V1990)) end end end(E554, E555)); _ -> fun (V1991) -> ('un--invalid'(V1991)) end end end(E552, E553)); _ -> fun (V1992) -> ('un--invalid'(V1992)) end end end(E550, E551)); _ -> fun (V1993) -> ('un--invalid'(V1993)) end end end end(E548, E549)); _ -> case V4 of [E542 | E543] -> (fun (V1994, V1995) -> case V1995 of [E544 | E545] -> (fun (V1996, V1997) -> case V1997 of [E546 | E547] -> (fun (V1998, V1999) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2000) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2000)) end, fun (V2001) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2001)) end}, V1996, fun (V2002) -> begin (V2003 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2005 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2004) -> ('un--quote\x{27}'(V0, V1, V2, V2004)) end, V1999, []))), fun (V2006) -> begin (V2007 = (V2005(V2006))), case V2007 of {'Prelude.Types.Left', V2008} -> {'Prelude.Types.Left', V2008}; {'Prelude.Types.Right', V2009} -> (begin (V2012 = fun (V2010) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2003, {'Core.TT.Ref', V2003, {'Core.TT.DataCon', begin (V2011 = V3), case ((V2011 band 9223372036854775808) =/= 0) of 'true' -> (V2011 bor -9223372036854775808); _ -> (V2011 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2009))}, V2002}, V2009))} end), V2012 end(V2006)) end end end end end end)); 0 -> fun (V2013) -> ('un--invalid'(V2013)) end end end(E546, E547)); _ -> fun (V2014) -> ('un--invalid'(V2014)) end end end(E544, E545)); _ -> fun (V2015) -> ('un--invalid'(V2015)) end end end(E542, E543)); _ -> fun (V2016) -> ('un--invalid'(V2016)) end end end end(E540, E541)); _ -> case V4 of [E534 | E535] -> (fun (V2017, V2018) -> case V2018 of [E536 | E537] -> (fun (V2019, V2020) -> case V2020 of [E538 | E539] -> (fun (V2021, V2022) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2023) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2023)) end, fun (V2024) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2024)) end}, V2019, fun (V2025) -> begin (V2026 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2028 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2027) -> ('un--quote\x{27}'(V0, V1, V2, V2027)) end, V2022, []))), fun (V2029) -> begin (V2030 = (V2028(V2029))), case V2030 of {'Prelude.Types.Left', V2031} -> {'Prelude.Types.Left', V2031}; {'Prelude.Types.Right', V2032} -> (begin (V2035 = fun (V2033) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2026, {'Core.TT.Ref', V2026, {'Core.TT.DataCon', begin (V2034 = V3), case ((V2034 band 9223372036854775808) =/= 0) of 'true' -> (V2034 bor -9223372036854775808); _ -> (V2034 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2032))}, V2025}, V2032))} end), V2035 end(V2029)) end end end end end end)); 0 -> fun (V2036) -> ('un--invalid'(V2036)) end end end(E538, E539)); _ -> fun (V2037) -> ('un--invalid'(V2037)) end end end(E536, E537)); _ -> fun (V2038) -> ('un--invalid'(V2038)) end end end(E534, E535)); _ -> fun (V2039) -> ('un--invalid'(V2039)) end end end end(E532, E533)); _ -> case V4 of [E526 | E527] -> (fun (V2040, V2041) -> case V2041 of [E528 | E529] -> (fun (V2042, V2043) -> case V2043 of [E530 | E531] -> (fun (V2044, V2045) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2046) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2046)) end, fun (V2047) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2047)) end}, V2042, fun (V2048) -> begin (V2049 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2051 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2050) -> ('un--quote\x{27}'(V0, V1, V2, V2050)) end, V2045, []))), fun (V2052) -> begin (V2053 = (V2051(V2052))), case V2053 of {'Prelude.Types.Left', V2054} -> {'Prelude.Types.Left', V2054}; {'Prelude.Types.Right', V2055} -> (begin (V2058 = fun (V2056) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2049, {'Core.TT.Ref', V2049, {'Core.TT.DataCon', begin (V2057 = V3), case ((V2057 band 9223372036854775808) =/= 0) of 'true' -> (V2057 bor -9223372036854775808); _ -> (V2057 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2055))}, V2048}, V2055))} end), V2058 end(V2052)) end end end end end end)); 0 -> fun (V2059) -> ('un--invalid'(V2059)) end end end(E530, E531)); _ -> fun (V2060) -> ('un--invalid'(V2060)) end end end(E528, E529)); _ -> fun (V2061) -> ('un--invalid'(V2061)) end end end(E526, E527)); _ -> fun (V2062) -> ('un--invalid'(V2062)) end end end end(E524, E525)); _ -> case V4 of [E518 | E519] -> (fun (V2063, V2064) -> case V2064 of [E520 | E521] -> (fun (V2065, V2066) -> case V2066 of [E522 | E523] -> (fun (V2067, V2068) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2069) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2069)) end, fun (V2070) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2070)) end}, V2065, fun (V2071) -> begin (V2072 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2074 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2073) -> ('un--quote\x{27}'(V0, V1, V2, V2073)) end, V2068, []))), fun (V2075) -> begin (V2076 = (V2074(V2075))), case V2076 of {'Prelude.Types.Left', V2077} -> {'Prelude.Types.Left', V2077}; {'Prelude.Types.Right', V2078} -> (begin (V2081 = fun (V2079) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2072, {'Core.TT.Ref', V2072, {'Core.TT.DataCon', begin (V2080 = V3), case ((V2080 band 9223372036854775808) =/= 0) of 'true' -> (V2080 bor -9223372036854775808); _ -> (V2080 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2078))}, V2071}, V2078))} end), V2081 end(V2075)) end end end end end end)); 0 -> fun (V2082) -> ('un--invalid'(V2082)) end end end(E522, E523)); _ -> fun (V2083) -> ('un--invalid'(V2083)) end end end(E520, E521)); _ -> fun (V2084) -> ('un--invalid'(V2084)) end end end(E518, E519)); _ -> fun (V2085) -> ('un--invalid'(V2085)) end end end; -9 -> case V4 of [E578 | E579] -> (fun (V2086, V2087) -> case V2087 of [E586 | E587] -> (fun (V2088, V2089) -> case V2089 of [E594 | E595] -> (fun (V2090, V2091) -> case V2091 of [] -> ('un--quote\x{27}'(V0, V1, V2, V2088)); _ -> case V4 of [E596 | E597] -> (fun (V2092, V2093) -> case V2093 of [E598 | E599] -> (fun (V2094, V2095) -> case V2095 of [E600 | E601] -> (fun (V2096, V2097) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2098) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2098)) end, fun (V2099) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2099)) end}, V2094, fun (V2100) -> begin (V2101 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2103 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2102) -> ('un--quote\x{27}'(V0, V1, V2, V2102)) end, V2097, []))), fun (V2104) -> begin (V2105 = (V2103(V2104))), case V2105 of {'Prelude.Types.Left', V2106} -> {'Prelude.Types.Left', V2106}; {'Prelude.Types.Right', V2107} -> (begin (V2110 = fun (V2108) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2101, {'Core.TT.Ref', V2101, {'Core.TT.DataCon', begin (V2109 = V3), case ((V2109 band 9223372036854775808) =/= 0) of 'true' -> (V2109 bor -9223372036854775808); _ -> (V2109 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2107))}, V2100}, V2107))} end), V2110 end(V2104)) end end end end end end)); 0 -> fun (V2111) -> ('un--invalid'(V2111)) end end end(E600, E601)); _ -> fun (V2112) -> ('un--invalid'(V2112)) end end end(E598, E599)); _ -> fun (V2113) -> ('un--invalid'(V2113)) end end end(E596, E597)); _ -> fun (V2114) -> ('un--invalid'(V2114)) end end end end(E594, E595)); _ -> case V4 of [E588 | E589] -> (fun (V2115, V2116) -> case V2116 of [E590 | E591] -> (fun (V2117, V2118) -> case V2118 of [E592 | E593] -> (fun (V2119, V2120) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2121) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2121)) end, fun (V2122) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2122)) end}, V2117, fun (V2123) -> begin (V2124 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2126 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2125) -> ('un--quote\x{27}'(V0, V1, V2, V2125)) end, V2120, []))), fun (V2127) -> begin (V2128 = (V2126(V2127))), case V2128 of {'Prelude.Types.Left', V2129} -> {'Prelude.Types.Left', V2129}; {'Prelude.Types.Right', V2130} -> (begin (V2133 = fun (V2131) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2124, {'Core.TT.Ref', V2124, {'Core.TT.DataCon', begin (V2132 = V3), case ((V2132 band 9223372036854775808) =/= 0) of 'true' -> (V2132 bor -9223372036854775808); _ -> (V2132 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2130))}, V2123}, V2130))} end), V2133 end(V2127)) end end end end end end)); 0 -> fun (V2134) -> ('un--invalid'(V2134)) end end end(E592, E593)); _ -> fun (V2135) -> ('un--invalid'(V2135)) end end end(E590, E591)); _ -> fun (V2136) -> ('un--invalid'(V2136)) end end end(E588, E589)); _ -> fun (V2137) -> ('un--invalid'(V2137)) end end end end(E586, E587)); _ -> case V4 of [E580 | E581] -> (fun (V2138, V2139) -> case V2139 of [E582 | E583] -> (fun (V2140, V2141) -> case V2141 of [E584 | E585] -> (fun (V2142, V2143) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2144) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2144)) end, fun (V2145) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2145)) end}, V2140, fun (V2146) -> begin (V2147 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2149 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2148) -> ('un--quote\x{27}'(V0, V1, V2, V2148)) end, V2143, []))), fun (V2150) -> begin (V2151 = (V2149(V2150))), case V2151 of {'Prelude.Types.Left', V2152} -> {'Prelude.Types.Left', V2152}; {'Prelude.Types.Right', V2153} -> (begin (V2156 = fun (V2154) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2147, {'Core.TT.Ref', V2147, {'Core.TT.DataCon', begin (V2155 = V3), case ((V2155 band 9223372036854775808) =/= 0) of 'true' -> (V2155 bor -9223372036854775808); _ -> (V2155 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2153))}, V2146}, V2153))} end), V2156 end(V2150)) end end end end end end)); 0 -> fun (V2157) -> ('un--invalid'(V2157)) end end end(E584, E585)); _ -> fun (V2158) -> ('un--invalid'(V2158)) end end end(E582, E583)); _ -> fun (V2159) -> ('un--invalid'(V2159)) end end end(E580, E581)); _ -> fun (V2160) -> ('un--invalid'(V2160)) end end end end(E578, E579)); _ -> case V4 of [E572 | E573] -> (fun (V2161, V2162) -> case V2162 of [E574 | E575] -> (fun (V2163, V2164) -> case V2164 of [E576 | E577] -> (fun (V2165, V2166) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2167) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2167)) end, fun (V2168) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2168)) end}, V2163, fun (V2169) -> begin (V2170 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2172 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2171) -> ('un--quote\x{27}'(V0, V1, V2, V2171)) end, V2166, []))), fun (V2173) -> begin (V2174 = (V2172(V2173))), case V2174 of {'Prelude.Types.Left', V2175} -> {'Prelude.Types.Left', V2175}; {'Prelude.Types.Right', V2176} -> (begin (V2179 = fun (V2177) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2170, {'Core.TT.Ref', V2170, {'Core.TT.DataCon', begin (V2178 = V3), case ((V2178 band 9223372036854775808) =/= 0) of 'true' -> (V2178 bor -9223372036854775808); _ -> (V2178 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2176))}, V2169}, V2176))} end), V2179 end(V2173)) end end end end end end)); 0 -> fun (V2180) -> ('un--invalid'(V2180)) end end end(E576, E577)); _ -> fun (V2181) -> ('un--invalid'(V2181)) end end end(E574, E575)); _ -> fun (V2182) -> ('un--invalid'(V2182)) end end end(E572, E573)); _ -> fun (V2183) -> ('un--invalid'(V2183)) end end end; -100 -> case V4 of [E608 | E609] -> (fun (V2184, V2185) -> case V2185 of [E616 | E617] -> (fun (V2186, V2187) -> case V2187 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2188) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int'(V2188)) end, fun (V2189) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int'(V2189)) end}, V2186, fun (V2190) -> fun (V2191) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I', V2190}}} end end)); _ -> case V4 of [E618 | E619] -> (fun (V2192, V2193) -> case V2193 of [E620 | E621] -> (fun (V2194, V2195) -> case V2195 of [E622 | E623] -> (fun (V2196, V2197) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2198) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2198)) end, fun (V2199) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2199)) end}, V2194, fun (V2200) -> begin (V2201 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2203 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2202) -> ('un--quote\x{27}'(V0, V1, V2, V2202)) end, V2197, []))), fun (V2204) -> begin (V2205 = (V2203(V2204))), case V2205 of {'Prelude.Types.Left', V2206} -> {'Prelude.Types.Left', V2206}; {'Prelude.Types.Right', V2207} -> (begin (V2210 = fun (V2208) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2201, {'Core.TT.Ref', V2201, {'Core.TT.DataCon', begin (V2209 = V3), case ((V2209 band 9223372036854775808) =/= 0) of 'true' -> (V2209 bor -9223372036854775808); _ -> (V2209 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2207))}, V2200}, V2207))} end), V2210 end(V2204)) end end end end end end)); 0 -> fun (V2211) -> ('un--invalid'(V2211)) end end end(E622, E623)); _ -> fun (V2212) -> ('un--invalid'(V2212)) end end end(E620, E621)); _ -> fun (V2213) -> ('un--invalid'(V2213)) end end end(E618, E619)); _ -> fun (V2214) -> ('un--invalid'(V2214)) end end end end(E616, E617)); _ -> case V4 of [E610 | E611] -> (fun (V2215, V2216) -> case V2216 of [E612 | E613] -> (fun (V2217, V2218) -> case V2218 of [E614 | E615] -> (fun (V2219, V2220) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2221) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2221)) end, fun (V2222) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2222)) end}, V2217, fun (V2223) -> begin (V2224 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2226 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2225) -> ('un--quote\x{27}'(V0, V1, V2, V2225)) end, V2220, []))), fun (V2227) -> begin (V2228 = (V2226(V2227))), case V2228 of {'Prelude.Types.Left', V2229} -> {'Prelude.Types.Left', V2229}; {'Prelude.Types.Right', V2230} -> (begin (V2233 = fun (V2231) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2224, {'Core.TT.Ref', V2224, {'Core.TT.DataCon', begin (V2232 = V3), case ((V2232 band 9223372036854775808) =/= 0) of 'true' -> (V2232 bor -9223372036854775808); _ -> (V2232 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2230))}, V2223}, V2230))} end), V2233 end(V2227)) end end end end end end)); 0 -> fun (V2234) -> ('un--invalid'(V2234)) end end end(E614, E615)); _ -> fun (V2235) -> ('un--invalid'(V2235)) end end end(E612, E613)); _ -> fun (V2236) -> ('un--invalid'(V2236)) end end end(E610, E611)); _ -> fun (V2237) -> ('un--invalid'(V2237)) end end end end(E608, E609)); _ -> case V4 of [E602 | E603] -> (fun (V2238, V2239) -> case V2239 of [E604 | E605] -> (fun (V2240, V2241) -> case V2241 of [E606 | E607] -> (fun (V2242, V2243) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2244) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2244)) end, fun (V2245) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2245)) end}, V2240, fun (V2246) -> begin (V2247 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2249 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2248) -> ('un--quote\x{27}'(V0, V1, V2, V2248)) end, V2243, []))), fun (V2250) -> begin (V2251 = (V2249(V2250))), case V2251 of {'Prelude.Types.Left', V2252} -> {'Prelude.Types.Left', V2252}; {'Prelude.Types.Right', V2253} -> (begin (V2256 = fun (V2254) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2247, {'Core.TT.Ref', V2247, {'Core.TT.DataCon', begin (V2255 = V3), case ((V2255 band 9223372036854775808) =/= 0) of 'true' -> (V2255 bor -9223372036854775808); _ -> (V2255 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2253))}, V2246}, V2253))} end), V2256 end(V2250)) end end end end end end)); 0 -> fun (V2257) -> ('un--invalid'(V2257)) end end end(E606, E607)); _ -> fun (V2258) -> ('un--invalid'(V2258)) end end end(E604, E605)); _ -> fun (V2259) -> ('un--invalid'(V2259)) end end end(E602, E603)); _ -> fun (V2260) -> ('un--invalid'(V2260)) end end end; -101 -> case V4 of [E630 | E631] -> (fun (V2261, V2262) -> case V2262 of [E638 | E639] -> (fun (V2263, V2264) -> case V2264 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2265) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int8'(V2265)) end, fun (V2266) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int8'(V2266)) end}, V2263, fun (V2267) -> fun (V2268) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I8', V2267}}} end end)); _ -> case V4 of [E640 | E641] -> (fun (V2269, V2270) -> case V2270 of [E642 | E643] -> (fun (V2271, V2272) -> case V2272 of [E644 | E645] -> (fun (V2273, V2274) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2275) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2275)) end, fun (V2276) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2276)) end}, V2271, fun (V2277) -> begin (V2278 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2280 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2279) -> ('un--quote\x{27}'(V0, V1, V2, V2279)) end, V2274, []))), fun (V2281) -> begin (V2282 = (V2280(V2281))), case V2282 of {'Prelude.Types.Left', V2283} -> {'Prelude.Types.Left', V2283}; {'Prelude.Types.Right', V2284} -> (begin (V2287 = fun (V2285) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2278, {'Core.TT.Ref', V2278, {'Core.TT.DataCon', begin (V2286 = V3), case ((V2286 band 9223372036854775808) =/= 0) of 'true' -> (V2286 bor -9223372036854775808); _ -> (V2286 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2284))}, V2277}, V2284))} end), V2287 end(V2281)) end end end end end end)); 0 -> fun (V2288) -> ('un--invalid'(V2288)) end end end(E644, E645)); _ -> fun (V2289) -> ('un--invalid'(V2289)) end end end(E642, E643)); _ -> fun (V2290) -> ('un--invalid'(V2290)) end end end(E640, E641)); _ -> fun (V2291) -> ('un--invalid'(V2291)) end end end end(E638, E639)); _ -> case V4 of [E632 | E633] -> (fun (V2292, V2293) -> case V2293 of [E634 | E635] -> (fun (V2294, V2295) -> case V2295 of [E636 | E637] -> (fun (V2296, V2297) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2298) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2298)) end, fun (V2299) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2299)) end}, V2294, fun (V2300) -> begin (V2301 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2303 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2302) -> ('un--quote\x{27}'(V0, V1, V2, V2302)) end, V2297, []))), fun (V2304) -> begin (V2305 = (V2303(V2304))), case V2305 of {'Prelude.Types.Left', V2306} -> {'Prelude.Types.Left', V2306}; {'Prelude.Types.Right', V2307} -> (begin (V2310 = fun (V2308) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2301, {'Core.TT.Ref', V2301, {'Core.TT.DataCon', begin (V2309 = V3), case ((V2309 band 9223372036854775808) =/= 0) of 'true' -> (V2309 bor -9223372036854775808); _ -> (V2309 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2307))}, V2300}, V2307))} end), V2310 end(V2304)) end end end end end end)); 0 -> fun (V2311) -> ('un--invalid'(V2311)) end end end(E636, E637)); _ -> fun (V2312) -> ('un--invalid'(V2312)) end end end(E634, E635)); _ -> fun (V2313) -> ('un--invalid'(V2313)) end end end(E632, E633)); _ -> fun (V2314) -> ('un--invalid'(V2314)) end end end end(E630, E631)); _ -> case V4 of [E624 | E625] -> (fun (V2315, V2316) -> case V2316 of [E626 | E627] -> (fun (V2317, V2318) -> case V2318 of [E628 | E629] -> (fun (V2319, V2320) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2321) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2321)) end, fun (V2322) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2322)) end}, V2317, fun (V2323) -> begin (V2324 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2326 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2325) -> ('un--quote\x{27}'(V0, V1, V2, V2325)) end, V2320, []))), fun (V2327) -> begin (V2328 = (V2326(V2327))), case V2328 of {'Prelude.Types.Left', V2329} -> {'Prelude.Types.Left', V2329}; {'Prelude.Types.Right', V2330} -> (begin (V2333 = fun (V2331) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2324, {'Core.TT.Ref', V2324, {'Core.TT.DataCon', begin (V2332 = V3), case ((V2332 band 9223372036854775808) =/= 0) of 'true' -> (V2332 bor -9223372036854775808); _ -> (V2332 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2330))}, V2323}, V2330))} end), V2333 end(V2327)) end end end end end end)); 0 -> fun (V2334) -> ('un--invalid'(V2334)) end end end(E628, E629)); _ -> fun (V2335) -> ('un--invalid'(V2335)) end end end(E626, E627)); _ -> fun (V2336) -> ('un--invalid'(V2336)) end end end(E624, E625)); _ -> fun (V2337) -> ('un--invalid'(V2337)) end end end; -102 -> case V4 of [E652 | E653] -> (fun (V2338, V2339) -> case V2339 of [E660 | E661] -> (fun (V2340, V2341) -> case V2341 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2342) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int16'(V2342)) end, fun (V2343) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int16'(V2343)) end}, V2340, fun (V2344) -> fun (V2345) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I16', V2344}}} end end)); _ -> case V4 of [E662 | E663] -> (fun (V2346, V2347) -> case V2347 of [E664 | E665] -> (fun (V2348, V2349) -> case V2349 of [E666 | E667] -> (fun (V2350, V2351) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2352) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2352)) end, fun (V2353) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2353)) end}, V2348, fun (V2354) -> begin (V2355 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2357 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2356) -> ('un--quote\x{27}'(V0, V1, V2, V2356)) end, V2351, []))), fun (V2358) -> begin (V2359 = (V2357(V2358))), case V2359 of {'Prelude.Types.Left', V2360} -> {'Prelude.Types.Left', V2360}; {'Prelude.Types.Right', V2361} -> (begin (V2364 = fun (V2362) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2355, {'Core.TT.Ref', V2355, {'Core.TT.DataCon', begin (V2363 = V3), case ((V2363 band 9223372036854775808) =/= 0) of 'true' -> (V2363 bor -9223372036854775808); _ -> (V2363 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2361))}, V2354}, V2361))} end), V2364 end(V2358)) end end end end end end)); 0 -> fun (V2365) -> ('un--invalid'(V2365)) end end end(E666, E667)); _ -> fun (V2366) -> ('un--invalid'(V2366)) end end end(E664, E665)); _ -> fun (V2367) -> ('un--invalid'(V2367)) end end end(E662, E663)); _ -> fun (V2368) -> ('un--invalid'(V2368)) end end end end(E660, E661)); _ -> case V4 of [E654 | E655] -> (fun (V2369, V2370) -> case V2370 of [E656 | E657] -> (fun (V2371, V2372) -> case V2372 of [E658 | E659] -> (fun (V2373, V2374) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2375) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2375)) end, fun (V2376) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2376)) end}, V2371, fun (V2377) -> begin (V2378 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2380 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2379) -> ('un--quote\x{27}'(V0, V1, V2, V2379)) end, V2374, []))), fun (V2381) -> begin (V2382 = (V2380(V2381))), case V2382 of {'Prelude.Types.Left', V2383} -> {'Prelude.Types.Left', V2383}; {'Prelude.Types.Right', V2384} -> (begin (V2387 = fun (V2385) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2378, {'Core.TT.Ref', V2378, {'Core.TT.DataCon', begin (V2386 = V3), case ((V2386 band 9223372036854775808) =/= 0) of 'true' -> (V2386 bor -9223372036854775808); _ -> (V2386 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2384))}, V2377}, V2384))} end), V2387 end(V2381)) end end end end end end)); 0 -> fun (V2388) -> ('un--invalid'(V2388)) end end end(E658, E659)); _ -> fun (V2389) -> ('un--invalid'(V2389)) end end end(E656, E657)); _ -> fun (V2390) -> ('un--invalid'(V2390)) end end end(E654, E655)); _ -> fun (V2391) -> ('un--invalid'(V2391)) end end end end(E652, E653)); _ -> case V4 of [E646 | E647] -> (fun (V2392, V2393) -> case V2393 of [E648 | E649] -> (fun (V2394, V2395) -> case V2395 of [E650 | E651] -> (fun (V2396, V2397) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2398) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2398)) end, fun (V2399) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2399)) end}, V2394, fun (V2400) -> begin (V2401 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2403 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2402) -> ('un--quote\x{27}'(V0, V1, V2, V2402)) end, V2397, []))), fun (V2404) -> begin (V2405 = (V2403(V2404))), case V2405 of {'Prelude.Types.Left', V2406} -> {'Prelude.Types.Left', V2406}; {'Prelude.Types.Right', V2407} -> (begin (V2410 = fun (V2408) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2401, {'Core.TT.Ref', V2401, {'Core.TT.DataCon', begin (V2409 = V3), case ((V2409 band 9223372036854775808) =/= 0) of 'true' -> (V2409 bor -9223372036854775808); _ -> (V2409 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2407))}, V2400}, V2407))} end), V2410 end(V2404)) end end end end end end)); 0 -> fun (V2411) -> ('un--invalid'(V2411)) end end end(E650, E651)); _ -> fun (V2412) -> ('un--invalid'(V2412)) end end end(E648, E649)); _ -> fun (V2413) -> ('un--invalid'(V2413)) end end end(E646, E647)); _ -> fun (V2414) -> ('un--invalid'(V2414)) end end end; -103 -> case V4 of [E674 | E675] -> (fun (V2415, V2416) -> case V2416 of [E682 | E683] -> (fun (V2417, V2418) -> case V2418 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2419) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int32'(V2419)) end, fun (V2420) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int32'(V2420)) end}, V2417, fun (V2421) -> fun (V2422) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I32', V2421}}} end end)); _ -> case V4 of [E684 | E685] -> (fun (V2423, V2424) -> case V2424 of [E686 | E687] -> (fun (V2425, V2426) -> case V2426 of [E688 | E689] -> (fun (V2427, V2428) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2429) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2429)) end, fun (V2430) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2430)) end}, V2425, fun (V2431) -> begin (V2432 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2434 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2433) -> ('un--quote\x{27}'(V0, V1, V2, V2433)) end, V2428, []))), fun (V2435) -> begin (V2436 = (V2434(V2435))), case V2436 of {'Prelude.Types.Left', V2437} -> {'Prelude.Types.Left', V2437}; {'Prelude.Types.Right', V2438} -> (begin (V2441 = fun (V2439) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2432, {'Core.TT.Ref', V2432, {'Core.TT.DataCon', begin (V2440 = V3), case ((V2440 band 9223372036854775808) =/= 0) of 'true' -> (V2440 bor -9223372036854775808); _ -> (V2440 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2438))}, V2431}, V2438))} end), V2441 end(V2435)) end end end end end end)); 0 -> fun (V2442) -> ('un--invalid'(V2442)) end end end(E688, E689)); _ -> fun (V2443) -> ('un--invalid'(V2443)) end end end(E686, E687)); _ -> fun (V2444) -> ('un--invalid'(V2444)) end end end(E684, E685)); _ -> fun (V2445) -> ('un--invalid'(V2445)) end end end end(E682, E683)); _ -> case V4 of [E676 | E677] -> (fun (V2446, V2447) -> case V2447 of [E678 | E679] -> (fun (V2448, V2449) -> case V2449 of [E680 | E681] -> (fun (V2450, V2451) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2452) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2452)) end, fun (V2453) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2453)) end}, V2448, fun (V2454) -> begin (V2455 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2457 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2456) -> ('un--quote\x{27}'(V0, V1, V2, V2456)) end, V2451, []))), fun (V2458) -> begin (V2459 = (V2457(V2458))), case V2459 of {'Prelude.Types.Left', V2460} -> {'Prelude.Types.Left', V2460}; {'Prelude.Types.Right', V2461} -> (begin (V2464 = fun (V2462) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2455, {'Core.TT.Ref', V2455, {'Core.TT.DataCon', begin (V2463 = V3), case ((V2463 band 9223372036854775808) =/= 0) of 'true' -> (V2463 bor -9223372036854775808); _ -> (V2463 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2461))}, V2454}, V2461))} end), V2464 end(V2458)) end end end end end end)); 0 -> fun (V2465) -> ('un--invalid'(V2465)) end end end(E680, E681)); _ -> fun (V2466) -> ('un--invalid'(V2466)) end end end(E678, E679)); _ -> fun (V2467) -> ('un--invalid'(V2467)) end end end(E676, E677)); _ -> fun (V2468) -> ('un--invalid'(V2468)) end end end end(E674, E675)); _ -> case V4 of [E668 | E669] -> (fun (V2469, V2470) -> case V2470 of [E670 | E671] -> (fun (V2471, V2472) -> case V2472 of [E672 | E673] -> (fun (V2473, V2474) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2475) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2475)) end, fun (V2476) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2476)) end}, V2471, fun (V2477) -> begin (V2478 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2480 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2479) -> ('un--quote\x{27}'(V0, V1, V2, V2479)) end, V2474, []))), fun (V2481) -> begin (V2482 = (V2480(V2481))), case V2482 of {'Prelude.Types.Left', V2483} -> {'Prelude.Types.Left', V2483}; {'Prelude.Types.Right', V2484} -> (begin (V2487 = fun (V2485) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2478, {'Core.TT.Ref', V2478, {'Core.TT.DataCon', begin (V2486 = V3), case ((V2486 band 9223372036854775808) =/= 0) of 'true' -> (V2486 bor -9223372036854775808); _ -> (V2486 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2484))}, V2477}, V2484))} end), V2487 end(V2481)) end end end end end end)); 0 -> fun (V2488) -> ('un--invalid'(V2488)) end end end(E672, E673)); _ -> fun (V2489) -> ('un--invalid'(V2489)) end end end(E670, E671)); _ -> fun (V2490) -> ('un--invalid'(V2490)) end end end(E668, E669)); _ -> fun (V2491) -> ('un--invalid'(V2491)) end end end; -104 -> case V4 of [E696 | E697] -> (fun (V2492, V2493) -> case V2493 of [E704 | E705] -> (fun (V2494, V2495) -> case V2495 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2496) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Int64'(V2496)) end, fun (V2497) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Int64'(V2497)) end}, V2494, fun (V2498) -> fun (V2499) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I64', V2498}}} end end)); _ -> case V4 of [E706 | E707] -> (fun (V2500, V2501) -> case V2501 of [E708 | E709] -> (fun (V2502, V2503) -> case V2503 of [E710 | E711] -> (fun (V2504, V2505) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2506) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2506)) end, fun (V2507) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2507)) end}, V2502, fun (V2508) -> begin (V2509 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2511 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2510) -> ('un--quote\x{27}'(V0, V1, V2, V2510)) end, V2505, []))), fun (V2512) -> begin (V2513 = (V2511(V2512))), case V2513 of {'Prelude.Types.Left', V2514} -> {'Prelude.Types.Left', V2514}; {'Prelude.Types.Right', V2515} -> (begin (V2518 = fun (V2516) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2509, {'Core.TT.Ref', V2509, {'Core.TT.DataCon', begin (V2517 = V3), case ((V2517 band 9223372036854775808) =/= 0) of 'true' -> (V2517 bor -9223372036854775808); _ -> (V2517 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2515))}, V2508}, V2515))} end), V2518 end(V2512)) end end end end end end)); 0 -> fun (V2519) -> ('un--invalid'(V2519)) end end end(E710, E711)); _ -> fun (V2520) -> ('un--invalid'(V2520)) end end end(E708, E709)); _ -> fun (V2521) -> ('un--invalid'(V2521)) end end end(E706, E707)); _ -> fun (V2522) -> ('un--invalid'(V2522)) end end end end(E704, E705)); _ -> case V4 of [E698 | E699] -> (fun (V2523, V2524) -> case V2524 of [E700 | E701] -> (fun (V2525, V2526) -> case V2526 of [E702 | E703] -> (fun (V2527, V2528) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2529) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2529)) end, fun (V2530) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2530)) end}, V2525, fun (V2531) -> begin (V2532 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2534 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2533) -> ('un--quote\x{27}'(V0, V1, V2, V2533)) end, V2528, []))), fun (V2535) -> begin (V2536 = (V2534(V2535))), case V2536 of {'Prelude.Types.Left', V2537} -> {'Prelude.Types.Left', V2537}; {'Prelude.Types.Right', V2538} -> (begin (V2541 = fun (V2539) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2532, {'Core.TT.Ref', V2532, {'Core.TT.DataCon', begin (V2540 = V3), case ((V2540 band 9223372036854775808) =/= 0) of 'true' -> (V2540 bor -9223372036854775808); _ -> (V2540 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2538))}, V2531}, V2538))} end), V2541 end(V2535)) end end end end end end)); 0 -> fun (V2542) -> ('un--invalid'(V2542)) end end end(E702, E703)); _ -> fun (V2543) -> ('un--invalid'(V2543)) end end end(E700, E701)); _ -> fun (V2544) -> ('un--invalid'(V2544)) end end end(E698, E699)); _ -> fun (V2545) -> ('un--invalid'(V2545)) end end end end(E696, E697)); _ -> case V4 of [E690 | E691] -> (fun (V2546, V2547) -> case V2547 of [E692 | E693] -> (fun (V2548, V2549) -> case V2549 of [E694 | E695] -> (fun (V2550, V2551) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2552) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2552)) end, fun (V2553) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2553)) end}, V2548, fun (V2554) -> begin (V2555 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2557 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2556) -> ('un--quote\x{27}'(V0, V1, V2, V2556)) end, V2551, []))), fun (V2558) -> begin (V2559 = (V2557(V2558))), case V2559 of {'Prelude.Types.Left', V2560} -> {'Prelude.Types.Left', V2560}; {'Prelude.Types.Right', V2561} -> (begin (V2564 = fun (V2562) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2555, {'Core.TT.Ref', V2555, {'Core.TT.DataCon', begin (V2563 = V3), case ((V2563 band 9223372036854775808) =/= 0) of 'true' -> (V2563 bor -9223372036854775808); _ -> (V2563 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2561))}, V2554}, V2561))} end), V2564 end(V2558)) end end end end end end)); 0 -> fun (V2565) -> ('un--invalid'(V2565)) end end end(E694, E695)); _ -> fun (V2566) -> ('un--invalid'(V2566)) end end end(E692, E693)); _ -> fun (V2567) -> ('un--invalid'(V2567)) end end end(E690, E691)); _ -> fun (V2568) -> ('un--invalid'(V2568)) end end end; -105 -> case V4 of [E718 | E719] -> (fun (V2569, V2570) -> case V2570 of [E726 | E727] -> (fun (V2571, V2572) -> case V2572 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2573) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Integer'(V2573)) end, fun (V2574) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Integer'(V2574)) end}, V2571, fun (V2575) -> fun (V2576) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.BI', V2575}}} end end)); _ -> case V4 of [E728 | E729] -> (fun (V2577, V2578) -> case V2578 of [E730 | E731] -> (fun (V2579, V2580) -> case V2580 of [E732 | E733] -> (fun (V2581, V2582) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2583) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2583)) end, fun (V2584) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2584)) end}, V2579, fun (V2585) -> begin (V2586 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2588 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2587) -> ('un--quote\x{27}'(V0, V1, V2, V2587)) end, V2582, []))), fun (V2589) -> begin (V2590 = (V2588(V2589))), case V2590 of {'Prelude.Types.Left', V2591} -> {'Prelude.Types.Left', V2591}; {'Prelude.Types.Right', V2592} -> (begin (V2595 = fun (V2593) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2586, {'Core.TT.Ref', V2586, {'Core.TT.DataCon', begin (V2594 = V3), case ((V2594 band 9223372036854775808) =/= 0) of 'true' -> (V2594 bor -9223372036854775808); _ -> (V2594 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2592))}, V2585}, V2592))} end), V2595 end(V2589)) end end end end end end)); 0 -> fun (V2596) -> ('un--invalid'(V2596)) end end end(E732, E733)); _ -> fun (V2597) -> ('un--invalid'(V2597)) end end end(E730, E731)); _ -> fun (V2598) -> ('un--invalid'(V2598)) end end end(E728, E729)); _ -> fun (V2599) -> ('un--invalid'(V2599)) end end end end(E726, E727)); _ -> case V4 of [E720 | E721] -> (fun (V2600, V2601) -> case V2601 of [E722 | E723] -> (fun (V2602, V2603) -> case V2603 of [E724 | E725] -> (fun (V2604, V2605) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2606) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2606)) end, fun (V2607) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2607)) end}, V2602, fun (V2608) -> begin (V2609 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2611 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2610) -> ('un--quote\x{27}'(V0, V1, V2, V2610)) end, V2605, []))), fun (V2612) -> begin (V2613 = (V2611(V2612))), case V2613 of {'Prelude.Types.Left', V2614} -> {'Prelude.Types.Left', V2614}; {'Prelude.Types.Right', V2615} -> (begin (V2618 = fun (V2616) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2609, {'Core.TT.Ref', V2609, {'Core.TT.DataCon', begin (V2617 = V3), case ((V2617 band 9223372036854775808) =/= 0) of 'true' -> (V2617 bor -9223372036854775808); _ -> (V2617 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2615))}, V2608}, V2615))} end), V2618 end(V2612)) end end end end end end)); 0 -> fun (V2619) -> ('un--invalid'(V2619)) end end end(E724, E725)); _ -> fun (V2620) -> ('un--invalid'(V2620)) end end end(E722, E723)); _ -> fun (V2621) -> ('un--invalid'(V2621)) end end end(E720, E721)); _ -> fun (V2622) -> ('un--invalid'(V2622)) end end end end(E718, E719)); _ -> case V4 of [E712 | E713] -> (fun (V2623, V2624) -> case V2624 of [E714 | E715] -> (fun (V2625, V2626) -> case V2626 of [E716 | E717] -> (fun (V2627, V2628) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2629) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2629)) end, fun (V2630) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2630)) end}, V2625, fun (V2631) -> begin (V2632 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2634 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2633) -> ('un--quote\x{27}'(V0, V1, V2, V2633)) end, V2628, []))), fun (V2635) -> begin (V2636 = (V2634(V2635))), case V2636 of {'Prelude.Types.Left', V2637} -> {'Prelude.Types.Left', V2637}; {'Prelude.Types.Right', V2638} -> (begin (V2641 = fun (V2639) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2632, {'Core.TT.Ref', V2632, {'Core.TT.DataCon', begin (V2640 = V3), case ((V2640 band 9223372036854775808) =/= 0) of 'true' -> (V2640 bor -9223372036854775808); _ -> (V2640 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2638))}, V2631}, V2638))} end), V2641 end(V2635)) end end end end end end)); 0 -> fun (V2642) -> ('un--invalid'(V2642)) end end end(E716, E717)); _ -> fun (V2643) -> ('un--invalid'(V2643)) end end end(E714, E715)); _ -> fun (V2644) -> ('un--invalid'(V2644)) end end end(E712, E713)); _ -> fun (V2645) -> ('un--invalid'(V2645)) end end end; -106 -> case V4 of [E740 | E741] -> (fun (V2646, V2647) -> case V2647 of [E748 | E749] -> (fun (V2648, V2649) -> case V2649 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2650) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits8'(V2650)) end, fun (V2651) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits8'(V2651)) end}, V2648, fun (V2652) -> fun (V2653) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B8', V2652}}} end end)); _ -> case V4 of [E750 | E751] -> (fun (V2654, V2655) -> case V2655 of [E752 | E753] -> (fun (V2656, V2657) -> case V2657 of [E754 | E755] -> (fun (V2658, V2659) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2660) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2660)) end, fun (V2661) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2661)) end}, V2656, fun (V2662) -> begin (V2663 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2665 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2664) -> ('un--quote\x{27}'(V0, V1, V2, V2664)) end, V2659, []))), fun (V2666) -> begin (V2667 = (V2665(V2666))), case V2667 of {'Prelude.Types.Left', V2668} -> {'Prelude.Types.Left', V2668}; {'Prelude.Types.Right', V2669} -> (begin (V2672 = fun (V2670) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2663, {'Core.TT.Ref', V2663, {'Core.TT.DataCon', begin (V2671 = V3), case ((V2671 band 9223372036854775808) =/= 0) of 'true' -> (V2671 bor -9223372036854775808); _ -> (V2671 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2669))}, V2662}, V2669))} end), V2672 end(V2666)) end end end end end end)); 0 -> fun (V2673) -> ('un--invalid'(V2673)) end end end(E754, E755)); _ -> fun (V2674) -> ('un--invalid'(V2674)) end end end(E752, E753)); _ -> fun (V2675) -> ('un--invalid'(V2675)) end end end(E750, E751)); _ -> fun (V2676) -> ('un--invalid'(V2676)) end end end end(E748, E749)); _ -> case V4 of [E742 | E743] -> (fun (V2677, V2678) -> case V2678 of [E744 | E745] -> (fun (V2679, V2680) -> case V2680 of [E746 | E747] -> (fun (V2681, V2682) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2683) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2683)) end, fun (V2684) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2684)) end}, V2679, fun (V2685) -> begin (V2686 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2688 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2687) -> ('un--quote\x{27}'(V0, V1, V2, V2687)) end, V2682, []))), fun (V2689) -> begin (V2690 = (V2688(V2689))), case V2690 of {'Prelude.Types.Left', V2691} -> {'Prelude.Types.Left', V2691}; {'Prelude.Types.Right', V2692} -> (begin (V2695 = fun (V2693) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2686, {'Core.TT.Ref', V2686, {'Core.TT.DataCon', begin (V2694 = V3), case ((V2694 band 9223372036854775808) =/= 0) of 'true' -> (V2694 bor -9223372036854775808); _ -> (V2694 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2692))}, V2685}, V2692))} end), V2695 end(V2689)) end end end end end end)); 0 -> fun (V2696) -> ('un--invalid'(V2696)) end end end(E746, E747)); _ -> fun (V2697) -> ('un--invalid'(V2697)) end end end(E744, E745)); _ -> fun (V2698) -> ('un--invalid'(V2698)) end end end(E742, E743)); _ -> fun (V2699) -> ('un--invalid'(V2699)) end end end end(E740, E741)); _ -> case V4 of [E734 | E735] -> (fun (V2700, V2701) -> case V2701 of [E736 | E737] -> (fun (V2702, V2703) -> case V2703 of [E738 | E739] -> (fun (V2704, V2705) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2706) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2706)) end, fun (V2707) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2707)) end}, V2702, fun (V2708) -> begin (V2709 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2711 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2710) -> ('un--quote\x{27}'(V0, V1, V2, V2710)) end, V2705, []))), fun (V2712) -> begin (V2713 = (V2711(V2712))), case V2713 of {'Prelude.Types.Left', V2714} -> {'Prelude.Types.Left', V2714}; {'Prelude.Types.Right', V2715} -> (begin (V2718 = fun (V2716) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2709, {'Core.TT.Ref', V2709, {'Core.TT.DataCon', begin (V2717 = V3), case ((V2717 band 9223372036854775808) =/= 0) of 'true' -> (V2717 bor -9223372036854775808); _ -> (V2717 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2715))}, V2708}, V2715))} end), V2718 end(V2712)) end end end end end end)); 0 -> fun (V2719) -> ('un--invalid'(V2719)) end end end(E738, E739)); _ -> fun (V2720) -> ('un--invalid'(V2720)) end end end(E736, E737)); _ -> fun (V2721) -> ('un--invalid'(V2721)) end end end(E734, E735)); _ -> fun (V2722) -> ('un--invalid'(V2722)) end end end; -107 -> case V4 of [E762 | E763] -> (fun (V2723, V2724) -> case V2724 of [E770 | E771] -> (fun (V2725, V2726) -> case V2726 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2727) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits16'(V2727)) end, fun (V2728) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits16'(V2728)) end}, V2725, fun (V2729) -> fun (V2730) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B16', V2729}}} end end)); _ -> case V4 of [E772 | E773] -> (fun (V2731, V2732) -> case V2732 of [E774 | E775] -> (fun (V2733, V2734) -> case V2734 of [E776 | E777] -> (fun (V2735, V2736) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2737) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2737)) end, fun (V2738) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2738)) end}, V2733, fun (V2739) -> begin (V2740 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2742 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2741) -> ('un--quote\x{27}'(V0, V1, V2, V2741)) end, V2736, []))), fun (V2743) -> begin (V2744 = (V2742(V2743))), case V2744 of {'Prelude.Types.Left', V2745} -> {'Prelude.Types.Left', V2745}; {'Prelude.Types.Right', V2746} -> (begin (V2749 = fun (V2747) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2740, {'Core.TT.Ref', V2740, {'Core.TT.DataCon', begin (V2748 = V3), case ((V2748 band 9223372036854775808) =/= 0) of 'true' -> (V2748 bor -9223372036854775808); _ -> (V2748 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2746))}, V2739}, V2746))} end), V2749 end(V2743)) end end end end end end)); 0 -> fun (V2750) -> ('un--invalid'(V2750)) end end end(E776, E777)); _ -> fun (V2751) -> ('un--invalid'(V2751)) end end end(E774, E775)); _ -> fun (V2752) -> ('un--invalid'(V2752)) end end end(E772, E773)); _ -> fun (V2753) -> ('un--invalid'(V2753)) end end end end(E770, E771)); _ -> case V4 of [E764 | E765] -> (fun (V2754, V2755) -> case V2755 of [E766 | E767] -> (fun (V2756, V2757) -> case V2757 of [E768 | E769] -> (fun (V2758, V2759) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2760) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2760)) end, fun (V2761) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2761)) end}, V2756, fun (V2762) -> begin (V2763 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2765 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2764) -> ('un--quote\x{27}'(V0, V1, V2, V2764)) end, V2759, []))), fun (V2766) -> begin (V2767 = (V2765(V2766))), case V2767 of {'Prelude.Types.Left', V2768} -> {'Prelude.Types.Left', V2768}; {'Prelude.Types.Right', V2769} -> (begin (V2772 = fun (V2770) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2763, {'Core.TT.Ref', V2763, {'Core.TT.DataCon', begin (V2771 = V3), case ((V2771 band 9223372036854775808) =/= 0) of 'true' -> (V2771 bor -9223372036854775808); _ -> (V2771 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2769))}, V2762}, V2769))} end), V2772 end(V2766)) end end end end end end)); 0 -> fun (V2773) -> ('un--invalid'(V2773)) end end end(E768, E769)); _ -> fun (V2774) -> ('un--invalid'(V2774)) end end end(E766, E767)); _ -> fun (V2775) -> ('un--invalid'(V2775)) end end end(E764, E765)); _ -> fun (V2776) -> ('un--invalid'(V2776)) end end end end(E762, E763)); _ -> case V4 of [E756 | E757] -> (fun (V2777, V2778) -> case V2778 of [E758 | E759] -> (fun (V2779, V2780) -> case V2780 of [E760 | E761] -> (fun (V2781, V2782) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2783) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2783)) end, fun (V2784) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2784)) end}, V2779, fun (V2785) -> begin (V2786 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2788 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2787) -> ('un--quote\x{27}'(V0, V1, V2, V2787)) end, V2782, []))), fun (V2789) -> begin (V2790 = (V2788(V2789))), case V2790 of {'Prelude.Types.Left', V2791} -> {'Prelude.Types.Left', V2791}; {'Prelude.Types.Right', V2792} -> (begin (V2795 = fun (V2793) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2786, {'Core.TT.Ref', V2786, {'Core.TT.DataCon', begin (V2794 = V3), case ((V2794 band 9223372036854775808) =/= 0) of 'true' -> (V2794 bor -9223372036854775808); _ -> (V2794 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2792))}, V2785}, V2792))} end), V2795 end(V2789)) end end end end end end)); 0 -> fun (V2796) -> ('un--invalid'(V2796)) end end end(E760, E761)); _ -> fun (V2797) -> ('un--invalid'(V2797)) end end end(E758, E759)); _ -> fun (V2798) -> ('un--invalid'(V2798)) end end end(E756, E757)); _ -> fun (V2799) -> ('un--invalid'(V2799)) end end end; -108 -> case V4 of [E784 | E785] -> (fun (V2800, V2801) -> case V2801 of [E792 | E793] -> (fun (V2802, V2803) -> case V2803 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2804) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits32'(V2804)) end, fun (V2805) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits32'(V2805)) end}, V2802, fun (V2806) -> fun (V2807) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B32', V2806}}} end end)); _ -> case V4 of [E794 | E795] -> (fun (V2808, V2809) -> case V2809 of [E796 | E797] -> (fun (V2810, V2811) -> case V2811 of [E798 | E799] -> (fun (V2812, V2813) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2814) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2814)) end, fun (V2815) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2815)) end}, V2810, fun (V2816) -> begin (V2817 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2819 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2818) -> ('un--quote\x{27}'(V0, V1, V2, V2818)) end, V2813, []))), fun (V2820) -> begin (V2821 = (V2819(V2820))), case V2821 of {'Prelude.Types.Left', V2822} -> {'Prelude.Types.Left', V2822}; {'Prelude.Types.Right', V2823} -> (begin (V2826 = fun (V2824) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2817, {'Core.TT.Ref', V2817, {'Core.TT.DataCon', begin (V2825 = V3), case ((V2825 band 9223372036854775808) =/= 0) of 'true' -> (V2825 bor -9223372036854775808); _ -> (V2825 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2823))}, V2816}, V2823))} end), V2826 end(V2820)) end end end end end end)); 0 -> fun (V2827) -> ('un--invalid'(V2827)) end end end(E798, E799)); _ -> fun (V2828) -> ('un--invalid'(V2828)) end end end(E796, E797)); _ -> fun (V2829) -> ('un--invalid'(V2829)) end end end(E794, E795)); _ -> fun (V2830) -> ('un--invalid'(V2830)) end end end end(E792, E793)); _ -> case V4 of [E786 | E787] -> (fun (V2831, V2832) -> case V2832 of [E788 | E789] -> (fun (V2833, V2834) -> case V2834 of [E790 | E791] -> (fun (V2835, V2836) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2837) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2837)) end, fun (V2838) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2838)) end}, V2833, fun (V2839) -> begin (V2840 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2842 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2841) -> ('un--quote\x{27}'(V0, V1, V2, V2841)) end, V2836, []))), fun (V2843) -> begin (V2844 = (V2842(V2843))), case V2844 of {'Prelude.Types.Left', V2845} -> {'Prelude.Types.Left', V2845}; {'Prelude.Types.Right', V2846} -> (begin (V2849 = fun (V2847) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2840, {'Core.TT.Ref', V2840, {'Core.TT.DataCon', begin (V2848 = V3), case ((V2848 band 9223372036854775808) =/= 0) of 'true' -> (V2848 bor -9223372036854775808); _ -> (V2848 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2846))}, V2839}, V2846))} end), V2849 end(V2843)) end end end end end end)); 0 -> fun (V2850) -> ('un--invalid'(V2850)) end end end(E790, E791)); _ -> fun (V2851) -> ('un--invalid'(V2851)) end end end(E788, E789)); _ -> fun (V2852) -> ('un--invalid'(V2852)) end end end(E786, E787)); _ -> fun (V2853) -> ('un--invalid'(V2853)) end end end end(E784, E785)); _ -> case V4 of [E778 | E779] -> (fun (V2854, V2855) -> case V2855 of [E780 | E781] -> (fun (V2856, V2857) -> case V2857 of [E782 | E783] -> (fun (V2858, V2859) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2860) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2860)) end, fun (V2861) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2861)) end}, V2856, fun (V2862) -> begin (V2863 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2865 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2864) -> ('un--quote\x{27}'(V0, V1, V2, V2864)) end, V2859, []))), fun (V2866) -> begin (V2867 = (V2865(V2866))), case V2867 of {'Prelude.Types.Left', V2868} -> {'Prelude.Types.Left', V2868}; {'Prelude.Types.Right', V2869} -> (begin (V2872 = fun (V2870) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2863, {'Core.TT.Ref', V2863, {'Core.TT.DataCon', begin (V2871 = V3), case ((V2871 band 9223372036854775808) =/= 0) of 'true' -> (V2871 bor -9223372036854775808); _ -> (V2871 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2869))}, V2862}, V2869))} end), V2872 end(V2866)) end end end end end end)); 0 -> fun (V2873) -> ('un--invalid'(V2873)) end end end(E782, E783)); _ -> fun (V2874) -> ('un--invalid'(V2874)) end end end(E780, E781)); _ -> fun (V2875) -> ('un--invalid'(V2875)) end end end(E778, E779)); _ -> fun (V2876) -> ('un--invalid'(V2876)) end end end; -109 -> case V4 of [E806 | E807] -> (fun (V2877, V2878) -> case V2878 of [E814 | E815] -> (fun (V2879, V2880) -> case V2880 of [] -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2881) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--toScheme_Scheme_Bits64'(V2881)) end, fun (V2882) -> ('Idris.Idris2.Libraries.Utils.Scheme':'dn--un--fromScheme_Scheme_Bits64'(V2882)) end}, V2879, fun (V2883) -> fun (V2884) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.B64', V2883}}} end end)); _ -> case V4 of [E816 | E817] -> (fun (V2885, V2886) -> case V2886 of [E818 | E819] -> (fun (V2887, V2888) -> case V2888 of [E820 | E821] -> (fun (V2889, V2890) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2891) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2891)) end, fun (V2892) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2892)) end}, V2887, fun (V2893) -> begin (V2894 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2896 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2895) -> ('un--quote\x{27}'(V0, V1, V2, V2895)) end, V2890, []))), fun (V2897) -> begin (V2898 = (V2896(V2897))), case V2898 of {'Prelude.Types.Left', V2899} -> {'Prelude.Types.Left', V2899}; {'Prelude.Types.Right', V2900} -> (begin (V2903 = fun (V2901) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2894, {'Core.TT.Ref', V2894, {'Core.TT.DataCon', begin (V2902 = V3), case ((V2902 band 9223372036854775808) =/= 0) of 'true' -> (V2902 bor -9223372036854775808); _ -> (V2902 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2900))}, V2893}, V2900))} end), V2903 end(V2897)) end end end end end end)); 0 -> fun (V2904) -> ('un--invalid'(V2904)) end end end(E820, E821)); _ -> fun (V2905) -> ('un--invalid'(V2905)) end end end(E818, E819)); _ -> fun (V2906) -> ('un--invalid'(V2906)) end end end(E816, E817)); _ -> fun (V2907) -> ('un--invalid'(V2907)) end end end end(E814, E815)); _ -> case V4 of [E808 | E809] -> (fun (V2908, V2909) -> case V2909 of [E810 | E811] -> (fun (V2910, V2911) -> case V2911 of [E812 | E813] -> (fun (V2912, V2913) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2914) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2914)) end, fun (V2915) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2915)) end}, V2910, fun (V2916) -> begin (V2917 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2919 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2918) -> ('un--quote\x{27}'(V0, V1, V2, V2918)) end, V2913, []))), fun (V2920) -> begin (V2921 = (V2919(V2920))), case V2921 of {'Prelude.Types.Left', V2922} -> {'Prelude.Types.Left', V2922}; {'Prelude.Types.Right', V2923} -> (begin (V2926 = fun (V2924) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2917, {'Core.TT.Ref', V2917, {'Core.TT.DataCon', begin (V2925 = V3), case ((V2925 band 9223372036854775808) =/= 0) of 'true' -> (V2925 bor -9223372036854775808); _ -> (V2925 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2923))}, V2916}, V2923))} end), V2926 end(V2920)) end end end end end end)); 0 -> fun (V2927) -> ('un--invalid'(V2927)) end end end(E812, E813)); _ -> fun (V2928) -> ('un--invalid'(V2928)) end end end(E810, E811)); _ -> fun (V2929) -> ('un--invalid'(V2929)) end end end(E808, E809)); _ -> fun (V2930) -> ('un--invalid'(V2930)) end end end end(E806, E807)); _ -> case V4 of [E800 | E801] -> (fun (V2931, V2932) -> case V2932 of [E802 | E803] -> (fun (V2933, V2934) -> case V2934 of [E804 | E805] -> (fun (V2935, V2936) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2937) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2937)) end, fun (V2938) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2938)) end}, V2933, fun (V2939) -> begin (V2940 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2942 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2941) -> ('un--quote\x{27}'(V0, V1, V2, V2941)) end, V2936, []))), fun (V2943) -> begin (V2944 = (V2942(V2943))), case V2944 of {'Prelude.Types.Left', V2945} -> {'Prelude.Types.Left', V2945}; {'Prelude.Types.Right', V2946} -> (begin (V2949 = fun (V2947) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2940, {'Core.TT.Ref', V2940, {'Core.TT.DataCon', begin (V2948 = V3), case ((V2948 band 9223372036854775808) =/= 0) of 'true' -> (V2948 bor -9223372036854775808); _ -> (V2948 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2946))}, V2939}, V2946))} end), V2949 end(V2943)) end end end end end end)); 0 -> fun (V2950) -> ('un--invalid'(V2950)) end end end(E804, E805)); _ -> fun (V2951) -> ('un--invalid'(V2951)) end end end(E802, E803)); _ -> fun (V2952) -> ('un--invalid'(V2952)) end end end(E800, E801)); _ -> fun (V2953) -> ('un--invalid'(V2953)) end end end; _ -> case V4 of [E0 | E1] -> (fun (V2954, V2955) -> case V2955 of [E2 | E3] -> (fun (V2956, V2957) -> case V2957 of [E4 | E5] -> (fun (V2958, V2959) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Integer'(V3, 0)) of 1 -> ('un--quoteOrInvalid'({'Libraries.Utils.Scheme.dn--un--__mkScheme', fun (V2960) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--toScheme_Scheme_Name'(V2960)) end, fun (V2961) -> ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(V2961)) end}, V2956, fun (V2962) -> begin (V2963 = ('Idris.Idris2.Core.FC':'un--emptyFC'())), begin (V2965 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2964) -> ('un--quote\x{27}'(V0, V1, V2, V2964)) end, V2959, []))), fun (V2966) -> begin (V2967 = (V2965(V2966))), case V2967 of {'Prelude.Types.Left', V2968} -> {'Prelude.Types.Left', V2968}; {'Prelude.Types.Right', V2969} -> (begin (V2972 = fun (V2970) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(V2963, {'Core.TT.Ref', V2963, {'Core.TT.DataCon', begin (V2971 = V3), case ((V2971 band 9223372036854775808) =/= 0) of 'true' -> (V2971 bor -9223372036854775808); _ -> (V2971 band 9223372036854775807) end end, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2969))}, V2962}, V2969))} end), V2972 end(V2966)) end end end end end end)); 0 -> fun (V2973) -> ('un--invalid'(V2973)) end end end(E4, E5)); _ -> fun (V2974) -> ('un--invalid'(V2974)) end end end(E2, E3)); _ -> fun (V2975) -> ('un--invalid'(V2975)) end end end(E0, E1)); _ -> fun (V2976) -> ('un--invalid'(V2976)) end end end.
'un--quoteTypeLevel'(V0) -> ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Core.Name.MN', <<"top"/utf8>>, 0} end, ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V0)))))).
'un--quoteRigCount'(V0) -> ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()) end, ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_RigCount'(('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V0)))))).
'un--quotePiInfo'(V0, V1, V2, V3) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isInteger'(V3)) of 1 -> fun (V4) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetInteger'(V3)) of 0 -> {'Prelude.Types.Right', {'Core.TT.Implicit'}}; 1 -> {'Prelude.Types.Right', {'Core.TT.Explicit'}}; 2 -> {'Prelude.Types.Right', {'Core.TT.AutoImplicit'}}; _ -> {'Prelude.Types.Right', {'Core.TT.Explicit'}} end end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isBox'(V3)) of 1 -> begin (V5 = ('un--quote\x{27}'(V0, V1, V2, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeUnbox'(V3))))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V11 = fun (V10) -> {'Prelude.Types.Right', {'Core.TT.DefImplicit', V9}} end), V11 end(V6)) end end end end; 0 -> fun (V12) -> {'Prelude.Types.Right', {'Core.TT.Explicit'}} end end end.
'un--quotePLet'(V0, V1, V2, V3, V4, V5, V6, V7) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V3)) of {'Libraries.Utils.Scheme.Procedure', V8} -> begin (V9 = ('Idris.Idris2.Core.SchemeEval.Compile':'un--nextName'(V0))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V23 = begin (V14 = <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))/binary, <<<<"-"/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Integer'(V13))/binary>>/binary>>), begin (V15 = ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeApply'(V8, ('Idris.Idris2.Libraries.Utils.Scheme':'un--makeSymbol'(V14))))), begin (V16 = ('un--quote\x{27}'(V0, V1, {'Core.SchemeEval.Compile.::', {'Core.SchemeEval.Compile.Bound', V14}, V2}, V15))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V22 = fun (V21) -> {'Prelude.Types.Right', {'Core.TT.Bind', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V7, {'Core.TT.PLet', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V4, V5, V6}, V20}} end), V22 end(V17)) end end end end end end), V23 end(V10)) end end end end; _ -> fun (V24) -> ('un--invalid'(V24)) end end.
'un--quoteOrInvalidS'(V0, V1, V2) -> case V0 of {'Libraries.Utils.Scheme.dn--un--__mkScheme', V3, V4} -> case (V4(('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V1)))) of {'Prelude.Types.Just', V5} -> (V2(V5)); {'Prelude.Types.Nothing'} -> fun (V6) -> ('un--invalidS'(V6)) end end end.
'un--quoteOrInvalid'(V0, V1, V2) -> case V0 of {'Libraries.Utils.Scheme.dn--un--__mkScheme', V3, V4} -> case (V4(('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V1)))) of {'Prelude.Types.Just', V5} -> (V2(V5)); {'Prelude.Types.Nothing'} -> fun (V6) -> ('un--invalid'(V6)) end end end.
'un--quoteObj'(V0, V1) -> case V1 of {'Core.SchemeEval.Evaluate.MkSObj', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.SchemeEval.Compile.Sym'}, 0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V9 = ('un--quote\x{27}'(V8, V0, V3, V2))), V9 end(V5)) end end end end end.
'un--quoteLazyReason'(V0) -> ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> 2 end, ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_LazyReason'(('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V0)))))).
'un--quoteFC'(V0) -> ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> ('Idris.Idris2.Core.FC':'un--emptyFC'()) end, ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_FC'(('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V0)))))).
'un--quoteBinderName'(V0) -> ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Core.Name.UN', {'Core.Name.Basic', <<"x"/utf8>>}} end, ('Idris.Idris2.Core.SchemeEval.ToScheme':'dn--un--fromScheme_Scheme_Name'(('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V0)))))).
'un--quoteBinder'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--decodeObj'(V4)) of {'Libraries.Utils.Scheme.Procedure', V9} -> begin (V10 = ('Idris.Idris2.Core.SchemeEval.Compile':'un--nextName'(V0))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V24 = begin (V15 = <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<"-"/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Integer'(V14))/binary>>/binary>>), begin (V16 = ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeApply'(V9, ('Idris.Idris2.Libraries.Utils.Scheme':'un--makeSymbol'(V15))))), begin (V17 = ('un--quote\x{27}'(V0, V1, {'Core.SchemeEval.Compile.::', {'Core.SchemeEval.Compile.Bound', V15}, V2}, V16))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V23 = fun (V22) -> {'Prelude.Types.Right', {'Core.TT.Bind', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, (((((V3('erased'))(('Idris.Idris2.Core.FC':'un--emptyFC'())))(V5))(V6))(V7)), V21}} end), V23 end(V18)) end end end end end end), V24 end(V11)) end end end end; _ -> fun (V25) -> ('un--invalid'(V25)) end end.
'un--quote\x{27}'(V0, V1, V2, V3) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isVector'(V3)) of 1 -> ('un--quoteVector'(V0, V1, V2, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetInteger'(('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeVectorRef'(V3, 0)))), ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeVectorToList'(V3)))); 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isProcedure'(V3)) of 1 -> ('un--quoteBinder'(V0, V1, V2, fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> {'Core.TT.Lam', V5, V6, V7, V8} end end end end end, V3, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Core.TT.Explicit'}, {'Core.TT.Erased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}, {'Core.Name.UN', {'Core.Name.Basic', <<"x"/utf8>>}})); 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isSymbol'(V3)) of 1 -> fun (V9) -> {'Prelude.Types.Right', ('nested--8008-6062--in--un--findName'(V0, V1, V3, V2, V2, ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeReadSymbol'(V3))))} end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isFloat'(V3)) of 1 -> fun (V10) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Db', ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetFloat'(V3))}}} end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isInteger'(V3)) of 1 -> fun (V11) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.I', begin (V12 = ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetInteger'(V3))), case ((V12 band 9223372036854775808) =/= 0) of 'true' -> (V12 bor -9223372036854775808); _ -> (V12 band 9223372036854775807) end end}}} end; 0 -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isString'(V3)) of 1 -> fun (V13) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Str', ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetString'(V3))}}} end; 0 -> fun (V14) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isChar'(V3)) of 1 -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Ch', ('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeGetChar'(V3))}}}; 0 -> ('un--invalid'(V14)) end end end end end end end end.
'un--invalidS'(V0) -> {'Prelude.Types.Right', {'Core.SchemeEval.Evaluate.SErased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}}.
'un--invalid'(V0) -> {'Prelude.Types.Right', {'Core.TT.Erased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}}.
'un--getArgList'(V0) -> case ('Idris.Idris2.Libraries.Utils.Scheme':'un--isPair'(V0)) of 1 -> [('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeFst'(V0)) | ('un--getArgList'(('Idris.Idris2.Libraries.Utils.Scheme':'un--unsafeSnd'(V0))))]; 0 -> [] end.
'un--getAllNames'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> {'Prelude.Types.Right', V1} end; [E0 | E1] -> (fun (V4, V5) -> case ('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V4, V1)) of {'Prelude.Types.Nothing'} -> begin (V11 = begin (V6 = V0), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V55 = begin (V48 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V4, case V15 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> V16 end))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V54 = case V52 of {'Prelude.Types.Just', V53} -> ('un--getAllNames'(V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V4, {'Builtin.MkUnit'}, V1)), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.Context.Context':'un--refersTo'(V53)))))))); _ -> ('un--getAllNames'(V0, V1, V5)) end), V54 end(V49)) end end end end), V55 end(V12)) end end end end; _ -> ('un--getAllNames'(V0, V1, V5)) end end(E0, E1)) end.
