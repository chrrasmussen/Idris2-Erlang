-module('Idris.Idris2.Idris.Syntax.Traversals').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--9507-13272--in--un--goPiInfo'/2,
  'nested--7875-11551--in--un--goPiInfo'/2,
  'nested--9507-13275--in--un--goPairedSnocPTerms'/2,
  'nested--7875-11556--in--un--goPairedSnocPTerms'/2,
  'nested--9507-13274--in--un--goPairedPTerms'/2,
  'nested--7875-11555--in--un--goPairedPTerms'/2,
  'nested--9507-13266--in--un--goPWithProblem'/2,
  'nested--7875-11546--in--un--goPWithProblem'/2,
  'nested--7875-11569--in--un--goPTypeDecls'/2,
  'nested--9507-13269--in--un--goPTypeDecl'/2,
  'nested--7875-11548--in--un--goPTypeDecl'/2,
  'nested--7875-11554--in--un--goPTerms'/2,
  'nested--9507-13262--in--un--goPTerm'/2,
  'nested--7875-11541--in--un--goPTerm'/2,
  'nested--7875-11561--in--un--goPStrings'/2,
  'nested--7875-11560--in--un--goPStringLines'/2,
  'nested--9507-13264--in--un--goPStr'/2,
  'nested--7875-11543--in--un--goPStr'/2,
  'nested--7875-11568--in--un--goPFnOpts'/2,
  'nested--9507-13273--in--un--goPFnOpt'/2,
  'nested--7875-11552--in--un--goPFnOpt'/2,
  'nested--7875-11567--in--un--goPFields'/2,
  'nested--7875-11566--in--un--goPFieldUpdates'/2,
  'nested--9507-13263--in--un--goPFieldUpdate'/2,
  'nested--7875-11542--in--un--goPFieldUpdate'/2,
  'nested--9507-13271--in--un--goPField'/2,
  'nested--7875-11550--in--un--goPField'/2,
  'nested--7875-11562--in--un--goPDos'/2,
  'nested--9507-13265--in--un--goPDo'/2,
  'nested--7875-11544--in--un--goPDo'/2,
  'nested--7875-11565--in--un--goPDecls'/2,
  'nested--9507-13268--in--un--goPDecl'/2,
  'nested--7875-11547--in--un--goPDecl'/2,
  'nested--9507-13270--in--un--goPDataDecl'/2,
  'nested--7875-11549--in--un--goPDataDecl'/2,
  'nested--7875-11563--in--un--goPClauses'/2,
  'nested--9507-13267--in--un--goPClause'/2,
  'nested--7875-11545--in--un--goPClause'/2,
  'nested--7875-11553--in--un--goMPTerm'/2,
  'nested--7875-11564--in--un--goMPDecls'/2,
  'nested--9507-13277--in--un--goImplicits'/2,
  'nested--7875-11558--in--un--goImplicits'/2,
  'nested--9507-13278--in--un--go4TupledPTerms'/2,
  'nested--7875-11559--in--un--go4TupledPTerms'/2,
  'nested--9507-13276--in--un--go3TupledPTerms'/2,
  'nested--7875-11557--in--un--go3TupledPTerms'/2,
  'un--substFC'/2,
  'un--mapPTermM'/2,
  'un--mapPTerm'/2
]).
'nested--9507-13272--in--un--goPiInfo'(V0, V1) -> case V1 of {'Core.TT.DefImplicit', V2} -> {'Core.TT.DefImplicit', ('nested--9507-13262--in--un--goPTerm'(V0, V2))}; _ -> V1 end.
'nested--7875-11551--in--un--goPiInfo'(V0, V1) -> case V1 of {'Core.TT.DefImplicit', V2} -> begin (V3 = ('nested--7875-11541--in--un--goPTerm'(V0, V2))), ((begin (V19 = fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V16, V17, V18)) end end end end end), fun (V20) -> fun (V21) -> ((((V19('erased'))('erased'))(V20))(V21)) end end end((begin (V11 = fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> {'Prelude.Types.Right', (V7(V10))} end end end end end), fun (V12) -> fun (V13) -> ((((V11('erased'))('erased'))(V12))(V13)) end end end(fun (V4) -> {'Core.TT.DefImplicit', V4} end))))(V3)) end; _ -> fun (V22) -> {'Prelude.Types.Right', V1} end end.
'nested--9507-13275--in--un--goPairedSnocPTerms'(V0, V1) -> case V1 of {'Prelude.Basics.Lin'} -> {'Prelude.Basics.Lin'}; {'Prelude.Basics.:<', V2, V3} -> case V3 of {'Builtin.MkPair', V4, V5} -> {'Prelude.Basics.:<', ('nested--9507-13275--in--un--goPairedSnocPTerms'(V0, V2)), {'Builtin.MkPair', V4, ('nested--9507-13262--in--un--goPTerm'(V0, V5))}} end end.
'nested--7875-11556--in--un--goPairedSnocPTerms'(V0, V1) -> case V1 of {'Prelude.Basics.Lin'} -> fun (V2) -> {'Prelude.Types.Right', {'Prelude.Basics.Lin'}} end; {'Prelude.Basics.:<', V3, V4} -> case V4 of {'Builtin.MkPair', V5, V6} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V7 = ('nested--7875-11556--in--un--goPairedSnocPTerms'(V0, V3))), ((begin (V24 = fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V21, V22, V23)) end end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end((begin (V16 = fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> {'Prelude.Types.Right', (V12(V15))} end end end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V8) -> fun (V9) -> {'Prelude.Basics.:<', V8, V9} end end))))(V7)) end, begin (V27 = ('nested--7875-11541--in--un--goPTerm'(V0, V6))), ((begin (V43 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V40, V41, V42)) end end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end((begin (V35 = fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> {'Prelude.Types.Right', (V31(V34))} end end end end end), fun (V36) -> fun (V37) -> ((((V35('erased'))('erased'))(V36))(V37)) end end end(fun (V28) -> {'Builtin.MkPair', V5, V28} end))))(V27)) end)) end end.
'nested--9507-13274--in--un--goPairedPTerms'(V0, V1) -> case V1 of [] -> []; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Builtin.MkPair', V4, V5} -> [{'Builtin.MkPair', V4, ('nested--9507-13262--in--un--goPTerm'(V0, V5))} | ('nested--9507-13274--in--un--goPairedPTerms'(V0, V3))] end end(E0, E1)) end.
'nested--7875-11555--in--un--goPairedPTerms'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V7 = ('nested--7875-11541--in--un--goPTerm'(V0, V6))), ((begin (V24 = fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V21, V22, V23)) end end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end((begin (V16 = fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> {'Prelude.Types.Right', (V12(V15))} end end end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V8) -> fun (V9) -> [{'Builtin.MkPair', V5, V8} | V9] end end))))(V7)) end, ('nested--7875-11555--in--un--goPairedPTerms'(V0, V4)))) end end(E0, E1)) end.
'nested--9507-13266--in--un--goPWithProblem'(V0, V1) -> case V1 of {'Idris.Syntax.MkPWithProblem', V2, V3, V4} -> {'Idris.Syntax.MkPWithProblem', V2, ('nested--9507-13262--in--un--goPTerm'(V0, V3)), V4} end.
'nested--7875-11546--in--un--goPWithProblem'(V0, V1) -> case V1 of {'Idris.Syntax.MkPWithProblem', V2, V3, V4} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11541--in--un--goPTerm'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> {'Idris.Syntax.MkPWithProblem', V2, V6, V7} end end))))(V5)) end, fun (V25) -> {'Prelude.Types.Right', V4} end)) end.
'nested--7875-11569--in--un--goPTypeDecls'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11548--in--un--goPTypeDecl'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11569--in--un--goPTypeDecls'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13269--in--un--goPTypeDecl'(V0, V1) -> case V1 of {'Idris.Syntax.MkPTy', V2, V3, V4, V5, V6} -> {'Idris.Syntax.MkPTy', V2, V3, V4, V5, ('nested--9507-13262--in--un--goPTerm'(V0, V6))} end.
'nested--7875-11548--in--un--goPTypeDecl'(V0, V1) -> case V1 of {'Idris.Syntax.MkPTy', V2, V3, V4, V5, V6} -> begin (V7 = ('nested--7875-11541--in--un--goPTerm'(V0, V6))), ((begin (V23 = fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V20, V21, V22)) end end end end end), fun (V24) -> fun (V25) -> ((((V23('erased'))('erased'))(V24))(V25)) end end end((begin (V15 = fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> {'Prelude.Types.Right', (V11(V14))} end end end end end), fun (V16) -> fun (V17) -> ((((V15('erased'))('erased'))(V16))(V17)) end end end(fun (V8) -> {'Idris.Syntax.MkPTy', V2, V3, V4, V5, V8} end))))(V7)) end end.
'nested--7875-11554--in--un--goPTerms'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11541--in--un--goPTerm'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11554--in--un--goPTerms'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13262--in--un--goPTerm'(V0, V1) -> case V1 of {'Idris.Syntax.PRef', V2, V3} -> (V0(V1)); {'Idris.Syntax.PPi', V4, V5, V6, V7, V8, V9} -> (V0({'Idris.Syntax.PPi', V4, V5, ('nested--9507-13272--in--un--goPiInfo'(V0, V6)), V7, ('nested--9507-13262--in--un--goPTerm'(V0, V8)), ('nested--9507-13262--in--un--goPTerm'(V0, V9))})); {'Idris.Syntax.PLam', V10, V11, V12, V13, V14, V15} -> (V0({'Idris.Syntax.PLam', V10, V11, ('nested--9507-13272--in--un--goPiInfo'(V0, V12)), V13, ('nested--9507-13262--in--un--goPTerm'(V0, V14)), ('nested--9507-13262--in--un--goPTerm'(V0, V15))})); {'Idris.Syntax.PLet', V16, V17, V18, V19, V20, V21, V22} -> (V0({'Idris.Syntax.PLet', V16, V17, ('nested--9507-13262--in--un--goPTerm'(V0, V18)), ('nested--9507-13262--in--un--goPTerm'(V0, V19)), ('nested--9507-13262--in--un--goPTerm'(V0, V20)), ('nested--9507-13262--in--un--goPTerm'(V0, V21)), ((begin (V28 = fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V26, V27)) end end end end), fun (V29) -> fun (V30) -> ((((V28('erased'))('erased'))(V29))(V30)) end end end(fun (V23) -> ('nested--9507-13267--in--un--goPClause'(V0, V23)) end))(V22))})); {'Idris.Syntax.PCase', V31, V32, V33} -> (V0({'Idris.Syntax.PCase', V31, ('nested--9507-13262--in--un--goPTerm'(V0, V32)), ((begin (V39 = fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V37, V38)) end end end end), fun (V40) -> fun (V41) -> ((((V39('erased'))('erased'))(V40))(V41)) end end end(fun (V34) -> ('nested--9507-13267--in--un--goPClause'(V0, V34)) end))(V33))})); {'Idris.Syntax.PLocal', V42, V43, V44} -> (V0({'Idris.Syntax.PLocal', V42, ((begin (V50 = fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V48, V49)) end end end end), fun (V51) -> fun (V52) -> ((((V50('erased'))('erased'))(V51))(V52)) end end end(fun (V45) -> ('nested--9507-13268--in--un--goPDecl'(V0, V45)) end))(V43)), ('nested--9507-13262--in--un--goPTerm'(V0, V44))})); {'Idris.Syntax.PUpdate', V53, V54} -> (V0({'Idris.Syntax.PUpdate', V53, ((begin (V60 = fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V58, V59)) end end end end), fun (V61) -> fun (V62) -> ((((V60('erased'))('erased'))(V61))(V62)) end end end(fun (V55) -> ('nested--9507-13263--in--un--goPFieldUpdate'(V0, V55)) end))(V54))})); {'Idris.Syntax.PApp', V63, V64, V65} -> (V0({'Idris.Syntax.PApp', V63, ('nested--9507-13262--in--un--goPTerm'(V0, V64)), ('nested--9507-13262--in--un--goPTerm'(V0, V65))})); {'Idris.Syntax.PWithApp', V66, V67, V68} -> (V0({'Idris.Syntax.PWithApp', V66, ('nested--9507-13262--in--un--goPTerm'(V0, V67)), ('nested--9507-13262--in--un--goPTerm'(V0, V68))})); {'Idris.Syntax.PAutoApp', V69, V70, V71} -> (V0({'Idris.Syntax.PAutoApp', V69, ('nested--9507-13262--in--un--goPTerm'(V0, V70)), ('nested--9507-13262--in--un--goPTerm'(V0, V71))})); {'Idris.Syntax.PNamedApp', V72, V73, V74, V75} -> (V0({'Idris.Syntax.PNamedApp', V72, ('nested--9507-13262--in--un--goPTerm'(V0, V73)), V74, ('nested--9507-13262--in--un--goPTerm'(V0, V75))})); {'Idris.Syntax.PDelayed', V76, V77, V78} -> (V0({'Idris.Syntax.PDelayed', V76, V77, ('nested--9507-13262--in--un--goPTerm'(V0, V78))})); {'Idris.Syntax.PDelay', V79, V80} -> (V0({'Idris.Syntax.PDelay', V79, ('nested--9507-13262--in--un--goPTerm'(V0, V80))})); {'Idris.Syntax.PForce', V81, V82} -> (V0({'Idris.Syntax.PForce', V81, ('nested--9507-13262--in--un--goPTerm'(V0, V82))})); {'Idris.Syntax.PSearch', V83, V84} -> (V0(V1)); {'Idris.Syntax.PPrimVal', V85, V86} -> (V0(V1)); {'Idris.Syntax.PQuote', V87, V88} -> (V0({'Idris.Syntax.PQuote', V87, ('nested--9507-13262--in--un--goPTerm'(V0, V88))})); {'Idris.Syntax.PQuoteName', V89, V90} -> (V0(V1)); {'Idris.Syntax.PQuoteDecl', V91, V92} -> (V0({'Idris.Syntax.PQuoteDecl', V91, ((begin (V98 = fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V96, V97)) end end end end), fun (V99) -> fun (V100) -> ((((V98('erased'))('erased'))(V99))(V100)) end end end(fun (V93) -> ('nested--9507-13268--in--un--goPDecl'(V0, V93)) end))(V92))})); {'Idris.Syntax.PUnquote', V101, V102} -> (V0({'Idris.Syntax.PUnquote', V101, ('nested--9507-13262--in--un--goPTerm'(V0, V102))})); {'Idris.Syntax.PRunElab', V103, V104} -> (V0({'Idris.Syntax.PRunElab', V103, ('nested--9507-13262--in--un--goPTerm'(V0, V104))})); {'Idris.Syntax.PHole', V105, V106, V107} -> (V0(V1)); {'Idris.Syntax.PType', V108} -> (V0(V1)); {'Idris.Syntax.PAs', V109, V110, V111, V112} -> (V0({'Idris.Syntax.PAs', V109, V110, V111, ('nested--9507-13262--in--un--goPTerm'(V0, V112))})); {'Idris.Syntax.PDotted', V113, V114} -> (V0({'Idris.Syntax.PDotted', V113, ('nested--9507-13262--in--un--goPTerm'(V0, V114))})); {'Idris.Syntax.PImplicit', V115} -> (V0(V1)); {'Idris.Syntax.PInfer', V116} -> (V0(V1)); {'Idris.Syntax.POp', V117, V118, V119, V120, V121} -> (V0({'Idris.Syntax.POp', V117, V118, V119, ('nested--9507-13262--in--un--goPTerm'(V0, V120)), ('nested--9507-13262--in--un--goPTerm'(V0, V121))})); {'Idris.Syntax.PPrefixOp', V122, V123, V124, V125} -> (V0({'Idris.Syntax.PPrefixOp', V122, V123, V124, ('nested--9507-13262--in--un--goPTerm'(V0, V125))})); {'Idris.Syntax.PSectionL', V126, V127, V128, V129} -> (V0({'Idris.Syntax.PSectionL', V126, V127, V128, ('nested--9507-13262--in--un--goPTerm'(V0, V129))})); {'Idris.Syntax.PSectionR', V130, V131, V132, V133} -> (V0({'Idris.Syntax.PSectionR', V130, V131, ('nested--9507-13262--in--un--goPTerm'(V0, V132)), V133})); {'Idris.Syntax.PEq', V134, V135, V136} -> (V0({'Idris.Syntax.PEq', V134, ('nested--9507-13262--in--un--goPTerm'(V0, V135)), ('nested--9507-13262--in--un--goPTerm'(V0, V136))})); {'Idris.Syntax.PBracketed', V137, V138} -> (V0({'Idris.Syntax.PBracketed', V137, ('nested--9507-13262--in--un--goPTerm'(V0, V138))})); {'Idris.Syntax.PString', V139, V140} -> (V0({'Idris.Syntax.PString', V139, ((begin (V146 = fun (V142) -> fun (V143) -> fun (V144) -> fun (V145) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V144, V145)) end end end end), fun (V147) -> fun (V148) -> ((((V146('erased'))('erased'))(V147))(V148)) end end end(fun (V141) -> ('nested--9507-13264--in--un--goPStr'(V0, V141)) end))(V140))})); {'Idris.Syntax.PMultiline', V149, V150, V151} -> (V0({'Idris.Syntax.PMultiline', V149, V150, ((begin (V164 = fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V162, V163)) end end end end), fun (V165) -> fun (V166) -> ((((V164('erased'))('erased'))(V165))(V166)) end end end((begin (V157 = fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V155, V156)) end end end end), fun (V158) -> fun (V159) -> ((((V157('erased'))('erased'))(V158))(V159)) end end end(fun (V152) -> ('nested--9507-13264--in--un--goPStr'(V0, V152)) end))))(V151))})); {'Idris.Syntax.PDoBlock', V167, V168, V169} -> (V0({'Idris.Syntax.PDoBlock', V167, V168, ((begin (V175 = fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V173, V174)) end end end end), fun (V176) -> fun (V177) -> ((((V175('erased'))('erased'))(V176))(V177)) end end end(fun (V170) -> ('nested--9507-13265--in--un--goPDo'(V0, V170)) end))(V169))})); {'Idris.Syntax.PBang', V178, V179} -> (V0({'Idris.Syntax.PBang', V178, ('nested--9507-13262--in--un--goPTerm'(V0, V179))})); {'Idris.Syntax.PIdiom', V180, V181, V182} -> (V0({'Idris.Syntax.PIdiom', V180, V181, ('nested--9507-13262--in--un--goPTerm'(V0, V182))})); {'Idris.Syntax.PList', V183, V184, V185} -> (V0({'Idris.Syntax.PList', V183, V184, ('nested--9507-13274--in--un--goPairedPTerms'(V0, V185))})); {'Idris.Syntax.PSnocList', V186, V187, V188} -> (V0({'Idris.Syntax.PSnocList', V186, V187, ('nested--9507-13275--in--un--goPairedSnocPTerms'(V0, V188))})); {'Idris.Syntax.PPair', V189, V190, V191} -> (V0({'Idris.Syntax.PPair', V189, ('nested--9507-13262--in--un--goPTerm'(V0, V190)), ('nested--9507-13262--in--un--goPTerm'(V0, V191))})); {'Idris.Syntax.PDPair', V192, V193, V194, V195, V196} -> (V0({'Idris.Syntax.PDPair', V192, V193, ('nested--9507-13262--in--un--goPTerm'(V0, V194)), ('nested--9507-13262--in--un--goPTerm'(V0, V195)), ('nested--9507-13262--in--un--goPTerm'(V0, V196))})); {'Idris.Syntax.PUnit', V197} -> (V0(V1)); {'Idris.Syntax.PIfThenElse', V198, V199, V200, V201} -> (V0({'Idris.Syntax.PIfThenElse', V198, ('nested--9507-13262--in--un--goPTerm'(V0, V199)), ('nested--9507-13262--in--un--goPTerm'(V0, V200)), ('nested--9507-13262--in--un--goPTerm'(V0, V201))})); {'Idris.Syntax.PComprehension', V202, V203, V204} -> (V0({'Idris.Syntax.PComprehension', V202, ('nested--9507-13262--in--un--goPTerm'(V0, V203)), ((begin (V210 = fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V208, V209)) end end end end), fun (V211) -> fun (V212) -> ((((V210('erased'))('erased'))(V211))(V212)) end end end(fun (V205) -> ('nested--9507-13265--in--un--goPDo'(V0, V205)) end))(V204))})); {'Idris.Syntax.PRewrite', V213, V214, V215} -> (V0({'Idris.Syntax.PRewrite', V213, ('nested--9507-13262--in--un--goPTerm'(V0, V214)), ('nested--9507-13262--in--un--goPTerm'(V0, V215))})); {'Idris.Syntax.PRange', V216, V217, V218, V219} -> (V0({'Idris.Syntax.PRange', V216, ('nested--9507-13262--in--un--goPTerm'(V0, V217)), ((begin (V225 = fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V223, V224)) end end end end), fun (V226) -> fun (V227) -> ((((V225('erased'))('erased'))(V226))(V227)) end end end(fun (V220) -> ('nested--9507-13262--in--un--goPTerm'(V0, V220)) end))(V218)), ('nested--9507-13262--in--un--goPTerm'(V0, V219))})); {'Idris.Syntax.PRangeStream', V228, V229, V230} -> (V0({'Idris.Syntax.PRangeStream', V228, ('nested--9507-13262--in--un--goPTerm'(V0, V229)), ((begin (V236 = fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V234, V235)) end end end end), fun (V237) -> fun (V238) -> ((((V236('erased'))('erased'))(V237))(V238)) end end end(fun (V231) -> ('nested--9507-13262--in--un--goPTerm'(V0, V231)) end))(V230))})); {'Idris.Syntax.PUnifyLog', V239, V240, V241} -> (V0({'Idris.Syntax.PUnifyLog', V239, V240, ('nested--9507-13262--in--un--goPTerm'(V0, V241))})); {'Idris.Syntax.PPostfixApp', V242, V243, V244} -> (V0({'Idris.Syntax.PPostfixApp', V242, ('nested--9507-13262--in--un--goPTerm'(V0, V243)), V244})); {'Idris.Syntax.PPostfixAppPartial', V245, V246} -> (V0(V1)); {'Idris.Syntax.PWithUnambigNames', V247, V248, V249} -> (V0({'Idris.Syntax.PWithUnambigNames', V247, V248, ('nested--9507-13262--in--un--goPTerm'(V0, V249))})) end.
'nested--7875-11541--in--un--goPTerm'(V0, V1) -> case V1 of {'Idris.Syntax.PRef', V2, V3} -> (V0(V1)); {'Idris.Syntax.PPi', V4, V5, V6, V7, V8, V9} -> begin (V33 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V10 = ('nested--7875-11551--in--un--goPiInfo'(V0, V6))), ((begin (V29 = fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V26, V27, V28)) end end end end end), fun (V30) -> fun (V31) -> ((((V29('erased'))('erased'))(V30))(V31)) end end end((begin (V21 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> {'Prelude.Types.Right', (V17(V20))} end end end end end), fun (V22) -> fun (V23) -> ((((V21('erased'))('erased'))(V22))(V23)) end end end(fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> {'Idris.Syntax.PPi', V4, V5, V11, V12, V13, V14} end end end end))))(V10)) end, fun (V32) -> {'Prelude.Types.Right', V7} end)), ('nested--7875-11541--in--un--goPTerm'(V0, V8)))), ('nested--7875-11541--in--un--goPTerm'(V0, V9))))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V38 = (V0(V37))), V38 end(V34)) end end end end; {'Idris.Syntax.PLam', V39, V40, V41, V42, V43, V44} -> begin (V67 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V45 = ('nested--7875-11551--in--un--goPiInfo'(V0, V41))), ((begin (V64 = fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V61, V62, V63)) end end end end end), fun (V65) -> fun (V66) -> ((((V64('erased'))('erased'))(V65))(V66)) end end end((begin (V56 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> case V53 of {'Prelude.Types.Left', V54} -> {'Prelude.Types.Left', V54}; {'Prelude.Types.Right', V55} -> {'Prelude.Types.Right', (V52(V55))} end end end end end), fun (V57) -> fun (V58) -> ((((V56('erased'))('erased'))(V57))(V58)) end end end(fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> {'Idris.Syntax.PLam', V39, V40, V46, V47, V48, V49} end end end end))))(V45)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V42)))), ('nested--7875-11541--in--un--goPTerm'(V0, V43)))), ('nested--7875-11541--in--un--goPTerm'(V0, V44))))), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V72 = (V0(V71))), V72 end(V68)) end end end end; {'Idris.Syntax.PLet', V73, V74, V75, V76, V77, V78, V79} -> begin (V103 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V80 = ('nested--7875-11541--in--un--goPTerm'(V0, V75))), ((begin (V100 = fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V97, V98, V99)) end end end end end), fun (V101) -> fun (V102) -> ((((V100('erased'))('erased'))(V101))(V102)) end end end((begin (V92 = fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> {'Prelude.Types.Right', (V88(V91))} end end end end end), fun (V93) -> fun (V94) -> ((((V92('erased'))('erased'))(V93))(V94)) end end end(fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> {'Idris.Syntax.PLet', V73, V74, V81, V82, V83, V84, V85} end end end end end))))(V80)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V76)))), ('nested--7875-11541--in--un--goPTerm'(V0, V77)))), ('nested--7875-11541--in--un--goPTerm'(V0, V78)))), ('nested--7875-11563--in--un--goPClauses'(V0, V79))))), fun (V104) -> begin (V105 = (V103(V104))), case V105 of {'Prelude.Types.Left', V106} -> {'Prelude.Types.Left', V106}; {'Prelude.Types.Right', V107} -> (begin (V108 = (V0(V107))), V108 end(V104)) end end end end; {'Idris.Syntax.PCase', V109, V110, V111} -> begin (V132 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V112 = ('nested--7875-11541--in--un--goPTerm'(V0, V110))), ((begin (V129 = fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V126, V127, V128)) end end end end end), fun (V130) -> fun (V131) -> ((((V129('erased'))('erased'))(V130))(V131)) end end end((begin (V121 = fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> case V118 of {'Prelude.Types.Left', V119} -> {'Prelude.Types.Left', V119}; {'Prelude.Types.Right', V120} -> {'Prelude.Types.Right', (V117(V120))} end end end end end), fun (V122) -> fun (V123) -> ((((V121('erased'))('erased'))(V122))(V123)) end end end(fun (V113) -> fun (V114) -> {'Idris.Syntax.PCase', V109, V113, V114} end end))))(V112)) end, ('nested--7875-11563--in--un--goPClauses'(V0, V111))))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V137 = (V0(V136))), V137 end(V133)) end end end end; {'Idris.Syntax.PLocal', V138, V139, V140} -> begin (V161 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V141 = ('nested--7875-11565--in--un--goPDecls'(V0, V139))), ((begin (V158 = fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V155, V156, V157)) end end end end end), fun (V159) -> fun (V160) -> ((((V158('erased'))('erased'))(V159))(V160)) end end end((begin (V150 = fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> case V147 of {'Prelude.Types.Left', V148} -> {'Prelude.Types.Left', V148}; {'Prelude.Types.Right', V149} -> {'Prelude.Types.Right', (V146(V149))} end end end end end), fun (V151) -> fun (V152) -> ((((V150('erased'))('erased'))(V151))(V152)) end end end(fun (V142) -> fun (V143) -> {'Idris.Syntax.PLocal', V138, V142, V143} end end))))(V141)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V140))))), fun (V162) -> begin (V163 = (V161(V162))), case V163 of {'Prelude.Types.Left', V164} -> {'Prelude.Types.Left', V164}; {'Prelude.Types.Right', V165} -> (begin (V166 = (V0(V165))), V166 end(V162)) end end end end; {'Idris.Syntax.PUpdate', V167, V168} -> begin (V188 = begin (V169 = ('nested--7875-11566--in--un--goPFieldUpdates'(V0, V168))), ((begin (V185 = fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V182, V183, V184)) end end end end end), fun (V186) -> fun (V187) -> ((((V185('erased'))('erased'))(V186))(V187)) end end end((begin (V177 = fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> case V174 of {'Prelude.Types.Left', V175} -> {'Prelude.Types.Left', V175}; {'Prelude.Types.Right', V176} -> {'Prelude.Types.Right', (V173(V176))} end end end end end), fun (V178) -> fun (V179) -> ((((V177('erased'))('erased'))(V178))(V179)) end end end(fun (V170) -> {'Idris.Syntax.PUpdate', V167, V170} end))))(V169)) end), fun (V189) -> begin (V190 = (V188(V189))), case V190 of {'Prelude.Types.Left', V191} -> {'Prelude.Types.Left', V191}; {'Prelude.Types.Right', V192} -> (begin (V193 = (V0(V192))), V193 end(V189)) end end end end; {'Idris.Syntax.PApp', V194, V195, V196} -> begin (V217 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V197 = ('nested--7875-11541--in--un--goPTerm'(V0, V195))), ((begin (V214 = fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V211, V212, V213)) end end end end end), fun (V215) -> fun (V216) -> ((((V214('erased'))('erased'))(V215))(V216)) end end end((begin (V206 = fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> case V203 of {'Prelude.Types.Left', V204} -> {'Prelude.Types.Left', V204}; {'Prelude.Types.Right', V205} -> {'Prelude.Types.Right', (V202(V205))} end end end end end), fun (V207) -> fun (V208) -> ((((V206('erased'))('erased'))(V207))(V208)) end end end(fun (V198) -> fun (V199) -> {'Idris.Syntax.PApp', V194, V198, V199} end end))))(V197)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V196))))), fun (V218) -> begin (V219 = (V217(V218))), case V219 of {'Prelude.Types.Left', V220} -> {'Prelude.Types.Left', V220}; {'Prelude.Types.Right', V221} -> (begin (V222 = (V0(V221))), V222 end(V218)) end end end end; {'Idris.Syntax.PWithApp', V223, V224, V225} -> begin (V246 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V226 = ('nested--7875-11541--in--un--goPTerm'(V0, V224))), ((begin (V243 = fun (V238) -> fun (V239) -> fun (V240) -> fun (V241) -> fun (V242) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V240, V241, V242)) end end end end end), fun (V244) -> fun (V245) -> ((((V243('erased'))('erased'))(V244))(V245)) end end end((begin (V235 = fun (V229) -> fun (V230) -> fun (V231) -> fun (V232) -> case V232 of {'Prelude.Types.Left', V233} -> {'Prelude.Types.Left', V233}; {'Prelude.Types.Right', V234} -> {'Prelude.Types.Right', (V231(V234))} end end end end end), fun (V236) -> fun (V237) -> ((((V235('erased'))('erased'))(V236))(V237)) end end end(fun (V227) -> fun (V228) -> {'Idris.Syntax.PWithApp', V223, V227, V228} end end))))(V226)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V225))))), fun (V247) -> begin (V248 = (V246(V247))), case V248 of {'Prelude.Types.Left', V249} -> {'Prelude.Types.Left', V249}; {'Prelude.Types.Right', V250} -> (begin (V251 = (V0(V250))), V251 end(V247)) end end end end; {'Idris.Syntax.PAutoApp', V252, V253, V254} -> begin (V275 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V255 = ('nested--7875-11541--in--un--goPTerm'(V0, V253))), ((begin (V272 = fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> fun (V271) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V269, V270, V271)) end end end end end), fun (V273) -> fun (V274) -> ((((V272('erased'))('erased'))(V273))(V274)) end end end((begin (V264 = fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> case V261 of {'Prelude.Types.Left', V262} -> {'Prelude.Types.Left', V262}; {'Prelude.Types.Right', V263} -> {'Prelude.Types.Right', (V260(V263))} end end end end end), fun (V265) -> fun (V266) -> ((((V264('erased'))('erased'))(V265))(V266)) end end end(fun (V256) -> fun (V257) -> {'Idris.Syntax.PAutoApp', V252, V256, V257} end end))))(V255)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V254))))), fun (V276) -> begin (V277 = (V275(V276))), case V277 of {'Prelude.Types.Left', V278} -> {'Prelude.Types.Left', V278}; {'Prelude.Types.Right', V279} -> (begin (V280 = (V0(V279))), V280 end(V276)) end end end end; {'Idris.Syntax.PNamedApp', V281, V282, V283, V284} -> begin (V307 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V285 = ('nested--7875-11541--in--un--goPTerm'(V0, V282))), ((begin (V303 = fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V300, V301, V302)) end end end end end), fun (V304) -> fun (V305) -> ((((V303('erased'))('erased'))(V304))(V305)) end end end((begin (V295 = fun (V289) -> fun (V290) -> fun (V291) -> fun (V292) -> case V292 of {'Prelude.Types.Left', V293} -> {'Prelude.Types.Left', V293}; {'Prelude.Types.Right', V294} -> {'Prelude.Types.Right', (V291(V294))} end end end end end), fun (V296) -> fun (V297) -> ((((V295('erased'))('erased'))(V296))(V297)) end end end(fun (V286) -> fun (V287) -> fun (V288) -> {'Idris.Syntax.PNamedApp', V281, V286, V287, V288} end end end))))(V285)) end, fun (V306) -> {'Prelude.Types.Right', V283} end)), ('nested--7875-11541--in--un--goPTerm'(V0, V284))))), fun (V308) -> begin (V309 = (V307(V308))), case V309 of {'Prelude.Types.Left', V310} -> {'Prelude.Types.Left', V310}; {'Prelude.Types.Right', V311} -> (begin (V312 = (V0(V311))), V312 end(V308)) end end end end; {'Idris.Syntax.PDelayed', V313, V314, V315} -> begin (V335 = begin (V316 = ('nested--7875-11541--in--un--goPTerm'(V0, V315))), ((begin (V332 = fun (V327) -> fun (V328) -> fun (V329) -> fun (V330) -> fun (V331) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V329, V330, V331)) end end end end end), fun (V333) -> fun (V334) -> ((((V332('erased'))('erased'))(V333))(V334)) end end end((begin (V324 = fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> case V321 of {'Prelude.Types.Left', V322} -> {'Prelude.Types.Left', V322}; {'Prelude.Types.Right', V323} -> {'Prelude.Types.Right', (V320(V323))} end end end end end), fun (V325) -> fun (V326) -> ((((V324('erased'))('erased'))(V325))(V326)) end end end(fun (V317) -> {'Idris.Syntax.PDelayed', V313, V314, V317} end))))(V316)) end), fun (V336) -> begin (V337 = (V335(V336))), case V337 of {'Prelude.Types.Left', V338} -> {'Prelude.Types.Left', V338}; {'Prelude.Types.Right', V339} -> (begin (V340 = (V0(V339))), V340 end(V336)) end end end end; {'Idris.Syntax.PDelay', V341, V342} -> begin (V362 = begin (V343 = ('nested--7875-11541--in--un--goPTerm'(V0, V342))), ((begin (V359 = fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V356, V357, V358)) end end end end end), fun (V360) -> fun (V361) -> ((((V359('erased'))('erased'))(V360))(V361)) end end end((begin (V351 = fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> case V348 of {'Prelude.Types.Left', V349} -> {'Prelude.Types.Left', V349}; {'Prelude.Types.Right', V350} -> {'Prelude.Types.Right', (V347(V350))} end end end end end), fun (V352) -> fun (V353) -> ((((V351('erased'))('erased'))(V352))(V353)) end end end(fun (V344) -> {'Idris.Syntax.PDelay', V341, V344} end))))(V343)) end), fun (V363) -> begin (V364 = (V362(V363))), case V364 of {'Prelude.Types.Left', V365} -> {'Prelude.Types.Left', V365}; {'Prelude.Types.Right', V366} -> (begin (V367 = (V0(V366))), V367 end(V363)) end end end end; {'Idris.Syntax.PForce', V368, V369} -> begin (V389 = begin (V370 = ('nested--7875-11541--in--un--goPTerm'(V0, V369))), ((begin (V386 = fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V383, V384, V385)) end end end end end), fun (V387) -> fun (V388) -> ((((V386('erased'))('erased'))(V387))(V388)) end end end((begin (V378 = fun (V372) -> fun (V373) -> fun (V374) -> fun (V375) -> case V375 of {'Prelude.Types.Left', V376} -> {'Prelude.Types.Left', V376}; {'Prelude.Types.Right', V377} -> {'Prelude.Types.Right', (V374(V377))} end end end end end), fun (V379) -> fun (V380) -> ((((V378('erased'))('erased'))(V379))(V380)) end end end(fun (V371) -> {'Idris.Syntax.PForce', V368, V371} end))))(V370)) end), fun (V390) -> begin (V391 = (V389(V390))), case V391 of {'Prelude.Types.Left', V392} -> {'Prelude.Types.Left', V392}; {'Prelude.Types.Right', V393} -> (begin (V394 = (V0(V393))), V394 end(V390)) end end end end; {'Idris.Syntax.PSearch', V395, V396} -> (V0(V1)); {'Idris.Syntax.PPrimVal', V397, V398} -> (V0(V1)); {'Idris.Syntax.PQuote', V399, V400} -> begin (V420 = begin (V401 = ('nested--7875-11541--in--un--goPTerm'(V0, V400))), ((begin (V417 = fun (V412) -> fun (V413) -> fun (V414) -> fun (V415) -> fun (V416) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V414, V415, V416)) end end end end end), fun (V418) -> fun (V419) -> ((((V417('erased'))('erased'))(V418))(V419)) end end end((begin (V409 = fun (V403) -> fun (V404) -> fun (V405) -> fun (V406) -> case V406 of {'Prelude.Types.Left', V407} -> {'Prelude.Types.Left', V407}; {'Prelude.Types.Right', V408} -> {'Prelude.Types.Right', (V405(V408))} end end end end end), fun (V410) -> fun (V411) -> ((((V409('erased'))('erased'))(V410))(V411)) end end end(fun (V402) -> {'Idris.Syntax.PQuote', V399, V402} end))))(V401)) end), fun (V421) -> begin (V422 = (V420(V421))), case V422 of {'Prelude.Types.Left', V423} -> {'Prelude.Types.Left', V423}; {'Prelude.Types.Right', V424} -> (begin (V425 = (V0(V424))), V425 end(V421)) end end end end; {'Idris.Syntax.PQuoteName', V426, V427} -> (V0(V1)); {'Idris.Syntax.PQuoteDecl', V428, V429} -> begin (V450 = begin (V431 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V430) -> ('nested--7875-11547--in--un--goPDecl'(V0, V430)) end, V429, []))), ((begin (V447 = fun (V442) -> fun (V443) -> fun (V444) -> fun (V445) -> fun (V446) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V444, V445, V446)) end end end end end), fun (V448) -> fun (V449) -> ((((V447('erased'))('erased'))(V448))(V449)) end end end((begin (V439 = fun (V433) -> fun (V434) -> fun (V435) -> fun (V436) -> case V436 of {'Prelude.Types.Left', V437} -> {'Prelude.Types.Left', V437}; {'Prelude.Types.Right', V438} -> {'Prelude.Types.Right', (V435(V438))} end end end end end), fun (V440) -> fun (V441) -> ((((V439('erased'))('erased'))(V440))(V441)) end end end(fun (V432) -> {'Idris.Syntax.PQuoteDecl', V428, V432} end))))(V431)) end), fun (V451) -> begin (V452 = (V450(V451))), case V452 of {'Prelude.Types.Left', V453} -> {'Prelude.Types.Left', V453}; {'Prelude.Types.Right', V454} -> (begin (V455 = (V0(V454))), V455 end(V451)) end end end end; {'Idris.Syntax.PUnquote', V456, V457} -> begin (V477 = begin (V458 = ('nested--7875-11541--in--un--goPTerm'(V0, V457))), ((begin (V474 = fun (V469) -> fun (V470) -> fun (V471) -> fun (V472) -> fun (V473) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V471, V472, V473)) end end end end end), fun (V475) -> fun (V476) -> ((((V474('erased'))('erased'))(V475))(V476)) end end end((begin (V466 = fun (V460) -> fun (V461) -> fun (V462) -> fun (V463) -> case V463 of {'Prelude.Types.Left', V464} -> {'Prelude.Types.Left', V464}; {'Prelude.Types.Right', V465} -> {'Prelude.Types.Right', (V462(V465))} end end end end end), fun (V467) -> fun (V468) -> ((((V466('erased'))('erased'))(V467))(V468)) end end end(fun (V459) -> {'Idris.Syntax.PUnquote', V456, V459} end))))(V458)) end), fun (V478) -> begin (V479 = (V477(V478))), case V479 of {'Prelude.Types.Left', V480} -> {'Prelude.Types.Left', V480}; {'Prelude.Types.Right', V481} -> (begin (V482 = (V0(V481))), V482 end(V478)) end end end end; {'Idris.Syntax.PRunElab', V483, V484} -> begin (V504 = begin (V485 = ('nested--7875-11541--in--un--goPTerm'(V0, V484))), ((begin (V501 = fun (V496) -> fun (V497) -> fun (V498) -> fun (V499) -> fun (V500) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V498, V499, V500)) end end end end end), fun (V502) -> fun (V503) -> ((((V501('erased'))('erased'))(V502))(V503)) end end end((begin (V493 = fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> case V490 of {'Prelude.Types.Left', V491} -> {'Prelude.Types.Left', V491}; {'Prelude.Types.Right', V492} -> {'Prelude.Types.Right', (V489(V492))} end end end end end), fun (V494) -> fun (V495) -> ((((V493('erased'))('erased'))(V494))(V495)) end end end(fun (V486) -> {'Idris.Syntax.PRunElab', V483, V486} end))))(V485)) end), fun (V505) -> begin (V506 = (V504(V505))), case V506 of {'Prelude.Types.Left', V507} -> {'Prelude.Types.Left', V507}; {'Prelude.Types.Right', V508} -> (begin (V509 = (V0(V508))), V509 end(V505)) end end end end; {'Idris.Syntax.PHole', V510, V511, V512} -> (V0(V1)); {'Idris.Syntax.PType', V513} -> (V0(V1)); {'Idris.Syntax.PAs', V514, V515, V516, V517} -> begin (V537 = begin (V518 = ('nested--7875-11541--in--un--goPTerm'(V0, V517))), ((begin (V534 = fun (V529) -> fun (V530) -> fun (V531) -> fun (V532) -> fun (V533) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V531, V532, V533)) end end end end end), fun (V535) -> fun (V536) -> ((((V534('erased'))('erased'))(V535))(V536)) end end end((begin (V526 = fun (V520) -> fun (V521) -> fun (V522) -> fun (V523) -> case V523 of {'Prelude.Types.Left', V524} -> {'Prelude.Types.Left', V524}; {'Prelude.Types.Right', V525} -> {'Prelude.Types.Right', (V522(V525))} end end end end end), fun (V527) -> fun (V528) -> ((((V526('erased'))('erased'))(V527))(V528)) end end end(fun (V519) -> {'Idris.Syntax.PAs', V514, V515, V516, V519} end))))(V518)) end), fun (V538) -> begin (V539 = (V537(V538))), case V539 of {'Prelude.Types.Left', V540} -> {'Prelude.Types.Left', V540}; {'Prelude.Types.Right', V541} -> (begin (V542 = (V0(V541))), V542 end(V538)) end end end end; {'Idris.Syntax.PDotted', V543, V544} -> begin (V564 = begin (V545 = ('nested--7875-11541--in--un--goPTerm'(V0, V544))), ((begin (V561 = fun (V556) -> fun (V557) -> fun (V558) -> fun (V559) -> fun (V560) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V558, V559, V560)) end end end end end), fun (V562) -> fun (V563) -> ((((V561('erased'))('erased'))(V562))(V563)) end end end((begin (V553 = fun (V547) -> fun (V548) -> fun (V549) -> fun (V550) -> case V550 of {'Prelude.Types.Left', V551} -> {'Prelude.Types.Left', V551}; {'Prelude.Types.Right', V552} -> {'Prelude.Types.Right', (V549(V552))} end end end end end), fun (V554) -> fun (V555) -> ((((V553('erased'))('erased'))(V554))(V555)) end end end(fun (V546) -> {'Idris.Syntax.PDotted', V543, V546} end))))(V545)) end), fun (V565) -> begin (V566 = (V564(V565))), case V566 of {'Prelude.Types.Left', V567} -> {'Prelude.Types.Left', V567}; {'Prelude.Types.Right', V568} -> (begin (V569 = (V0(V568))), V569 end(V565)) end end end end; {'Idris.Syntax.PImplicit', V570} -> (V0(V1)); {'Idris.Syntax.PInfer', V571} -> (V0(V1)); {'Idris.Syntax.POp', V572, V573, V574, V575, V576} -> begin (V597 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V577 = ('nested--7875-11541--in--un--goPTerm'(V0, V575))), ((begin (V594 = fun (V589) -> fun (V590) -> fun (V591) -> fun (V592) -> fun (V593) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V591, V592, V593)) end end end end end), fun (V595) -> fun (V596) -> ((((V594('erased'))('erased'))(V595))(V596)) end end end((begin (V586 = fun (V580) -> fun (V581) -> fun (V582) -> fun (V583) -> case V583 of {'Prelude.Types.Left', V584} -> {'Prelude.Types.Left', V584}; {'Prelude.Types.Right', V585} -> {'Prelude.Types.Right', (V582(V585))} end end end end end), fun (V587) -> fun (V588) -> ((((V586('erased'))('erased'))(V587))(V588)) end end end(fun (V578) -> fun (V579) -> {'Idris.Syntax.POp', V572, V573, V574, V578, V579} end end))))(V577)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V576))))), fun (V598) -> begin (V599 = (V597(V598))), case V599 of {'Prelude.Types.Left', V600} -> {'Prelude.Types.Left', V600}; {'Prelude.Types.Right', V601} -> (begin (V602 = (V0(V601))), V602 end(V598)) end end end end; {'Idris.Syntax.PPrefixOp', V603, V604, V605, V606} -> begin (V626 = begin (V607 = ('nested--7875-11541--in--un--goPTerm'(V0, V606))), ((begin (V623 = fun (V618) -> fun (V619) -> fun (V620) -> fun (V621) -> fun (V622) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V620, V621, V622)) end end end end end), fun (V624) -> fun (V625) -> ((((V623('erased'))('erased'))(V624))(V625)) end end end((begin (V615 = fun (V609) -> fun (V610) -> fun (V611) -> fun (V612) -> case V612 of {'Prelude.Types.Left', V613} -> {'Prelude.Types.Left', V613}; {'Prelude.Types.Right', V614} -> {'Prelude.Types.Right', (V611(V614))} end end end end end), fun (V616) -> fun (V617) -> ((((V615('erased'))('erased'))(V616))(V617)) end end end(fun (V608) -> {'Idris.Syntax.PPrefixOp', V603, V604, V605, V608} end))))(V607)) end), fun (V627) -> begin (V628 = (V626(V627))), case V628 of {'Prelude.Types.Left', V629} -> {'Prelude.Types.Left', V629}; {'Prelude.Types.Right', V630} -> (begin (V631 = (V0(V630))), V631 end(V627)) end end end end; {'Idris.Syntax.PSectionL', V632, V633, V634, V635} -> begin (V655 = begin (V636 = ('nested--7875-11541--in--un--goPTerm'(V0, V635))), ((begin (V652 = fun (V647) -> fun (V648) -> fun (V649) -> fun (V650) -> fun (V651) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V649, V650, V651)) end end end end end), fun (V653) -> fun (V654) -> ((((V652('erased'))('erased'))(V653))(V654)) end end end((begin (V644 = fun (V638) -> fun (V639) -> fun (V640) -> fun (V641) -> case V641 of {'Prelude.Types.Left', V642} -> {'Prelude.Types.Left', V642}; {'Prelude.Types.Right', V643} -> {'Prelude.Types.Right', (V640(V643))} end end end end end), fun (V645) -> fun (V646) -> ((((V644('erased'))('erased'))(V645))(V646)) end end end(fun (V637) -> {'Idris.Syntax.PSectionL', V632, V633, V634, V637} end))))(V636)) end), fun (V656) -> begin (V657 = (V655(V656))), case V657 of {'Prelude.Types.Left', V658} -> {'Prelude.Types.Left', V658}; {'Prelude.Types.Right', V659} -> (begin (V660 = (V0(V659))), V660 end(V656)) end end end end; {'Idris.Syntax.PSectionR', V661, V662, V663, V664} -> begin (V686 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V665 = ('nested--7875-11541--in--un--goPTerm'(V0, V663))), ((begin (V682 = fun (V677) -> fun (V678) -> fun (V679) -> fun (V680) -> fun (V681) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V679, V680, V681)) end end end end end), fun (V683) -> fun (V684) -> ((((V682('erased'))('erased'))(V683))(V684)) end end end((begin (V674 = fun (V668) -> fun (V669) -> fun (V670) -> fun (V671) -> case V671 of {'Prelude.Types.Left', V672} -> {'Prelude.Types.Left', V672}; {'Prelude.Types.Right', V673} -> {'Prelude.Types.Right', (V670(V673))} end end end end end), fun (V675) -> fun (V676) -> ((((V674('erased'))('erased'))(V675))(V676)) end end end(fun (V666) -> fun (V667) -> {'Idris.Syntax.PSectionR', V661, V662, V666, V667} end end))))(V665)) end, fun (V685) -> {'Prelude.Types.Right', V664} end))), fun (V687) -> begin (V688 = (V686(V687))), case V688 of {'Prelude.Types.Left', V689} -> {'Prelude.Types.Left', V689}; {'Prelude.Types.Right', V690} -> (begin (V691 = (V0(V690))), V691 end(V687)) end end end end; {'Idris.Syntax.PEq', V692, V693, V694} -> begin (V715 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V695 = ('nested--7875-11541--in--un--goPTerm'(V0, V693))), ((begin (V712 = fun (V707) -> fun (V708) -> fun (V709) -> fun (V710) -> fun (V711) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V709, V710, V711)) end end end end end), fun (V713) -> fun (V714) -> ((((V712('erased'))('erased'))(V713))(V714)) end end end((begin (V704 = fun (V698) -> fun (V699) -> fun (V700) -> fun (V701) -> case V701 of {'Prelude.Types.Left', V702} -> {'Prelude.Types.Left', V702}; {'Prelude.Types.Right', V703} -> {'Prelude.Types.Right', (V700(V703))} end end end end end), fun (V705) -> fun (V706) -> ((((V704('erased'))('erased'))(V705))(V706)) end end end(fun (V696) -> fun (V697) -> {'Idris.Syntax.PEq', V692, V696, V697} end end))))(V695)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V694))))), fun (V716) -> begin (V717 = (V715(V716))), case V717 of {'Prelude.Types.Left', V718} -> {'Prelude.Types.Left', V718}; {'Prelude.Types.Right', V719} -> (begin (V720 = (V0(V719))), V720 end(V716)) end end end end; {'Idris.Syntax.PBracketed', V721, V722} -> begin (V742 = begin (V723 = ('nested--7875-11541--in--un--goPTerm'(V0, V722))), ((begin (V739 = fun (V734) -> fun (V735) -> fun (V736) -> fun (V737) -> fun (V738) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V736, V737, V738)) end end end end end), fun (V740) -> fun (V741) -> ((((V739('erased'))('erased'))(V740))(V741)) end end end((begin (V731 = fun (V725) -> fun (V726) -> fun (V727) -> fun (V728) -> case V728 of {'Prelude.Types.Left', V729} -> {'Prelude.Types.Left', V729}; {'Prelude.Types.Right', V730} -> {'Prelude.Types.Right', (V727(V730))} end end end end end), fun (V732) -> fun (V733) -> ((((V731('erased'))('erased'))(V732))(V733)) end end end(fun (V724) -> {'Idris.Syntax.PBracketed', V721, V724} end))))(V723)) end), fun (V743) -> begin (V744 = (V742(V743))), case V744 of {'Prelude.Types.Left', V745} -> {'Prelude.Types.Left', V745}; {'Prelude.Types.Right', V746} -> (begin (V747 = (V0(V746))), V747 end(V743)) end end end end; {'Idris.Syntax.PString', V748, V749} -> begin (V769 = begin (V750 = ('nested--7875-11561--in--un--goPStrings'(V0, V749))), ((begin (V766 = fun (V761) -> fun (V762) -> fun (V763) -> fun (V764) -> fun (V765) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V763, V764, V765)) end end end end end), fun (V767) -> fun (V768) -> ((((V766('erased'))('erased'))(V767))(V768)) end end end((begin (V758 = fun (V752) -> fun (V753) -> fun (V754) -> fun (V755) -> case V755 of {'Prelude.Types.Left', V756} -> {'Prelude.Types.Left', V756}; {'Prelude.Types.Right', V757} -> {'Prelude.Types.Right', (V754(V757))} end end end end end), fun (V759) -> fun (V760) -> ((((V758('erased'))('erased'))(V759))(V760)) end end end(fun (V751) -> {'Idris.Syntax.PString', V748, V751} end))))(V750)) end), fun (V770) -> begin (V771 = (V769(V770))), case V771 of {'Prelude.Types.Left', V772} -> {'Prelude.Types.Left', V772}; {'Prelude.Types.Right', V773} -> (begin (V774 = (V0(V773))), V774 end(V770)) end end end end; {'Idris.Syntax.PMultiline', V775, V776, V777} -> begin (V797 = begin (V778 = ('nested--7875-11560--in--un--goPStringLines'(V0, V777))), ((begin (V794 = fun (V789) -> fun (V790) -> fun (V791) -> fun (V792) -> fun (V793) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V791, V792, V793)) end end end end end), fun (V795) -> fun (V796) -> ((((V794('erased'))('erased'))(V795))(V796)) end end end((begin (V786 = fun (V780) -> fun (V781) -> fun (V782) -> fun (V783) -> case V783 of {'Prelude.Types.Left', V784} -> {'Prelude.Types.Left', V784}; {'Prelude.Types.Right', V785} -> {'Prelude.Types.Right', (V782(V785))} end end end end end), fun (V787) -> fun (V788) -> ((((V786('erased'))('erased'))(V787))(V788)) end end end(fun (V779) -> {'Idris.Syntax.PMultiline', V775, V776, V779} end))))(V778)) end), fun (V798) -> begin (V799 = (V797(V798))), case V799 of {'Prelude.Types.Left', V800} -> {'Prelude.Types.Left', V800}; {'Prelude.Types.Right', V801} -> (begin (V802 = (V0(V801))), V802 end(V798)) end end end end; {'Idris.Syntax.PDoBlock', V803, V804, V805} -> begin (V825 = begin (V806 = ('nested--7875-11562--in--un--goPDos'(V0, V805))), ((begin (V822 = fun (V817) -> fun (V818) -> fun (V819) -> fun (V820) -> fun (V821) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V819, V820, V821)) end end end end end), fun (V823) -> fun (V824) -> ((((V822('erased'))('erased'))(V823))(V824)) end end end((begin (V814 = fun (V808) -> fun (V809) -> fun (V810) -> fun (V811) -> case V811 of {'Prelude.Types.Left', V812} -> {'Prelude.Types.Left', V812}; {'Prelude.Types.Right', V813} -> {'Prelude.Types.Right', (V810(V813))} end end end end end), fun (V815) -> fun (V816) -> ((((V814('erased'))('erased'))(V815))(V816)) end end end(fun (V807) -> {'Idris.Syntax.PDoBlock', V803, V804, V807} end))))(V806)) end), fun (V826) -> begin (V827 = (V825(V826))), case V827 of {'Prelude.Types.Left', V828} -> {'Prelude.Types.Left', V828}; {'Prelude.Types.Right', V829} -> (begin (V830 = (V0(V829))), V830 end(V826)) end end end end; {'Idris.Syntax.PBang', V831, V832} -> begin (V852 = begin (V833 = ('nested--7875-11541--in--un--goPTerm'(V0, V832))), ((begin (V849 = fun (V844) -> fun (V845) -> fun (V846) -> fun (V847) -> fun (V848) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V846, V847, V848)) end end end end end), fun (V850) -> fun (V851) -> ((((V849('erased'))('erased'))(V850))(V851)) end end end((begin (V841 = fun (V835) -> fun (V836) -> fun (V837) -> fun (V838) -> case V838 of {'Prelude.Types.Left', V839} -> {'Prelude.Types.Left', V839}; {'Prelude.Types.Right', V840} -> {'Prelude.Types.Right', (V837(V840))} end end end end end), fun (V842) -> fun (V843) -> ((((V841('erased'))('erased'))(V842))(V843)) end end end(fun (V834) -> {'Idris.Syntax.PBang', V831, V834} end))))(V833)) end), fun (V853) -> begin (V854 = (V852(V853))), case V854 of {'Prelude.Types.Left', V855} -> {'Prelude.Types.Left', V855}; {'Prelude.Types.Right', V856} -> (begin (V857 = (V0(V856))), V857 end(V853)) end end end end; {'Idris.Syntax.PIdiom', V858, V859, V860} -> begin (V880 = begin (V861 = ('nested--7875-11541--in--un--goPTerm'(V0, V860))), ((begin (V877 = fun (V872) -> fun (V873) -> fun (V874) -> fun (V875) -> fun (V876) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V874, V875, V876)) end end end end end), fun (V878) -> fun (V879) -> ((((V877('erased'))('erased'))(V878))(V879)) end end end((begin (V869 = fun (V863) -> fun (V864) -> fun (V865) -> fun (V866) -> case V866 of {'Prelude.Types.Left', V867} -> {'Prelude.Types.Left', V867}; {'Prelude.Types.Right', V868} -> {'Prelude.Types.Right', (V865(V868))} end end end end end), fun (V870) -> fun (V871) -> ((((V869('erased'))('erased'))(V870))(V871)) end end end(fun (V862) -> {'Idris.Syntax.PIdiom', V858, V859, V862} end))))(V861)) end), fun (V881) -> begin (V882 = (V880(V881))), case V882 of {'Prelude.Types.Left', V883} -> {'Prelude.Types.Left', V883}; {'Prelude.Types.Right', V884} -> (begin (V885 = (V0(V884))), V885 end(V881)) end end end end; {'Idris.Syntax.PList', V886, V887, V888} -> begin (V908 = begin (V889 = ('nested--7875-11555--in--un--goPairedPTerms'(V0, V888))), ((begin (V905 = fun (V900) -> fun (V901) -> fun (V902) -> fun (V903) -> fun (V904) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V902, V903, V904)) end end end end end), fun (V906) -> fun (V907) -> ((((V905('erased'))('erased'))(V906))(V907)) end end end((begin (V897 = fun (V891) -> fun (V892) -> fun (V893) -> fun (V894) -> case V894 of {'Prelude.Types.Left', V895} -> {'Prelude.Types.Left', V895}; {'Prelude.Types.Right', V896} -> {'Prelude.Types.Right', (V893(V896))} end end end end end), fun (V898) -> fun (V899) -> ((((V897('erased'))('erased'))(V898))(V899)) end end end(fun (V890) -> {'Idris.Syntax.PList', V886, V887, V890} end))))(V889)) end), fun (V909) -> begin (V910 = (V908(V909))), case V910 of {'Prelude.Types.Left', V911} -> {'Prelude.Types.Left', V911}; {'Prelude.Types.Right', V912} -> (begin (V913 = (V0(V912))), V913 end(V909)) end end end end; {'Idris.Syntax.PSnocList', V914, V915, V916} -> begin (V936 = begin (V917 = ('nested--7875-11556--in--un--goPairedSnocPTerms'(V0, V916))), ((begin (V933 = fun (V928) -> fun (V929) -> fun (V930) -> fun (V931) -> fun (V932) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V930, V931, V932)) end end end end end), fun (V934) -> fun (V935) -> ((((V933('erased'))('erased'))(V934))(V935)) end end end((begin (V925 = fun (V919) -> fun (V920) -> fun (V921) -> fun (V922) -> case V922 of {'Prelude.Types.Left', V923} -> {'Prelude.Types.Left', V923}; {'Prelude.Types.Right', V924} -> {'Prelude.Types.Right', (V921(V924))} end end end end end), fun (V926) -> fun (V927) -> ((((V925('erased'))('erased'))(V926))(V927)) end end end(fun (V918) -> {'Idris.Syntax.PSnocList', V914, V915, V918} end))))(V917)) end), fun (V937) -> begin (V938 = (V936(V937))), case V938 of {'Prelude.Types.Left', V939} -> {'Prelude.Types.Left', V939}; {'Prelude.Types.Right', V940} -> (begin (V941 = (V0(V940))), V941 end(V937)) end end end end; {'Idris.Syntax.PPair', V942, V943, V944} -> begin (V965 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V945 = ('nested--7875-11541--in--un--goPTerm'(V0, V943))), ((begin (V962 = fun (V957) -> fun (V958) -> fun (V959) -> fun (V960) -> fun (V961) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V959, V960, V961)) end end end end end), fun (V963) -> fun (V964) -> ((((V962('erased'))('erased'))(V963))(V964)) end end end((begin (V954 = fun (V948) -> fun (V949) -> fun (V950) -> fun (V951) -> case V951 of {'Prelude.Types.Left', V952} -> {'Prelude.Types.Left', V952}; {'Prelude.Types.Right', V953} -> {'Prelude.Types.Right', (V950(V953))} end end end end end), fun (V955) -> fun (V956) -> ((((V954('erased'))('erased'))(V955))(V956)) end end end(fun (V946) -> fun (V947) -> {'Idris.Syntax.PPair', V942, V946, V947} end end))))(V945)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V944))))), fun (V966) -> begin (V967 = (V965(V966))), case V967 of {'Prelude.Types.Left', V968} -> {'Prelude.Types.Left', V968}; {'Prelude.Types.Right', V969} -> (begin (V970 = (V0(V969))), V970 end(V966)) end end end end; {'Idris.Syntax.PDPair', V971, V972, V973, V974, V975} -> begin (V997 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V976 = ('nested--7875-11541--in--un--goPTerm'(V0, V973))), ((begin (V994 = fun (V989) -> fun (V990) -> fun (V991) -> fun (V992) -> fun (V993) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V991, V992, V993)) end end end end end), fun (V995) -> fun (V996) -> ((((V994('erased'))('erased'))(V995))(V996)) end end end((begin (V986 = fun (V980) -> fun (V981) -> fun (V982) -> fun (V983) -> case V983 of {'Prelude.Types.Left', V984} -> {'Prelude.Types.Left', V984}; {'Prelude.Types.Right', V985} -> {'Prelude.Types.Right', (V982(V985))} end end end end end), fun (V987) -> fun (V988) -> ((((V986('erased'))('erased'))(V987))(V988)) end end end(fun (V977) -> fun (V978) -> fun (V979) -> {'Idris.Syntax.PDPair', V971, V972, V977, V978, V979} end end end))))(V976)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V974)))), ('nested--7875-11541--in--un--goPTerm'(V0, V975))))), fun (V998) -> begin (V999 = (V997(V998))), case V999 of {'Prelude.Types.Left', V1000} -> {'Prelude.Types.Left', V1000}; {'Prelude.Types.Right', V1001} -> (begin (V1002 = (V0(V1001))), V1002 end(V998)) end end end end; {'Idris.Syntax.PUnit', V1003} -> (V0(V1)); {'Idris.Syntax.PIfThenElse', V1004, V1005, V1006, V1007} -> begin (V1029 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V1008 = ('nested--7875-11541--in--un--goPTerm'(V0, V1005))), ((begin (V1026 = fun (V1021) -> fun (V1022) -> fun (V1023) -> fun (V1024) -> fun (V1025) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1023, V1024, V1025)) end end end end end), fun (V1027) -> fun (V1028) -> ((((V1026('erased'))('erased'))(V1027))(V1028)) end end end((begin (V1018 = fun (V1012) -> fun (V1013) -> fun (V1014) -> fun (V1015) -> case V1015 of {'Prelude.Types.Left', V1016} -> {'Prelude.Types.Left', V1016}; {'Prelude.Types.Right', V1017} -> {'Prelude.Types.Right', (V1014(V1017))} end end end end end), fun (V1019) -> fun (V1020) -> ((((V1018('erased'))('erased'))(V1019))(V1020)) end end end(fun (V1009) -> fun (V1010) -> fun (V1011) -> {'Idris.Syntax.PIfThenElse', V1004, V1009, V1010, V1011} end end end))))(V1008)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V1006)))), ('nested--7875-11541--in--un--goPTerm'(V0, V1007))))), fun (V1030) -> begin (V1031 = (V1029(V1030))), case V1031 of {'Prelude.Types.Left', V1032} -> {'Prelude.Types.Left', V1032}; {'Prelude.Types.Right', V1033} -> (begin (V1034 = (V0(V1033))), V1034 end(V1030)) end end end end; {'Idris.Syntax.PComprehension', V1035, V1036, V1037} -> begin (V1058 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V1038 = ('nested--7875-11541--in--un--goPTerm'(V0, V1036))), ((begin (V1055 = fun (V1050) -> fun (V1051) -> fun (V1052) -> fun (V1053) -> fun (V1054) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1052, V1053, V1054)) end end end end end), fun (V1056) -> fun (V1057) -> ((((V1055('erased'))('erased'))(V1056))(V1057)) end end end((begin (V1047 = fun (V1041) -> fun (V1042) -> fun (V1043) -> fun (V1044) -> case V1044 of {'Prelude.Types.Left', V1045} -> {'Prelude.Types.Left', V1045}; {'Prelude.Types.Right', V1046} -> {'Prelude.Types.Right', (V1043(V1046))} end end end end end), fun (V1048) -> fun (V1049) -> ((((V1047('erased'))('erased'))(V1048))(V1049)) end end end(fun (V1039) -> fun (V1040) -> {'Idris.Syntax.PComprehension', V1035, V1039, V1040} end end))))(V1038)) end, ('nested--7875-11562--in--un--goPDos'(V0, V1037))))), fun (V1059) -> begin (V1060 = (V1058(V1059))), case V1060 of {'Prelude.Types.Left', V1061} -> {'Prelude.Types.Left', V1061}; {'Prelude.Types.Right', V1062} -> (begin (V1063 = (V0(V1062))), V1063 end(V1059)) end end end end; {'Idris.Syntax.PRewrite', V1064, V1065, V1066} -> begin (V1087 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V1067 = ('nested--7875-11541--in--un--goPTerm'(V0, V1065))), ((begin (V1084 = fun (V1079) -> fun (V1080) -> fun (V1081) -> fun (V1082) -> fun (V1083) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1081, V1082, V1083)) end end end end end), fun (V1085) -> fun (V1086) -> ((((V1084('erased'))('erased'))(V1085))(V1086)) end end end((begin (V1076 = fun (V1070) -> fun (V1071) -> fun (V1072) -> fun (V1073) -> case V1073 of {'Prelude.Types.Left', V1074} -> {'Prelude.Types.Left', V1074}; {'Prelude.Types.Right', V1075} -> {'Prelude.Types.Right', (V1072(V1075))} end end end end end), fun (V1077) -> fun (V1078) -> ((((V1076('erased'))('erased'))(V1077))(V1078)) end end end(fun (V1068) -> fun (V1069) -> {'Idris.Syntax.PRewrite', V1064, V1068, V1069} end end))))(V1067)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V1066))))), fun (V1088) -> begin (V1089 = (V1087(V1088))), case V1089 of {'Prelude.Types.Left', V1090} -> {'Prelude.Types.Left', V1090}; {'Prelude.Types.Right', V1091} -> (begin (V1092 = (V0(V1091))), V1092 end(V1088)) end end end end; {'Idris.Syntax.PRange', V1093, V1094, V1095, V1096} -> begin (V1118 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V1097 = ('nested--7875-11541--in--un--goPTerm'(V0, V1094))), ((begin (V1115 = fun (V1110) -> fun (V1111) -> fun (V1112) -> fun (V1113) -> fun (V1114) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1112, V1113, V1114)) end end end end end), fun (V1116) -> fun (V1117) -> ((((V1115('erased'))('erased'))(V1116))(V1117)) end end end((begin (V1107 = fun (V1101) -> fun (V1102) -> fun (V1103) -> fun (V1104) -> case V1104 of {'Prelude.Types.Left', V1105} -> {'Prelude.Types.Left', V1105}; {'Prelude.Types.Right', V1106} -> {'Prelude.Types.Right', (V1103(V1106))} end end end end end), fun (V1108) -> fun (V1109) -> ((((V1107('erased'))('erased'))(V1108))(V1109)) end end end(fun (V1098) -> fun (V1099) -> fun (V1100) -> {'Idris.Syntax.PRange', V1093, V1098, V1099, V1100} end end end))))(V1097)) end, ('nested--7875-11553--in--un--goMPTerm'(V0, V1095)))), ('nested--7875-11541--in--un--goPTerm'(V0, V1096))))), fun (V1119) -> begin (V1120 = (V1118(V1119))), case V1120 of {'Prelude.Types.Left', V1121} -> {'Prelude.Types.Left', V1121}; {'Prelude.Types.Right', V1122} -> (begin (V1123 = (V0(V1122))), V1123 end(V1119)) end end end end; {'Idris.Syntax.PRangeStream', V1124, V1125, V1126} -> begin (V1147 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V1127 = ('nested--7875-11541--in--un--goPTerm'(V0, V1125))), ((begin (V1144 = fun (V1139) -> fun (V1140) -> fun (V1141) -> fun (V1142) -> fun (V1143) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1141, V1142, V1143)) end end end end end), fun (V1145) -> fun (V1146) -> ((((V1144('erased'))('erased'))(V1145))(V1146)) end end end((begin (V1136 = fun (V1130) -> fun (V1131) -> fun (V1132) -> fun (V1133) -> case V1133 of {'Prelude.Types.Left', V1134} -> {'Prelude.Types.Left', V1134}; {'Prelude.Types.Right', V1135} -> {'Prelude.Types.Right', (V1132(V1135))} end end end end end), fun (V1137) -> fun (V1138) -> ((((V1136('erased'))('erased'))(V1137))(V1138)) end end end(fun (V1128) -> fun (V1129) -> {'Idris.Syntax.PRangeStream', V1124, V1128, V1129} end end))))(V1127)) end, ('nested--7875-11553--in--un--goMPTerm'(V0, V1126))))), fun (V1148) -> begin (V1149 = (V1147(V1148))), case V1149 of {'Prelude.Types.Left', V1150} -> {'Prelude.Types.Left', V1150}; {'Prelude.Types.Right', V1151} -> (begin (V1152 = (V0(V1151))), V1152 end(V1148)) end end end end; {'Idris.Syntax.PUnifyLog', V1153, V1154, V1155} -> begin (V1175 = begin (V1156 = ('nested--7875-11541--in--un--goPTerm'(V0, V1155))), ((begin (V1172 = fun (V1167) -> fun (V1168) -> fun (V1169) -> fun (V1170) -> fun (V1171) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1169, V1170, V1171)) end end end end end), fun (V1173) -> fun (V1174) -> ((((V1172('erased'))('erased'))(V1173))(V1174)) end end end((begin (V1164 = fun (V1158) -> fun (V1159) -> fun (V1160) -> fun (V1161) -> case V1161 of {'Prelude.Types.Left', V1162} -> {'Prelude.Types.Left', V1162}; {'Prelude.Types.Right', V1163} -> {'Prelude.Types.Right', (V1160(V1163))} end end end end end), fun (V1165) -> fun (V1166) -> ((((V1164('erased'))('erased'))(V1165))(V1166)) end end end(fun (V1157) -> {'Idris.Syntax.PUnifyLog', V1153, V1154, V1157} end))))(V1156)) end), fun (V1176) -> begin (V1177 = (V1175(V1176))), case V1177 of {'Prelude.Types.Left', V1178} -> {'Prelude.Types.Left', V1178}; {'Prelude.Types.Right', V1179} -> (begin (V1180 = (V0(V1179))), V1180 end(V1176)) end end end end; {'Idris.Syntax.PPostfixApp', V1181, V1182, V1183} -> begin (V1205 = ('Idris.Idris2.Core.Core':'un--<*>'(begin (V1184 = ('nested--7875-11541--in--un--goPTerm'(V0, V1182))), ((begin (V1201 = fun (V1196) -> fun (V1197) -> fun (V1198) -> fun (V1199) -> fun (V1200) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1198, V1199, V1200)) end end end end end), fun (V1202) -> fun (V1203) -> ((((V1201('erased'))('erased'))(V1202))(V1203)) end end end((begin (V1193 = fun (V1187) -> fun (V1188) -> fun (V1189) -> fun (V1190) -> case V1190 of {'Prelude.Types.Left', V1191} -> {'Prelude.Types.Left', V1191}; {'Prelude.Types.Right', V1192} -> {'Prelude.Types.Right', (V1189(V1192))} end end end end end), fun (V1194) -> fun (V1195) -> ((((V1193('erased'))('erased'))(V1194))(V1195)) end end end(fun (V1185) -> fun (V1186) -> {'Idris.Syntax.PPostfixApp', V1181, V1185, V1186} end end))))(V1184)) end, fun (V1204) -> {'Prelude.Types.Right', V1183} end))), fun (V1206) -> begin (V1207 = (V1205(V1206))), case V1207 of {'Prelude.Types.Left', V1208} -> {'Prelude.Types.Left', V1208}; {'Prelude.Types.Right', V1209} -> (begin (V1210 = (V0(V1209))), V1210 end(V1206)) end end end end; {'Idris.Syntax.PPostfixAppPartial', V1211, V1212} -> (V0({'Idris.Syntax.PPostfixAppPartial', V1211, V1212})); {'Idris.Syntax.PWithUnambigNames', V1213, V1214, V1215} -> begin (V1235 = begin (V1216 = ('nested--7875-11541--in--un--goPTerm'(V0, V1215))), ((begin (V1232 = fun (V1227) -> fun (V1228) -> fun (V1229) -> fun (V1230) -> fun (V1231) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1229, V1230, V1231)) end end end end end), fun (V1233) -> fun (V1234) -> ((((V1232('erased'))('erased'))(V1233))(V1234)) end end end((begin (V1224 = fun (V1218) -> fun (V1219) -> fun (V1220) -> fun (V1221) -> case V1221 of {'Prelude.Types.Left', V1222} -> {'Prelude.Types.Left', V1222}; {'Prelude.Types.Right', V1223} -> {'Prelude.Types.Right', (V1220(V1223))} end end end end end), fun (V1225) -> fun (V1226) -> ((((V1224('erased'))('erased'))(V1225))(V1226)) end end end(fun (V1217) -> {'Idris.Syntax.PWithUnambigNames', V1213, V1214, V1217} end))))(V1216)) end), fun (V1236) -> begin (V1237 = (V1235(V1236))), case V1237 of {'Prelude.Types.Left', V1238} -> {'Prelude.Types.Left', V1238}; {'Prelude.Types.Right', V1239} -> (begin (V1240 = (V0(V1239))), V1240 end(V1236)) end end end end end.
'nested--7875-11561--in--un--goPStrings'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11543--in--un--goPStr'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11561--in--un--goPStrings'(V0, V4)))) end(E0, E1)) end.
'nested--7875-11560--in--un--goPStringLines'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11561--in--un--goPStrings'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11560--in--un--goPStringLines'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13264--in--un--goPStr'(V0, V1) -> case V1 of {'Idris.Syntax.StrInterp', V2, V3} -> {'Idris.Syntax.StrInterp', V2, ('nested--9507-13262--in--un--goPTerm'(V0, V3))}; _ -> V1 end.
'nested--7875-11543--in--un--goPStr'(V0, V1) -> case V1 of {'Idris.Syntax.StrInterp', V2, V3} -> begin (V4 = ('nested--7875-11541--in--un--goPTerm'(V0, V3))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> {'Idris.Syntax.StrInterp', V2, V5} end))))(V4)) end; _ -> fun (V23) -> {'Prelude.Types.Right', V1} end end.
'nested--7875-11568--in--un--goPFnOpts'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11552--in--un--goPFnOpt'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11568--in--un--goPFnOpts'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13273--in--un--goPFnOpt'(V0, V1) -> case V1 of {'Idris.Syntax.IFnOpt', V2} -> V1; {'Idris.Syntax.PForeign', V3} -> {'Idris.Syntax.PForeign', ((begin (V9 = fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7, V8)) end end end end), fun (V10) -> fun (V11) -> ((((V9('erased'))('erased'))(V10))(V11)) end end end(fun (V4) -> ('nested--9507-13262--in--un--goPTerm'(V0, V4)) end))(V3))}; {'Idris.Syntax.PForeignExport', V12} -> {'Idris.Syntax.PForeignExport', ((begin (V18 = fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V16, V17)) end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end(fun (V13) -> ('nested--9507-13262--in--un--goPTerm'(V0, V13)) end))(V12))} end.
'nested--7875-11552--in--un--goPFnOpt'(V0, V1) -> case V1 of {'Idris.Syntax.IFnOpt', V2} -> fun (V3) -> {'Prelude.Types.Right', V1} end; {'Idris.Syntax.PForeign', V4} -> begin (V5 = ('nested--7875-11554--in--un--goPTerms'(V0, V4))), ((begin (V21 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V18, V19, V20)) end end end end end), fun (V22) -> fun (V23) -> ((((V21('erased'))('erased'))(V22))(V23)) end end end((begin (V13 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> {'Prelude.Types.Right', (V9(V12))} end end end end end), fun (V14) -> fun (V15) -> ((((V13('erased'))('erased'))(V14))(V15)) end end end(fun (V6) -> {'Idris.Syntax.PForeign', V6} end))))(V5)) end; {'Idris.Syntax.PForeignExport', V24} -> begin (V25 = ('nested--7875-11554--in--un--goPTerms'(V0, V24))), ((begin (V41 = fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V38, V39, V40)) end end end end end), fun (V42) -> fun (V43) -> ((((V41('erased'))('erased'))(V42))(V43)) end end end((begin (V33 = fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> {'Prelude.Types.Right', (V29(V32))} end end end end end), fun (V34) -> fun (V35) -> ((((V33('erased'))('erased'))(V34))(V35)) end end end(fun (V26) -> {'Idris.Syntax.PForeignExport', V26} end))))(V25)) end end.
'nested--7875-11567--in--un--goPFields'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11550--in--un--goPField'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11567--in--un--goPFields'(V0, V4)))) end(E0, E1)) end.
'nested--7875-11566--in--un--goPFieldUpdates'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11542--in--un--goPFieldUpdate'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11566--in--un--goPFieldUpdates'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13263--in--un--goPFieldUpdate'(V0, V1) -> case V1 of {'Idris.Syntax.PSetField', V2, V3} -> {'Idris.Syntax.PSetField', V2, ('nested--9507-13262--in--un--goPTerm'(V0, V3))}; {'Idris.Syntax.PSetFieldApp', V4, V5} -> {'Idris.Syntax.PSetFieldApp', V4, ('nested--9507-13262--in--un--goPTerm'(V0, V5))} end.
'nested--7875-11542--in--un--goPFieldUpdate'(V0, V1) -> case V1 of {'Idris.Syntax.PSetField', V2, V3} -> begin (V4 = ('nested--7875-11541--in--un--goPTerm'(V0, V3))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> {'Idris.Syntax.PSetField', V2, V5} end))))(V4)) end; {'Idris.Syntax.PSetFieldApp', V23, V24} -> begin (V25 = ('nested--7875-11541--in--un--goPTerm'(V0, V24))), ((begin (V41 = fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V38, V39, V40)) end end end end end), fun (V42) -> fun (V43) -> ((((V41('erased'))('erased'))(V42))(V43)) end end end((begin (V33 = fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> {'Prelude.Types.Right', (V29(V32))} end end end end end), fun (V34) -> fun (V35) -> ((((V33('erased'))('erased'))(V34))(V35)) end end end(fun (V26) -> {'Idris.Syntax.PSetFieldApp', V23, V26} end))))(V25)) end end.
'nested--9507-13271--in--un--goPField'(V0, V1) -> case V1 of {'Idris.Syntax.MkField', V2, V3, V4, V5, V6, V7} -> {'Idris.Syntax.MkField', V2, V3, V4, ('nested--9507-13272--in--un--goPiInfo'(V0, V5)), V6, ('nested--9507-13262--in--un--goPTerm'(V0, V7))} end.
'nested--7875-11550--in--un--goPField'(V0, V1) -> case V1 of {'Idris.Syntax.MkField', V2, V3, V4, V5, V6, V7} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V8 = ('nested--7875-11551--in--un--goPiInfo'(V0, V5))), ((begin (V26 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V23, V24, V25)) end end end end end), fun (V27) -> fun (V28) -> ((((V26('erased'))('erased'))(V27))(V28)) end end end((begin (V18 = fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> {'Prelude.Types.Right', (V14(V17))} end end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end(fun (V9) -> fun (V10) -> fun (V11) -> {'Idris.Syntax.MkField', V2, V3, V4, V9, V10, V11} end end end))))(V8)) end, fun (V29) -> {'Prelude.Types.Right', V6} end)), ('nested--7875-11541--in--un--goPTerm'(V0, V7)))) end.
'nested--7875-11562--in--un--goPDos'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11544--in--un--goPDo'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11562--in--un--goPDos'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13265--in--un--goPDo'(V0, V1) -> case V1 of {'Idris.Syntax.DoExp', V2, V3} -> {'Idris.Syntax.DoExp', V2, ('nested--9507-13262--in--un--goPTerm'(V0, V3))}; {'Idris.Syntax.DoBind', V4, V5, V6, V7} -> {'Idris.Syntax.DoBind', V4, V5, V6, ('nested--9507-13262--in--un--goPTerm'(V0, V7))}; {'Idris.Syntax.DoBindPat', V8, V9, V10, V11} -> {'Idris.Syntax.DoBindPat', V8, ('nested--9507-13262--in--un--goPTerm'(V0, V9)), ('nested--9507-13262--in--un--goPTerm'(V0, V10)), ((begin (V17 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V15, V16)) end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V12) -> ('nested--9507-13267--in--un--goPClause'(V0, V12)) end))(V11))}; {'Idris.Syntax.DoLet', V20, V21, V22, V23, V24, V25} -> {'Idris.Syntax.DoLet', V20, V21, V22, V23, ('nested--9507-13262--in--un--goPTerm'(V0, V24)), ('nested--9507-13262--in--un--goPTerm'(V0, V25))}; {'Idris.Syntax.DoLetPat', V26, V27, V28, V29, V30} -> {'Idris.Syntax.DoLetPat', V26, ('nested--9507-13262--in--un--goPTerm'(V0, V27)), ('nested--9507-13262--in--un--goPTerm'(V0, V28)), ('nested--9507-13262--in--un--goPTerm'(V0, V29)), ((begin (V36 = fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V34, V35)) end end end end), fun (V37) -> fun (V38) -> ((((V36('erased'))('erased'))(V37))(V38)) end end end(fun (V31) -> ('nested--9507-13267--in--un--goPClause'(V0, V31)) end))(V30))}; {'Idris.Syntax.DoLetLocal', V39, V40} -> {'Idris.Syntax.DoLetLocal', V39, ((begin (V46 = fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V44, V45)) end end end end), fun (V47) -> fun (V48) -> ((((V46('erased'))('erased'))(V47))(V48)) end end end(fun (V41) -> ('nested--9507-13268--in--un--goPDecl'(V0, V41)) end))(V40))}; {'Idris.Syntax.DoRewrite', V49, V50} -> {'Idris.Syntax.DoRewrite', V49, ('nested--9507-13262--in--un--goPTerm'(V0, V50))} end.
'nested--7875-11544--in--un--goPDo'(V0, V1) -> case V1 of {'Idris.Syntax.DoExp', V2, V3} -> begin (V4 = ('nested--7875-11541--in--un--goPTerm'(V0, V3))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> {'Idris.Syntax.DoExp', V2, V5} end))))(V4)) end; {'Idris.Syntax.DoBind', V23, V24, V25, V26} -> begin (V27 = ('nested--7875-11541--in--un--goPTerm'(V0, V26))), ((begin (V43 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V40, V41, V42)) end end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end((begin (V35 = fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> {'Prelude.Types.Right', (V31(V34))} end end end end end), fun (V36) -> fun (V37) -> ((((V35('erased'))('erased'))(V36))(V37)) end end end(fun (V28) -> {'Idris.Syntax.DoBind', V23, V24, V25, V28} end))))(V27)) end; {'Idris.Syntax.DoBindPat', V46, V47, V48, V49} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V50 = ('nested--7875-11541--in--un--goPTerm'(V0, V47))), ((begin (V68 = fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V65, V66, V67)) end end end end end), fun (V69) -> fun (V70) -> ((((V68('erased'))('erased'))(V69))(V70)) end end end((begin (V60 = fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> {'Prelude.Types.Right', (V56(V59))} end end end end end), fun (V61) -> fun (V62) -> ((((V60('erased'))('erased'))(V61))(V62)) end end end(fun (V51) -> fun (V52) -> fun (V53) -> {'Idris.Syntax.DoBindPat', V46, V51, V52, V53} end end end))))(V50)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V48)))), ('nested--7875-11563--in--un--goPClauses'(V0, V49)))); {'Idris.Syntax.DoLet', V71, V72, V73, V74, V75, V76} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V77 = ('nested--7875-11541--in--un--goPTerm'(V0, V75))), ((begin (V94 = fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V91, V92, V93)) end end end end end), fun (V95) -> fun (V96) -> ((((V94('erased'))('erased'))(V95))(V96)) end end end((begin (V86 = fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> case V83 of {'Prelude.Types.Left', V84} -> {'Prelude.Types.Left', V84}; {'Prelude.Types.Right', V85} -> {'Prelude.Types.Right', (V82(V85))} end end end end end), fun (V87) -> fun (V88) -> ((((V86('erased'))('erased'))(V87))(V88)) end end end(fun (V78) -> fun (V79) -> {'Idris.Syntax.DoLet', V71, V72, V73, V74, V78, V79} end end))))(V77)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V76)))); {'Idris.Syntax.DoLetPat', V97, V98, V99, V100, V101} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V102 = ('nested--7875-11541--in--un--goPTerm'(V0, V98))), ((begin (V121 = fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V118, V119, V120)) end end end end end), fun (V122) -> fun (V123) -> ((((V121('erased'))('erased'))(V122))(V123)) end end end((begin (V113 = fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> case V110 of {'Prelude.Types.Left', V111} -> {'Prelude.Types.Left', V111}; {'Prelude.Types.Right', V112} -> {'Prelude.Types.Right', (V109(V112))} end end end end end), fun (V114) -> fun (V115) -> ((((V113('erased'))('erased'))(V114))(V115)) end end end(fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> {'Idris.Syntax.DoLetPat', V97, V103, V104, V105, V106} end end end end))))(V102)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V99)))), ('nested--7875-11541--in--un--goPTerm'(V0, V100)))), ('nested--7875-11563--in--un--goPClauses'(V0, V101)))); {'Idris.Syntax.DoLetLocal', V124, V125} -> begin (V126 = ('nested--7875-11565--in--un--goPDecls'(V0, V125))), ((begin (V142 = fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V139, V140, V141)) end end end end end), fun (V143) -> fun (V144) -> ((((V142('erased'))('erased'))(V143))(V144)) end end end((begin (V134 = fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> case V131 of {'Prelude.Types.Left', V132} -> {'Prelude.Types.Left', V132}; {'Prelude.Types.Right', V133} -> {'Prelude.Types.Right', (V130(V133))} end end end end end), fun (V135) -> fun (V136) -> ((((V134('erased'))('erased'))(V135))(V136)) end end end(fun (V127) -> {'Idris.Syntax.DoLetLocal', V124, V127} end))))(V126)) end; {'Idris.Syntax.DoRewrite', V145, V146} -> begin (V147 = ('nested--7875-11541--in--un--goPTerm'(V0, V146))), ((begin (V163 = fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V160, V161, V162)) end end end end end), fun (V164) -> fun (V165) -> ((((V163('erased'))('erased'))(V164))(V165)) end end end((begin (V155 = fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> case V152 of {'Prelude.Types.Left', V153} -> {'Prelude.Types.Left', V153}; {'Prelude.Types.Right', V154} -> {'Prelude.Types.Right', (V151(V154))} end end end end end), fun (V156) -> fun (V157) -> ((((V155('erased'))('erased'))(V156))(V157)) end end end(fun (V148) -> {'Idris.Syntax.DoRewrite', V145, V148} end))))(V147)) end end.
'nested--7875-11565--in--un--goPDecls'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11547--in--un--goPDecl'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11565--in--un--goPDecls'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13268--in--un--goPDecl'(V0, V1) -> case V1 of {'Idris.Syntax.PClaim', V2, V3, V4, V5, V6} -> {'Idris.Syntax.PClaim', V2, V3, V4, ((begin (V12 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V10, V11)) end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V7) -> ('nested--9507-13273--in--un--goPFnOpt'(V0, V7)) end))(V5)), ('nested--9507-13269--in--un--goPTypeDecl'(V0, V6))}; {'Idris.Syntax.PDef', V15, V16} -> {'Idris.Syntax.PDef', V15, ((begin (V22 = fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V20, V21)) end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end(fun (V17) -> ('nested--9507-13267--in--un--goPClause'(V0, V17)) end))(V16))}; {'Idris.Syntax.PData', V25, V26, V27, V28, V29} -> {'Idris.Syntax.PData', V25, V26, V27, V28, ('nested--9507-13270--in--un--goPDataDecl'(V0, V29))}; {'Idris.Syntax.PParameters', V30, V31, V32} -> {'Idris.Syntax.PParameters', V30, ('nested--9507-13278--in--un--go4TupledPTerms'(V0, V31)), ((begin (V38 = fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V36, V37)) end end end end), fun (V39) -> fun (V40) -> ((((V38('erased'))('erased'))(V39))(V40)) end end end(fun (V33) -> ('nested--9507-13268--in--un--goPDecl'(V0, V33)) end))(V32))}; {'Idris.Syntax.PUsing', V41, V42, V43} -> {'Idris.Syntax.PUsing', V41, ('nested--9507-13274--in--un--goPairedPTerms'(V0, V42)), ((begin (V49 = fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V47, V48)) end end end end), fun (V50) -> fun (V51) -> ((((V49('erased'))('erased'))(V50))(V51)) end end end(fun (V44) -> ('nested--9507-13268--in--un--goPDecl'(V0, V44)) end))(V43))}; {'Idris.Syntax.PReflect', V52, V53} -> {'Idris.Syntax.PReflect', V52, ('nested--9507-13262--in--un--goPTerm'(V0, V53))}; {'Idris.Syntax.PInterface', V54, V55, V56, V57, V58, V59, V60, V61, V62} -> {'Idris.Syntax.PInterface', V54, V55, ('nested--9507-13274--in--un--goPairedPTerms'(V0, V56)), V57, V58, ('nested--9507-13276--in--un--go3TupledPTerms'(V0, V59)), V60, V61, ((begin (V68 = fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V66, V67)) end end end end), fun (V69) -> fun (V70) -> ((((V68('erased'))('erased'))(V69))(V70)) end end end(fun (V63) -> ('nested--9507-13268--in--un--goPDecl'(V0, V63)) end))(V62))}; {'Idris.Syntax.PImplementation', V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81} -> {'Idris.Syntax.PImplementation', V71, V72, V73, V74, ('nested--9507-13277--in--un--goImplicits'(V0, V75)), ('nested--9507-13274--in--un--goPairedPTerms'(V0, V76)), V77, ((begin (V87 = fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V85, V86)) end end end end), fun (V88) -> fun (V89) -> ((((V87('erased'))('erased'))(V88))(V89)) end end end(fun (V82) -> ('nested--9507-13262--in--un--goPTerm'(V0, V82)) end))(V78)), V79, V80, ((begin (V103 = fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V101, V102)) end end end end), fun (V104) -> fun (V105) -> ((((V103('erased'))('erased'))(V104))(V105)) end end end(fun (V90) -> ((begin (V96 = fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V94, V95)) end end end end), fun (V97) -> fun (V98) -> ((((V96('erased'))('erased'))(V97))(V98)) end end end(fun (V91) -> ('nested--9507-13268--in--un--goPDecl'(V0, V91)) end))(V90)) end))(V81))}; {'Idris.Syntax.PRecord', V106, V107, V108, V109, V110} -> case V110 of {'Idris.Syntax.MkPRecord', V111, V112, V113, V114, V115} -> {'Idris.Syntax.PRecord', V106, V107, V108, V109, {'Idris.Syntax.MkPRecord', V111, ('nested--9507-13278--in--un--go4TupledPTerms'(V0, V112)), V113, V114, ((begin (V121 = fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V119, V120)) end end end end), fun (V122) -> fun (V123) -> ((((V121('erased'))('erased'))(V122))(V123)) end end end(fun (V116) -> ('nested--9507-13271--in--un--goPField'(V0, V116)) end))(V115))}}; {'Idris.Syntax.MkPRecordLater', V124, V125} -> {'Idris.Syntax.PRecord', V106, V107, V108, V109, {'Idris.Syntax.MkPRecordLater', V124, ('nested--9507-13278--in--un--go4TupledPTerms'(V0, V125))}} end; {'Idris.Syntax.PFail', V126, V127, V128} -> {'Idris.Syntax.PFail', V126, V127, ((begin (V134 = fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V132, V133)) end end end end), fun (V135) -> fun (V136) -> ((((V134('erased'))('erased'))(V135))(V136)) end end end(fun (V129) -> ('nested--9507-13268--in--un--goPDecl'(V0, V129)) end))(V128))}; {'Idris.Syntax.PMutual', V137, V138} -> {'Idris.Syntax.PMutual', V137, ((begin (V144 = fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V142, V143)) end end end end), fun (V145) -> fun (V146) -> ((((V144('erased'))('erased'))(V145))(V146)) end end end(fun (V139) -> ('nested--9507-13268--in--un--goPDecl'(V0, V139)) end))(V138))}; {'Idris.Syntax.PFixity', V147, V148, V149, V150} -> V1; {'Idris.Syntax.PNamespace', V151, V152, V153} -> {'Idris.Syntax.PNamespace', V151, V152, ((begin (V159 = fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V157, V158)) end end end end), fun (V160) -> fun (V161) -> ((((V159('erased'))('erased'))(V160))(V161)) end end end(fun (V154) -> ('nested--9507-13268--in--un--goPDecl'(V0, V154)) end))(V153))}; {'Idris.Syntax.PTransform', V162, V163, V164, V165} -> {'Idris.Syntax.PTransform', V162, V163, ('nested--9507-13262--in--un--goPTerm'(V0, V164)), ('nested--9507-13262--in--un--goPTerm'(V0, V165))}; {'Idris.Syntax.PRunElabDecl', V166, V167} -> {'Idris.Syntax.PRunElabDecl', V166, ('nested--9507-13262--in--un--goPTerm'(V0, V167))}; {'Idris.Syntax.PDirective', V168, V169} -> V1; {'Idris.Syntax.PBuiltin', V170, V171, V172} -> V1 end.
'nested--7875-11547--in--un--goPDecl'(V0, V1) -> case V1 of {'Idris.Syntax.PClaim', V2, V3, V4, V5, V6} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V7 = ('nested--7875-11568--in--un--goPFnOpts'(V0, V5))), ((begin (V24 = fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V21, V22, V23)) end end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end((begin (V16 = fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> {'Prelude.Types.Right', (V12(V15))} end end end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V8) -> fun (V9) -> {'Idris.Syntax.PClaim', V2, V3, V4, V8, V9} end end))))(V7)) end, ('nested--7875-11548--in--un--goPTypeDecl'(V0, V6)))); {'Idris.Syntax.PDef', V27, V28} -> begin (V29 = ('nested--7875-11563--in--un--goPClauses'(V0, V28))), ((begin (V45 = fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V42, V43, V44)) end end end end end), fun (V46) -> fun (V47) -> ((((V45('erased'))('erased'))(V46))(V47)) end end end((begin (V37 = fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> {'Prelude.Types.Right', (V33(V36))} end end end end end), fun (V38) -> fun (V39) -> ((((V37('erased'))('erased'))(V38))(V39)) end end end(fun (V30) -> {'Idris.Syntax.PDef', V27, V30} end))))(V29)) end; {'Idris.Syntax.PData', V48, V49, V50, V51, V52} -> begin (V53 = ('nested--7875-11549--in--un--goPDataDecl'(V0, V52))), ((begin (V69 = fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V66, V67, V68)) end end end end end), fun (V70) -> fun (V71) -> ((((V69('erased'))('erased'))(V70))(V71)) end end end((begin (V61 = fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> {'Prelude.Types.Right', (V57(V60))} end end end end end), fun (V62) -> fun (V63) -> ((((V61('erased'))('erased'))(V62))(V63)) end end end(fun (V54) -> {'Idris.Syntax.PData', V48, V49, V50, V51, V54} end))))(V53)) end; {'Idris.Syntax.PParameters', V72, V73, V74} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V75 = ('nested--7875-11559--in--un--go4TupledPTerms'(V0, V73))), ((begin (V92 = fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V89, V90, V91)) end end end end end), fun (V93) -> fun (V94) -> ((((V92('erased'))('erased'))(V93))(V94)) end end end((begin (V84 = fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> case V81 of {'Prelude.Types.Left', V82} -> {'Prelude.Types.Left', V82}; {'Prelude.Types.Right', V83} -> {'Prelude.Types.Right', (V80(V83))} end end end end end), fun (V85) -> fun (V86) -> ((((V84('erased'))('erased'))(V85))(V86)) end end end(fun (V76) -> fun (V77) -> {'Idris.Syntax.PParameters', V72, V76, V77} end end))))(V75)) end, ('nested--7875-11565--in--un--goPDecls'(V0, V74)))); {'Idris.Syntax.PUsing', V95, V96, V97} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V98 = ('nested--7875-11555--in--un--goPairedPTerms'(V0, V96))), ((begin (V115 = fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V112, V113, V114)) end end end end end), fun (V116) -> fun (V117) -> ((((V115('erased'))('erased'))(V116))(V117)) end end end((begin (V107 = fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> {'Prelude.Types.Right', (V103(V106))} end end end end end), fun (V108) -> fun (V109) -> ((((V107('erased'))('erased'))(V108))(V109)) end end end(fun (V99) -> fun (V100) -> {'Idris.Syntax.PUsing', V95, V99, V100} end end))))(V98)) end, ('nested--7875-11565--in--un--goPDecls'(V0, V97)))); {'Idris.Syntax.PReflect', V118, V119} -> begin (V120 = ('nested--7875-11541--in--un--goPTerm'(V0, V119))), ((begin (V136 = fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V133, V134, V135)) end end end end end), fun (V137) -> fun (V138) -> ((((V136('erased'))('erased'))(V137))(V138)) end end end((begin (V128 = fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> {'Prelude.Types.Right', (V124(V127))} end end end end end), fun (V129) -> fun (V130) -> ((((V128('erased'))('erased'))(V129))(V130)) end end end(fun (V121) -> {'Idris.Syntax.PReflect', V118, V121} end))))(V120)) end; {'Idris.Syntax.PInterface', V139, V140, V141, V142, V143, V144, V145, V146, V147} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V148 = ('nested--7875-11555--in--un--goPairedPTerms'(V0, V141))), ((begin (V170 = fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V167, V168, V169)) end end end end end), fun (V171) -> fun (V172) -> ((((V170('erased'))('erased'))(V171))(V172)) end end end((begin (V162 = fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> case V159 of {'Prelude.Types.Left', V160} -> {'Prelude.Types.Left', V160}; {'Prelude.Types.Right', V161} -> {'Prelude.Types.Right', (V158(V161))} end end end end end), fun (V163) -> fun (V164) -> ((((V162('erased'))('erased'))(V163))(V164)) end end end(fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> {'Idris.Syntax.PInterface', V139, V140, V149, V150, V151, V152, V153, V154, V155} end end end end end end end))))(V148)) end, fun (V173) -> {'Prelude.Types.Right', V142} end)), fun (V174) -> {'Prelude.Types.Right', V143} end)), ('nested--7875-11557--in--un--go3TupledPTerms'(V0, V144)))), fun (V175) -> {'Prelude.Types.Right', V145} end)), fun (V176) -> {'Prelude.Types.Right', V146} end)), ('nested--7875-11565--in--un--goPDecls'(V0, V147)))); {'Idris.Syntax.PImplementation', V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V188 = ('nested--7875-11558--in--un--goImplicits'(V0, V181))), ((begin (V210 = fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V207, V208, V209)) end end end end end), fun (V211) -> fun (V212) -> ((((V210('erased'))('erased'))(V211))(V212)) end end end((begin (V202 = fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> case V199 of {'Prelude.Types.Left', V200} -> {'Prelude.Types.Left', V200}; {'Prelude.Types.Right', V201} -> {'Prelude.Types.Right', (V198(V201))} end end end end end), fun (V203) -> fun (V204) -> ((((V202('erased'))('erased'))(V203))(V204)) end end end(fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> {'Idris.Syntax.PImplementation', V177, V178, V179, V180, V189, V190, V191, V192, V193, V194, V195} end end end end end end end))))(V188)) end, ('nested--7875-11555--in--un--goPairedPTerms'(V0, V182)))), fun (V213) -> {'Prelude.Types.Right', V183} end)), ('nested--7875-11554--in--un--goPTerms'(V0, V184)))), fun (V214) -> {'Prelude.Types.Right', V185} end)), fun (V215) -> {'Prelude.Types.Right', V186} end)), ('nested--7875-11564--in--un--goMPDecls'(V0, V187)))); {'Idris.Syntax.PRecord', V216, V217, V218, V219, V220} -> case V220 of {'Idris.Syntax.MkPRecord', V221, V222, V223, V224, V225} -> begin (V250 = ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V226 = ('nested--7875-11559--in--un--go4TupledPTerms'(V0, V222))), ((begin (V245 = fun (V240) -> fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V242, V243, V244)) end end end end end), fun (V246) -> fun (V247) -> ((((V245('erased'))('erased'))(V246))(V247)) end end end((begin (V237 = fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> case V234 of {'Prelude.Types.Left', V235} -> {'Prelude.Types.Left', V235}; {'Prelude.Types.Right', V236} -> {'Prelude.Types.Right', (V233(V236))} end end end end end), fun (V238) -> fun (V239) -> ((((V237('erased'))('erased'))(V238))(V239)) end end end(fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> {'Idris.Syntax.MkPRecord', V221, V227, V228, V229, V230} end end end end))))(V226)) end, fun (V248) -> {'Prelude.Types.Right', V223} end)), fun (V249) -> {'Prelude.Types.Right', V224} end)), ('nested--7875-11567--in--un--goPFields'(V0, V225))))), fun (V251) -> begin (V252 = (V250(V251))), case V252 of {'Prelude.Types.Left', V253} -> {'Prelude.Types.Left', V253}; {'Prelude.Types.Right', V254} -> (begin (V256 = fun (V255) -> {'Prelude.Types.Right', {'Idris.Syntax.PRecord', V216, V217, V218, V219, V254}} end), V256 end(V251)) end end end end; {'Idris.Syntax.MkPRecordLater', V257, V258} -> begin (V259 = ('nested--7875-11559--in--un--go4TupledPTerms'(V0, V258))), fun (V260) -> begin (V261 = (V259(V260))), case V261 of {'Prelude.Types.Left', V262} -> {'Prelude.Types.Left', V262}; {'Prelude.Types.Right', V263} -> (begin (V265 = fun (V264) -> {'Prelude.Types.Right', {'Idris.Syntax.PRecord', V216, V217, V218, V219, {'Idris.Syntax.MkPRecordLater', V257, V263}}} end), V265 end(V260)) end end end end end; {'Idris.Syntax.PFail', V266, V267, V268} -> begin (V269 = ('nested--7875-11565--in--un--goPDecls'(V0, V268))), ((begin (V285 = fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V282, V283, V284)) end end end end end), fun (V286) -> fun (V287) -> ((((V285('erased'))('erased'))(V286))(V287)) end end end((begin (V277 = fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> case V274 of {'Prelude.Types.Left', V275} -> {'Prelude.Types.Left', V275}; {'Prelude.Types.Right', V276} -> {'Prelude.Types.Right', (V273(V276))} end end end end end), fun (V278) -> fun (V279) -> ((((V277('erased'))('erased'))(V278))(V279)) end end end(fun (V270) -> {'Idris.Syntax.PFail', V266, V267, V270} end))))(V269)) end; {'Idris.Syntax.PMutual', V288, V289} -> begin (V290 = ('nested--7875-11565--in--un--goPDecls'(V0, V289))), ((begin (V306 = fun (V301) -> fun (V302) -> fun (V303) -> fun (V304) -> fun (V305) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V303, V304, V305)) end end end end end), fun (V307) -> fun (V308) -> ((((V306('erased'))('erased'))(V307))(V308)) end end end((begin (V298 = fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> case V295 of {'Prelude.Types.Left', V296} -> {'Prelude.Types.Left', V296}; {'Prelude.Types.Right', V297} -> {'Prelude.Types.Right', (V294(V297))} end end end end end), fun (V299) -> fun (V300) -> ((((V298('erased'))('erased'))(V299))(V300)) end end end(fun (V291) -> {'Idris.Syntax.PMutual', V288, V291} end))))(V290)) end; {'Idris.Syntax.PFixity', V309, V310, V311, V312} -> fun (V313) -> {'Prelude.Types.Right', V1} end; {'Idris.Syntax.PNamespace', V314, V315, V316} -> begin (V317 = ('nested--7875-11565--in--un--goPDecls'(V0, V316))), ((begin (V333 = fun (V328) -> fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V330, V331, V332)) end end end end end), fun (V334) -> fun (V335) -> ((((V333('erased'))('erased'))(V334))(V335)) end end end((begin (V325 = fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> case V322 of {'Prelude.Types.Left', V323} -> {'Prelude.Types.Left', V323}; {'Prelude.Types.Right', V324} -> {'Prelude.Types.Right', (V321(V324))} end end end end end), fun (V326) -> fun (V327) -> ((((V325('erased'))('erased'))(V326))(V327)) end end end(fun (V318) -> {'Idris.Syntax.PNamespace', V314, V315, V318} end))))(V317)) end; {'Idris.Syntax.PTransform', V336, V337, V338, V339} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V340 = ('nested--7875-11541--in--un--goPTerm'(V0, V338))), ((begin (V357 = fun (V352) -> fun (V353) -> fun (V354) -> fun (V355) -> fun (V356) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V354, V355, V356)) end end end end end), fun (V358) -> fun (V359) -> ((((V357('erased'))('erased'))(V358))(V359)) end end end((begin (V349 = fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> case V346 of {'Prelude.Types.Left', V347} -> {'Prelude.Types.Left', V347}; {'Prelude.Types.Right', V348} -> {'Prelude.Types.Right', (V345(V348))} end end end end end), fun (V350) -> fun (V351) -> ((((V349('erased'))('erased'))(V350))(V351)) end end end(fun (V341) -> fun (V342) -> {'Idris.Syntax.PTransform', V336, V337, V341, V342} end end))))(V340)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V339)))); {'Idris.Syntax.PRunElabDecl', V360, V361} -> begin (V362 = ('nested--7875-11541--in--un--goPTerm'(V0, V361))), ((begin (V378 = fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> fun (V377) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V375, V376, V377)) end end end end end), fun (V379) -> fun (V380) -> ((((V378('erased'))('erased'))(V379))(V380)) end end end((begin (V370 = fun (V364) -> fun (V365) -> fun (V366) -> fun (V367) -> case V367 of {'Prelude.Types.Left', V368} -> {'Prelude.Types.Left', V368}; {'Prelude.Types.Right', V369} -> {'Prelude.Types.Right', (V366(V369))} end end end end end), fun (V371) -> fun (V372) -> ((((V370('erased'))('erased'))(V371))(V372)) end end end(fun (V363) -> {'Idris.Syntax.PRunElabDecl', V360, V363} end))))(V362)) end; {'Idris.Syntax.PDirective', V381, V382} -> fun (V383) -> {'Prelude.Types.Right', V1} end; {'Idris.Syntax.PBuiltin', V384, V385, V386} -> fun (V387) -> {'Prelude.Types.Right', V1} end end.
'nested--9507-13270--in--un--goPDataDecl'(V0, V1) -> case V1 of {'Idris.Syntax.MkPData', V2, V3, V4, V5, V6} -> {'Idris.Syntax.MkPData', V2, V3, ('nested--9507-13262--in--un--goPTerm'(V0, V4)), V5, ((begin (V12 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V10, V11)) end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V7) -> ('nested--9507-13269--in--un--goPTypeDecl'(V0, V7)) end))(V6))}; {'Idris.Syntax.MkPLater', V15, V16, V17} -> {'Idris.Syntax.MkPLater', V15, V16, ('nested--9507-13262--in--un--goPTerm'(V0, V17))} end.
'nested--7875-11549--in--un--goPDataDecl'(V0, V1) -> case V1 of {'Idris.Syntax.MkPData', V2, V3, V4, V5, V6} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V7 = ('nested--7875-11541--in--un--goPTerm'(V0, V4))), ((begin (V25 = fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V22, V23, V24)) end end end end end), fun (V26) -> fun (V27) -> ((((V25('erased'))('erased'))(V26))(V27)) end end end((begin (V17 = fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> {'Prelude.Types.Right', (V13(V16))} end end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V8) -> fun (V9) -> fun (V10) -> {'Idris.Syntax.MkPData', V2, V3, V8, V9, V10} end end end))))(V7)) end, fun (V28) -> {'Prelude.Types.Right', V5} end)), ('nested--7875-11569--in--un--goPTypeDecls'(V0, V6)))); {'Idris.Syntax.MkPLater', V29, V30, V31} -> begin (V32 = ('nested--7875-11541--in--un--goPTerm'(V0, V31))), ((begin (V48 = fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V45, V46, V47)) end end end end end), fun (V49) -> fun (V50) -> ((((V48('erased'))('erased'))(V49))(V50)) end end end((begin (V40 = fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> {'Prelude.Types.Right', (V36(V39))} end end end end end), fun (V41) -> fun (V42) -> ((((V40('erased'))('erased'))(V41))(V42)) end end end(fun (V33) -> {'Idris.Syntax.MkPLater', V29, V30, V33} end))))(V32)) end end.
'nested--7875-11563--in--un--goPClauses'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V5 = ('nested--7875-11545--in--un--goPClause'(V0, V3))), ((begin (V22 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end((begin (V14 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> {'Prelude.Types.Right', (V10(V13))} end end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> fun (V7) -> [V6 | V7] end end))))(V5)) end, ('nested--7875-11563--in--un--goPClauses'(V0, V4)))) end(E0, E1)) end.
'nested--9507-13267--in--un--goPClause'(V0, V1) -> case V1 of {'Idris.Syntax.MkPatClause', V2, V3, V4, V5} -> {'Idris.Syntax.MkPatClause', V2, ('nested--9507-13262--in--un--goPTerm'(V0, V3)), ('nested--9507-13262--in--un--goPTerm'(V0, V4)), ((begin (V11 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V9, V10)) end end end end), fun (V12) -> fun (V13) -> ((((V11('erased'))('erased'))(V12))(V13)) end end end(fun (V6) -> ('nested--9507-13268--in--un--goPDecl'(V0, V6)) end))(V5))}; {'Idris.Syntax.MkWithClause', V14, V15, V16, V17, V18} -> {'Idris.Syntax.MkWithClause', V14, ('nested--9507-13262--in--un--goPTerm'(V0, V15)), ((begin (V24 = fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Data.List1':'dn--un--map_Functor_List1'(V22, V23)) end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end(fun (V19) -> ('nested--9507-13266--in--un--goPWithProblem'(V0, V19)) end))(V16)), V17, ((begin (V32 = fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V30, V31)) end end end end), fun (V33) -> fun (V34) -> ((((V32('erased'))('erased'))(V33))(V34)) end end end(fun (V27) -> ('nested--9507-13267--in--un--goPClause'(V0, V27)) end))(V18))}; {'Idris.Syntax.MkImpossible', V35, V36} -> {'Idris.Syntax.MkImpossible', V35, ('nested--9507-13262--in--un--goPTerm'(V0, V36))} end.
'nested--7875-11545--in--un--goPClause'(V0, V1) -> case V1 of {'Idris.Syntax.MkPatClause', V2, V3, V4, V5} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V6 = ('nested--7875-11541--in--un--goPTerm'(V0, V3))), ((begin (V24 = fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V21, V22, V23)) end end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end((begin (V16 = fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> {'Prelude.Types.Right', (V12(V15))} end end end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V7) -> fun (V8) -> fun (V9) -> {'Idris.Syntax.MkPatClause', V2, V7, V8, V9} end end end))))(V6)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V4)))), ('nested--7875-11565--in--un--goPDecls'(V0, V5)))); {'Idris.Syntax.MkWithClause', V27, V28, V29, V30, V31} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V32 = ('nested--7875-11541--in--un--goPTerm'(V0, V28))), ((begin (V51 = fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V48, V49, V50)) end end end end end), fun (V52) -> fun (V53) -> ((((V51('erased'))('erased'))(V52))(V53)) end end end((begin (V43 = fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> {'Prelude.Types.Right', (V39(V42))} end end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end(fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> {'Idris.Syntax.MkWithClause', V27, V33, V34, V35, V36} end end end end))))(V32)) end, ('Idris.Idris2.Core.Core':'un--traverseList1'(fun (V54) -> ('nested--7875-11546--in--un--goPWithProblem'(V0, V54)) end, V29)))), fun (V55) -> {'Prelude.Types.Right', V30} end)), ('nested--7875-11563--in--un--goPClauses'(V0, V31)))); {'Idris.Syntax.MkImpossible', V56, V57} -> begin (V58 = ('nested--7875-11541--in--un--goPTerm'(V0, V57))), ((begin (V74 = fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V71, V72, V73)) end end end end end), fun (V75) -> fun (V76) -> ((((V74('erased'))('erased'))(V75))(V76)) end end end((begin (V66 = fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> {'Prelude.Types.Right', (V62(V65))} end end end end end), fun (V67) -> fun (V68) -> ((((V66('erased'))('erased'))(V67))(V68)) end end end(fun (V59) -> {'Idris.Syntax.MkImpossible', V56, V59} end))))(V58)) end end.
'nested--7875-11553--in--un--goMPTerm'(V0, V1) -> case V1 of {'Prelude.Types.Nothing'} -> fun (V2) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V3} -> begin (V4 = ('nested--7875-11541--in--un--goPTerm'(V0, V3))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> {'Prelude.Types.Just', V5} end))))(V4)) end end.
'nested--7875-11564--in--un--goMPDecls'(V0, V1) -> case V1 of {'Prelude.Types.Nothing'} -> fun (V2) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V3} -> begin (V4 = ('nested--7875-11565--in--un--goPDecls'(V0, V3))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> {'Prelude.Types.Just', V5} end))))(V4)) end end.
'nested--9507-13277--in--un--goImplicits'(V0, V1) -> case V1 of [] -> []; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Builtin.MkPair', V4, V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> case V7 of {'Builtin.MkPair', V8, V9} -> [{'Builtin.MkPair', V4, {'Builtin.MkPair', V6, {'Builtin.MkPair', V8, ('nested--9507-13262--in--un--goPTerm'(V0, V9))}}} | ('nested--9507-13277--in--un--goImplicits'(V0, V3))] end end end end(E0, E1)) end.
'nested--7875-11558--in--un--goImplicits'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V11 = ('nested--7875-11541--in--un--goPTerm'(V0, V10))), ((begin (V28 = fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V25, V26, V27)) end end end end end), fun (V29) -> fun (V30) -> ((((V28('erased'))('erased'))(V29))(V30)) end end end((begin (V20 = fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> {'Prelude.Types.Right', (V16(V19))} end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end(fun (V12) -> fun (V13) -> [{'Builtin.MkPair', V5, {'Builtin.MkPair', V7, {'Builtin.MkPair', V9, V12}}} | V13] end end))))(V11)) end, ('nested--7875-11558--in--un--goImplicits'(V0, V4)))) end end end end(E0, E1)) end.
'nested--9507-13278--in--un--go4TupledPTerms'(V0, V1) -> case V1 of [] -> []; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Builtin.MkPair', V4, V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> case V7 of {'Builtin.MkPair', V8, V9} -> [{'Builtin.MkPair', V4, {'Builtin.MkPair', V6, {'Builtin.MkPair', ('nested--9507-13272--in--un--goPiInfo'(V0, V8)), ('nested--9507-13262--in--un--goPTerm'(V0, V9))}}} | ('nested--9507-13278--in--un--go4TupledPTerms'(V0, V3))] end end end end(E0, E1)) end.
'nested--7875-11559--in--un--go4TupledPTerms'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V11 = ('nested--7875-11551--in--un--goPiInfo'(V0, V9))), ((begin (V29 = fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V26, V27, V28)) end end end end end), fun (V30) -> fun (V31) -> ((((V29('erased'))('erased'))(V30))(V31)) end end end((begin (V21 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> {'Prelude.Types.Right', (V17(V20))} end end end end end), fun (V22) -> fun (V23) -> ((((V21('erased'))('erased'))(V22))(V23)) end end end(fun (V12) -> fun (V13) -> fun (V14) -> [{'Builtin.MkPair', V5, {'Builtin.MkPair', V7, {'Builtin.MkPair', V12, V13}}} | V14] end end end))))(V11)) end, ('nested--7875-11541--in--un--goPTerm'(V0, V10)))), ('nested--7875-11559--in--un--go4TupledPTerms'(V0, V4)))) end end end end(E0, E1)) end.
'nested--9507-13276--in--un--go3TupledPTerms'(V0, V1) -> case V1 of [] -> []; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Builtin.MkPair', V4, V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [{'Builtin.MkPair', V4, {'Builtin.MkPair', V6, ('nested--9507-13262--in--un--goPTerm'(V0, V7))}} | ('nested--9507-13276--in--un--go3TupledPTerms'(V0, V3))] end end end(E0, E1)) end.
'nested--7875-11557--in--un--go3TupledPTerms'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V9 = ('nested--7875-11541--in--un--goPTerm'(V0, V8))), ((begin (V26 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V23, V24, V25)) end end end end end), fun (V27) -> fun (V28) -> ((((V26('erased'))('erased'))(V27))(V28)) end end end((begin (V18 = fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> {'Prelude.Types.Right', (V14(V17))} end end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end(fun (V10) -> fun (V11) -> [{'Builtin.MkPair', V5, {'Builtin.MkPair', V7, V10}} | V11] end end))))(V9)) end, ('nested--7875-11557--in--un--go3TupledPTerms'(V0, V4)))) end end end(E0, E1)) end.
'un--substFC'(V0, V1) -> ('un--mapPTerm'(fun (V2) -> case V2 of {'Idris.Syntax.PRef', V3, V4} -> {'Idris.Syntax.PRef', V0, V4}; {'Idris.Syntax.PPi', V5, V6, V7, V8, V9, V10} -> {'Idris.Syntax.PPi', V0, V6, V7, V8, V9, V10}; {'Idris.Syntax.PLam', V11, V12, V13, V14, V15, V16} -> {'Idris.Syntax.PLam', V0, V12, V13, V14, V15, V16}; {'Idris.Syntax.PLet', V17, V18, V19, V20, V21, V22, V23} -> {'Idris.Syntax.PLet', V0, V18, V19, V20, V21, V22, V23}; {'Idris.Syntax.PCase', V24, V25, V26} -> {'Idris.Syntax.PCase', V0, V25, V26}; {'Idris.Syntax.PLocal', V27, V28, V29} -> {'Idris.Syntax.PLocal', V0, V28, V29}; {'Idris.Syntax.PUpdate', V30, V31} -> {'Idris.Syntax.PUpdate', V0, V31}; {'Idris.Syntax.PApp', V32, V33, V34} -> {'Idris.Syntax.PApp', V0, V33, V34}; {'Idris.Syntax.PWithApp', V35, V36, V37} -> {'Idris.Syntax.PWithApp', V0, V36, V37}; {'Idris.Syntax.PNamedApp', V38, V39, V40, V41} -> {'Idris.Syntax.PNamedApp', V0, V39, V40, V41}; {'Idris.Syntax.PAutoApp', V42, V43, V44} -> {'Idris.Syntax.PAutoApp', V0, V43, V44}; {'Idris.Syntax.PDelayed', V45, V46, V47} -> {'Idris.Syntax.PDelayed', V0, V46, V47}; {'Idris.Syntax.PDelay', V48, V49} -> {'Idris.Syntax.PDelay', V0, V49}; {'Idris.Syntax.PForce', V50, V51} -> {'Idris.Syntax.PForce', V0, V51}; {'Idris.Syntax.PSearch', V52, V53} -> {'Idris.Syntax.PSearch', V0, V53}; {'Idris.Syntax.PPrimVal', V54, V55} -> {'Idris.Syntax.PPrimVal', V0, V55}; {'Idris.Syntax.PQuote', V56, V57} -> {'Idris.Syntax.PQuote', V0, V57}; {'Idris.Syntax.PQuoteName', V58, V59} -> {'Idris.Syntax.PQuoteName', V0, V59}; {'Idris.Syntax.PQuoteDecl', V60, V61} -> {'Idris.Syntax.PQuoteDecl', V0, V61}; {'Idris.Syntax.PUnquote', V62, V63} -> {'Idris.Syntax.PUnquote', V0, V63}; {'Idris.Syntax.PRunElab', V64, V65} -> {'Idris.Syntax.PRunElab', V0, V65}; {'Idris.Syntax.PHole', V66, V67, V68} -> {'Idris.Syntax.PHole', V0, V67, V68}; {'Idris.Syntax.PType', V69} -> {'Idris.Syntax.PType', V0}; {'Idris.Syntax.PAs', V70, V71, V72, V73} -> {'Idris.Syntax.PAs', V0, V0, V72, V73}; {'Idris.Syntax.PDotted', V74, V75} -> {'Idris.Syntax.PDotted', V0, V75}; {'Idris.Syntax.PImplicit', V76} -> {'Idris.Syntax.PImplicit', V0}; {'Idris.Syntax.PInfer', V77} -> {'Idris.Syntax.PInfer', V0}; {'Idris.Syntax.POp', V78, V79, V80, V81, V82} -> {'Idris.Syntax.POp', V0, V0, V80, V81, V82}; {'Idris.Syntax.PPrefixOp', V83, V84, V85, V86} -> {'Idris.Syntax.PPrefixOp', V0, V0, V85, V86}; {'Idris.Syntax.PSectionL', V87, V88, V89, V90} -> {'Idris.Syntax.PSectionL', V0, V0, V89, V90}; {'Idris.Syntax.PSectionR', V91, V92, V93, V94} -> {'Idris.Syntax.PSectionR', V0, V0, V93, V94}; {'Idris.Syntax.PEq', V95, V96, V97} -> {'Idris.Syntax.PEq', V0, V96, V97}; {'Idris.Syntax.PBracketed', V98, V99} -> {'Idris.Syntax.PBracketed', V0, V99}; {'Idris.Syntax.PString', V100, V101} -> {'Idris.Syntax.PString', V0, V101}; {'Idris.Syntax.PMultiline', V102, V103, V104} -> {'Idris.Syntax.PMultiline', V0, V103, V104}; {'Idris.Syntax.PDoBlock', V105, V106, V107} -> {'Idris.Syntax.PDoBlock', V0, V106, V107}; {'Idris.Syntax.PBang', V108, V109} -> {'Idris.Syntax.PBang', V0, V109}; {'Idris.Syntax.PIdiom', V110, V111, V112} -> {'Idris.Syntax.PIdiom', V0, V111, V112}; {'Idris.Syntax.PList', V113, V114, V115} -> {'Idris.Syntax.PList', V0, V0, V115}; {'Idris.Syntax.PSnocList', V116, V117, V118} -> {'Idris.Syntax.PSnocList', V0, V0, V118}; {'Idris.Syntax.PPair', V119, V120, V121} -> {'Idris.Syntax.PPair', V0, V120, V121}; {'Idris.Syntax.PDPair', V122, V123, V124, V125, V126} -> {'Idris.Syntax.PDPair', V0, V0, V124, V125, V126}; {'Idris.Syntax.PUnit', V127} -> {'Idris.Syntax.PUnit', V0}; {'Idris.Syntax.PIfThenElse', V128, V129, V130, V131} -> {'Idris.Syntax.PIfThenElse', V0, V129, V130, V131}; {'Idris.Syntax.PComprehension', V132, V133, V134} -> {'Idris.Syntax.PComprehension', V0, V133, V134}; {'Idris.Syntax.PRewrite', V135, V136, V137} -> {'Idris.Syntax.PRewrite', V0, V136, V137}; {'Idris.Syntax.PRange', V138, V139, V140, V141} -> {'Idris.Syntax.PRange', V0, V139, V140, V141}; {'Idris.Syntax.PRangeStream', V142, V143, V144} -> {'Idris.Syntax.PRangeStream', V0, V143, V144}; {'Idris.Syntax.PPostfixApp', V145, V146, V147} -> {'Idris.Syntax.PPostfixApp', V0, V146, V147}; {'Idris.Syntax.PPostfixAppPartial', V148, V149} -> {'Idris.Syntax.PPostfixAppPartial', V0, V149}; {'Idris.Syntax.PUnifyLog', V150, V151, V152} -> {'Idris.Syntax.PUnifyLog', V0, V151, V152}; {'Idris.Syntax.PWithUnambigNames', V153, V154, V155} -> {'Idris.Syntax.PWithUnambigNames', V0, V154, V155} end end, V1)).
'un--mapPTermM'(V0, V1) -> ('nested--7875-11541--in--un--goPTerm'(V0, V1)).
'un--mapPTerm'(V0, V1) -> ('nested--9507-13262--in--un--goPTerm'(V0, V1)).
