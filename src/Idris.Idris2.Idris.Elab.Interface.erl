-module('Idris.Idris2.Idris.Elab.Interface').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--elabInterface,elabDefault-8842'/25,
  'nested--12063-8040--in--un--vfc'/16,
  'nested--11189-7181--in--un--vfc'/10,
  'nested--10593-6636--in--un--vfc'/11,
  'nested--12149-8429--in--un--vdfc'/21,
  'nested--11867-7831--in--un--totMeth'/10,
  'nested--10959-6982--in--un--stripParams'/11,
  'nested--12063-8041--in--un--paramNames'/16,
  'nested--12063-8042--in--un--nameCons'/18,
  'nested--10593-6640--in--un--mkTy'/14,
  'nested--11189-7185--in--un--mkLam'/12,
  'nested--11189-7187--in--un--methName'/11,
  'nested--10593-6637--in--un--jname'/12,
  'nested--11584-7567--in--un--impsBind'/14,
  'nested--11189-7184--in--un--getExplicitArgs'/12,
  'nested--11867-7830--in--un--findSetTotal'/10,
  'nested--12063-8044--in--un--elabMethods'/19,
  'nested--12063-8045--in--un--elabDefault'/18,
  'nested--12063-8046--in--un--elabConstraintHints'/18,
  'nested--12063-8043--in--un--elabAsData'/19,
  'nested--11584-7566--in--un--constName'/13,
  'nested--12149-8432--in--un--changeNameTerm'/23,
  'nested--12149-8433--in--un--changeName'/23,
  'nested--10593-6638--in--un--bname'/12,
  'nested--12149-8430--in--un--bindPs'/23,
  'nested--11189-7182--in--un--bindPs'/12,
  'nested--11584-7565--in--un--bindName'/13,
  'nested--11189-7186--in--un--bindName'/11,
  'nested--10593-6639--in--un--bhere'/12,
  'nested--12149-8431--in--un--applyParams'/23,
  'nested--11189-7183--in--un--applyCon'/11,
  'un--updateIfaceSyn'/9,
  'un--sigToDecl'/1,
  'un--namePis'/2,
  'un--mkIfaceData'/11,
  'un--mkDataTy'/2,
  'un--mkCon'/2,
  'un--getSig'/1,
  'un--getMethToplevel'/10,
  'un--getMethDecl'/7,
  'un--getImplParams'/1,
  'un--getDefault'/1,
  'un--getConstraintHint'/11,
  'un--elabInterface'/16,
  'un--bindIFace'/3
]).
'case--elabInterface,elabDefault-8842'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V23 of {'Prelude.Types.Just', V25} -> {'Prelude.Types.Right', {'Builtin.MkPair', case V25 of {'Idris.Elab.Interface.MkDeclaration', V26, V27, V28, V29, V30} -> V27 end, case V25 of {'Idris.Elab.Interface.MkDeclaration', V31, V32, V33, V34, V35} -> V35 end}}; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V16, <<<<"No method named "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V18))/binary, <<<<" in interface "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4))/binary>>/binary>>/binary>>}, V24)) end.
'nested--12063-8040--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V10)).
'nested--11189-7181--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> ('Idris.Idris2.Core.FC':'un--virtualiseFC'(case V0 of {'Idris.Elab.Interface.MkSignature', V10, V11, V12, V13, V14, V15, V16} -> V10 end)).
'nested--10593-6636--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V9)).
'nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V16)).
'nested--11867-7831--in--un--totMeth'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V15 = ('nested--11867-7830--in--un--findSetTotal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, case V9 of {'Idris.Elab.Interface.MkDeclaration', V10, V11, V12, V13, V14} -> V12 end))), fun (V16) -> {'Prelude.Types.Right', {'Idris.Syntax.MkMethod', case V9 of {'Idris.Elab.Interface.MkDeclaration', V17, V18, V19, V20, V21} -> V17 end, case V9 of {'Idris.Elab.Interface.MkDeclaration', V22, V23, V24, V25, V26} -> V23 end, V15, case V9 of {'Idris.Elab.Interface.MkDeclaration', V27, V28, V29, V30, V31} -> V31 end}} end end.
'nested--10959-6982--in--un--stripParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'TTImp.TTImp.IPi', V11, V12, V13, V14, V15, V16} -> case ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> 0 end, fun () -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V25, V26, V27)) end end end end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V29)) end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V33, V34, V35, V36)) end end end end end end end, fun (V37) -> fun (V38) -> V38 end end, fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V41, V42, V43)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V44, V45)) end end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V46, V47)) end end}, V17, V9)) end end, V14)) of 1 -> ('nested--10959-6982--in--un--stripParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V16)); 0 -> {'TTImp.TTImp.IPi', V11, V12, V13, V14, V15, ('nested--10959-6982--in--un--stripParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V16))} end; _ -> V10 end.
'nested--12063-8041--in--un--paramNames'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((begin (V21 = fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V19, V20)) end end end end), fun (V22) -> fun (V23) -> ((((V21('erased'))('erased'))(V22))(V23)) end end end(fun (V16) -> ('Idris.Idris2.Builtin':'un--fst'(V16)) end))(V3)).
'nested--12063-8042--in--un--nameCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of [] -> []; [E0 | E1] -> (fun (V18, V19) -> case V18 of {'Builtin.MkPair', V20, V21} -> [{'Builtin.MkPair', {'Core.Name.UN', {'Core.Name.Basic', <<<<"__con"/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V16))/binary>>}}, V21} | ('nested--12063-8042--in--un--nameCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, begin (V22 = (V16 + 1)), case ((V22 band 9223372036854775808) =/= 0) of 'true' -> (V22 bor -9223372036854775808); _ -> (V22 band 9223372036854775807) end end, V19))] end end(E0, E1)) end.
'nested--10593-6640--in--un--mkTy'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V12 of [] -> V13; [E0 | E1] -> (fun (V14, V15) -> case V14 of {'Builtin.MkPair', V16, V17} -> case V17 of {'Builtin.MkPair', V18, V19} -> {'TTImp.TTImp.IPi', ('nested--10593-6636--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10)), V18, V11, V16, V19, ('nested--10593-6640--in--un--mkTy'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V15, V13))} end end end(E0, E1)) end.
'nested--11189-7185--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V10 of [] -> V11; [E0 | E1] -> (fun (V12, V13) -> {'TTImp.TTImp.ILam', {'Core.FC.EmptyFC'}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Core.TT.Explicit'}, {'Prelude.Types.Just', V12}, {'TTImp.TTImp.Implicit', ('nested--11189-7181--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9)), 0}, ('nested--11189-7185--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, V11))} end(E0, E1)) end.
'nested--11189-7187--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> {'Core.Name.UN', {'Core.Name.Basic', ('nested--11189-7186--in--un--bindName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10))}}.
'nested--10593-6637--in--un--jname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Builtin.MkPair', V12, V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> {'Builtin.MkPair', {'Prelude.Types.Just', V12}, {'Builtin.MkPair', V14, V15}} end end.
'nested--11584-7567--in--un--impsBind'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of [] -> V12; [E0 | E1] -> (fun (V14, V15) -> ('nested--11584-7567--in--un--impsBind'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, {'TTImp.TTImp.IAutoApp', V10, V12, {'TTImp.TTImp.IBindVar', V10, V14}}, V15)) end(E0, E1)) end.
'nested--11189-7184--in--un--getExplicitArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'TTImp.TTImp.IPi', V12, V13, V14, V15, V16, V17} -> case V14 of {'Core.TT.Explicit'} -> [{'Core.Name.MN', <<"arg"/utf8>>, V10} | ('nested--11189-7184--in--un--getExplicitArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, begin (V18 = (V10 + 1)), case ((V18 band 9223372036854775808) =/= 0) of 'true' -> (V18 bor -9223372036854775808); _ -> (V18 band 9223372036854775807) end end, V17))]; _ -> ('nested--11189-7184--in--un--getExplicitArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V17)) end; _ -> [] end.
'nested--11867-7830--in--un--findSetTotal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [] -> {'Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'TTImp.TTImp.Totality', V12} -> {'Prelude.Types.Just', V12}; _ -> ('nested--11867-7830--in--un--findSetTotal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11)) end end(E0, E1)) end.
'nested--12063-8044--in--un--elabMethods'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> begin (V28 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V19) -> ('un--getMethToplevel'(V6, V15, V8, V9, V4, V16, ((begin (V25 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V23, V24)) end end end end), fun (V26) -> fun (V27) -> ((((V25('erased'))('erased'))(V26))(V27)) end end end(fun (V20) -> ('Idris.Idris2.Builtin':'un--fst'(V20)) end))(V5)), V17, V3, V19)) end, V18, []))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V78 = begin (V36 = ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V33, V34)) end end, []}, fun (V35) -> V35 end, V32))), begin (V46 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"elab.interface"/utf8>>, 5, fun () -> <<<<"Top level methods: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V39, V40)) end end}, V37)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}, V41, V42)) end end}, V36))/binary>> end))), fun (V47) -> begin (V48 = (V46(V47))), case V48 of {'Prelude.Types.Left', V49} -> {'Prelude.Types.Left', V49}; {'Prelude.Types.Right', V50} -> (begin (V77 = begin (V52 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V51) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V6, V15, V12, V14, V13, V11, [], V7, V8, V51)) end, V36))), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V76 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V57) -> begin (V58 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V15, V57))), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V75 = begin (V63 = ('Idris.Idris2.Core.Context':'un--setFlag'(V15, ('nested--12063-8040--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15)), V62, {'Core.Context.Context.Inline'}))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V74 = begin (V68 = ('Idris.Idris2.Core.Context':'un--setFlag'(V15, ('nested--12063-8040--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15)), V62, {'Core.Context.Context.TCInline'}))), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V73 = ('Idris.Idris2.Core.Context':'un--setFlag'(V15, ('nested--12063-8040--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15)), V62, {'Core.Context.Context.Overloadable'}))), V73 end(V69)) end end end end), V74 end(V64)) end end end end), V75 end(V59)) end end end end end, V17))), V76 end(V53)) end end end end), V77 end(V47)) end end end end end), V78 end(V29)) end end end end.
'nested--12063-8045--in--un--elabDefault'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Builtin.MkPair', V18, V19} -> case V19 of {'Builtin.MkPair', V20, V21} -> case V21 of {'Builtin.MkPair', V22, V23} -> begin (V24 = {'Core.Name.MN', <<<<"Default implementation of "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V22))/binary>>, 0}), begin (V25 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V15, V24))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V173 = begin (V59 = fun (V30) -> ('case--elabInterface,elabDefault-8842'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16, V24, V29, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V31) -> ((begin (V56 = fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V54, V55)) end end end end), fun (V57) -> fun (V58) -> ((((V56('erased'))('erased'))(V57))(V58)) end end end(fun (V51) -> V31 end))(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V34, V35)) end end end end, fun (V36) -> fun (V37) -> {'Prelude.Types.Just', V37} end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V40, V41)) end end end end}, fun (V42) -> {'Prelude.Types.Nothing'} end, fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V44, V45)) end end end}, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V22, case V31 of {'Idris.Elab.Interface.MkDeclaration', V46, V47, V48, V49, V50} -> V46 end)))))) end, V16)), V30)) end), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V172 = case V63 of {'Builtin.MkPair', V64, V65} -> begin (V74 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', ('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16)), V4}, ((begin (V71 = fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V69, V70)) end end end end), fun (V72) -> fun (V73) -> ((((V71('erased'))('erased'))(V72))(V73)) end end end(fun (V66) -> {'TTImp.TTImp.IVar', ('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16)), V66} end))(('nested--12063-8041--in--un--paramNames'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15))))))), begin (V89 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V75) -> begin (V81 = case V75 of {'Idris.Elab.Interface.MkDeclaration', V76, V77, V78, V79, V80} -> V76 end), begin (V82 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V15, V81))), fun (V83) -> begin (V84 = (V82(V83))), case V84 of {'Prelude.Types.Left', V85} -> {'Prelude.Types.Left', V85}; {'Prelude.Types.Right', V86} -> (begin (V88 = fun (V87) -> {'Prelude.Types.Right', {'Builtin.MkPair', V81, ('nested--12149-8431--in--un--applyParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16, {'TTImp.TTImp.IVar', ('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16)), V86}, ('nested--12063-8041--in--un--paramNames'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15))))}} end), V88 end(V83)) end end end end end end, V16, []))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V171 = begin (V94 = ('nested--12149-8430--in--un--bindPs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16, V3, ('un--bindIFace'(('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16)), V74, ('Idris.Idris2.TTImp.Utils':'un--substNames'(V6, V93, V65))))))), begin (V108 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V15, V18, [], ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(((begin (V105 = fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V103, V104)) end end end end), fun (V106) -> fun (V107) -> ((((V105('erased'))('erased'))(V106))(V107)) end end end(fun (V95) -> case V95 of {'Idris.Elab.Interface.MkDeclaration', V96, V97, V98, V99, V100} -> V96 end end))(V16)), V6)), V94))), fun (V109) -> begin (V110 = (V108(V109))), case V110 of {'Prelude.Types.Left', V111} -> {'Prelude.Types.Left', V111}; {'Prelude.Types.Right', V112} -> (begin (V170 = begin (V122 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, (begin (V114 = fun (V113) -> V113 end), fun (V115) -> (V114(V115)) end end(<<"elab.interface.default"/utf8>>)), 5, fun () -> <<(begin (V117 = fun (V116) -> V116 end), fun (V118) -> (V117(V118)) end end(<<"Default method "/utf8>>))/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V29))/binary, <<<<" : "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V119) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V119)) end, fun (V120) -> fun (V121) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V120, V121)) end end}, V112))/binary>>/binary>>/binary>> end))), fun (V123) -> begin (V124 = (V122(V123))), case V124 of {'Prelude.Types.Left', V125} -> {'Prelude.Types.Left', V125}; {'Prelude.Types.Right', V126} -> (begin (V169 = begin (V127 = {'TTImp.TTImp.IClaim', ('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16)), V64, V9, [], {'TTImp.TTImp.MkImpTy', {'Core.FC.EmptyFC'}, {'Core.FC.EmptyFC'}, V29, V112}}), begin (V128 = ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V6, V15, V12, V14, V13, V11, [], V7, V8, V127))), fun (V129) -> begin (V130 = (V128(V129))), case V130 of {'Prelude.Types.Left', V131} -> {'Prelude.Types.Left', V131}; {'Prelude.Types.Right', V132} -> (begin (V168 = begin (V134 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V133) -> ('nested--12149-8433--in--un--changeName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16, V29, V133)) end, V23, []))), fun (V135) -> begin (V136 = (V134(V135))), case V136 of {'Prelude.Types.Left', V137} -> {'Prelude.Types.Left', V137}; {'Prelude.Types.Right', V138} -> (begin (V167 = begin (V154 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, (begin (V140 = fun (V139) -> V139 end), fun (V141) -> (V140(V141)) end end(<<"elab.interface.default"/utf8>>)), 5, fun () -> <<(begin (V143 = fun (V142) -> V142 end), fun (V144) -> (V143(V144)) end end(<<"Default method body "/utf8>>))/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V145) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpClause\x{27} $nm)'({'Prelude.Show.MkShow', fun (V146) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V146)) end, fun (V147) -> fun (V148) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V147, V148)) end end}, V145)) end, fun (V149) -> fun (V150) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpClause\x{27} $nm)'({'Prelude.Show.MkShow', fun (V151) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V151)) end, fun (V152) -> fun (V153) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V152, V153)) end end}, V149, V150)) end end}, V138))/binary>> end))), fun (V155) -> begin (V156 = (V154(V155))), case V156 of {'Prelude.Types.Left', V157} -> {'Prelude.Types.Left', V157}; {'Prelude.Types.Right', V158} -> (begin (V166 = begin (V159 = ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V6, V15, V12, V14, V13, V11, [], V7, V8, {'TTImp.TTImp.IDef', ('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V18, V20, V22, V23, V16)), V29, V138}))), fun (V160) -> begin (V161 = (V159(V160))), case V161 of {'Prelude.Types.Left', V162} -> {'Prelude.Types.Left', V162}; {'Prelude.Types.Right', V163} -> (begin (V165 = fun (V164) -> {'Prelude.Types.Right', {'Builtin.MkPair', V22, V23}} end), V165 end(V160)) end end end end), V166 end(V155)) end end end end), V167 end(V135)) end end end end), V168 end(V129)) end end end end end), V169 end(V123)) end end end end), V170 end(V109)) end end end end end), V171 end(V90)) end end end end end end), V172 end(V60)) end end end end), V173 end(V26)) end end end end end end end end.
'nested--12063-8046--in--un--elabConstraintHints'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> begin (V18 = ('nested--12063-8042--in--un--nameCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, 0, V5))), begin (V28 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V19) -> ('un--getConstraintHint'(V6, V15, ('nested--12063-8040--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15)), V8, V9, V4, V16, ((begin (V25 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V23, V24)) end end end end), fun (V26) -> fun (V27) -> ((((V25('erased'))('erased'))(V26))(V27)) end end end(fun (V20) -> ('Idris.Idris2.Builtin':'un--fst'(V20)) end))(V18)), V17, ('nested--12063-8041--in--un--paramNames'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15)), V19)) end, V18, []))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V154 = begin (V123 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"elab.interface"/utf8>>, 5, fun () -> <<<<"Constraint hints from "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V36, V37)) end end}, V34)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V41, V42)) end end}, V38, V39)) end end}, {'Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V44) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V44)) end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V45, V46)) end end}, V43)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V49) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V50, V51)) end end}, V47, V48)) end end}}, V33)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V54) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V55)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V56, V57)) end end}, V54)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V60) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V61, V62)) end end}, V58, V59)) end end}, {'Prelude.Show.MkShow', fun (V63) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V64) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V64)) end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V65, V66)) end end}, V63)) end, fun (V67) -> fun (V68) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V69)) end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V70, V71)) end end}, V67, V68)) end end}}, V52, V53)) end end}, V5))/binary, <<<<": "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V72) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V73) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V73)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V74, V75)) end end}, {'Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V78)) end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V79, V80)) end end}, V77)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V84, V85)) end end}, V81, V82)) end end}, V76)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V88) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V89) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V89)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V90, V91)) end end}, V88)) end, fun (V92) -> fun (V93) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V94) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V94)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V95, V96)) end end}, V92, V93)) end end}, V86, V87)) end end}}, V72)) end, fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V99) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V99)) end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V100, V101)) end end}, {'Prelude.Show.MkShow', fun (V102) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V103) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V104)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V105, V106)) end end}, V103)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V109)) end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V110, V111)) end end}, V107, V108)) end end}, V102)) end, fun (V112) -> fun (V113) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V114) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V115) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V115)) end, fun (V116) -> fun (V117) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V116, V117)) end end}, V114)) end, fun (V118) -> fun (V119) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V120) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V120)) end, fun (V121) -> fun (V122) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V121, V122)) end end}, V118, V119)) end end}, V112, V113)) end end}}, V97, V98)) end end}, V32))/binary>>/binary>>/binary>> end))), fun (V124) -> begin (V125 = (V123(V124))), case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> (begin (V153 = begin (V132 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V128) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V6, V15, V12, V14, V13, V11, [], V7, V8, V128)) end, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V129) -> fun (V130) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V129, V130)) end end, []}, fun (V131) -> ('Idris.Idris2.Builtin':'un--snd'(V131)) end, V32))))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V152 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V137) -> begin (V138 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V15, V137))), fun (V139) -> begin (V140 = (V138(V139))), case V140 of {'Prelude.Types.Left', V141} -> {'Prelude.Types.Left', V141}; {'Prelude.Types.Right', V142} -> (begin (V143 = ('Idris.Idris2.Core.Context':'un--setFlag'(V15, ('nested--12063-8040--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15)), V142, {'Core.Context.Context.TCInline'}))), V143 end(V139)) end end end end end, ((begin (V149 = fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V147, V148)) end end end end), fun (V150) -> fun (V151) -> ((((V149('erased'))('erased'))(V150))(V151)) end end end(fun (V144) -> ('Idris.Idris2.Builtin':'un--fst'(V144)) end))(V32))))), V152 end(V133)) end end end end), V153 end(V124)) end end end end), V154 end(V29)) end end end end end.
'nested--12063-8043--in--un--elabAsData'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> begin (V41 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V19) -> ('un--getMethDecl'(V6, V15, V8, V7, V3, V17, {'Builtin.MkPair', case V19 of {'Idris.Elab.Interface.MkSignature', V20, V21, V22, V23, V24, V25, V26} -> V21 end, {'Builtin.MkPair', case V19 of {'Idris.Elab.Interface.MkSignature', V27, V28, V29, V30, V31, V32, V33} -> V30 end, case V19 of {'Idris.Elab.Interface.MkSignature', V34, V35, V36, V37, V38, V39, V40} -> V40 end}})) end, V18, []))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V306 = begin (V109 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"elab.interface"/utf8>>, 5, fun () -> <<<<"Method declarations: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V47)) end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V48, V49)) end end}, {'Prelude.Show.MkShow', fun (V50) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V51) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V52, V53)) end end}, {'Prelude.Show.MkShow', fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V55)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V56, V57)) end end}, V54)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V60) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V61, V62)) end end}, V58, V59)) end end}}, V50)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V65) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V65)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V66, V67)) end end}, {'Prelude.Show.MkShow', fun (V68) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V69)) end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V70, V71)) end end}, V68)) end, fun (V72) -> fun (V73) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V74) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V74)) end, fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V75, V76)) end end}, V72, V73)) end end}}, V63, V64)) end end}}, V46)) end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V79) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V79)) end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V80, V81)) end end}, {'Prelude.Show.MkShow', fun (V82) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V83) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V84, V85)) end end}, {'Prelude.Show.MkShow', fun (V86) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V87) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V87)) end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V88, V89)) end end}, V86)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V92)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V93, V94)) end end}, V90, V91)) end end}}, V82)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V97) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V97)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V98, V99)) end end}, {'Prelude.Show.MkShow', fun (V100) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V101) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V101)) end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V102, V103)) end end}, V100)) end, fun (V104) -> fun (V105) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V106) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V106)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V107, V108)) end end}, V104, V105)) end end}}, V95, V96)) end end}}, V77, V78)) end end}, V45))/binary>> end))), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V305 = begin (V115 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V114) -> ('un--getMethDecl'(V6, V15, V8, V7, V3, V17, {'Builtin.MkPair', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V114})) end, V5, []))), fun (V116) -> begin (V117 = (V115(V116))), case V117 of {'Prelude.Types.Left', V118} -> {'Prelude.Types.Left', V118}; {'Prelude.Types.Right', V119} -> (begin (V304 = begin (V195 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"elab.interface"/utf8>>, 5, fun () -> <<<<"Constraints: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V120) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V121) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V122) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V122)) end, fun (V123) -> fun (V124) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V123, V124)) end end}, V121)) end, fun (V125) -> fun (V126) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V127) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V127)) end, fun (V128) -> fun (V129) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V128, V129)) end end}, V125, V126)) end end}, {'Prelude.Show.MkShow', fun (V130) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V131) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V131)) end, fun (V132) -> fun (V133) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V132, V133)) end end}, {'Prelude.Show.MkShow', fun (V134) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V135) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V135)) end, fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V136, V137)) end end}, V134)) end, fun (V138) -> fun (V139) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V140) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V140)) end, fun (V141) -> fun (V142) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V141, V142)) end end}, V138, V139)) end end}}, V130)) end, fun (V143) -> fun (V144) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V145) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V145)) end, fun (V146) -> fun (V147) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V146, V147)) end end}, {'Prelude.Show.MkShow', fun (V148) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V149) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V149)) end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V150, V151)) end end}, V148)) end, fun (V152) -> fun (V153) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V154) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V154)) end, fun (V155) -> fun (V156) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V155, V156)) end end}, V152, V153)) end end}}, V143, V144)) end end}}, V120)) end, fun (V157) -> fun (V158) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V159) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V160) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V160)) end, fun (V161) -> fun (V162) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V161, V162)) end end}, V159)) end, fun (V163) -> fun (V164) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V165) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V165)) end, fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V166, V167)) end end}, V163, V164)) end end}, {'Prelude.Show.MkShow', fun (V168) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V169) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V169)) end, fun (V170) -> fun (V171) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V170, V171)) end end}, {'Prelude.Show.MkShow', fun (V172) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V173) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V173)) end, fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V174, V175)) end end}, V172)) end, fun (V176) -> fun (V177) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V178) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V178)) end, fun (V179) -> fun (V180) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V179, V180)) end end}, V176, V177)) end end}}, V168)) end, fun (V181) -> fun (V182) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V183) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V183)) end, fun (V184) -> fun (V185) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V184, V185)) end end}, {'Prelude.Show.MkShow', fun (V186) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V187) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V187)) end, fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V188, V189)) end end}, V186)) end, fun (V190) -> fun (V191) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V192) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V192)) end, fun (V193) -> fun (V194) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V193, V194)) end end}, V190, V191)) end end}}, V181, V182)) end end}}, V157, V158)) end end}, V119))/binary>> end))), fun (V196) -> begin (V197 = (V195(V196))), case V197 of {'Prelude.Types.Left', V198} -> {'Prelude.Types.Left', V198}; {'Prelude.Types.Right', V199} -> (begin (V303 = begin (V200 = ('un--mkIfaceData'(V6, V15, ('nested--12063-8040--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15)), V9, V8, V119, V4, V16, V3, V2, V45))), fun (V201) -> begin (V202 = (V200(V201))), case V202 of {'Prelude.Types.Left', V203} -> {'Prelude.Types.Left', V203}; {'Prelude.Types.Right', V204} -> (begin (V302 = begin (V268 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"elab.interface"/utf8>>, 10, fun () -> <<<<"Methods: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V205) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V206) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V206)) end, fun (V207) -> fun (V208) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V207, V208)) end end}, {'Prelude.Show.MkShow', fun (V209) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V210) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V210)) end, fun (V211) -> fun (V212) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V211, V212)) end end}, {'Prelude.Show.MkShow', fun (V213) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V214) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V214)) end, fun (V215) -> fun (V216) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V215, V216)) end end}, V213)) end, fun (V217) -> fun (V218) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V219) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V219)) end, fun (V220) -> fun (V221) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V220, V221)) end end}, V217, V218)) end end}}, V209)) end, fun (V222) -> fun (V223) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V224) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V224)) end, fun (V225) -> fun (V226) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V225, V226)) end end}, {'Prelude.Show.MkShow', fun (V227) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V228) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V228)) end, fun (V229) -> fun (V230) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V229, V230)) end end}, V227)) end, fun (V231) -> fun (V232) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V233) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V233)) end, fun (V234) -> fun (V235) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V234, V235)) end end}, V231, V232)) end end}}, V222, V223)) end end}}, V205)) end, fun (V236) -> fun (V237) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V238) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V238)) end, fun (V239) -> fun (V240) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V239, V240)) end end}, {'Prelude.Show.MkShow', fun (V241) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V242) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V242)) end, fun (V243) -> fun (V244) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V243, V244)) end end}, {'Prelude.Show.MkShow', fun (V245) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V246) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V246)) end, fun (V247) -> fun (V248) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V247, V248)) end end}, V245)) end, fun (V249) -> fun (V250) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V251) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V251)) end, fun (V252) -> fun (V253) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V252, V253)) end end}, V249, V250)) end end}}, V241)) end, fun (V254) -> fun (V255) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V256) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V256)) end, fun (V257) -> fun (V258) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V257, V258)) end end}, {'Prelude.Show.MkShow', fun (V259) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V260) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V260)) end, fun (V261) -> fun (V262) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V261, V262)) end end}, V259)) end, fun (V263) -> fun (V264) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V265) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V265)) end, fun (V266) -> fun (V267) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V266, V267)) end end}, V263, V264)) end end}}, V254, V255)) end end}}, V236, V237)) end end}, V45))/binary>> end))), fun (V269) -> begin (V270 = (V268(V269))), case V270 of {'Prelude.Types.Left', V271} -> {'Prelude.Types.Left', V271}; {'Prelude.Types.Right', V272} -> (begin (V301 = begin (V276 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"elab.interface"/utf8>>, 5, fun () -> <<<<"Making interface data type "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Prelude.Show.MkShow', fun (V273) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V273)) end, fun (V274) -> fun (V275) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V274, V275)) end end}, V204))/binary>> end))), fun (V277) -> begin (V278 = (V276(V277))), case V278 of {'Prelude.Types.Left', V279} -> {'Prelude.Types.Left', V279}; {'Prelude.Types.Right', V280} -> (begin (V300 = begin (V281 = ('Idris.Idris2.TTImp.ProcessDecls':'un--processDecls'(V6, V15, V12, V14, V13, V11, V7, V8, [V204 | []]))), ((begin (V297 = fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V294, V295, V296)) end end end end end), fun (V298) -> fun (V299) -> ((((V297('erased'))('erased'))(V298))(V299)) end end end((begin (V289 = fun (V283) -> fun (V284) -> fun (V285) -> fun (V286) -> case V286 of {'Prelude.Types.Left', V287} -> {'Prelude.Types.Left', V287}; {'Prelude.Types.Right', V288} -> {'Prelude.Types.Right', (V285(V288))} end end end end end), fun (V290) -> fun (V291) -> ((((V289('erased'))('erased'))(V290))(V291)) end end end(fun (V282) -> {'Builtin.MkUnit'} end))))(V281)) end), V300 end(V277)) end end end end), V301 end(V269)) end end end end), V302 end(V201)) end end end end), V303 end(V196)) end end end end), V304 end(V116)) end end end end), V305 end(V110)) end end end end), V306 end(V42)) end end end end.
'nested--11584-7566--in--un--constName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> {'Core.Name.UN', {'Core.Name.Basic', ('nested--11584-7565--in--un--bindName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12))}}.
'nested--12149-8432--in--un--changeNameTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V22 of {'TTImp.TTImp.IVar', V23, V24} -> case ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V18, V24)) of 1 -> fun (V25) -> {'Prelude.Types.Right', {'TTImp.TTImp.IVar', V23, V24}} end; 0 -> begin (V26 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"ide-mode.highlight"/utf8>>, 7, fun () -> <<<<"elabDefault is trying to add Function: "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V18))/binary, <<<<" ("/utf8>>/binary, <<('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V23))/binary, <<")"/utf8>>/binary>>/binary>>/binary>>/binary>> end))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V46 = begin (V39 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V23)) of {'Prelude.Types.Just', V31} -> begin (V32 = ('Idris.Idris2.Core.Context.Log':'un--log'(V15, <<"ide-mode.highlight"/utf8>>, 7, fun () -> <<<<"elabDefault is adding Function: "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V18))/binary>> end))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V37 = ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V12, V15, [{'Builtin.MkPair', V31, {'Builtin.MkPair', 2, {'Prelude.Types.Just', V18}}} | []]))), V37 end(V33)) end end end end; {'Prelude.Types.Nothing'} -> fun (V38) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V45 = fun (V44) -> {'Prelude.Types.Right', {'TTImp.TTImp.IVar', V23, V21}} end), V45 end(V40)) end end end end), V46 end(V27)) end end end end end; {'TTImp.TTImp.IApp', V47, V48, V49} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V50 = ('nested--12149-8432--in--un--changeNameTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V48))), ((begin (V67 = fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V64, V65, V66)) end end end end end), fun (V68) -> fun (V69) -> ((((V67('erased'))('erased'))(V68))(V69)) end end end((begin (V59 = fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> {'Prelude.Types.Right', (V55(V58))} end end end end end), fun (V60) -> fun (V61) -> ((((V59('erased'))('erased'))(V60))(V61)) end end end(fun (V51) -> fun (V52) -> {'TTImp.TTImp.IApp', V47, V51, V52} end end))))(V50)) end, fun (V70) -> {'Prelude.Types.Right', V49} end)); {'TTImp.TTImp.IAutoApp', V71, V72, V73} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V74 = ('nested--12149-8432--in--un--changeNameTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V72))), ((begin (V91 = fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V88, V89, V90)) end end end end end), fun (V92) -> fun (V93) -> ((((V91('erased'))('erased'))(V92))(V93)) end end end((begin (V83 = fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> {'Prelude.Types.Right', (V79(V82))} end end end end end), fun (V84) -> fun (V85) -> ((((V83('erased'))('erased'))(V84))(V85)) end end end(fun (V75) -> fun (V76) -> {'TTImp.TTImp.IAutoApp', V71, V75, V76} end end))))(V74)) end, fun (V94) -> {'Prelude.Types.Right', V73} end)); {'TTImp.TTImp.INamedApp', V95, V96, V97, V98} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V99 = ('nested--12149-8432--in--un--changeNameTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V96))), ((begin (V117 = fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V114, V115, V116)) end end end end end), fun (V118) -> fun (V119) -> ((((V117('erased'))('erased'))(V118))(V119)) end end end((begin (V109 = fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> case V106 of {'Prelude.Types.Left', V107} -> {'Prelude.Types.Left', V107}; {'Prelude.Types.Right', V108} -> {'Prelude.Types.Right', (V105(V108))} end end end end end), fun (V110) -> fun (V111) -> ((((V109('erased'))('erased'))(V110))(V111)) end end end(fun (V100) -> fun (V101) -> fun (V102) -> {'TTImp.TTImp.INamedApp', V95, V100, V101, V102} end end end))))(V99)) end, fun (V120) -> {'Prelude.Types.Right', V97} end)), fun (V121) -> {'Prelude.Types.Right', V98} end)); _ -> fun (V122) -> {'Prelude.Types.Right', V22} end end.
'nested--12149-8433--in--un--changeName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V22 of {'TTImp.TTImp.PatClause', V23, V24, V25} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V26 = ('nested--12149-8432--in--un--changeNameTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V24))), ((begin (V43 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V40, V41, V42)) end end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end((begin (V35 = fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> {'Prelude.Types.Right', (V31(V34))} end end end end end), fun (V36) -> fun (V37) -> ((((V35('erased'))('erased'))(V36))(V37)) end end end(fun (V27) -> fun (V28) -> {'TTImp.TTImp.PatClause', V23, V27, V28} end end))))(V26)) end, fun (V46) -> {'Prelude.Types.Right', V25} end)); {'TTImp.TTImp.WithClause', V47, V48, V49, V50, V51, V52, V53} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V54 = ('nested--12149-8432--in--un--changeNameTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V48))), ((begin (V75 = fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V72, V73, V74)) end end end end end), fun (V76) -> fun (V77) -> ((((V75('erased'))('erased'))(V76))(V77)) end end end((begin (V67 = fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> {'Prelude.Types.Right', (V63(V66))} end end end end end), fun (V68) -> fun (V69) -> ((((V67('erased'))('erased'))(V68))(V69)) end end end(fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> {'TTImp.TTImp.WithClause', V47, V55, V56, V57, V58, V59, V60} end end end end end end))))(V54)) end, fun (V78) -> {'Prelude.Types.Right', V49} end)), fun (V79) -> {'Prelude.Types.Right', V50} end)), fun (V80) -> {'Prelude.Types.Right', V51} end)), fun (V81) -> {'Prelude.Types.Right', V52} end)), ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V82) -> ('nested--12149-8433--in--un--changeName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V82)) end, V53, [])))); {'TTImp.TTImp.ImpossibleClause', V83, V84} -> begin (V85 = ('nested--12149-8432--in--un--changeNameTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V84))), ((begin (V101 = fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V98, V99, V100)) end end end end end), fun (V102) -> fun (V103) -> ((((V101('erased'))('erased'))(V102))(V103)) end end end((begin (V93 = fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> {'Prelude.Types.Right', (V89(V92))} end end end end end), fun (V94) -> fun (V95) -> ((((V93('erased'))('erased'))(V94))(V95)) end end end(fun (V86) -> {'TTImp.TTImp.ImpossibleClause', V83, V86} end))))(V85)) end end.
'nested--10593-6638--in--un--bname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Builtin.MkPair', V12, V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> {'Builtin.MkPair', {'Prelude.Types.Just', V12}, {'Builtin.MkPair', V14, {'TTImp.TTImp.IBindHere', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V15)), {'TTImp.TTImp.PI', ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V16) -> fun (V17) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V16, V17)) end end, 0, fun (V18) -> fun (V19) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V18, V19)) end end, 1}))}, V15}}} end end.
'nested--12149-8430--in--un--bindPs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V21 of [] -> V22; [E0 | E1] -> (fun (V23, V24) -> case V23 of {'Builtin.MkPair', V25, V26} -> case V26 of {'Builtin.MkPair', V27, V28} -> {'TTImp.TTImp.IPi', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V28)), V27, {'Core.TT.Implicit'}, {'Prelude.Types.Just', V25}, V28, ('nested--12149-8430--in--un--bindPs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V24, V22))} end end end(E0, E1)) end.
'nested--11189-7182--in--un--bindPs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V10 of [] -> V11; [E0 | E1] -> (fun (V12, V13) -> case V12 of {'Builtin.MkPair', V14, V15} -> case V15 of {'Builtin.MkPair', V16, V17} -> {'TTImp.TTImp.IPi', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V17)), V16, {'Core.TT.Implicit'}, {'Prelude.Types.Just', V14}, V17, ('nested--11189-7182--in--un--bindPs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13, V11))} end end end(E0, E1)) end.
'nested--11584-7565--in--un--bindName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Core.Name.UN', V13} -> <<<<"__bind_"/utf8>>/binary, ('Idris.Idris2.Core.Name':'un--displayUserName'(V13))/binary>>; {'Core.Name.NS', V14, V15} -> ('nested--11584-7565--in--un--bindName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V15)); _ -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)) end.
'nested--11189-7186--in--un--bindName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Core.Name.UN', V11} -> <<<<"__bind_"/utf8>>/binary, ('Idris.Idris2.Core.Name':'un--displayUserName'(V11))/binary>>; {'Core.Name.NS', V12, V13} -> ('nested--11189-7186--in--un--bindName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V13)); _ -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V10)) end.
'nested--10593-6639--in--un--bhere'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Builtin.MkPair', V12, V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> {'Builtin.MkPair', V12, {'Builtin.MkPair', V14, {'TTImp.TTImp.IBindHere', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V15)), {'TTImp.TTImp.PI', ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V16) -> fun (V17) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V16, V17)) end end, 0, fun (V18) -> fun (V19) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V18, V19)) end end, 1}))}, V15}}} end end.
'nested--12149-8431--in--un--applyParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V22 of [] -> V21; [E0 | E1] -> (fun (V23, V24) -> case V23 of {'Core.Name.UN', V25} -> case V25 of {'Core.Name.Basic', V26} -> ('nested--12149-8431--in--un--applyParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, {'TTImp.TTImp.INamedApp', ('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20)), V21, {'Core.Name.UN', {'Core.Name.Basic', V26}}, {'TTImp.TTImp.IBindVar', ('nested--12149-8429--in--un--vdfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20)), V26}}, V24)); _ -> ('nested--12149-8431--in--un--applyParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V24)) end; _ -> ('nested--12149-8431--in--un--applyParams'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V24)) end end(E0, E1)) end.
'nested--11189-7183--in--un--applyCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> begin (V11 = {'Core.Name.UN', {'Core.Name.Basic', <<"__con"/utf8>>}}), {'Builtin.MkPair', V10, {'TTImp.TTImp.INamedApp', ('nested--11189-7181--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9)), {'TTImp.TTImp.IVar', ('nested--11189-7181--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9)), V10}, V11, {'TTImp.TTImp.IVar', ('nested--11189-7181--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9)), V11}}} end.
'un--updateIfaceSyn'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V10 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V9) -> ('nested--11867-7831--in--un--totMeth'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V9)) end, V7, []))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V45 = begin (V15 = {'Idris.Syntax.MkIFaceInfo', V3, V4, V5, V6, V14, V8}), begin (V21 = begin (V16 = V1), fun (V17) -> begin (V20 = (begin (V18 = V16), fun (V19) -> ('erlang':'get'(V18)) end end(V17))), {'Prelude.Types.Right', V20} end end end), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V44 = begin (V26 = V1), fun (V27) -> begin (V43 = (begin (V28 = V26), fun (V29) -> ('erlang':'put'(V28, case V25 of {'Idris.Syntax.MkSyntax', V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42} -> {'Idris.Syntax.MkSyntax', V30, V31, V32, V33, V34, [V2 | V35], ('Idris.Idris2.Libraries.Data.ANameMap':'un--addName'(V2, V15, V36)), V37, V38, V39, V40, V41, V42} end)) end end(V27))), {'Prelude.Types.Right', V43} end end end), V44 end(V22)) end end end end end), V45 end(V11)) end end end end.
'un--sigToDecl'(V0) -> {'Idris.Elab.Interface.MkDeclaration', case V0 of {'Idris.Elab.Interface.MkSignature', V1, V2, V3, V4, V5, V6, V7} -> V4 end, case V0 of {'Idris.Elab.Interface.MkSignature', V8, V9, V10, V11, V12, V13, V14} -> V9 end, case V0 of {'Idris.Elab.Interface.MkSignature', V15, V16, V17, V18, V19, V20, V21} -> V17 end, case V0 of {'Idris.Elab.Interface.MkSignature', V22, V23, V24, V25, V26, V27, V28} -> V27 end, case V0 of {'Idris.Elab.Interface.MkSignature', V29, V30, V31, V32, V33, V34, V35} -> V35 end}.
'un--namePis'(V0, V1) -> case V1 of {'TTImp.TTImp.IPi', V2, V3, V4, V5, V6, V7} -> case V4 of {'Core.TT.AutoImplicit'} -> case V5 of {'Prelude.Types.Nothing'} -> {'TTImp.TTImp.IPi', V2, V3, {'Core.TT.AutoImplicit'}, {'Prelude.Types.Just', {'Core.Name.MN', <<"i_con"/utf8>>, V0}}, V6, ('un--namePis'(begin (V8 = (V0 + 1)), case ((V8 band 9223372036854775808) =/= 0) of 'true' -> (V8 bor -9223372036854775808); _ -> (V8 band 9223372036854775807) end end, V7))}; _ -> {'TTImp.TTImp.IPi', V2, V3, V4, V5, V6, ('un--namePis'(V0, V7))} end; {'Core.TT.Implicit'} -> case V5 of {'Prelude.Types.Nothing'} -> {'TTImp.TTImp.IPi', V2, V3, {'Core.TT.Implicit'}, {'Prelude.Types.Just', {'Core.Name.MN', <<"i_imp"/utf8>>, V0}}, V6, ('un--namePis'(begin (V9 = (V0 + 1)), case ((V9 band 9223372036854775808) =/= 0) of 'true' -> (V9 bor -9223372036854775808); _ -> (V9 band 9223372036854775807) end end, V7))}; _ -> {'TTImp.TTImp.IPi', V2, V3, V4, V5, V6, ('un--namePis'(V0, V7))} end; _ -> {'TTImp.TTImp.IPi', V2, V3, V4, V5, V6, ('un--namePis'(V0, V7))} end; {'TTImp.TTImp.IBindHere', V10, V11, V12} -> {'TTImp.TTImp.IBindHere', V10, V11, ('un--namePis'(V0, V12))}; _ -> V1 end.
'un--mkIfaceData'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> begin (V11 = case ('Idris.Idris2.Data.List':'un--isNil'(V9)) of 1 -> [{'TTImp.TTImp.NoHints'} | [{'TTImp.TTImp.UniqueSearch'} | []]]; 0 -> [{'TTImp.TTImp.NoHints'} | [{'TTImp.TTImp.UniqueSearch'} | [{'TTImp.TTImp.SearchBy', V9} | []]]] end), begin (V20 = ((begin (V17 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V15, V16)) end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V12) -> ('Idris.Idris2.Builtin':'un--fst'(V12)) end))(V8))), begin (V29 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', ('nested--10593-6636--in--un--vfc'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1)), V6}, ((begin (V26 = fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V24, V25)) end end end end), fun (V27) -> fun (V28) -> ((((V26('erased'))('erased'))(V27))(V28)) end end end(fun (V21) -> {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V21} end))(V20))))), begin (V54 = ('nested--10593-6640--in--un--mkTy'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1, {'Core.TT.Implicit'}, ((begin (V35 = fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V33, V34)) end end end end), fun (V36) -> fun (V37) -> ((((V35('erased'))('erased'))(V36))(V37)) end end end(fun (V30) -> ('nested--10593-6637--in--un--jname'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1, V30)) end))(V8)), ('nested--10593-6640--in--un--mkTy'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1, {'Core.TT.AutoImplicit'}, ((begin (V43 = fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V41, V42)) end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end(fun (V38) -> ('nested--10593-6639--in--un--bhere'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1, V38)) end))(V5)), ('nested--10593-6640--in--un--mkTy'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1, {'Core.TT.Explicit'}, ((begin (V51 = fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V49, V50)) end end end end), fun (V52) -> fun (V53) -> ((((V51('erased'))('erased'))(V52))(V53)) end end end(fun (V46) -> ('nested--10593-6638--in--un--bname'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1, V46)) end))(V10)), V29))))))), begin (V63 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V2, [], ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V20, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(((begin (V60 = fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V58, V59)) end end end end), fun (V61) -> fun (V62) -> ((((V60('erased'))('erased'))(V61))(V62)) end end end(fun (V55) -> ('Idris.Idris2.Builtin':'un--fst'(V55)) end))(V10)), V0)))), V54))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V84 = begin (V68 = {'TTImp.TTImp.MkImpTy', ('nested--10593-6636--in--un--vfc'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1)), {'Core.FC.EmptyFC'}, V7, V67}), begin (V77 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V2, [], ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V20, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(((begin (V74 = fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V72, V73)) end end end end), fun (V75) -> fun (V76) -> ((((V74('erased'))('erased'))(V75))(V76)) end end end(fun (V69) -> ('Idris.Idris2.Builtin':'un--fst'(V69)) end))(V10)), V0)))), ('un--mkDataTy'(('nested--10593-6636--in--un--vfc'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1)), V8))))), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V83 = fun (V82) -> {'Prelude.Types.Right', {'TTImp.TTImp.IData', ('nested--10593-6636--in--un--vfc'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1)), V3, {'Prelude.Types.Nothing'}, {'TTImp.TTImp.MkImpData', ('nested--10593-6636--in--un--vfc'(V10, V9, V8, V7, V6, V5, V0, V4, V3, V2, V1)), V6, V81, V11, [V68 | []]}}} end), V83 end(V78)) end end end end end), V84 end(V64)) end end end end end end end end.
'un--mkDataTy'(V0, V1) -> case V1 of [] -> {'TTImp.TTImp.IType', V0}; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Builtin.MkPair', V4, V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> {'TTImp.TTImp.IPi', V0, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Core.TT.Explicit'}, {'Prelude.Types.Just', V4}, V7, ('un--mkDataTy'(V0, V3))} end end end(E0, E1)) end.
'un--mkCon'(V0, V1) -> case V1 of {'Core.Name.NS', V2, V3} -> case V3 of {'Core.Name.UN', V4} -> begin (V5 = ('Idris.Idris2.Core.Name':'un--displayUserName'(V4))), {'Core.Name.NS', V2, {'Core.Name.DN', <<V5/binary, <<<<" at "/utf8>>/binary, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V0))/binary>>/binary>>, {'Core.Name.UN', {'Core.Name.Basic', <<<<"__mk"/utf8>>/binary, V5/binary>>}}}} end; _ -> begin (V6 = ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))), {'Core.Name.DN', <<V6/binary, <<<<" at "/utf8>>/binary, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V0))/binary>>/binary>>, {'Core.Name.UN', {'Core.Name.Basic', <<<<"__mk"/utf8>>/binary, V6/binary>>}}} end end; _ -> begin (V7 = ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))), {'Core.Name.DN', <<V7/binary, <<<<" at "/utf8>>/binary, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V0))/binary>>/binary>>, {'Core.Name.UN', {'Core.Name.Basic', <<<<"__mk"/utf8>>/binary, V7/binary>>}}} end end.
'un--getSig'(V0) -> case V0 of {'TTImp.TTImp.IClaim', V1, V2, V3, V4, V5} -> case V5 of {'TTImp.TTImp.MkImpTy', V6, V7, V8, V9} -> {'Prelude.Types.Just', {'Idris.Elab.Interface.MkSignature', V6, V2, V4, V8, V7, 0, ('un--namePis'(0, V9))}}; _ -> {'Prelude.Types.Nothing'} end; {'TTImp.TTImp.IData', V10, V11, V12, V13} -> case V13 of {'TTImp.TTImp.MkImpLater', V14, V15, V16} -> {'Prelude.Types.Just', {'Idris.Elab.Interface.MkSignature', V14, ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V17) -> fun (V18) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V17, V18)) end end, 0, fun (V19) -> fun (V20) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V19, V20)) end end, 1})), [{'TTImp.TTImp.Invertible'} | []], V15, ('Idris.Idris2.Core.FC':'un--emptyFC'()), 1, ('un--namePis'(0, V16))}}; _ -> {'Prelude.Types.Nothing'} end; _ -> {'Prelude.Types.Nothing'} end.
'un--getMethToplevel'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V18 = ((begin (V15 = fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V13, V14)) end end end end), fun (V16) -> fun (V17) -> ((((V15('erased'))('erased'))(V16))(V17)) end end end(fun (V10) -> ('Idris.Idris2.Builtin':'un--fst'(V10)) end))(V8))), begin (V27 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', ('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), V4}, ((begin (V24 = fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V22, V23)) end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end(fun (V19) -> {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V19} end))(V18))))), begin (V43 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V0, ((begin (V33 = fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V31, V32)) end end end end), fun (V34) -> fun (V35) -> ((((V33('erased'))('erased'))(V34))(V35)) end end end(fun (V28) -> ('nested--11189-7183--in--un--applyCon'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1, V28)) end))(V7)), case V9 of {'Idris.Elab.Interface.MkSignature', V36, V37, V38, V39, V40, V41, V42} -> V42 end))), begin (V44 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, {'Core.FC.EmptyFC'}, [], V0, ('nested--11189-7182--in--un--bindPs'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1, V8, ('un--bindIFace'(('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), V27, V43))))))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V134 = begin (V56 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, case V9 of {'Idris.Elab.Interface.MkSignature', V49, V50, V51, V52, V53, V54, V55} -> V52 end))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V133 = begin (V82 = {'TTImp.TTImp.IClaim', ('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), case V9 of {'Idris.Elab.Interface.MkSignature', V61, V62, V63, V64, V65, V66, V67} -> V62 end, V3, case case V9 of {'Idris.Elab.Interface.MkSignature', V68, V69, V70, V71, V72, V73, V74} -> V73 end of 1 -> [{'TTImp.TTImp.Inline'} | [{'TTImp.TTImp.Invertible'} | []]]; 0 -> [{'TTImp.TTImp.Inline'} | []] end, {'TTImp.TTImp.MkImpTy', ('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), case V9 of {'Idris.Elab.Interface.MkSignature', V75, V76, V77, V78, V79, V80, V81} -> V79 end, V60, V48}}), begin (V99 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', ('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), V5}, ((begin (V96 = fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V94, V95)) end end end end), fun (V97) -> fun (V98) -> ((((V96('erased'))('erased'))(V97))(V98)) end end end(fun (V91) -> {'TTImp.TTImp.IBindVar', {'Core.FC.EmptyFC'}, V91} end))(((begin (V88 = fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V86, V87)) end end end end), fun (V89) -> fun (V90) -> ((((V88('erased'))('erased'))(V89))(V90)) end end end(fun (V83) -> ('nested--11189-7186--in--un--bindName'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1, V83)) end))(V7))))))), begin (V107 = ('nested--11189-7184--in--un--getExplicitArgs'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1, 0, case V9 of {'Idris.Elab.Interface.MkSignature', V100, V101, V102, V103, V104, V105, V106} -> V106 end))), begin (V130 = {'TTImp.TTImp.PatClause', ('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), {'TTImp.TTImp.INamedApp', ('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), {'TTImp.TTImp.IVar', case V9 of {'Idris.Elab.Interface.MkSignature', V108, V109, V110, V111, V112, V113, V114} -> V108 end, V60}, {'Core.Name.UN', {'Core.Name.Basic', <<"__con"/utf8>>}}, V99}, ('nested--11189-7185--in--un--mkLam'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1, V107, ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, ('nested--11189-7187--in--un--methName'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1, case V9 of {'Idris.Elab.Interface.MkSignature', V115, V116, V117, V118, V119, V120, V121} -> V118 end))}, ((begin (V127 = fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V125, V126)) end end end end), fun (V128) -> fun (V129) -> ((((V127('erased'))('erased'))(V128))(V129)) end end end(fun (V122) -> {'TTImp.TTImp.IVar', {'Core.FC.EmptyFC'}, V122} end))(V107))))))}), begin (V131 = {'TTImp.TTImp.IDef', ('nested--11189-7181--in--un--vfc'(V9, V8, V7, V6, V5, V4, V3, V0, V2, V1)), V60, [V130 | []]}), fun (V132) -> {'Prelude.Types.Right', [V82 | [V131 | []]]} end end end end end end), V133 end(V57)) end end end end), V134 end(V45)) end end end end end end end.
'un--getMethDecl'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Builtin.MkPair', V7, V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> begin (V19 = ((begin (V16 = fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V14, V15)) end end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V11) -> ('Idris.Idris2.Builtin':'un--fst'(V11)) end))(V4))), begin (V20 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, {'Core.FC.EmptyFC'}, [], ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V19, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5, V0)))), V10))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V26 = fun (V25) -> {'Prelude.Types.Right', {'Builtin.MkPair', V9, {'Builtin.MkPair', V7, ('nested--10959-6982--in--un--stripParams'(V1, V7, V9, V10, V5, V4, V0, V3, V2, V19, V24))}}} end), V26 end(V21)) end end end end end end end.
'un--getImplParams'(V0) -> case V0 of {'Core.TT.Bind', V1, V2, V3, V4} -> case V3 of {'Core.TT.Pi', V5, V6, V7, V8} -> case V7 of {'Core.TT.Implicit'} -> [V2 | ('un--getImplParams'(V4))]; _ -> [] end; _ -> [] end; _ -> [] end.
'un--getDefault'(V0) -> case V0 of {'TTImp.TTImp.IDef', V1, V2, V3} -> {'Prelude.Types.Just', {'Builtin.MkPair', V1, {'Builtin.MkPair', [], {'Builtin.MkPair', V2, V3}}}}; _ -> {'Prelude.Types.Nothing'} end.
'un--getConstraintHint'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Builtin.MkPair', V11, V12} -> begin (V21 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'TTImp.TTImp.IVar', V2, V5}, ((begin (V18 = fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V16, V17)) end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end(fun (V13) -> {'TTImp.TTImp.IVar', V2, V13} end))(V9))))), begin (V22 = {'TTImp.TTImp.IPi', V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Core.TT.Explicit'}, {'Prelude.Types.Nothing'}, V21, V12}), begin (V23 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V2, [], ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V8, V0)), V22))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V56 = begin (V34 = {'Core.Name.DN', <<<<"Constraint "/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V28) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V28)) end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V29, V30)) end end}, V12))/binary>>, {'Core.Name.UN', {'Core.Name.Basic', <<<<"__"/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5))/binary, <<<<"_"/utf8>>/binary, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Prelude.Show.MkShow', fun (V31) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V31)) end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V32, V33)) end end}, V12))/binary>>/binary>>/binary>>}}}), begin (V35 = {'TTImp.TTImp.IClaim', V2, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V4, [{'TTImp.TTImp.Inline'} | [{'TTImp.TTImp.Hint', 0} | []]], {'TTImp.TTImp.MkImpTy', {'Core.FC.EmptyFC'}, {'Core.FC.EmptyFC'}, V34, V27}}), begin (V52 = ('Idris.Idris2.TTImp.TTImp':'un--apply'(('nested--11584-7567--in--un--impsBind'(V11, V12, V9, V8, V7, V6, V5, V4, V0, V3, V2, V1, {'TTImp.TTImp.IVar', V2, V6}, ((begin (V41 = fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V39, V40)) end end end end), fun (V42) -> fun (V43) -> ((((V41('erased'))('erased'))(V42))(V43)) end end end(fun (V36) -> ('nested--11584-7565--in--un--bindName'(V11, V12, V9, V8, V7, V6, V5, V4, V0, V3, V2, V1, V36)) end))(V7)))), ((begin (V49 = fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V47, V48)) end end end end), fun (V50) -> fun (V51) -> ((((V49('erased'))('erased'))(V50))(V51)) end end end(fun (V44) -> {'TTImp.TTImp.Implicit', V2, 1} end))(V8))))), begin (V53 = {'TTImp.TTImp.PatClause', V2, {'TTImp.TTImp.IApp', V2, {'TTImp.TTImp.IVar', V2, V34}, V52}, {'TTImp.TTImp.IVar', V2, ('nested--11584-7566--in--un--constName'(V11, V12, V9, V8, V7, V6, V5, V4, V0, V3, V2, V1, V11))}}), begin (V54 = {'TTImp.TTImp.IDef', V2, V34, [V53 | []]}), fun (V55) -> {'Prelude.Types.Right', {'Builtin.MkPair', V34, [V35 | [V54 | []]]}} end end end end end end), V56 end(V24)) end end end end end end end.
'un--elabInterface'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--getFullName'(V1, V11))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V170 = begin (V21 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, V20))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V169 = begin (V27 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('un--mkCon'(('nested--12063-8040--in--un--vfc'(V15, V14, V13, V12, V11, V10, V0, V9, V8, V7, V6, V5, V4, V3, V2, V1)), V20)) end, fun () -> fun (V26) -> V26 end end, V14))), begin (V28 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, V27))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V168 = begin (V34 = ('Idris.Idris2.Prelude.Types.List':'un--mapMaybeAppend'({'Prelude.Basics.Lin'}, fun (V33) -> ('un--getSig'(V33)) end, V15))), begin (V43 = ((begin (V40 = fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V38, V39)) end end end end), fun (V41) -> fun (V42) -> ((((V40('erased'))('erased'))(V41))(V42)) end end end(fun (V35) -> ('un--sigToDecl'(V35)) end))(V34))), begin (V57 = ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V44) -> case V44 of {'Idris.Elab.Interface.MkDeclaration', V45, V46, V47, V48, V49} -> V45 end end))(V43))), begin (V59 = ('Idris.Idris2.Prelude.Types.List':'un--mapMaybeAppend'({'Prelude.Basics.Lin'}, fun (V58) -> ('un--getDefault'(V58)) end, V15))), begin (V60 = ('nested--12063-8043--in--un--elabAsData'(V15, V14, V13, V12, V11, V10, V0, V9, V8, V7, V6, V5, V4, V3, V2, V1, V32, V57, V34))), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V167 = begin (V65 = ('nested--12063-8046--in--un--elabConstraintHints'(V15, V14, V13, V12, V11, V10, V0, V9, V8, V7, V6, V5, V4, V3, V2, V1, V32, V57))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V166 = begin (V70 = ('nested--12063-8044--in--un--elabMethods'(V15, V14, V13, V12, V11, V10, V0, V9, V8, V7, V6, V5, V4, V3, V2, V1, V32, V57, V34))), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V165 = begin (V76 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V75) -> ('nested--12063-8045--in--un--elabDefault'(V15, V14, V13, V12, V11, V10, V0, V9, V8, V7, V6, V5, V4, V3, V2, V1, V43, V75)) end, V59, []))), fun (V77) -> begin (V78 = (V76(V77))), case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> (begin (V164 = begin (V99 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V81) -> begin (V87 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, case V81 of {'Idris.Elab.Interface.MkDeclaration', V82, V83, V84, V85, V86} -> V82 end))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V98 = fun (V92) -> {'Prelude.Types.Right', case V81 of {'Idris.Elab.Interface.MkDeclaration', V93, V94, V95, V96, V97} -> {'Idris.Elab.Interface.MkDeclaration', V91, V94, V95, V96, V97} end} end), V98 end(V88)) end end end end end, V43, []))), fun (V100) -> begin (V101 = (V99(V100))), case V101 of {'Prelude.Types.Left', V102} -> {'Prelude.Types.Left', V102}; {'Prelude.Types.Right', V103} -> (begin (V163 = begin (V109 = begin (V104 = V1), fun (V105) -> begin (V108 = (begin (V106 = V104), fun (V107) -> ('erlang':'get'(V106)) end end(V105))), {'Prelude.Types.Right', V108} end end end), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V162 = begin (V146 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V25, case V113 of {'Core.Context.MkDefs', V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145} -> V114 end))), fun (V147) -> begin (V148 = (V146(V147))), case V148 of {'Prelude.Types.Left', V149} -> {'Prelude.Types.Left', V149}; {'Prelude.Types.Right', V150} -> (begin (V161 = case V150 of {'Prelude.Types.Just', V151} -> begin (V152 = ('un--getImplParams'(V151))), ('un--updateIfaceSyn'(V1, V3, V25, V32, V152, ('nested--12063-8041--in--un--paramNames'(V15, V14, V13, V12, V11, V10, V0, V9, V8, V7, V6, V5, V4, V3, V2, V1)), ((begin (V158 = fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V156, V157)) end end end end), fun (V159) -> fun (V160) -> ((((V158('erased'))('erased'))(V159))(V160)) end end end(fun (V153) -> ('Idris.Idris2.Builtin':'un--snd'(V153)) end))(V10)), V103, V80)) end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V1, V6, V11)) end), V161 end(V147)) end end end end), V162 end(V110)) end end end end), V163 end(V100)) end end end end), V164 end(V77)) end end end end), V165 end(V71)) end end end end), V166 end(V66)) end end end end), V167 end(V61)) end end end end end end end end), V168 end(V29)) end end end end end), V169 end(V22)) end end end end), V170 end(V17)) end end end end.
'un--bindIFace'(V0, V1, V2) -> {'TTImp.TTImp.IPi', V0, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Core.TT.AutoImplicit'}, {'Prelude.Types.Just', {'Core.Name.UN', {'Core.Name.Basic', <<"__con"/utf8>>}}}, V1, V2}.
