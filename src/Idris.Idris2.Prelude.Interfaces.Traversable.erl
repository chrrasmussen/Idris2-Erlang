-module('Idris.Idris2.Prelude.Interfaces.Traversable').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--traverse_Traversable_Compose((. $t) $f)'/5,
  'un--Compose'/2
]).
'dn--un--traverse_Traversable_Compose((. $t) $f)'(V0, V1, V2, V3, V4) -> case V0 of {'Prelude.Interfaces.MkTraversable', V5, V6, V7} -> ((((((V7('erased'))('erased'))('erased'))(V2))(fun (V8) -> case V1 of {'Prelude.Interfaces.MkTraversable', V9, V10, V11} -> ((((((V11('erased'))('erased'))('erased'))(V2))(V3))(V8)) end end))(V4)) end.
'un--Compose'(V0, V1) -> {'Prelude.Interfaces.MkTraversable', fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> (('Idris.Idris2.Prelude.Interfaces.Functor':'dn--un--map_Functor_Compose((. $f) $g)'(case V0 of {'Prelude.Interfaces.MkTraversable', V6, V7, V8} -> V6 end, case V1 of {'Prelude.Interfaces.MkTraversable', V9, V10, V11} -> V9 end, V4))(V5)) end end end end, {'Prelude.Interfaces.MkFoldable', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Interfaces.Foldable':'dn--un--foldr_Foldable_Compose((. $t) $f)'(case V0 of {'Prelude.Interfaces.MkTraversable', V17, V18, V19} -> V18 end, case V1 of {'Prelude.Interfaces.MkTraversable', V20, V21, V22} -> V21 end, V14, V15, V16)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Interfaces.Foldable':'dn--un--foldl_Foldable_Compose((. $t) $f)'(case V0 of {'Prelude.Interfaces.MkTraversable', V28, V29, V30} -> V29 end, case V1 of {'Prelude.Interfaces.MkTraversable', V31, V32, V33} -> V32 end, V25, V26, V27)) end end end end end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Interfaces.Foldable':'dn--un--null_Foldable_Compose((. $t) $f)'(case V0 of {'Prelude.Interfaces.MkTraversable', V36, V37, V38} -> V37 end, case V1 of {'Prelude.Interfaces.MkTraversable', V39, V40, V41} -> V40 end, V35)) end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Interfaces.Foldable':'dn--un--foldlM_Foldable_Compose((. $t) $f)'(case V0 of {'Prelude.Interfaces.MkTraversable', V49, V50, V51} -> V50 end, case V1 of {'Prelude.Interfaces.MkTraversable', V52, V53, V54} -> V53 end, V45, V46, V47, V48)) end end end end end end end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.Interfaces.Foldable':'dn--un--toList_Foldable_Compose((. $t) $f)'(case V0 of {'Prelude.Interfaces.MkTraversable', V57, V58, V59} -> V58 end, case V1 of {'Prelude.Interfaces.MkTraversable', V60, V61, V62} -> V61 end, V56)) end end, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.Interfaces.Foldable':'dn--un--foldMap_Foldable_Compose((. $t) $f)'(case V0 of {'Prelude.Interfaces.MkTraversable', V68, V69, V70} -> V69 end, case V1 of {'Prelude.Interfaces.MkTraversable', V71, V72, V73} -> V72 end, V65, V66, V67)) end end end end end}, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('dn--un--traverse_Traversable_Compose((. $t) $f)'(V0, V1, V77, V78, V79)) end end end end end end}.
