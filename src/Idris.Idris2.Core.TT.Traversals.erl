-module('Idris.Idris2.Core.TT.Traversals').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--5076-7169--in--un--gos'/4,
  'nested--4903-7012--in--un--gos'/4,
  'nested--5518-7595--in--un--go'/5,
  'nested--5248-7338--in--un--go'/6,
  'nested--5076-7168--in--un--go'/4,
  'nested--4903-7011--in--un--go'/4,
  'nested--5518-7594--in--un--act'/5,
  'nested--5248-7337--in--un--act'/6,
  'un--unBinds'/1,
  'un--onPRefs'/3,
  'un--onConstants'/3,
  'un--mapTermM'/4,
  'un--mapTerm'/3,
  'un--allGlobals'/1,
  'un--allConstants'/1
]).
'nested--5076-7169--in--un--gos'(V0, V1, V2, V3) -> case V3 of [] -> V2; [E0 | E1] -> (fun (V4, V5) -> ('nested--5076-7169--in--un--gos'(V0, V1, ('nested--5076-7168--in--un--go'(V0, V1, V2, V4)), V5)) end(E0, E1)) end.
'nested--4903-7012--in--un--gos'(V0, V1, V2, V3) -> case V3 of [] -> V2; [E0 | E1] -> (fun (V4, V5) -> ('nested--4903-7012--in--un--gos'(V0, V1, ('nested--4903-7011--in--un--go'(V0, V1, V2, V4)), V5)) end(E0, E1)) end.
'nested--5518-7595--in--un--go'(V0, V1, V2, V3, V4) -> case V4 of {'Core.TT.Local', V5, V6, V7} -> V4; {'Core.TT.Ref', V8, V9, V10} -> V4; {'Core.TT.Meta', V11, V12, V13, V14} -> {'Core.TT.Meta', V11, V12, V13, ((begin (V20 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V18, V19)) end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end(fun (V15) -> ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V15)) end))(V14))}; {'Core.TT.Bind', V23, V24, V25, V26} -> {'Core.TT.Bind', V23, V24, ((begin (V32 = fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.TT':'dn--un--map_Functor_Binder'(V30, V31)) end end end end), fun (V33) -> fun (V34) -> ((((V32('erased'))('erased'))(V33))(V34)) end end end(fun (V27) -> ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V27)) end))(V25)), ('nested--5518-7594--in--un--act'(V0, V1, V2, [V24 | V3], V26))}; {'Core.TT.App', V35, V36, V37} -> {'Core.TT.App', V35, ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V36)), ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V37))}; {'Core.TT.As', V38, V39, V40, V41} -> {'Core.TT.As', V38, V39, ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V40)), ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V41))}; {'Core.TT.TDelayed', V42, V43, V44} -> {'Core.TT.TDelayed', V42, V43, ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V44))}; {'Core.TT.TDelay', V45, V46, V47, V48} -> {'Core.TT.TDelay', V45, V46, ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V47)), ('nested--5518-7594--in--un--act'(V0, V1, V2, V3, V48))}; {'Core.TT.TForce', V49, V50, V51} -> V4; {'Core.TT.PrimVal', V52, V53} -> V4; {'Core.TT.Erased', V54, V55} -> V4; {'Core.TT.TType', V56, V57} -> V4 end.
'nested--5248-7338--in--un--go'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Core.TT.Local', V6, V7, V8} -> case V0 of {'Prelude.Interfaces.MkMonad', V9, V10, V11} -> case V9 of {'Prelude.Interfaces.MkApplicative', V12, V13, V14} -> ((V13('erased'))(V5)) end end; {'Core.TT.Ref', V15, V16, V17} -> case V0 of {'Prelude.Interfaces.MkMonad', V18, V19, V20} -> case V18 of {'Prelude.Interfaces.MkApplicative', V21, V22, V23} -> ((V22('erased'))(V5)) end end; {'Core.TT.Meta', V24, V25, V26, V27} -> ((begin (V39 = case V0 of {'Prelude.Interfaces.MkMonad', V33, V34, V35} -> case V33 of {'Prelude.Interfaces.MkApplicative', V36, V37, V38} -> V36 end end), fun (V40) -> fun (V41) -> ((((V39('erased'))('erased'))(V40))(V41)) end end end(fun (V32) -> {'Core.TT.Meta', V24, V25, V26, V32} end))(('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'(case V0 of {'Prelude.Interfaces.MkMonad', V28, V29, V30} -> V28 end, fun (V31) -> ('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V31)) end, V27)))); {'Core.TT.Bind', V42, V43, V44, V45} -> case V0 of {'Prelude.Interfaces.MkMonad', V46, V47, V48} -> case V46 of {'Prelude.Interfaces.MkApplicative', V49, V50, V51} -> ((((V51('erased'))('erased'))(((begin (V64 = case V0 of {'Prelude.Interfaces.MkMonad', V58, V59, V60} -> case V58 of {'Prelude.Interfaces.MkApplicative', V61, V62, V63} -> V61 end end), fun (V65) -> fun (V66) -> ((((V64('erased'))('erased'))(V65))(V66)) end end end(fun (V56) -> fun (V57) -> {'Core.TT.Bind', V42, V43, V56, V57} end end))(('Idris.Idris2.Core.TT':'dn--un--traverse_Traversable_Binder'(case V0 of {'Prelude.Interfaces.MkMonad', V52, V53, V54} -> V52 end, fun (V55) -> ('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V55)) end, V44))))))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, [V43 | V4], V45)))) end end; {'Core.TT.App', V67, V68, V69} -> case V0 of {'Prelude.Interfaces.MkMonad', V70, V71, V72} -> case V70 of {'Prelude.Interfaces.MkApplicative', V73, V74, V75} -> ((((V75('erased'))('erased'))(((begin (V84 = case V0 of {'Prelude.Interfaces.MkMonad', V78, V79, V80} -> case V78 of {'Prelude.Interfaces.MkApplicative', V81, V82, V83} -> V81 end end), fun (V85) -> fun (V86) -> ((((V84('erased'))('erased'))(V85))(V86)) end end end(fun (V76) -> fun (V77) -> {'Core.TT.App', V67, V76, V77} end end))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V68))))))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V69)))) end end; {'Core.TT.As', V87, V88, V89, V90} -> case V0 of {'Prelude.Interfaces.MkMonad', V91, V92, V93} -> case V91 of {'Prelude.Interfaces.MkApplicative', V94, V95, V96} -> ((((V96('erased'))('erased'))(((begin (V105 = case V0 of {'Prelude.Interfaces.MkMonad', V99, V100, V101} -> case V99 of {'Prelude.Interfaces.MkApplicative', V102, V103, V104} -> V102 end end), fun (V106) -> fun (V107) -> ((((V105('erased'))('erased'))(V106))(V107)) end end end(fun (V97) -> fun (V98) -> {'Core.TT.As', V87, V88, V97, V98} end end))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V89))))))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V90)))) end end; {'Core.TT.TDelayed', V108, V109, V110} -> ((begin (V118 = case V0 of {'Prelude.Interfaces.MkMonad', V112, V113, V114} -> case V112 of {'Prelude.Interfaces.MkApplicative', V115, V116, V117} -> V115 end end), fun (V119) -> fun (V120) -> ((((V118('erased'))('erased'))(V119))(V120)) end end end(fun (V111) -> {'Core.TT.TDelayed', V108, V109, V111} end))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V110)))); {'Core.TT.TDelay', V121, V122, V123, V124} -> case V0 of {'Prelude.Interfaces.MkMonad', V125, V126, V127} -> case V125 of {'Prelude.Interfaces.MkApplicative', V128, V129, V130} -> ((((V130('erased'))('erased'))(((begin (V139 = case V0 of {'Prelude.Interfaces.MkMonad', V133, V134, V135} -> case V133 of {'Prelude.Interfaces.MkApplicative', V136, V137, V138} -> V136 end end), fun (V140) -> fun (V141) -> ((((V139('erased'))('erased'))(V140))(V141)) end end end(fun (V131) -> fun (V132) -> {'Core.TT.TDelay', V121, V122, V131, V132} end end))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V123))))))(('nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V124)))) end end; {'Core.TT.TForce', V142, V143, V144} -> case V0 of {'Prelude.Interfaces.MkMonad', V145, V146, V147} -> case V145 of {'Prelude.Interfaces.MkApplicative', V148, V149, V150} -> ((V149('erased'))(V5)) end end; {'Core.TT.PrimVal', V151, V152} -> case V0 of {'Prelude.Interfaces.MkMonad', V153, V154, V155} -> case V153 of {'Prelude.Interfaces.MkApplicative', V156, V157, V158} -> ((V157('erased'))(V5)) end end; {'Core.TT.Erased', V159, V160} -> case V0 of {'Prelude.Interfaces.MkMonad', V161, V162, V163} -> case V161 of {'Prelude.Interfaces.MkApplicative', V164, V165, V166} -> ((V165('erased'))(V5)) end end; {'Core.TT.TType', V167, V168} -> case V0 of {'Prelude.Interfaces.MkMonad', V169, V170, V171} -> case V169 of {'Prelude.Interfaces.MkApplicative', V172, V173, V174} -> ((V173('erased'))(V5)) end end end.
'nested--5076-7168--in--un--go'(V0, V1, V2, V3) -> case V3 of {'Core.TT.Local', V4, V5, V6} -> V2; {'Core.TT.Ref', V7, V8, V9} -> V2; {'Core.TT.Meta', V10, V11, V12, V13} -> ('nested--5076-7169--in--un--gos'(V0, V1, V2, V13)); {'Core.TT.Bind', V14, V15, V16, V17} -> ('nested--5076-7168--in--un--go'(V0, V1, ((begin (V21 = case V0 of {'Prelude.Interfaces.MkMonoid', V19, V20} -> V19 end), fun (V22) -> fun (V23) -> ((V21(V22))(V23)) end end end(V2))(('Idris.Idris2.Core.TT':'dn--un--foldMap_Foldable_Binder'(V0, fun (V18) -> ('un--onConstants'(V0, V1, V18)) end, V16)))), V17)); {'Core.TT.App', V24, V25, V26} -> ('nested--5076-7168--in--un--go'(V0, V1, ('nested--5076-7168--in--un--go'(V0, V1, V2, V25)), V26)); {'Core.TT.As', V27, V28, V29, V30} -> ('nested--5076-7168--in--un--go'(V0, V1, ('nested--5076-7168--in--un--go'(V0, V1, V2, V29)), V30)); {'Core.TT.TDelayed', V31, V32, V33} -> ('nested--5076-7168--in--un--go'(V0, V1, V2, V33)); {'Core.TT.TDelay', V34, V35, V36, V37} -> ('nested--5076-7168--in--un--go'(V0, V1, ('nested--5076-7168--in--un--go'(V0, V1, V2, V36)), V37)); {'Core.TT.TForce', V38, V39, V40} -> ('nested--5076-7168--in--un--go'(V0, V1, V2, V40)); {'Core.TT.PrimVal', V41, V42} -> ((begin (V45 = case V0 of {'Prelude.Interfaces.MkMonoid', V43, V44} -> V43 end), fun (V46) -> fun (V47) -> ((V45(V46))(V47)) end end end(V2))((V1(V42)))); {'Core.TT.Erased', V48, V49} -> V2; {'Core.TT.TType', V50, V51} -> V2 end.
'nested--4903-7011--in--un--go'(V0, V1, V2, V3) -> case V3 of {'Core.TT.Local', V4, V5, V6} -> V2; {'Core.TT.Ref', V7, V8, V9} -> ((begin (V12 = case V0 of {'Prelude.Interfaces.MkMonoid', V10, V11} -> V10 end), fun (V13) -> fun (V14) -> ((V12(V13))(V14)) end end end(V2))((V1(V9)))); {'Core.TT.Meta', V15, V16, V17, V18} -> ('nested--4903-7012--in--un--gos'(V0, V1, V2, V18)); {'Core.TT.Bind', V19, V20, V21, V22} -> ('nested--4903-7011--in--un--go'(V0, V1, ((begin (V26 = case V0 of {'Prelude.Interfaces.MkMonoid', V24, V25} -> V24 end), fun (V27) -> fun (V28) -> ((V26(V27))(V28)) end end end(V2))(('Idris.Idris2.Core.TT':'dn--un--foldMap_Foldable_Binder'(V0, fun (V23) -> ('un--onPRefs'(V0, V1, V23)) end, V21)))), V22)); {'Core.TT.App', V29, V30, V31} -> ('nested--4903-7011--in--un--go'(V0, V1, ('nested--4903-7011--in--un--go'(V0, V1, V2, V30)), V31)); {'Core.TT.As', V32, V33, V34, V35} -> ('nested--4903-7011--in--un--go'(V0, V1, ('nested--4903-7011--in--un--go'(V0, V1, V2, V34)), V35)); {'Core.TT.TDelayed', V36, V37, V38} -> ('nested--4903-7011--in--un--go'(V0, V1, V2, V38)); {'Core.TT.TDelay', V39, V40, V41, V42} -> ('nested--4903-7011--in--un--go'(V0, V1, ('nested--4903-7011--in--un--go'(V0, V1, V2, V41)), V42)); {'Core.TT.TForce', V43, V44, V45} -> ('nested--4903-7011--in--un--go'(V0, V1, V2, V45)); {'Core.TT.PrimVal', V46, V47} -> V2; {'Core.TT.Erased', V48, V49} -> V2; {'Core.TT.TType', V50, V51} -> V2 end.
'nested--5518-7594--in--un--act'(V0, V1, V2, V3, V4) -> ((V2(V3))(('nested--5518-7595--in--un--go'(V0, V1, V2, V3, V4)))).
'nested--5248-7337--in--un--act'(V0, V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V6) -> fun (V7) -> case V0 of {'Prelude.Interfaces.MkMonad', V8, V9, V10} -> ((((V9('erased'))('erased'))(V6))(V7)) end end end, (V3(V4)), ('nested--5248-7338--in--un--go'(V0, V1, V2, V3, V4, V5)))).
'un--unBinds'(V0) -> case V0 of {'Core.TT.Bind', V1, V2, V3, V4} -> begin (V5 = ('un--unBinds'(V4))), V5 end; _ -> V0 end.
'un--onPRefs'(V0, V1, V2) -> ('nested--4903-7011--in--un--go'(V0, V1, case V0 of {'Prelude.Interfaces.MkMonoid', V3, V4} -> V4 end, V2)).
'un--onConstants'(V0, V1, V2) -> ('nested--5076-7168--in--un--go'(V0, V1, case V0 of {'Prelude.Interfaces.MkMonoid', V3, V4} -> V4 end, V2)).
'un--mapTermM'(V0, V1, V2, V3) -> ('nested--5248-7337--in--un--act'(V0, V2, V3, V1, V2, V3)).
'un--mapTerm'(V0, V1, V2) -> ('nested--5518-7594--in--un--act'(V1, V2, V0, V1, V2)).
'un--allGlobals'(V0) -> ('un--onPRefs'({'Prelude.Interfaces.MkMonoid', fun (V1) -> fun (V2) -> ('Idris.Idris2.Libraries.Data.NameMap':'dn--un--<+>_Semigroup_(NameMap $v)'(fun (V3) -> fun (V4) -> {'Builtin.MkUnit'} end end, V1, V2)) end end, ('Idris.Idris2.Libraries.Data.NameMap':'dn--un--neutral_Monoid_(NameMap $v)'(fun (V5) -> fun (V6) -> {'Builtin.MkUnit'} end end))}, fun (V7) -> ('Idris.Idris2.Libraries.Data.NameMap':'un--singleton'(V7, {'Builtin.MkUnit'})) end, V0)).
'un--allConstants'(V0) -> ('un--onConstants'({'Prelude.Interfaces.MkMonoid', fun (V1) -> fun (V2) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(V1, V2)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V3, V4)) end end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.TT':'dn--un--/=_Eq_Constant'(V5, V6)) end end}, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Ord':'dn--un--compare_Ord_Constant'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Ord':'dn--un--<_Ord_Constant'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Ord':'dn--un-->_Ord_Constant'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Ord':'dn--un--<=_Ord_Constant'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Ord':'dn--un-->=_Ord_Constant'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Ord':'dn--un--max_Ord_Constant'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Ord':'dn--un--min_Ord_Constant'(V19, V20)) end end}))}, fun (V21) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--singleton'({'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V22, V23)) end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.TT':'dn--un--/=_Eq_Constant'(V24, V25)) end end}, fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Ord':'dn--un--compare_Ord_Constant'(V26, V27)) end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Ord':'dn--un--<_Ord_Constant'(V28, V29)) end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Ord':'dn--un-->_Ord_Constant'(V30, V31)) end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Ord':'dn--un--<=_Ord_Constant'(V32, V33)) end end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Ord':'dn--un-->=_Ord_Constant'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Ord':'dn--un--max_Ord_Constant'(V36, V37)) end end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Ord':'dn--un--min_Ord_Constant'(V38, V39)) end end}, V21)) end, V0)).
