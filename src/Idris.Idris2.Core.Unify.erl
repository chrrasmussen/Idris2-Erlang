-module('Idris.Idris2.Core.Unify').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--search'/10,
  'case--case block in case block in retryGuess-30363'/17,
  'case--case block in case block in retryGuess-29741'/16,
  'case--case block in retryGuess-29226'/11,
  'case--retry-28524'/6,
  'case--case block in unifyD-27578'/14,
  'case--case block in unifyBothBinders-24603'/27,
  'case--headsConvert-19925'/9,
  'case--occursCheck-16144'/9,
  'case--occursCheck,failOnStrongRigid-15999'/11,
  'case--case block in patternEnvTm-15838'/9,
  'case--patternEnvTm-15797'/8,
  'case--case block in patternEnv-15521'/10,
  'case--patternEnv-15476'/9,
  'case--chaseMetas-14298'/5,
  'nested--10570-15686--in--un--updateVars'/7,
  'nested--10191-15353--in--un--updateVars'/7,
  'nested--11595-17313--in--un--updateIVarsPi'/25,
  'nested--11595-17314--in--un--updateIVarsB'/25,
  'nested--11525-16580--in--un--updateIVars'/18,
  'nested--11525-16579--in--un--updateIVar'/16,
  'nested--17870-22213--in--un--solveOrElsePostpone'/29,
  'nested--14603-21145--in--un--solutionHeadSame'/17,
  'nested--14746-23551--in--un--pv'/17,
  'nested--11525-16577--in--un--noMeta'/16,
  'nested--11525-16581--in--un--mkDef'/20,
  'nested--14746-23552--in--un--localsIn'/17,
  'nested--11525-16578--in--un--isSimple'/15,
  'nested--14517-20783--in--un--isPatName'/18,
  'nested--14870-25978--in--un--isDelay'/9,
  'nested--14603-21144--in--un--inNoSolve'/18,
  'nested--9894-15099--in--un--inArgs'/8,
  'nested--27890-31218--in--un--getHoleName'/3,
  'nested--10817-15905--in--un--failOnStrongRigid'/10,
  'nested--27393-30770--in--un--constraintToHole'/3,
  'nested--9220-14462--in--un--checkDefined'/11,
  'nested--27890-31219--in--un--checkConstraint'/3,
  'nested--27544-30925--in--un--anySame'/6,
  'nested--10059-15226--in--un--anyFirst'/4,
  'nested--27313-30703--in--un--afterStart'/6,
  'dn--un--weaken_Weaken_(IVars $vs)'/1,
  'dn--un--unifyWithLazyD_Unify_Term'/8,
  'dn--un--unifyWithLazyD_Unify_NF'/8,
  'dn--un--unifyWithLazyD_Unify_Closure'/8,
  'dn--un--unifyD_Unify_Term'/8,
  'dn--un--unifyD_Unify_NF'/8,
  'dn--un--unifyD_Unify_Closure'/8,
  'dn--un--show_Show_UnifyMode'/1,
  'dn--un--show_Show_AddLazy'/1,
  'dn--un--showPrec_Show_AddLazy'/2,
  'dn--un--__Impl_Unify_Term'/0,
  'dn--un--__Impl_Unify_NF'/0,
  'dn--un--__Impl_Unify_Closure'/0,
  'dn--un--__Impl_Show_AddLazy'/0,
  'dn--un--==_Eq_UnifyMode'/2,
  'dn--un--==_Eq_SolveMode'/2,
  'dn--un--/=_Eq_UnifyMode'/2,
  'un--updateSolution'/6,
  'un--unionAll'/1,
  'un--union'/2,
  'un--unifyWithLazyD'/5,
  'un--unifyWithLazy'/7,
  'un--unifyNoEta'/8,
  'un--unifyInvertible'/14,
  'un--unifyIfEq'/9,
  'un--unifyHoleApp'/12,
  'un--unifyHole'/13,
  'un--unifyD'/5,
  'un--unifyBothBinders'/14,
  'un--unifyBothApps'/12,
  'un--unifyArgs'/9,
  'un--unifyApp'/11,
  'un--unify'/7,
  'un--ufail'/3,
  'un--tryInstantiate'/14,
  'un--toSubVars'/2,
  'un--success'/0,
  'un--solvedHole'/1,
  'un--solveIfUndefined'/6,
  'un--solveHole'/16,
  'un--solveConstraintsAfter'/5,
  'un--solveConstraints'/4,
  'un--setInvertible'/3,
  'un--retryGuess'/5,
  'un--retry'/4,
  'un--recoverable'/1,
  'un--postponeS'/10,
  'un--postponePatVar'/12,
  'un--postpone'/9,
  'un--patternEnvTm'/5,
  'un--patternEnv'/5,
  'un--occursCheck'/7,
  'un--lower'/1,
  'un--isHoleApp'/1,
  'un--isDefInvertible'/3,
  'un--inTerm'/0,
  'un--inSearch'/0,
  'un--inMatch'/0,
  'un--inLHS'/0,
  'un--headsConvert'/8,
  'un--giveUpConstraints'/2,
  'un--getVarsTm'/2,
  'un--getVars'/3,
  'un--getMetaNames'/2,
  'un--getIVars'/1,
  'un--getArgTypes'/5,
  'un--forceMeta'/3,
  'un--dumpArg'/4,
  'un--delayMeta'/5,
  'un--convertErrorS'/7,
  'un--convertError'/6,
  'un--constrain'/1,
  'un--checkDots'/2,
  'un--checkArgsSame'/3,
  'un--chaseMetas'/3
]).
'un--search'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V10 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'(V0, V1, <<"auto"/utf8>>, 3, fun () -> <<"Initial target: "/utf8>> end, V9, V8))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V34 = begin (V15 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"auto"/utf8>>, 3, fun () -> <<<<"Running search with defaults "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(V5))/binary>> end))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V33 = begin (V20 = ('Idris.Idris2.Core.AutoSearch':'un--searchType'(V0, V1, V2, V3, V4, V5, [], V6, V7, 1, ('Idris.Idris2.Core.Env':'un--abstractEnvType'(V0, V3, V9, V8)), V9, V8))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V32 = begin (V25 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'(V0, V1, <<"auto"/utf8>>, 3, fun () -> <<"Result"/utf8>> end, V9, V24))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V31 = fun (V30) -> {'Prelude.Types.Right', V24} end), V31 end(V26)) end end end end), V32 end(V21)) end end end end), V33 end(V16)) end end end end), V34 end(V11)) end end end end.
'case--case block in case block in retryGuess-30363'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of [] -> begin (V39 = case V8 of {'Core.Context.Context.MkGlobalDef', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38} -> {'Core.Context.Context.MkGlobalDef', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, {'Core.Context.Context.PMDef', {'Core.Context.Context.MkPMDefInfo', {'Core.Context.Context.NotHole'}, 1, 0}, [], {'Core.Case.CaseTree.STerm', 0, V12}, {'Core.Case.CaseTree.STerm', 0, V12}, []}, V35, V36, V37, V38} end), begin (V40 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, 5, fun () -> <<<<"Resolved "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))/binary>> end, V12))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V81 = begin (V64 = begin (V45 = ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Core.Name.Resolved', V0}, V39))), ((begin (V61 = fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V58, V59, V60)) end end end end end), fun (V62) -> fun (V63) -> ((((V61('erased'))('erased'))(V62))(V63)) end end end((begin (V53 = fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> {'Prelude.Types.Right', (V49(V52))} end end end end end), fun (V54) -> fun (V55) -> ((((V53('erased'))('erased'))(V54))(V55)) end end end(fun (V46) -> {'Builtin.MkUnit'} end))))(V45)) end), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V80 = begin (V69 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0))), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V79 = fun (V74) -> {'Prelude.Types.Right', case V15 of {'Core.Unify.MkUnifyResult', V75, V76, V77, V78} -> V76 end} end), V79 end(V70)) end end end end), V80 end(V65)) end end end end), V81 end(V41)) end end end end end; _ -> begin (V104 = case V8 of {'Core.Context.Context.MkGlobalDef', V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103} -> {'Core.Context.Context.MkGlobalDef', V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, {'Core.Context.Context.Guess', V12, V11, V16}, V100, V101, V102, V103} end), begin (V124 = begin (V105 = ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Core.Name.Resolved', V0}, V104))), ((begin (V121 = fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V118, V119, V120)) end end end end end), fun (V122) -> fun (V123) -> ((((V121('erased'))('erased'))(V122))(V123)) end end end((begin (V113 = fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> case V110 of {'Prelude.Types.Left', V111} -> {'Prelude.Types.Left', V111}; {'Prelude.Types.Right', V112} -> {'Prelude.Types.Right', (V109(V112))} end end end end end), fun (V114) -> fun (V115) -> ((((V113('erased'))('erased'))(V114))(V115)) end end end(fun (V106) -> {'Builtin.MkUnit'} end))))(V105)) end), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V130 = fun (V129) -> {'Prelude.Types.Right', 0} end), V130 end(V125)) end end end end end end.
'case--case block in case block in retryGuess-29741'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of [] -> begin (V43 = case V14 of {'Core.Unify.MkUnifyResult', V16, V17, V18, V19} -> case V19 of {'Core.Unify.NoLazy'} -> fun (V20) -> {'Prelude.Types.Right', V12} end; {'Core.Unify.AddForce', V21} -> fun (V22) -> {'Prelude.Types.Right', ('un--forceMeta'(V21, V11, V12))} end; {'Core.Unify.AddDelay', V23} -> begin (V24 = ('Idris.Idris2.Core.GetType':'un--getType'([], V6, {'Core.Env.Nil'}, V12))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V42 = begin (V29 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, 5, fun () -> <<"Retry Delay"/utf8>> end, V12))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V41 = begin (V34 = ('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V28))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V40 = fun (V39) -> {'Prelude.Types.Right', ('un--delayMeta'([], V23, V11, V38, V12))} end), V40 end(V35)) end end end end), V41 end(V30)) end end end end), V42 end(V25)) end end end end end end), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V113 = begin (V70 = case V8 of {'Core.Context.Context.MkGlobalDef', V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69} -> {'Core.Context.Context.MkGlobalDef', V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, {'Core.Context.Context.PMDef', {'Core.Context.Context.MkPMDefInfo', {'Core.Context.Context.NotHole'}, 1, 0}, [], {'Core.Case.CaseTree.STerm', 0, V47}, {'Core.Case.CaseTree.STerm', 0, V47}, []}, V66, V67, V68, V69} end), begin (V71 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, 5, fun () -> <<<<"Resolved "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))/binary>> end, V47))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V112 = begin (V95 = begin (V76 = ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Core.Name.Resolved', V0}, V70))), ((begin (V92 = fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V89, V90, V91)) end end end end end), fun (V93) -> fun (V94) -> ((((V92('erased'))('erased'))(V93))(V94)) end end end((begin (V84 = fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> case V81 of {'Prelude.Types.Left', V82} -> {'Prelude.Types.Left', V82}; {'Prelude.Types.Right', V83} -> {'Prelude.Types.Right', (V80(V83))} end end end end end), fun (V85) -> fun (V86) -> ((((V84('erased'))('erased'))(V85))(V86)) end end end(fun (V77) -> {'Builtin.MkUnit'} end))))(V76)) end), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V111 = begin (V100 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V110 = fun (V105) -> {'Prelude.Types.Right', case V14 of {'Core.Unify.MkUnifyResult', V106, V107, V108, V109} -> V107 end} end), V110 end(V101)) end end end end), V111 end(V96)) end end end end), V112 end(V72)) end end end end end), V113 end(V44)) end end end end; _ -> begin (V141 = case V14 of {'Core.Unify.MkUnifyResult', V114, V115, V116, V117} -> case V117 of {'Core.Unify.NoLazy'} -> fun (V118) -> {'Prelude.Types.Right', V12} end; {'Core.Unify.AddForce', V119} -> fun (V120) -> {'Prelude.Types.Right', ('un--forceMeta'(V119, V11, V12))} end; {'Core.Unify.AddDelay', V121} -> begin (V122 = ('Idris.Idris2.Core.GetType':'un--getType'([], V6, {'Core.Env.Nil'}, V12))), fun (V123) -> begin (V124 = (V122(V123))), case V124 of {'Prelude.Types.Left', V125} -> {'Prelude.Types.Left', V125}; {'Prelude.Types.Right', V126} -> (begin (V140 = begin (V127 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, 5, fun () -> <<"Retry Delay (constrained)"/utf8>> end, V12))), fun (V128) -> begin (V129 = (V127(V128))), case V129 of {'Prelude.Types.Left', V130} -> {'Prelude.Types.Left', V130}; {'Prelude.Types.Right', V131} -> (begin (V139 = begin (V132 = ('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V126))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V138 = fun (V137) -> {'Prelude.Types.Right', ('un--delayMeta'([], V121, V11, V136, V12))} end), V138 end(V133)) end end end end), V139 end(V128)) end end end end), V140 end(V123)) end end end end end end), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V195 = begin (V168 = case V8 of {'Core.Context.Context.MkGlobalDef', V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167} -> {'Core.Context.Context.MkGlobalDef', V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, {'Core.Context.Context.Guess', V145, V11, V15}, V164, V165, V166, V167} end), begin (V188 = begin (V169 = ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Core.Name.Resolved', V0}, V168))), ((begin (V185 = fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V182, V183, V184)) end end end end end), fun (V186) -> fun (V187) -> ((((V185('erased'))('erased'))(V186))(V187)) end end end((begin (V177 = fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> case V174 of {'Prelude.Types.Left', V175} -> {'Prelude.Types.Left', V175}; {'Prelude.Types.Right', V176} -> {'Prelude.Types.Right', (V173(V176))} end end end end end), fun (V178) -> fun (V179) -> ((((V177('erased'))('erased'))(V178))(V179)) end end end(fun (V170) -> {'Builtin.MkUnit'} end))))(V169)) end), fun (V189) -> begin (V190 = (V188(V189))), case V190 of {'Prelude.Types.Left', V191} -> {'Prelude.Types.Left', V191}; {'Prelude.Types.Right', V192} -> (begin (V194 = fun (V193) -> {'Prelude.Types.Right', 0} end), V194 end(V189)) end end end end end), V195 end(V142)) end end end end end.
'case--case block in retryGuess-29226'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Core.Context.Context.BySearch', V11, V12, V13} -> ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V6, V5, begin (V36 = ('un--search'([], V6, V5, V1, V11, ('dn--un--==_Eq_SolveMode'(V3, 1)), V12, V13, case V8 of {'Core.Context.Context.MkGlobalDef', V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35} -> V16 end, {'Core.Env.Nil'}))), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V102 = begin (V63 = case V8 of {'Core.Context.Context.MkGlobalDef', V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62} -> {'Core.Context.Context.MkGlobalDef', V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, {'Core.Context.Context.PMDef', ('Idris.Idris2.Core.Context.Context':'un--defaultPI'()), [], {'Core.Case.CaseTree.STerm', 0, V40}, {'Core.Case.CaseTree.STerm', 0, V40}, []}, V59, V60, V61, V62} end), begin (V64 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V6, <<"unify.retry"/utf8>>, 5, fun () -> <<<<"Solved "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))/binary>> end, {'Core.Env.Nil'}, V40))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V101 = begin (V88 = begin (V69 = ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Core.Name.Resolved', V0}, V63))), ((begin (V85 = fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V82, V83, V84)) end end end end end), fun (V86) -> fun (V87) -> ((((V85('erased'))('erased'))(V86))(V87)) end end end((begin (V77 = fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> {'Prelude.Types.Right', (V73(V76))} end end end end end), fun (V78) -> fun (V79) -> ((((V77('erased'))('erased'))(V78))(V79)) end end end(fun (V70) -> {'Builtin.MkUnit'} end))))(V69)) end), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V100 = begin (V93 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0))), fun (V94) -> begin (V95 = (V93(V94))), case V95 of {'Prelude.Types.Left', V96} -> {'Prelude.Types.Left', V96}; {'Prelude.Types.Right', V97} -> (begin (V99 = fun (V98) -> {'Prelude.Types.Right', 1} end), V99 end(V94)) end end end end), V100 end(V89)) end end end end), V101 end(V65)) end end end end end), V102 end(V37)) end end end end, fun (V103) -> case V103 of {'Core.Core.DeterminingArg', V104, V105, V106, V107, V108, V109} -> begin (V138 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, (begin (V111 = fun (V110) -> V110 end), fun (V112) -> (V111(V112)) end end(<<"unify.retry"/utf8>>)), 5, fun () -> <<(begin (V114 = fun (V113) -> V113 end), fun (V115) -> (V114(V115)) end end(<<"Failed (det "/utf8>>))/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))/binary, <<<<" "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V106))/binary, <<")"/utf8>>/binary>>/binary>>/binary>>/binary>> end, case V8 of {'Core.Context.Context.MkGlobalDef', V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137} -> V118 end))), fun (V139) -> begin (V140 = (V138(V139))), case V140 of {'Prelude.Types.Left', V141} -> {'Prelude.Types.Left', V141}; {'Prelude.Types.Right', V142} -> (begin (V150 = begin (V143 = ('un--setInvertible'(V6, V1, {'Core.Name.Resolved', V107}))), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V149 = fun (V148) -> {'Prelude.Types.Right', 0} end), V149 end(V144)) end end end end), V150 end(V139)) end end end end; _ -> begin (V179 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V6, (begin (V152 = fun (V151) -> V151 end), fun (V153) -> (V152(V153)) end end(<<"unify.retry"/utf8>>)), 5, fun () -> <<(begin (V155 = fun (V154) -> V154 end), fun (V156) -> (V155(V156)) end end(<<"Search failed at "/utf8>>))/binary, <<('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V11))/binary, <<<<" for "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))/binary>>/binary>>/binary>> end, {'Core.Env.Nil'}, case V8 of {'Core.Context.Context.MkGlobalDef', V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178} -> V159 end))), fun (V180) -> begin (V181 = (V179(V180))), case V181 of {'Prelude.Types.Left', V182} -> {'Prelude.Types.Left', V182}; {'Prelude.Types.Right', V183} -> (begin (V239 = fun (V184) -> case V3 of 3 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'(V103, V184)); _ -> case ('un--recoverable'(V103)) of 1 -> {'Prelude.Types.Right', 0}; 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.CantSolveGoal', [], V1, case V7 of {'Core.Context.MkDefs', V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216} -> V185 end, {'Core.Env.Nil'}, case V8 of {'Core.Context.Context.MkGlobalDef', V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238} -> V219 end, {'Prelude.Types.Just', V103}}, V184)) end end end), V239 end(V180)) end end end end end end)); {'Core.Context.Context.Guess', V240, V241, V242} -> case V242 of [E0 | E1] -> (fun (V243, V244) -> case V244 of [] -> begin (V245 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), begin (V246 = ('un--retry'(V6, V5, V245, V243))), fun (V247) -> begin (V248 = (V246(V247))), case V248 of {'Prelude.Types.Left', V249} -> {'Prelude.Types.Left', V249}; {'Prelude.Types.Right', V250} -> (begin (V255 = ('case--case block in case block in retryGuess-29741'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V243, V241, V240, V245, V250, case V250 of {'Core.Unify.MkUnifyResult', V251, V252, V253, V254} -> V251 end))), V255 end(V247)) end end end end end; _ -> begin (V256 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), begin (V258 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V257) -> ('un--retry'(V6, V5, V256, V257)) end, V242, []))), fun (V259) -> begin (V260 = (V258(V259))), case V260 of {'Prelude.Types.Left', V261} -> {'Prelude.Types.Left', V261}; {'Prelude.Types.Right', V262} -> (begin (V268 = begin (V263 = ('un--unionAll'(V262))), ('case--case block in case block in retryGuess-30363'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V242, V241, V240, V256, V262, V263, case V263 of {'Core.Unify.MkUnifyResult', V264, V265, V266, V267} -> V264 end)) end), V268 end(V259)) end end end end end end end(E0, E1)); _ -> begin (V269 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), begin (V271 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V270) -> ('un--retry'(V6, V5, V269, V270)) end, V242, []))), fun (V272) -> begin (V273 = (V271(V272))), case V273 of {'Prelude.Types.Left', V274} -> {'Prelude.Types.Left', V274}; {'Prelude.Types.Right', V275} -> (begin (V281 = begin (V276 = ('un--unionAll'(V275))), ('case--case block in case block in retryGuess-30363'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V242, V241, V240, V269, V275, V276, case V276 of {'Core.Unify.MkUnifyResult', V277, V278, V279, V280} -> V277 end)) end), V281 end(V272)) end end end end end end; _ -> fun (V282) -> {'Prelude.Types.Right', 0} end end.
'case--retry-28524'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Prelude.Types.Nothing'} -> fun (V6) -> {'Prelude.Types.Right', ('un--success'())} end; {'Prelude.Types.Just', V7} -> case V7 of {'Core.UnifyState.Resolved'} -> fun (V8) -> {'Prelude.Types.Right', ('un--success'())} end; {'Core.UnifyState.MkConstraint', V9, V10, V11, V12, V13, V14} -> begin (V20 = begin (V15 = V0), fun (V16) -> begin (V19 = (begin (V17 = V15), fun (V18) -> ('erlang':'get'(V17)) end end(V16))), {'Prelude.Types.Right', V19} end end end), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V197 = begin (V25 = ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V9, V24, V12, V13))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V196 = begin (V30 = ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V9, V24, V12, V14))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V195 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V37 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V9, V0, <<"unify.retry"/utf8>>, 5, fun () -> <<<<"Retrying "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V1))/binary, <<<<" "/utf8>>/binary, ('dn--un--show_Show_UnifyMode'(case V2 of {'Core.Unify.MkUnifyInfo', V35, V36} -> V36 end))/binary>>/binary>>/binary>> end, V12, V29))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V130 = begin (V42 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V9, V0, <<"unify.retry"/utf8>>, 5, fun () -> <<"....with"/utf8>> end, V12, V34))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V129 = begin (V53 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, 5, case V11 of 1 -> fun () -> (begin (V48 = fun (V47) -> V47 end), fun (V49) -> (V48(V49)) end end(<<"(lazy allowed)"/utf8>>)) end; 0 -> fun () -> (begin (V51 = fun (V50) -> V50 end), fun (V52) -> (V51(V52)) end end(<<"(no lazy)"/utf8>>)) end end))), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V128 = begin (V90 = case V11 of 1 -> ((('un--unifyWithLazy'({'Core.Unify.dn--un--__mkUnify', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('dn--un--unifyD_Unify_NF'(V58, V59, V60, V61, V62, V63, V64, V65)) end end end end end end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('dn--un--unifyWithLazyD_Unify_NF'(V66, V67, V68, V69, V70, V71, V72, V73)) end end end end end end end end}, V9, V0, V3, V2, V10, V12))(V29))(V34)); 0 -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('dn--un--unifyD_Unify_NF'(V74, V75, V76, V77, V78, V79, V80, V81)) end end end end end end end end, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('dn--un--unifyWithLazyD_Unify_NF'(V82, V83, V84, V85, V86, V87, V88, V89)) end end end end end end end end}, V9, V0, V3, ('un--lower'(V2)), V10, V12))(V29))(V34)) end), fun (V91) -> begin (V92 = (V90(V91))), case V92 of {'Prelude.Types.Left', V93} -> {'Prelude.Types.Left', V93}; {'Prelude.Types.Right', V94} -> (begin (V127 = case V94 of {'Core.Unify.MkUnifyResult', V95, V96, V97, V98} -> case V95 of [] -> begin (V103 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, 5, fun () -> <<<<"Success "/utf8>>/binary, ('dn--un--show_Show_AddLazy'(case V94 of {'Core.Unify.MkUnifyResult', V99, V100, V101, V102} -> V102 end))/binary>> end))), fun (V104) -> begin (V105 = (V103(V104))), case V105 of {'Prelude.Types.Left', V106} -> {'Prelude.Types.Left', V106}; {'Prelude.Types.Right', V107} -> (begin (V115 = begin (V108 = ('Idris.Idris2.Core.UnifyState':'un--deleteConstraint'(V3, V1))), fun (V109) -> begin (V110 = (V108(V109))), case V110 of {'Prelude.Types.Left', V111} -> {'Prelude.Types.Left', V111}; {'Prelude.Types.Right', V112} -> (begin (V114 = fun (V113) -> {'Prelude.Types.Right', V94} end), V114 end(V109)) end end end end), V115 end(V104)) end end end end; _ -> begin (V120 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, 5, fun () -> <<<<"Constraints "/utf8>>/binary, ('dn--un--show_Show_AddLazy'(case V94 of {'Core.Unify.MkUnifyResult', V116, V117, V118, V119} -> V119 end))/binary>> end))), fun (V121) -> begin (V122 = (V120(V121))), case V122 of {'Prelude.Types.Left', V123} -> {'Prelude.Types.Left', V123}; {'Prelude.Types.Right', V124} -> (begin (V126 = fun (V125) -> {'Prelude.Types.Right', V94} end), V126 end(V121)) end end end end end end), V127 end(V91)) end end end end), V128 end(V54)) end end end end), V129 end(V43)) end end end end), V130 end(V38)) end end end end, fun (V131) -> begin (V137 = begin (V132 = V0), fun (V133) -> begin (V136 = (begin (V134 = V132), fun (V135) -> ('erlang':'get'(V134)) end end(V133))), {'Prelude.Types.Right', V136} end end end), fun (V138) -> begin (V139 = (V137(V138))), case V139 of {'Prelude.Types.Left', V140} -> {'Prelude.Types.Left', V140}; {'Prelude.Types.Right', V141} -> (begin (V194 = begin (V143 = fun (V142) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V141, V142)) end), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V193 = begin (V148 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V9, V147, V12, V29))), fun (V149) -> begin (V150 = (V148(V149))), case V150 of {'Prelude.Types.Left', V151} -> {'Prelude.Types.Left', V151}; {'Prelude.Types.Right', V152} -> (begin (V192 = begin (V153 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V9, V147, V12, V34))), fun (V154) -> begin (V155 = (V153(V154))), case V155 of {'Prelude.Types.Left', V156} -> {'Prelude.Types.Left', V156}; {'Prelude.Types.Right', V157} -> (begin (V191 = fun (V158) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.WhenUnifying', V9, V10, case V141 of {'Core.Context.MkDefs', V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190} -> V159 end, V12, V152, V157, V131}, V158)) end), V191 end(V154)) end end end end), V192 end(V149)) end end end end), V193 end(V144)) end end end end), V194 end(V138)) end end end end end))), V195 end(V31)) end end end end), V196 end(V26)) end end end end), V197 end(V21)) end end end end; {'Core.UnifyState.MkSeqConstraint', V198, V199, V200, V201, V202} -> begin (V208 = begin (V203 = V0), fun (V204) -> begin (V207 = (begin (V205 = V203), fun (V206) -> ('erlang':'get'(V205)) end end(V204))), {'Prelude.Types.Right', V207} end end end), fun (V209) -> begin (V210 = (V208(V209))), case V210 of {'Prelude.Types.Left', V211} -> {'Prelude.Types.Left', V211}; {'Prelude.Types.Right', V212} -> (begin (V284 = begin (V214 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V213) -> ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V198, V212, V200, V213)) end, V201, []))), fun (V215) -> begin (V216 = (V214(V215))), case V216 of {'Prelude.Types.Left', V217} -> {'Prelude.Types.Left', V217}; {'Prelude.Types.Right', V218} -> (begin (V283 = begin (V220 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V219) -> ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V198, V212, V200, V219)) end, V202, []))), fun (V221) -> begin (V222 = (V220(V221))), case V222 of {'Prelude.Types.Left', V223} -> {'Prelude.Types.Left', V223}; {'Prelude.Types.Right', V224} -> (begin (V282 = begin (V264 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> fun (V231) -> fun (V232) -> ('dn--un--unifyD_Unify_NF'(V225, V226, V227, V228, V229, V230, V231, V232)) end end end end end end end end, fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> ('dn--un--unifyWithLazyD_Unify_NF'(V233, V234, V235, V236, V237, V238, V239, V240)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> fun (V245) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V241, V242, V243, V244, V245)) end end end end end, fun (V246) -> fun (V247) -> fun (V248) -> fun (V249) -> fun (V250) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_NF'(V246, V247, V248, V249, V250)) end end end end end, fun (V251) -> fun (V252) -> fun (V253) -> fun (V254) -> fun (V255) -> fun (V256) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_NF'(V251, V252, V253, V254, V255, V256)) end end end end end end, fun (V257) -> fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_NF'(V257, V258, V259, V260, V261, V262, V263)) end end end end end end end}}, V198, V0, V3, V2, V199, V200, V218, V224))), fun (V265) -> begin (V266 = (V264(V265))), case V266 of {'Prelude.Types.Left', V267} -> {'Prelude.Types.Left', V267}; {'Prelude.Types.Right', V268} -> (begin (V281 = case V268 of {'Core.Unify.MkUnifyResult', V269, V270, V271, V272} -> case V269 of [] -> begin (V273 = ('Idris.Idris2.Core.UnifyState':'un--deleteConstraint'(V3, V1))), fun (V274) -> begin (V275 = (V273(V274))), case V275 of {'Prelude.Types.Left', V276} -> {'Prelude.Types.Left', V276}; {'Prelude.Types.Right', V277} -> (begin (V279 = fun (V278) -> {'Prelude.Types.Right', V268} end), V279 end(V274)) end end end end; _ -> fun (V280) -> {'Prelude.Types.Right', V268} end end end), V281 end(V265)) end end end end), V282 end(V221)) end end end end), V283 end(V215)) end end end end), V284 end(V209)) end end end end end end.
'case--case block in unifyD-27578'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Builtin.MkPair', V14, V15} -> case V14 of {'Core.Value.NApp', V16, V17, V18} -> case V17 of {'Core.Value.NMeta', V19, V20, V21} -> case V15 of {'Core.Value.NApp', V22, V23, V24} -> case V23 of {'Core.Value.NMeta', V25, V26, V27} -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('dn--un--unifyD_Unify_NF'(V28, V29, V30, V31, V32, V33, V34, V35)) end end end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('dn--un--unifyWithLazyD_Unify_NF'(V36, V37, V38, V39, V40, V41, V42, V43)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)); _ -> begin (V44 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V3))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V122 = begin (V49 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V11))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V121 = begin (V54 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V48))), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V120 = begin (V87 = begin (V59 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V53))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V86 = begin (V64 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V58))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V85 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> ('dn--un--unifyD_Unify_NF'(V69, V70, V71, V72, V73, V74, V75, V76)) end end end end end end end end, fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('dn--un--unifyWithLazyD_Unify_NF'(V77, V78, V79, V80, V81, V82, V83, V84)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V63))(V68))), V85 end(V65)) end end end end), V86 end(V60)) end end end end), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V119 = case V91 of {'Core.Unify.MkUnifyResult', V92, V93, V94, V95} -> case V92 of [] -> fun (V96) -> {'Prelude.Types.Right', V91} end; _ -> begin (V97 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V8, V3))), fun (V98) -> begin (V99 = (V97(V98))), case V99 of {'Prelude.Types.Left', V100} -> {'Prelude.Types.Left', V100}; {'Prelude.Types.Right', V101} -> (begin (V118 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> ('dn--un--unifyD_Unify_NF'(V102, V103, V104, V105, V106, V107, V108, V109)) end end end end end end end end, fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('dn--un--unifyWithLazyD_Unify_NF'(V110, V111, V112, V113, V114, V115, V116, V117)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V101))), V118 end(V98)) end end end end end end), V119 end(V88)) end end end end), V120 end(V55)) end end end end), V121 end(V50)) end end end end), V122 end(V45)) end end end end end; _ -> begin (V123 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V3))), fun (V124) -> begin (V125 = (V123(V124))), case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> (begin (V201 = begin (V128 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V11))), fun (V129) -> begin (V130 = (V128(V129))), case V130 of {'Prelude.Types.Left', V131} -> {'Prelude.Types.Left', V131}; {'Prelude.Types.Right', V132} -> (begin (V200 = begin (V133 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V127))), fun (V134) -> begin (V135 = (V133(V134))), case V135 of {'Prelude.Types.Left', V136} -> {'Prelude.Types.Left', V136}; {'Prelude.Types.Right', V137} -> (begin (V199 = begin (V166 = begin (V138 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V132))), fun (V139) -> begin (V140 = (V138(V139))), case V140 of {'Prelude.Types.Left', V141} -> {'Prelude.Types.Left', V141}; {'Prelude.Types.Right', V142} -> (begin (V165 = begin (V143 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V137))), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V164 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> ('dn--un--unifyD_Unify_NF'(V148, V149, V150, V151, V152, V153, V154, V155)) end end end end end end end end, fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> ('dn--un--unifyWithLazyD_Unify_NF'(V156, V157, V158, V159, V160, V161, V162, V163)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V142))(V147))), V164 end(V144)) end end end end), V165 end(V139)) end end end end), fun (V167) -> begin (V168 = (V166(V167))), case V168 of {'Prelude.Types.Left', V169} -> {'Prelude.Types.Left', V169}; {'Prelude.Types.Right', V170} -> (begin (V198 = case V170 of {'Core.Unify.MkUnifyResult', V171, V172, V173, V174} -> case V171 of [] -> fun (V175) -> {'Prelude.Types.Right', V170} end; _ -> begin (V176 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V8, V3))), fun (V177) -> begin (V178 = (V176(V177))), case V178 of {'Prelude.Types.Left', V179} -> {'Prelude.Types.Left', V179}; {'Prelude.Types.Right', V180} -> (begin (V197 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> ('dn--un--unifyD_Unify_NF'(V181, V182, V183, V184, V185, V186, V187, V188)) end end end end end end end end, fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> ('dn--un--unifyWithLazyD_Unify_NF'(V189, V190, V191, V192, V193, V194, V195, V196)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V180))), V197 end(V177)) end end end end end end), V198 end(V167)) end end end end), V199 end(V134)) end end end end), V200 end(V129)) end end end end), V201 end(V124)) end end end end end; _ -> case V15 of {'Core.Value.NApp', V202, V203, V204} -> case V203 of {'Core.Value.NMeta', V205, V206, V207} -> begin (V208 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V4))), fun (V209) -> begin (V210 = (V208(V209))), case V210 of {'Prelude.Types.Left', V211} -> {'Prelude.Types.Left', V211}; {'Prelude.Types.Right', V212} -> (begin (V280 = begin (V213 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V212))), fun (V214) -> begin (V215 = (V213(V214))), case V215 of {'Prelude.Types.Left', V216} -> {'Prelude.Types.Left', V216}; {'Prelude.Types.Right', V217} -> (begin (V279 = begin (V218 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V12))), fun (V219) -> begin (V220 = (V218(V219))), case V220 of {'Prelude.Types.Left', V221} -> {'Prelude.Types.Left', V221}; {'Prelude.Types.Right', V222} -> (begin (V278 = begin (V251 = begin (V223 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V222))), fun (V224) -> begin (V225 = (V223(V224))), case V225 of {'Prelude.Types.Left', V226} -> {'Prelude.Types.Left', V226}; {'Prelude.Types.Right', V227} -> (begin (V250 = begin (V228 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V217))), fun (V229) -> begin (V230 = (V228(V229))), case V230 of {'Prelude.Types.Left', V231} -> {'Prelude.Types.Left', V231}; {'Prelude.Types.Right', V232} -> (begin (V249 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> ('dn--un--unifyD_Unify_NF'(V233, V234, V235, V236, V237, V238, V239, V240)) end end end end end end end end, fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> fun (V245) -> fun (V246) -> fun (V247) -> fun (V248) -> ('dn--un--unifyWithLazyD_Unify_NF'(V241, V242, V243, V244, V245, V246, V247, V248)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V227))(V232))), V249 end(V229)) end end end end), V250 end(V224)) end end end end), fun (V252) -> begin (V253 = (V251(V252))), case V253 of {'Prelude.Types.Left', V254} -> {'Prelude.Types.Left', V254}; {'Prelude.Types.Right', V255} -> (begin (V277 = case V255 of {'Core.Unify.MkUnifyResult', V256, V257, V258, V259} -> case V256 of [] -> fun (V260) -> {'Prelude.Types.Right', V255} end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V261) -> fun (V262) -> fun (V263) -> fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> ('dn--un--unifyD_Unify_NF'(V261, V262, V263, V264, V265, V266, V267, V268)) end end end end end end end end, fun (V269) -> fun (V270) -> fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> ('dn--un--unifyWithLazyD_Unify_NF'(V269, V270, V271, V272, V273, V274, V275, V276)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end), V277 end(V252)) end end end end), V278 end(V219)) end end end end), V279 end(V214)) end end end end), V280 end(V209)) end end end end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> fun (V288) -> ('dn--un--unifyD_Unify_NF'(V281, V282, V283, V284, V285, V286, V287, V288)) end end end end end end end end, fun (V289) -> fun (V290) -> fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> ('dn--un--unifyWithLazyD_Unify_NF'(V289, V290, V291, V292, V293, V294, V295, V296)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V297) -> fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> fun (V303) -> fun (V304) -> ('dn--un--unifyD_Unify_NF'(V297, V298, V299, V300, V301, V302, V303, V304)) end end end end end end end end, fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> ('dn--un--unifyWithLazyD_Unify_NF'(V305, V306, V307, V308, V309, V310, V311, V312)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end; _ -> case V15 of {'Core.Value.NApp', V313, V314, V315} -> case V314 of {'Core.Value.NMeta', V316, V317, V318} -> begin (V319 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V4))), fun (V320) -> begin (V321 = (V319(V320))), case V321 of {'Prelude.Types.Left', V322} -> {'Prelude.Types.Left', V322}; {'Prelude.Types.Right', V323} -> (begin (V391 = begin (V324 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V323))), fun (V325) -> begin (V326 = (V324(V325))), case V326 of {'Prelude.Types.Left', V327} -> {'Prelude.Types.Left', V327}; {'Prelude.Types.Right', V328} -> (begin (V390 = begin (V329 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V12))), fun (V330) -> begin (V331 = (V329(V330))), case V331 of {'Prelude.Types.Left', V332} -> {'Prelude.Types.Left', V332}; {'Prelude.Types.Right', V333} -> (begin (V389 = begin (V362 = begin (V334 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V333))), fun (V335) -> begin (V336 = (V334(V335))), case V336 of {'Prelude.Types.Left', V337} -> {'Prelude.Types.Left', V337}; {'Prelude.Types.Right', V338} -> (begin (V361 = begin (V339 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V328))), fun (V340) -> begin (V341 = (V339(V340))), case V341 of {'Prelude.Types.Left', V342} -> {'Prelude.Types.Left', V342}; {'Prelude.Types.Right', V343} -> (begin (V360 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> fun (V350) -> fun (V351) -> ('dn--un--unifyD_Unify_NF'(V344, V345, V346, V347, V348, V349, V350, V351)) end end end end end end end end, fun (V352) -> fun (V353) -> fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> fun (V359) -> ('dn--un--unifyWithLazyD_Unify_NF'(V352, V353, V354, V355, V356, V357, V358, V359)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V338))(V343))), V360 end(V340)) end end end end), V361 end(V335)) end end end end), fun (V363) -> begin (V364 = (V362(V363))), case V364 of {'Prelude.Types.Left', V365} -> {'Prelude.Types.Left', V365}; {'Prelude.Types.Right', V366} -> (begin (V388 = case V366 of {'Core.Unify.MkUnifyResult', V367, V368, V369, V370} -> case V367 of [] -> fun (V371) -> {'Prelude.Types.Right', V366} end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V372) -> fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> fun (V377) -> fun (V378) -> fun (V379) -> ('dn--un--unifyD_Unify_NF'(V372, V373, V374, V375, V376, V377, V378, V379)) end end end end end end end end, fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> fun (V386) -> fun (V387) -> ('dn--un--unifyWithLazyD_Unify_NF'(V380, V381, V382, V383, V384, V385, V386, V387)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end), V388 end(V363)) end end end end), V389 end(V330)) end end end end), V390 end(V325)) end end end end), V391 end(V320)) end end end end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V392) -> fun (V393) -> fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> ('dn--un--unifyD_Unify_NF'(V392, V393, V394, V395, V396, V397, V398, V399)) end end end end end end end end, fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> ('dn--un--unifyWithLazyD_Unify_NF'(V400, V401, V402, V403, V404, V405, V406, V407)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V408) -> fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> fun (V415) -> ('dn--un--unifyD_Unify_NF'(V408, V409, V410, V411, V412, V413, V414, V415)) end end end end end end end end, fun (V416) -> fun (V417) -> fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> ('dn--un--unifyWithLazyD_Unify_NF'(V416, V417, V418, V419, V420, V421, V422, V423)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V424) -> fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> fun (V430) -> fun (V431) -> ('dn--un--unifyD_Unify_NF'(V424, V425, V426, V427, V428, V429, V430, V431)) end end end end end end end end, fun (V432) -> fun (V433) -> fun (V434) -> fun (V435) -> fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> ('dn--un--unifyWithLazyD_Unify_NF'(V432, V433, V434, V435, V436, V437, V438, V439)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end.
'case--case block in unifyBothBinders-24603'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of [] -> begin (V27 = ((V12(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Core.TT.Ref', V16, {'Core.TT.Bound'}, V24}))))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V66 = begin (V32 = ((V9(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Core.TT.Ref', V16, {'Core.TT.Bound'}, V24}))))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V65 = begin (V37 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V31))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V64 = begin (V42 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V36))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V63 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('dn--un--unifyD_Unify_Term'(V47, V48, V49, V50, V51, V52, V53, V54)) end end end end end end end end, fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('dn--un--unifyWithLazyD_Unify_Term'(V55, V56, V57, V58, V59, V60, V61, V62)) end end end end end end end end}, [V13 | V0], V19, V18, ('un--lower'(V17)), V16, V25))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Core.TT.Bounds.Add', V13, V24, {'Core.TT.Bounds.None'}}, V41))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Core.TT.Bounds.Add', V13, V24, {'Core.TT.Bounds.None'}}, V46))))), V63 end(V43)) end end end end), V64 end(V38)) end end end end), V65 end(V33)) end end end end), V66 end(V28)) end end end end; _ -> begin (V67 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V19, V0, V21, V15, V1))), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V135 = begin (V72 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V19, V0, V21, V15, V5))), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V134 = begin (V81 = ('Idris.Idris2.Core.UnifyState':'un--newConstant'(V0, V18, V19, V16, ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V77) -> fun (V78) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V77, V78)) end end, 0, fun (V79) -> fun (V80) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V79, V80)) end end, 1})), V15, {'Core.TT.Bind', V14, V13, {'Core.TT.Lam', V8, V7, {'Core.TT.Explicit'}, V71}, {'Core.TT.Local', V14, {'Prelude.Types.Nothing'}, 0}}, {'Core.TT.Bind', V14, V13, {'Core.TT.Pi', V8, V7, {'Core.TT.Explicit'}, V71}, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V76))}, V26))), fun (V82) -> begin (V83 = (V81(V82))), case V83 of {'Prelude.Types.Left', V84} -> {'Prelude.Types.Left', V84}; {'Prelude.Types.Right', V85} -> (begin (V133 = begin (V86 = ((V12(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Core.TT.Ref', V16, {'Core.TT.Bound'}, V24}))))), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V132 = begin (V91 = ((V9(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Core.TT.App', V16, V85, {'Core.TT.Ref', V16, {'Core.TT.Bound'}, V24}}))))), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V131 = begin (V96 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V90))), fun (V97) -> begin (V98 = (V96(V97))), case V98 of {'Prelude.Types.Left', V99} -> {'Prelude.Types.Left', V99}; {'Prelude.Types.Right', V100} -> (begin (V130 = begin (V101 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V95))), fun (V102) -> begin (V103 = (V101(V102))), case V103 of {'Prelude.Types.Left', V104} -> {'Prelude.Types.Left', V104}; {'Prelude.Types.Right', V105} -> (begin (V129 = begin (V122 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> ('dn--un--unifyD_Unify_Term'(V106, V107, V108, V109, V110, V111, V112, V113)) end end end end end end end end, fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> ('dn--un--unifyWithLazyD_Unify_Term'(V114, V115, V116, V117, V118, V119, V120, V121)) end end end end end end end end}, [V13 | V0], V19, V18, ('un--lower'(V17)), V16, V25))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Core.TT.Bounds.Add', V13, V24, {'Core.TT.Bounds.None'}}, V100))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Core.TT.Bounds.Add', V13, V24, {'Core.TT.Bounds.None'}}, V105))))), fun (V123) -> begin (V124 = (V122(V123))), case V124 of {'Prelude.Types.Left', V125} -> {'Prelude.Types.Left', V125}; {'Prelude.Types.Right', V126} -> (begin (V128 = fun (V127) -> {'Prelude.Types.Right', ('un--union'(V23, V126))} end), V128 end(V123)) end end end end), V129 end(V102)) end end end end), V130 end(V97)) end end end end), V131 end(V92)) end end end end), V132 end(V87)) end end end end), V133 end(V82)) end end end end), V134 end(V73)) end end end end), V135 end(V68)) end end end end end.
'case--headsConvert-19925'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Builtin.MkPair', V9, V10} -> case V9 of [E0 | E1] -> (fun (V11, V12) -> case V10 of [E2 | E3] -> (fun (V13, V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V7, <<"unify.head"/utf8>>, 10, fun () -> <<"Unifying head"/utf8>> end, V3, V11))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V53 = begin (V20 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V7, <<"unify.head"/utf8>>, 10, fun () -> <<".........with"/utf8>> end, V3, V13))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V52 = begin (V41 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_NF'(V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('dn--un--unifyWithLazyD_Unify_NF'(V33, V34, V35, V36, V37, V38, V39, V40)) end end end end end end end end}, V0, V7, V6, V5, V4, V3))(V11))(V13))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V51 = fun (V46) -> {'Prelude.Types.Right', ('Idris.Idris2.Data.List':'un--isNil'(case V45 of {'Core.Unify.MkUnifyResult', V47, V48, V49, V50} -> V47 end))} end), V51 end(V42)) end end end end), V52 end(V21)) end end end end), V53 end(V16)) end end end end end(E2, E3)); _ -> fun (V54) -> {'Prelude.Types.Right', 0} end end end(E0, E1)); _ -> fun (V55) -> {'Prelude.Types.Right', 0} end end; _ -> fun (V56) -> {'Prelude.Types.Right', 0} end end.
'case--occursCheck-16144'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of 0 -> fun (V9) -> {'Prelude.Types.Right', {'Prelude.Types.Just', V1}} end; _ -> begin (V15 = begin (V10 = V6), fun (V11) -> begin (V14 = (begin (V12 = V10), fun (V13) -> ('erlang':'get'(V12)) end end(V11))), {'Prelude.Types.Right', V14} end end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V71 = begin (V20 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V6, V0, V19, V4, V1))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V70 = begin (V25 = ('un--getMetaNames'(V6, V24))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V69 = case ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V32, V33, V34)) end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V41)) end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V45, V46, V47, V48)) end end end end end end end, fun (V49) -> fun (V50) -> V50 end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V53, V54, V55)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V58, V59)) end end}, V2, V29)) of 1 -> begin (V61 = ('nested--10817-15905--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, 0, fun (V60) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.CyclicMeta', V0, V5, V4, V2, V24}, V60)) end, V24))), fun (V62) -> begin (V63 = (V61(V62))), case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> (begin (V67 = fun (V66) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end), V67 end(V62)) end end end end; 0 -> fun (V68) -> {'Prelude.Types.Right', {'Prelude.Types.Just', V24}} end end), V69 end(V26)) end end end end), V70 end(V21)) end end end end), V71 end(V16)) end end end end end.
'case--occursCheck,failOnStrongRigid-15999'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Builtin.MkPair', V11, V12} -> case V12 of [] -> fun (V13) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; _ -> case V11 of {'Core.TT.Ref', V14, V15, V16} -> case V15 of {'Core.TT.Func'} -> fun (V17) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; _ -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V18) -> ('nested--10817-15905--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, 1, V8, V18)) end, V12)) end; _ -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V19) -> ('nested--10817-15905--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, V9, V8, V19)) end, V12)) end end end.
'case--case block in patternEnvTm-15838'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Builtin.DPair.MkDPair', V9, V10} -> {'Prelude.Types.Just', {'Builtin.DPair.MkDPair', V9, {'Builtin.MkPair', ('nested--10570-15686--in--un--updateVars'(V0, V1, V2, V3, V4, V7, V10)), V10}}} end.
'case--patternEnvTm-15797'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Prelude.Types.Nothing'} -> {'Prelude.Types.Nothing'}; {'Prelude.Types.Just', V8} -> ('case--case block in patternEnvTm-15838'(V0, V1, V2, V3, V4, V5, V6, V8, ('un--toSubVars'(V0, V8)))) end.
'case--case block in patternEnv-15521'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Builtin.DPair.MkDPair', V10, V11} -> {'Prelude.Types.Just', {'Builtin.DPair.MkDPair', V10, {'Builtin.MkPair', ('nested--10191-15353--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V11)), V11}}} end.
'case--patternEnv-15476'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Prelude.Types.Nothing'} -> {'Prelude.Types.Nothing'}; {'Prelude.Types.Just', V9} -> ('case--case block in patternEnv-15521'(V0, V1, V2, V3, V4, V5, V6, V7, V9, ('un--toSubVars'(V0, V9)))) end.
'case--chaseMetas-14298'(V0, V1, V2, V3, V4) -> case V4 of {'Prelude.Types.Just', V5} -> ('un--chaseMetas'(V3, V1, V2)); _ -> begin (V11 = begin (V6 = V3), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V63 = begin (V48 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V0, case V15 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> V16 end))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V62 = case V52 of {'Prelude.Types.Just', V53} -> case V53 of {'Core.Context.Context.PMDef', V54, V55, V56, V57, V58} -> case V56 of {'Core.Case.CaseTree.STerm', V59, V60} -> begin (V61 = ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.TT':'un--getMetas'(V60))))), ('un--chaseMetas'(V3, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V61, V1)), ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, {'Builtin.MkUnit'}, V2)))) end; _ -> ('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, {'Builtin.MkUnit'}, V2)))) end; _ -> ('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, {'Builtin.MkUnit'}, V2)))) end; _ -> ('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, {'Builtin.MkUnit'}, V2)))) end), V62 end(V49)) end end end end), V63 end(V12)) end end end end end.
'nested--10570-15686--in--un--updateVars'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> []; [E0 | E1] -> (fun (V7, V8) -> begin (V9 = V7), case ('Idris.Idris2.Core.TT':'un--subElem'(V9, V6)) of {'Prelude.Types.Nothing'} -> ('nested--10570-15686--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6)); {'Prelude.Types.Just', V10} -> [V10 | ('nested--10570-15686--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6))] end end end(E0, E1)) end.
'nested--10191-15353--in--un--updateVars'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> []; [E0 | E1] -> (fun (V7, V8) -> begin (V9 = V7), case ('Idris.Idris2.Core.TT':'un--subElem'(V9, V6)) of {'Prelude.Types.Nothing'} -> ('nested--10191-15353--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6)); {'Prelude.Types.Just', V10} -> [V10 | ('nested--10191-15353--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6))] end end end(E0, E1)) end.
'nested--11595-17313--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Core.TT.Explicit'} -> {'Prelude.Types.Just', {'Core.TT.Explicit'}}; {'Core.TT.Implicit'} -> {'Prelude.Types.Just', {'Core.TT.Implicit'}}; {'Core.TT.AutoImplicit'} -> {'Prelude.Types.Just', {'Core.TT.AutoImplicit'}}; {'Core.TT.DefImplicit', V25} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V25)), fun (V26) -> {'Prelude.Types.Just', {'Core.TT.DefImplicit', V26}} end)) end.
'nested--11595-17314--in--un--updateIVarsB'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Core.TT.Lam', V25, V26, V27, V28} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11595-17313--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V27)), fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V28)), fun (V30) -> {'Prelude.Types.Just', {'Core.TT.Lam', V25, V26, V29, V30}} end)) end)); {'Core.TT.Let', V31, V32, V33, V34} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V33)), fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V34)), fun (V36) -> {'Prelude.Types.Just', {'Core.TT.Let', V31, V32, V35, V36}} end)) end)); {'Core.TT.Pi', V37, V38, V39, V40} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11595-17313--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V39)), fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V40)), fun (V42) -> {'Prelude.Types.Just', {'Core.TT.Pi', V37, V38, V41, V42}} end)) end)); {'Core.TT.PVar', V43, V44, V45, V46} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11595-17313--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V45)), fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V46)), fun (V48) -> {'Prelude.Types.Just', {'Core.TT.PVar', V43, V44, V47, V48}} end)) end)); {'Core.TT.PLet', V49, V50, V51, V52} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V51)), fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V52)), fun (V54) -> {'Prelude.Types.Just', {'Core.TT.PLet', V49, V50, V53, V54}} end)) end)); {'Core.TT.PVTy', V55, V56, V57} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V57)), fun (V58) -> {'Prelude.Types.Just', {'Core.TT.PVTy', V55, V56, V58}} end)) end.
'nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Core.TT.Local', V18, V19, V20} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16579--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V20, V16)), fun (V21) -> begin (V22 = V21), {'Prelude.Types.Just', {'Core.TT.Local', V18, V19, V22}} end end)); {'Core.TT.Ref', V23, V24, V25} -> {'Prelude.Types.Just', {'Core.TT.Ref', V23, V24, V25}}; {'Core.TT.Meta', V26, V27, V28, V29} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'({'Prelude.Interfaces.MkApplicative', fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V32, V33)) end end end end, fun (V34) -> fun (V35) -> {'Prelude.Types.Just', V35} end end, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V38, V39)) end end end end}, fun (V40) -> ('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V40)) end, V29)), fun (V41) -> {'Prelude.Types.Just', {'Core.TT.Meta', V26, V27, V28, V41}} end)); {'Core.TT.Bind', V42, V43, V44, V45} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11595-17314--in--un--updateIVarsB'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, V43, V45, V44, V42, V14, V16, V14, V15, V16, V44)), fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V43 | V14], [V43 | V15], {'Core.Unify.ICons', {'Prelude.Types.Just', 0}, ('dn--un--weaken_Weaken_(IVars $vs)'(V16))}, V45)), fun (V47) -> {'Prelude.Types.Just', {'Core.TT.Bind', V42, V43, V46, V47}} end)) end)); {'Core.TT.App', V48, V49, V50} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V49)), fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V50)), fun (V52) -> {'Prelude.Types.Just', {'Core.TT.App', V48, V51, V52}} end)) end)); {'Core.TT.As', V53, V54, V55, V56} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V55)), fun (V57) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V56)), fun (V58) -> {'Prelude.Types.Just', {'Core.TT.As', V53, V54, V57, V58}} end)) end)); {'Core.TT.TDelayed', V59, V60, V61} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V61)), fun (V62) -> {'Prelude.Types.Just', {'Core.TT.TDelayed', V59, V60, V62}} end)); {'Core.TT.TDelay', V63, V64, V65, V66} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V65)), fun (V67) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V66)), fun (V68) -> {'Prelude.Types.Just', {'Core.TT.TDelay', V63, V64, V67, V68}} end)) end)); {'Core.TT.TForce', V69, V70, V71} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V71)), fun (V72) -> {'Prelude.Types.Just', {'Core.TT.TForce', V69, V70, V72}} end)); {'Core.TT.PrimVal', V73, V74} -> {'Prelude.Types.Just', {'Core.TT.PrimVal', V73, V74}}; {'Core.TT.Erased', V75, V76} -> case V76 of {'Core.TT.Impossible'} -> {'Prelude.Types.Just', {'Core.TT.Erased', V75, {'Core.TT.Impossible'}}}; {'Core.TT.Placeholder'} -> {'Prelude.Types.Just', {'Core.TT.Erased', V75, {'Core.TT.Placeholder'}}}; {'Core.TT.Dotted', V77} -> ((begin (V83 = fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V81, V82)) end end end end), fun (V84) -> fun (V85) -> ((((V83('erased'))('erased'))(V84))(V85)) end end end(fun (V78) -> {'Core.TT.Erased', V75, {'Core.TT.Dotted', V78}} end))(('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V77)))) end; {'Core.TT.TType', V86, V87} -> {'Prelude.Types.Just', {'Core.TT.TType', V86, V87}} end.
'nested--11525-16579--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Core.Unify.ICons', V16, V17} -> case V16 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16579--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V17)), fun (V18) -> begin (V19 = V18), {'Prelude.Types.Just', (V19 + 1)} end end)); {'Prelude.Types.Just', V20} -> begin (V21 = V20), case case (V14 =:= V21) of 'false' -> 0; _ -> 1 end of 1 -> {'Prelude.Types.Just', 0}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11525-16579--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V17)), fun (V22) -> begin (V23 = V22), {'Prelude.Types.Just', (V23 + 1)} end end)) end end; _ -> {'Prelude.Types.Nothing'} end; _ -> {'Prelude.Types.Nothing'} end.
'nested--17870-22213--in--un--solveOrElsePostpone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> begin (V29 = ('un--solveHole'(V12, V11, V16, V0, V6, V9, V7, V5, V4, V3, V2, V17, V18, V26, V28, V1))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V56 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V34) -> fun (V35) -> ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(V34, V35)) end end, ((begin (V42 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V40, V41)) end end end end), fun (V43) -> fun (V44) -> ((((V42('erased'))('erased'))(V43))(V44)) end end end(fun (V36) -> fun (V37) -> {'Prelude.Types.Right', V36} end end))(V33)), fun () -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, (begin (V46 = fun (V45) -> V45 end), fun (V47) -> (V46(V47)) end end(<<"Can\x{27}t instantiate"/utf8>>)), V7, {'Core.Value.NApp', V8, {'Core.Value.NMeta', V5, V4, V3}, ((begin (V53 = fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V51, V52)) end end end end), fun (V54) -> fun (V55) -> ((((V53('erased'))('erased'))(V54))(V55)) end end end(fun (V48) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V48} end))(V2))}, V1)) end))), V56 end(V30)) end end end end.
'nested--14603-21145--in--un--solutionHeadSame'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Core.Value.NApp', V17, V18, V19} -> case V18 of {'Core.Value.NMeta', V20, V21, V22} -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V21, V9)); _ -> 0 end; _ -> 0 end.
'nested--14746-23551--in--un--pv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Core.Name.PV', V17, V18} -> 1; _ -> 0 end.
'nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V14 of {'Core.TT.App', V16, V17, V18} -> case V15 of 0 -> 0; _ -> begin (V19 = (V15 - 1)), case ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17, V19)) of 1 -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V18, V19)); 0 -> 0 end end end; {'Core.TT.Bind', V20, V21, V22, V23} -> case V15 of 0 -> 0; _ -> begin (V24 = (V15 - 1)), case ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, ('Idris.Idris2.Core.TT':'un--binderType'(V22)), V24)) of 1 -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V23, V24)); 0 -> 0 end end end; {'Core.TT.Meta', V25, V26, V27, V28} -> 0; {'Core.TT.TDelayed', V29, V30, V31} -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V31, V15)); {'Core.TT.TDelay', V32, V33, V34, V35} -> case ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V34, V15)) of 1 -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V35, V15)); 0 -> 0 end; {'Core.TT.TForce', V36, V37, V38} -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V38, V15)); {'Core.TT.As', V39, V40, V41, V42} -> case ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V41, V15)) of 1 -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V42, V15)); 0 -> 0 end; {'Core.TT.Local', V43, V44, V45} -> 1; {'Core.TT.Ref', V46, V47, V48} -> 1; {'Core.TT.PrimVal', V49, V50} -> 1; {'Core.TT.TType', V51, V52} -> 1; _ -> 0 end.
'nested--11525-16581--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V16 of [E0 | E1] -> (fun (V20, V21) -> case V19 of {'Core.TT.Bind', V22, V23, V24, V25} -> case V24 of {'Core.TT.Pi', V26, V27, V28, V29} -> begin (V30 = ('nested--11525-16581--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V23 | V14], V15, V21, {'Core.Unify.ICons', {'Prelude.Types.Just', V20}, V17}, V18, V25))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V44 = fun (V35) -> {'Prelude.Types.Right', ((begin (V41 = fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V39, V40)) end end end end), fun (V42) -> fun (V43) -> ((((V41('erased'))('erased'))(V42))(V43)) end end end(fun (V36) -> {'Core.TT.Bind', V22, V23, {'Core.TT.Lam', V26, V27, {'Core.TT.Explicit'}, {'Core.TT.Erased', V22, {'Core.TT.Placeholder'}}}, V36} end))(V34))} end), V44 end(V31)) end end end end; _ -> case V19 of {'Core.TT.Bind', V45, V46, V47, V48} -> case V47 of {'Core.TT.Let', V49, V50, V51, V52} -> begin (V53 = ('nested--11525-16581--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V46 | V14], V15, V16, {'Core.Unify.ICons', {'Prelude.Types.Nothing'}, V17}, V18, V48))), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V85 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V58) -> fun (V59) -> case V59 of {'Prelude.Types.Nothing'} -> fun (V60) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V61} -> begin (V62 = (V58(V61))), ((begin (V78 = fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V75, V76, V77)) end end end end end), fun (V79) -> fun (V80) -> ((((V78('erased'))('erased'))(V79))(V80)) end end end((begin (V70 = fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> {'Prelude.Types.Right', (V66(V69))} end end end end end), fun (V71) -> fun (V72) -> ((((V70('erased'))('erased'))(V71))(V72)) end end end(fun (V63) -> {'Prelude.Types.Just', V63} end))))(V62)) end end end end, V57, fun (V81) -> begin (V82 = {'Core.TT.Let', V49, V50, V51, V52}), fun (V83) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V81, {'Core.TT.DropCons', {'Core.TT.SubRefl'}})) of {'Prelude.Types.Just', V84} -> {'Prelude.Types.Right', V84}; {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Core.TT.Bind', V45, V46, V82, V81}} end end end end))), V85 end(V54)) end end end end; _ -> case V16 of [] -> fun (V86) -> case ('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Prelude.Types.Just', V87} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V87}}; {'Prelude.Types.Nothing'} -> ('un--ufail'(V11, <<<<"Can\x{27}t make solution for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V88) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V89) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V90) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V90)) end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V91, V92)) end end}, V89)) end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V95) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V95)) end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V96, V97)) end end}, V93, V94)) end end}, V88)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V100) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V101) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V101)) end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V102, V103)) end end}, V100)) end, fun (V104) -> fun (V105) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V106) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V106)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V107, V108)) end end}, V104, V105)) end end}, V98, V99)) end end}, {'Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V109)) end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V110, V111)) end end}}, {'Builtin.MkPair', ('un--getIVars'(V17)), V18}))/binary>>/binary>>/binary>>, V86)) end end; _ -> fun (V112) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end; _ -> case V16 of [] -> fun (V113) -> case ('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Prelude.Types.Just', V114} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V114}}; {'Prelude.Types.Nothing'} -> ('un--ufail'(V11, <<<<"Can\x{27}t make solution for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V115) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V116) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V117) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V117)) end, fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V118, V119)) end end}, V116)) end, fun (V120) -> fun (V121) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V122) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V122)) end, fun (V123) -> fun (V124) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V123, V124)) end end}, V120, V121)) end end}, V115)) end, fun (V125) -> fun (V126) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V127) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V128) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V128)) end, fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V129, V130)) end end}, V127)) end, fun (V131) -> fun (V132) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V133) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V133)) end, fun (V134) -> fun (V135) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V134, V135)) end end}, V131, V132)) end end}, V125, V126)) end end}, {'Prelude.Show.MkShow', fun (V136) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V136)) end, fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V137, V138)) end end}}, {'Builtin.MkPair', ('un--getIVars'(V17)), V18}))/binary>>/binary>>/binary>>, V113)) end end; _ -> fun (V139) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end end; _ -> case V19 of {'Core.TT.Bind', V140, V141, V142, V143} -> case V142 of {'Core.TT.Let', V144, V145, V146, V147} -> begin (V148 = ('nested--11525-16581--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V141 | V14], V15, V16, {'Core.Unify.ICons', {'Prelude.Types.Nothing'}, V17}, V18, V143))), fun (V149) -> begin (V150 = (V148(V149))), case V150 of {'Prelude.Types.Left', V151} -> {'Prelude.Types.Left', V151}; {'Prelude.Types.Right', V152} -> (begin (V180 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V153) -> fun (V154) -> case V154 of {'Prelude.Types.Nothing'} -> fun (V155) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V156} -> begin (V157 = (V153(V156))), ((begin (V173 = fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V170, V171, V172)) end end end end end), fun (V174) -> fun (V175) -> ((((V173('erased'))('erased'))(V174))(V175)) end end end((begin (V165 = fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> case V162 of {'Prelude.Types.Left', V163} -> {'Prelude.Types.Left', V163}; {'Prelude.Types.Right', V164} -> {'Prelude.Types.Right', (V161(V164))} end end end end end), fun (V166) -> fun (V167) -> ((((V165('erased'))('erased'))(V166))(V167)) end end end(fun (V158) -> {'Prelude.Types.Just', V158} end))))(V157)) end end end end, V152, fun (V176) -> begin (V177 = {'Core.TT.Let', V144, V145, V146, V147}), fun (V178) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V176, {'Core.TT.DropCons', {'Core.TT.SubRefl'}})) of {'Prelude.Types.Just', V179} -> {'Prelude.Types.Right', V179}; {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Core.TT.Bind', V140, V141, V177, V176}} end end end end))), V180 end(V149)) end end end end; _ -> case V16 of [] -> fun (V181) -> case ('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Prelude.Types.Just', V182} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V182}}; {'Prelude.Types.Nothing'} -> ('un--ufail'(V11, <<<<"Can\x{27}t make solution for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V183) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V184) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V185) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V185)) end, fun (V186) -> fun (V187) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V186, V187)) end end}, V184)) end, fun (V188) -> fun (V189) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V190) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V190)) end, fun (V191) -> fun (V192) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V191, V192)) end end}, V188, V189)) end end}, V183)) end, fun (V193) -> fun (V194) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V195) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V196) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V196)) end, fun (V197) -> fun (V198) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V197, V198)) end end}, V195)) end, fun (V199) -> fun (V200) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V201) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V201)) end, fun (V202) -> fun (V203) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V202, V203)) end end}, V199, V200)) end end}, V193, V194)) end end}, {'Prelude.Show.MkShow', fun (V204) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V204)) end, fun (V205) -> fun (V206) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V205, V206)) end end}}, {'Builtin.MkPair', ('un--getIVars'(V17)), V18}))/binary>>/binary>>/binary>>, V181)) end end; _ -> fun (V207) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end; _ -> case V16 of [] -> fun (V208) -> case ('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Prelude.Types.Just', V209} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V209}}; {'Prelude.Types.Nothing'} -> ('un--ufail'(V11, <<<<"Can\x{27}t make solution for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V210) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V211) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V212) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V212)) end, fun (V213) -> fun (V214) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V213, V214)) end end}, V211)) end, fun (V215) -> fun (V216) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V217) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V217)) end, fun (V218) -> fun (V219) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V218, V219)) end end}, V215, V216)) end end}, V210)) end, fun (V220) -> fun (V221) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V222) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V223) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V223)) end, fun (V224) -> fun (V225) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V224, V225)) end end}, V222)) end, fun (V226) -> fun (V227) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V228) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V228)) end, fun (V229) -> fun (V230) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V229, V230)) end end}, V226, V227)) end end}, V220, V221)) end end}, {'Prelude.Show.MkShow', fun (V231) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V231)) end, fun (V232) -> fun (V233) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V232, V233)) end end}}, {'Builtin.MkPair', ('un--getIVars'(V17)), V18}))/binary>>/binary>>/binary>>, V208)) end end; _ -> fun (V234) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end end end(E0, E1)); _ -> case V19 of {'Core.TT.Bind', V235, V236, V237, V238} -> case V237 of {'Core.TT.Let', V239, V240, V241, V242} -> begin (V243 = ('nested--11525-16581--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V236 | V14], V15, V16, {'Core.Unify.ICons', {'Prelude.Types.Nothing'}, V17}, V18, V238))), fun (V244) -> begin (V245 = (V243(V244))), case V245 of {'Prelude.Types.Left', V246} -> {'Prelude.Types.Left', V246}; {'Prelude.Types.Right', V247} -> (begin (V275 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V248) -> fun (V249) -> case V249 of {'Prelude.Types.Nothing'} -> fun (V250) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V251} -> begin (V252 = (V248(V251))), ((begin (V268 = fun (V263) -> fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V265, V266, V267)) end end end end end), fun (V269) -> fun (V270) -> ((((V268('erased'))('erased'))(V269))(V270)) end end end((begin (V260 = fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> case V257 of {'Prelude.Types.Left', V258} -> {'Prelude.Types.Left', V258}; {'Prelude.Types.Right', V259} -> {'Prelude.Types.Right', (V256(V259))} end end end end end), fun (V261) -> fun (V262) -> ((((V260('erased'))('erased'))(V261))(V262)) end end end(fun (V253) -> {'Prelude.Types.Just', V253} end))))(V252)) end end end end, V247, fun (V271) -> begin (V272 = {'Core.TT.Let', V239, V240, V241, V242}), fun (V273) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V271, {'Core.TT.DropCons', {'Core.TT.SubRefl'}})) of {'Prelude.Types.Just', V274} -> {'Prelude.Types.Right', V274}; {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Core.TT.Bind', V235, V236, V272, V271}} end end end end))), V275 end(V244)) end end end end; _ -> case V16 of [] -> fun (V276) -> case ('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Prelude.Types.Just', V277} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V277}}; {'Prelude.Types.Nothing'} -> ('un--ufail'(V11, <<<<"Can\x{27}t make solution for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V278) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V279) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V280) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V280)) end, fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V281, V282)) end end}, V279)) end, fun (V283) -> fun (V284) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V285) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V285)) end, fun (V286) -> fun (V287) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V286, V287)) end end}, V283, V284)) end end}, V278)) end, fun (V288) -> fun (V289) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V290) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V291) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V291)) end, fun (V292) -> fun (V293) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V292, V293)) end end}, V290)) end, fun (V294) -> fun (V295) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V296) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V296)) end, fun (V297) -> fun (V298) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V297, V298)) end end}, V294, V295)) end end}, V288, V289)) end end}, {'Prelude.Show.MkShow', fun (V299) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V299)) end, fun (V300) -> fun (V301) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V300, V301)) end end}}, {'Builtin.MkPair', ('un--getIVars'(V17)), V18}))/binary>>/binary>>/binary>>, V276)) end end; _ -> fun (V302) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end; _ -> case V16 of [] -> fun (V303) -> case ('nested--11525-16580--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Prelude.Types.Just', V304} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V304}}; {'Prelude.Types.Nothing'} -> ('un--ufail'(V11, <<<<"Can\x{27}t make solution for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V305) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V306) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V307) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V307)) end, fun (V308) -> fun (V309) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V308, V309)) end end}, V306)) end, fun (V310) -> fun (V311) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V312) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V312)) end, fun (V313) -> fun (V314) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V313, V314)) end end}, V310, V311)) end end}, V305)) end, fun (V315) -> fun (V316) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V317) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V318) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V318)) end, fun (V319) -> fun (V320) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V319, V320)) end end}, V317)) end, fun (V321) -> fun (V322) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V323) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V323)) end, fun (V324) -> fun (V325) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V324, V325)) end end}, V321, V322)) end end}, V315, V316)) end end}, {'Prelude.Show.MkShow', fun (V326) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V326)) end, fun (V327) -> fun (V328) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V327, V328)) end end}}, {'Builtin.MkPair', ('un--getIVars'(V17)), V18}))/binary>>/binary>>/binary>>, V303)) end end; _ -> fun (V329) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end end.
'nested--14746-23552--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of [] -> fun (V17) -> {'Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V18, V19) -> begin (V25 = begin (V20 = V15), fun (V21) -> begin (V24 = (begin (V22 = V20), fun (V23) -> ('erlang':'get'(V22)) end end(V21))), {'Prelude.Types.Right', V24} end end end), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V48 = begin (V30 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V15, V0, V29, V18))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V47 = case V34 of {'Core.Value.NApp', V35, V36, V37} -> case V36 of {'Core.Value.NLocal', V38, V39} -> begin (V40 = ('nested--14746-23552--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V46 = fun (V45) -> {'Prelude.Types.Right', (V44 + 1)} end), V46 end(V41)) end end end end; _ -> ('nested--14746-23552--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19)) end; _ -> ('nested--14746-23552--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19)) end), V47 end(V31)) end end end end), V48 end(V26)) end end end end end(E0, E1)) end.
'nested--11525-16578--in--un--isSimple'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Core.TT.Meta', V15, V16, V17, V18} -> 1; {'Core.TT.Bind', V19, V20, V21, V22} -> case V21 of {'Core.TT.Lam', V23, V24, V25, V26} -> ('nested--11525-16578--in--un--isSimple'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V22)); _ -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, 0)) end; {'Core.TT.App', V27, V28, V29} -> case ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V28, 6)) of 1 -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V29, 3)); 0 -> 0 end; _ -> ('nested--11525-16577--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, 0)) end.
'nested--14517-20783--in--un--isPatName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Core.Name.PV', V18, V19} -> 1; _ -> 0 end.
'nested--14870-25978--in--un--isDelay'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Core.Value.NDelayed', V9, V10, V11} -> 1; _ -> 0 end.
'nested--14603-21144--in--un--inNoSolve'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case ('Idris.Idris2.Libraries.Data.IntMap':'un--lookup'(V16, V17)) of {'Prelude.Types.Nothing'} -> 0; {'Prelude.Types.Just', V18} -> 1 end.
'nested--9894-15099--in--un--inArgs'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> 0; [E0 | E1] -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Integer'(V6, V8)) of 1 -> 1; 0 -> ('nested--9894-15099--in--un--inArgs'(V0, V1, V2, V3, V4, V5, V6, V9)) end end(E0, E1)) end.
'nested--27890-31218--in--un--getHoleName'(V0, V1, V2) -> begin (V8 = begin (V3 = V0), fun (V4) -> begin (V7 = (begin (V5 = V3), fun (V6) -> ('erlang':'get'(V5)) end end(V4))), {'Prelude.Types.Right', V7} end end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V26 = begin (V13 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V0, [], V12, {'Core.Env.Nil'}, V2))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V25 = fun (V18) -> case V17 of {'Core.Value.NApp', V19, V20, V21} -> case V20 of {'Core.Value.NMeta', V22, V23, V24} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V22}}; _ -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; _ -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end), V25 end(V14)) end end end end), V26 end(V9)) end end end end.
'nested--10817-15905--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Core.TT.Meta', V10, V11, V12, V13} -> case case V7 of 1 -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V2)); 0 -> 0 end of 1 -> V8; 0 -> fun (V14) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; _ -> ('case--occursCheck,failOnStrongRigid-15999'(V0, V1, V2, V3, V4, V5, V6, V9, V8, V7, ('Idris.Idris2.Core.TT':'un--getFnArgs'(V9)))) end.
'nested--27393-30770--in--un--constraintToHole'(V0, V1, V2) -> case V2 of {'Builtin.MkPair', V3, V4} -> case V4 of {'Builtin.MkPair', V5, V6} -> begin (V12 = begin (V7 = V1), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V66 = begin (V49 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Core.Name.Resolved', V3}, case V16 of {'Core.Context.MkDefs', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48} -> V17 end))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V65 = case V53 of {'Prelude.Types.Just', V54} -> case V54 of {'Core.Context.Context.BySearch', V55, V56, V57} -> ('Idris.Idris2.Core.Context':'un--updateDef'(V1, {'Core.Name.Resolved', V3}, fun (V58) -> {'Prelude.Types.Just', {'Core.Context.Context.Hole', 0, ('Idris.Idris2.Core.Context.Context':'un--holeInit'(0))}} end)); {'Core.Context.Context.Guess', V59, V60, V61} -> ('Idris.Idris2.Core.Context':'un--updateDef'(V1, {'Core.Name.Resolved', V3}, fun (V62) -> {'Prelude.Types.Just', {'Core.Context.Context.Hole', 0, ('Idris.Idris2.Core.Context.Context':'un--holeInit'(0))}} end)); _ -> fun (V63) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; _ -> fun (V64) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V65 end(V50)) end end end end), V66 end(V13)) end end end end end end.
'nested--9220-14462--in--un--checkDefined'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Core.Value.NApp', V11, V12, V13} -> case V12 of {'Core.Value.NRef', V14, V15} -> begin (V48 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V15, case V9 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> V16 end))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V55 = case V52 of {'Prelude.Types.Just', V53} -> fun (V54) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; _ -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V8, V6, V15)) end), V55 end(V49)) end end end end; _ -> fun (V56) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; _ -> fun (V57) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end.
'nested--27890-31219--in--un--checkConstraint'(V0, V1, V2) -> case V2 of {'Builtin.MkPair', V3, V4} -> case V4 of {'Builtin.MkPair', V5, V6} -> case V6 of {'Core.UnifyState.MkConstraint', V7, V8, V9, V10, V11, V12} -> begin (V18 = begin (V13 = V0), fun (V14) -> begin (V17 = (begin (V15 = V13), fun (V16) -> ('erlang':'get'(V15)) end end(V14))), {'Prelude.Types.Right', V17} end end end), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V347 = begin (V23 = ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V7, V22, V10, V11))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V346 = begin (V28 = ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V7, V22, V10, V12))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V345 = begin (V33 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V7, V0, <<"unify.constraint"/utf8>>, 10, fun () -> <<"Dot"/utf8>> end, V10, V32))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V344 = begin (V38 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V7, V0, <<"unify.constraint"/utf8>>, 10, fun () -> <<"  ="/utf8>> end, V10, V27))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V343 = begin (V48 = begin (V43 = V1), fun (V44) -> begin (V47 = (begin (V45 = V43), fun (V46) -> ('erlang':'get'(V45)) end end(V44))), {'Prelude.Types.Right', V47} end end end), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V342 = ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V0, V1, begin (V58 = begin (V53 = V0), fun (V54) -> begin (V57 = (begin (V55 = V53), fun (V56) -> ('erlang':'get'(V55)) end end(V54))), {'Prelude.Types.Right', V57} end end end), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V210 = begin (V95 = ('Idris.Idris2.Core.Context':'un--getPosition'(V3, case V62 of {'Core.Context.MkDefs', V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94} -> V63 end))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V209 = case V99 of {'Builtin.MkPair', V100, V101} -> begin (V102 = ('nested--27890-31218--in--un--getHoleName'(V0, V1, {'Core.TT.Meta', V8, V3, V100, []}))), fun (V103) -> begin (V104 = (V102(V103))), case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> (begin (V208 = begin (V123 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> ('dn--un--unifyD_Unify_NF'(V107, V108, V109, V110, V111, V112, V113, V114)) end end end end end end end end, fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> ('dn--un--unifyWithLazyD_Unify_NF'(V115, V116, V117, V118, V119, V120, V121, V122)) end end end end end end end end}, V7, V0, V1, ('un--inMatch'()), V8, V10))(V27))(V32))), fun (V124) -> begin (V125 = (V123(V124))), case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> (begin (V207 = begin (V133 = begin (V128 = V0), fun (V129) -> begin (V132 = (begin (V130 = V128), fun (V131) -> ('erlang':'get'(V130)) end end(V129))), {'Prelude.Types.Right', V132} end end end), fun (V134) -> begin (V135 = (V133(V134))), case V135 of {'Prelude.Types.Left', V136} -> {'Prelude.Types.Left', V136}; {'Prelude.Types.Right', V137} -> (begin (V206 = begin (V182 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V138) -> {'Prelude.Types.Right', 0} end end, fun () -> fun (V139) -> begin (V172 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V139, case V137 of {'Core.Context.MkDefs', V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171} -> V140 end))), fun (V173) -> begin (V174 = (V172(V173))), case V174 of {'Prelude.Types.Left', V175} -> {'Prelude.Types.Left', V175}; {'Prelude.Types.Right', V176} -> (begin (V181 = case V176 of {'Prelude.Types.Just', V177} -> fun (V178) -> {'Prelude.Types.Right', case V177 of {'Core.Context.Context.Hole', V179, V180} -> 0; _ -> 1 end} end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V8, V139)) end), V181 end(V173)) end end end end end end, V106))), fun (V183) -> begin (V184 = (V182(V183))), case V184 of {'Prelude.Types.Left', V185} -> {'Prelude.Types.Left', V185}; {'Prelude.Types.Right', V186} -> (begin (V205 = begin (V191 = ('un--checkArgsSame'(V1, V0, case V127 of {'Core.Unify.MkUnifyResult', V187, V188, V189, V190} -> V189 end))), fun (V192) -> begin (V193 = (V191(V192))), case V193 of {'Prelude.Types.Left', V194} -> {'Prelude.Types.Left', V194}; {'Prelude.Types.Right', V195} -> (begin (V204 = fun (V196) -> case case ('Idris.Idris2.Data.List':'un--isNil'(case V127 of {'Core.Unify.MkUnifyResult', V197, V198, V199, V200} -> V197 end)) of 1 -> case V186 of 1 -> 1; 0 -> V195 end; 0 -> 1 end of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', (begin (V202 = fun (V201) -> V201 end), fun (V203) -> (V202(V203)) end end(<<"Dot pattern match fail"/utf8>>))}, V196)); 0 -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V204 end(V192)) end end end end), V205 end(V183)) end end end end), V206 end(V134)) end end end end), V207 end(V124)) end end end end), V208 end(V103)) end end end end end), V209 end(V96)) end end end end), V210 end(V59)) end end end end, fun (V211) -> case V211 of {'Core.Core.InternalError', V212} -> begin (V218 = begin (V213 = V0), fun (V214) -> begin (V217 = (begin (V215 = V213), fun (V216) -> ('erlang':'get'(V215)) end end(V214))), {'Prelude.Types.Right', V217} end end end), fun (V219) -> begin (V220 = (V218(V219))), case V220 of {'Prelude.Types.Left', V221} -> {'Prelude.Types.Left', V221}; {'Prelude.Types.Right', V222} -> (begin (V317 = begin (V255 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V3, case V222 of {'Core.Context.MkDefs', V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254} -> V223 end))), fun (V256) -> begin (V257 = (V255(V256))), case V257 of {'Prelude.Types.Left', V258} -> {'Prelude.Types.Left', V258}; {'Prelude.Types.Right', V259} -> (begin (V316 = case V259 of {'Prelude.Types.Just', V260} -> begin (V267 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V0, (begin (V262 = fun (V261) -> V261 end), fun (V263) -> (V262(V263)) end end(<<"unify.constraint"/utf8>>)), 5, fun () -> (begin (V265 = fun (V264) -> V264 end), fun (V266) -> (V265(V266)) end end(<<"Dot type"/utf8>>)) end, {'Core.Env.Nil'}, V260))), fun (V268) -> begin (V269 = (V267(V268))), case V269 of {'Prelude.Types.Left', V270} -> {'Prelude.Types.Left', V270}; {'Prelude.Types.Right', V271} -> (begin (V315 = begin (V289 = begin (V272 = V1), fun (V273) -> begin (V288 = (begin (V274 = V272), fun (V275) -> ('erlang':'put'(V274, case V52 of {'Core.UnifyState.MkUState', V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287} -> {'Core.UnifyState.MkUState', V276, V277, V278, V279, V280, V281, V282, [], V284, V285, V286, V287} end)) end end(V273))), {'Prelude.Types.Right', V288} end end end), fun (V290) -> begin (V291 = (V289(V290))), case V291 of {'Prelude.Types.Left', V292} -> {'Prelude.Types.Left', V292}; {'Prelude.Types.Right', V293} -> (begin (V314 = begin (V295 = fun (V294) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V222, V294)) end), fun (V296) -> begin (V297 = (V295(V296))), case V297 of {'Prelude.Types.Left', V298} -> {'Prelude.Types.Left', V298}; {'Prelude.Types.Right', V299} -> (begin (V313 = begin (V300 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V7, V299, V10, V27))), fun (V301) -> begin (V302 = (V300(V301))), case V302 of {'Prelude.Types.Left', V303} -> {'Prelude.Types.Left', V303}; {'Prelude.Types.Right', V304} -> (begin (V312 = begin (V305 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V7, V299, V10, V32))), fun (V306) -> begin (V307 = (V305(V306))), case V307 of {'Prelude.Types.Left', V308} -> {'Prelude.Types.Left', V308}; {'Prelude.Types.Right', V309} -> (begin (V311 = fun (V310) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.BadDotPattern', V7, V8, V10, V5, V304, V309}, V310)) end), V311 end(V306)) end end end end), V312 end(V301)) end end end end), V313 end(V296)) end end end end), V314 end(V290)) end end end end), V315 end(V268)) end end end end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V8, V3)) end), V316 end(V256)) end end end end), V317 end(V219)) end end end end; _ -> begin (V335 = begin (V318 = V1), fun (V319) -> begin (V334 = (begin (V320 = V318), fun (V321) -> ('erlang':'put'(V320, case V52 of {'Core.UnifyState.MkUState', V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333} -> {'Core.UnifyState.MkUState', V322, V323, V324, V325, V326, V327, V328, [], V330, V331, V332, V333} end)) end end(V319))), {'Prelude.Types.Right', V334} end end end), fun (V336) -> begin (V337 = (V335(V336))), case V337 of {'Prelude.Types.Left', V338} -> {'Prelude.Types.Left', V338}; {'Prelude.Types.Right', V339} -> (begin (V341 = fun (V340) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'(V211, V340)) end), V341 end(V336)) end end end end end end))), V342 end(V49)) end end end end), V343 end(V39)) end end end end), V344 end(V34)) end end end end), V345 end(V29)) end end end end), V346 end(V24)) end end end end), V347 end(V19)) end end end end; _ -> fun (V348) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; _ -> fun (V349) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; _ -> fun (V350) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end.
'nested--27544-30925--in--un--anySame'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> {'Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V7, V8) -> begin (V14 = begin (V9 = V2), fun (V10) -> begin (V13 = (begin (V11 = V9), fun (V12) -> ('erlang':'get'(V11)) end end(V10))), {'Prelude.Types.Right', V13} end end end), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V72 = begin (V51 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Core.Name.Resolved', V7}, case V18 of {'Core.Context.MkDefs', V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50} -> V19 end))), fun (V52) -> begin (V53 = (V51(V52))), case V53 of {'Prelude.Types.Left', V54} -> {'Prelude.Types.Left', V54}; {'Prelude.Types.Right', V55} -> (begin (V71 = case V55 of {'Prelude.Types.Just', V56} -> case V56 of {'Core.Context.Context.PMDef', V57, V58, V59, V60, V61} -> case V58 of [] -> case V59 of {'Core.Case.CaseTree.STerm', V62, V63} -> case V62 of 0 -> begin (V64 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_Term'(V2, [], V18, {'Core.Env.Nil'}, V4, V63))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V70 = case V68 of 1 -> fun (V69) -> {'Prelude.Types.Right', 1} end; 0 -> ('nested--27544-30925--in--un--anySame'(V0, V1, V2, V3, V4, V8)) end), V70 end(V65)) end end end end; _ -> ('nested--27544-30925--in--un--anySame'(V0, V1, V2, V3, V4, V8)) end; _ -> ('nested--27544-30925--in--un--anySame'(V0, V1, V2, V3, V4, V8)) end; _ -> ('nested--27544-30925--in--un--anySame'(V0, V1, V2, V3, V4, V8)) end; _ -> ('nested--27544-30925--in--un--anySame'(V0, V1, V2, V3, V4, V8)) end; _ -> ('nested--27544-30925--in--un--anySame'(V0, V1, V2, V3, V4, V8)) end), V71 end(V52)) end end end end), V72 end(V15)) end end end end end(E0, E1)) end.
'nested--10059-15226--in--un--anyFirst'(V0, V1, V2, V3) -> case V3 of [] -> 0; [E0 | E1] -> (fun (V4, V5) -> begin (V6 = V4), case V6 of 0 -> 1; _ -> ('nested--10059-15226--in--un--anyFirst'(V0, V1, V2, V5)) end end end(E0, E1)) end.
'nested--27313-30703--in--un--afterStart'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Builtin.MkPair', V6, V7} -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V6, V2)) end.
'dn--un--weaken_Weaken_(IVars $vs)'(V0) -> case V0 of {'Core.Unify.INil'} -> {'Core.Unify.INil'}; {'Core.Unify.ICons', V1, V2} -> case V1 of {'Prelude.Types.Nothing'} -> {'Core.Unify.ICons', {'Prelude.Types.Nothing'}, ('dn--un--weaken_Weaken_(IVars $vs)'(V2))}; {'Prelude.Types.Just', V3} -> {'Core.Unify.ICons', {'Prelude.Types.Just', ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Var'(V3))}, ('dn--un--weaken_Weaken_(IVars $vs)'(V2))} end end.
'dn--un--unifyWithLazyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V13 = begin (V8 = V1), fun (V9) -> begin (V12 = (begin (V10 = V8), fun (V11) -> ('erlang':'get'(V10)) end end(V9))), {'Prelude.Types.Right', V12} end end end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V60 = begin (V19 = fun (V18) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V17, V18)) end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V59 = case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_(Term $vars)'(V6, V7)) of 1 -> begin (V24 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.equal"/utf8>>, 10, fun () -> <<<<"Skipped unification (equal already): "/utf8>>/binary, <<('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V6))/binary, <<<<" and "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V7))/binary>>/binary>>/binary>> end))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V30 = fun (V29) -> {'Prelude.Types.Right', ('un--success'())} end), V30 end(V25)) end end end end; 0 -> begin (V31 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V17, V5, V6))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V58 = begin (V36 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V17, V5, V7))), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V57 = ((('un--unifyWithLazy'({'Core.Unify.dn--un--__mkUnify', fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('dn--un--unifyD_Unify_NF'(V41, V42, V43, V44, V45, V46, V47, V48)) end end end end end end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('dn--un--unifyWithLazyD_Unify_NF'(V49, V50, V51, V52, V53, V54, V55, V56)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V35))(V40))), V57 end(V37)) end end end end), V58 end(V32)) end end end end end), V59 end(V20)) end end end end), V60 end(V14)) end end end end.
'dn--un--unifyWithLazyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Core.Value.NDelayed', V8, V9, V10} -> case V7 of {'Core.Value.NDelayed', V11, V12, V13} -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('dn--un--unifyD_Unify_NF'(V14, V15, V16, V17, V18, V19, V20, V21)) end end end end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('dn--un--unifyWithLazyD_Unify_NF'(V22, V23, V24, V25, V26, V27, V28, V29)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V10))(V13)); _ -> begin (V30 = {'Core.Value.NDelayed', V8, V9, V10}), case case ('un--isHoleApp'(V7)) of 1 -> case ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V31, V32} -> V32 end, 2)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--postpone'(V0, V1, V2, V4, V3, <<"Postponing in lazy"/utf8>>, V5, V30, V7)); 0 -> begin (V49 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('dn--un--unifyD_Unify_NF'(V33, V34, V35, V36, V37, V38, V39, V40)) end end end end end end end end, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('dn--un--unifyWithLazyD_Unify_NF'(V41, V42, V43, V44, V45, V46, V47, V48)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V10))(V7))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V59 = fun (V54) -> {'Prelude.Types.Right', case V53 of {'Core.Unify.MkUnifyResult', V55, V56, V57, V58} -> {'Core.Unify.MkUnifyResult', V55, V56, V57, {'Core.Unify.AddForce', V9}} end} end), V59 end(V50)) end end end end end end end; _ -> case V7 of {'Core.Value.NDelayed', V60, V61, V62} -> begin (V79 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('dn--un--unifyD_Unify_NF'(V63, V64, V65, V66, V67, V68, V69, V70)) end end end end end end end end, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> ('dn--un--unifyWithLazyD_Unify_NF'(V71, V72, V73, V74, V75, V76, V77, V78)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V6))(V62))), fun (V80) -> begin (V81 = (V79(V80))), case V81 of {'Prelude.Types.Left', V82} -> {'Prelude.Types.Left', V82}; {'Prelude.Types.Right', V83} -> (begin (V89 = fun (V84) -> {'Prelude.Types.Right', case V83 of {'Core.Unify.MkUnifyResult', V85, V86, V87, V88} -> {'Core.Unify.MkUnifyResult', V85, V86, V87, {'Core.Unify.AddDelay', V61}} end} end), V89 end(V80)) end end end end; _ -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('dn--un--unifyD_Unify_NF'(V90, V91, V92, V93, V94, V95, V96, V97)) end end end end end end end end, fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> ('dn--un--unifyWithLazyD_Unify_NF'(V98, V99, V100, V101, V102, V103, V104, V105)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V6))(V7)) end end.
'dn--un--unifyWithLazyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7)).
'dn--un--unifyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V13 = begin (V8 = V1), fun (V9) -> begin (V12 = (begin (V10 = V8), fun (V11) -> ('erlang':'get'(V10)) end end(V9))), {'Prelude.Types.Right', V12} end end end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V60 = begin (V19 = fun (V18) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V17, V18)) end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V59 = case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_(Term $vars)'(V6, V7)) of 1 -> begin (V24 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.equal"/utf8>>, 10, fun () -> <<<<"Skipped unification (equal already): "/utf8>>/binary, <<('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V6))/binary, <<<<" and "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V7))/binary>>/binary>>/binary>> end))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V30 = fun (V29) -> {'Prelude.Types.Right', ('un--success'())} end), V30 end(V25)) end end end end; 0 -> begin (V31 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V17, V5, V6))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V58 = begin (V36 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V17, V5, V7))), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V57 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('dn--un--unifyD_Unify_NF'(V41, V42, V43, V44, V45, V46, V47, V48)) end end end end end end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('dn--un--unifyWithLazyD_Unify_NF'(V49, V50, V51, V52, V53, V54, V55, V56)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V35))(V40))), V57 end(V37)) end end end end), V58 end(V32)) end end end end end), V59 end(V20)) end end end end), V60 end(V14)) end end end end.
'dn--un--unifyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Core.Value.NBind', V8, V9, V10, V11} -> case V7 of {'Core.Value.NBind', V12, V13, V14, V15} -> ('un--unifyBothBinders'(V1, V2, V0, V3, V4, V5, V8, V9, V10, V11, V12, V13, V14, V15)); _ -> case V10 of {'Core.TT.Lam', V16, V17, V18, V19} -> begin (V25 = begin (V20 = V1), fun (V21) -> begin (V24 = (begin (V22 = V20), fun (V23) -> ('erlang':'get'(V22)) end end(V21))), {'Prelude.Types.Right', V24} end end end), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V103 = begin (V33 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> (begin (V31 = fun (V30) -> V30 end), fun (V32) -> (V31(V32)) end end(<<"EtaR"/utf8>>)) end, V5, V6))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V102 = begin (V41 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> (begin (V39 = fun (V38) -> V38 end), fun (V40) -> (V39(V40)) end end(<<"...with"/utf8>>)) end, V5, V7))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V101 = begin (V46 = {'Core.Value.NBind', V8, V9, {'Core.TT.Lam', V16, V17, V18, V19}, V11}), case ('un--isHoleApp'(V7)) of 1 -> begin (V47 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V1, V0, V29, V5, V46, V7))), fun (V48) -> begin (V49 = (V47(V48))), case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> (begin (V53 = case V51 of 1 -> fun (V52) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V46, V7)) end), V53 end(V48)) end end end end; 0 -> begin (V55 = fun (V54) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V29, V54)) end), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V100 = begin (V60 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1, V0, V59, V5, V19))), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V99 = begin (V71 = begin (V65 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V59, V5, V7))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V70 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V29, V5, {'Core.TT.Bind', V8, V9, {'Core.TT.Lam', V16, V17, {'Core.TT.Explicit'}, V64}, {'Core.TT.App', V8, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V69)), {'Core.TT.Local', V8, {'Prelude.Types.Nothing'}, 0}}}))), V70 end(V66)) end end end end), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V98 = begin (V76 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> <<"Expand"/utf8>> end, V5, V75))), fun (V77) -> begin (V78 = (V76(V77))), case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> (begin (V97 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('dn--un--unifyD_Unify_NF'(V81, V82, V83, V84, V85, V86, V87, V88)) end end end end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> ('dn--un--unifyWithLazyD_Unify_NF'(V89, V90, V91, V92, V93, V94, V95, V96)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V46))(V75))), V97 end(V77)) end end end end), V98 end(V72)) end end end end), V99 end(V61)) end end end end), V100 end(V56)) end end end end end end), V101 end(V42)) end end end end), V102 end(V34)) end end end end), V103 end(V26)) end end end end; _ -> case V7 of {'Core.Value.NBind', V104, V105, V106, V107} -> case V106 of {'Core.TT.Lam', V108, V109, V110, V111} -> begin (V117 = begin (V112 = V1), fun (V113) -> begin (V116 = (begin (V114 = V112), fun (V115) -> ('erlang':'get'(V114)) end end(V113))), {'Prelude.Types.Right', V116} end end end), fun (V118) -> begin (V119 = (V117(V118))), case V119 of {'Prelude.Types.Left', V120} -> {'Prelude.Types.Left', V120}; {'Prelude.Types.Right', V121} -> (begin (V195 = begin (V125 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> (begin (V123 = fun (V122) -> V122 end), fun (V124) -> (V123(V124)) end end(<<"EtaL"/utf8>>)) end, V5, V6))), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V194 = begin (V133 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> (begin (V131 = fun (V130) -> V130 end), fun (V132) -> (V131(V132)) end end(<<"...with"/utf8>>)) end, V5, V7))), fun (V134) -> begin (V135 = (V133(V134))), case V135 of {'Prelude.Types.Left', V136} -> {'Prelude.Types.Left', V136}; {'Prelude.Types.Right', V137} -> (begin (V193 = begin (V138 = {'Core.Value.NBind', V104, V105, {'Core.TT.Lam', V108, V109, V110, V111}, V107}), case ('un--isHoleApp'(V6)) of 1 -> begin (V139 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V1, V0, V121, V5, V6, V138))), fun (V140) -> begin (V141 = (V139(V140))), case V141 of {'Prelude.Types.Left', V142} -> {'Prelude.Types.Left', V142}; {'Prelude.Types.Right', V143} -> (begin (V145 = case V143 of 1 -> fun (V144) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V6, V138)) end), V145 end(V140)) end end end end; 0 -> begin (V147 = fun (V146) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V121, V146)) end), fun (V148) -> begin (V149 = (V147(V148))), case V149 of {'Prelude.Types.Left', V150} -> {'Prelude.Types.Left', V150}; {'Prelude.Types.Right', V151} -> (begin (V192 = begin (V152 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1, V0, V151, V5, V111))), fun (V153) -> begin (V154 = (V152(V153))), case V154 of {'Prelude.Types.Left', V155} -> {'Prelude.Types.Left', V155}; {'Prelude.Types.Right', V156} -> (begin (V191 = begin (V163 = begin (V157 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V151, V5, V6))), fun (V158) -> begin (V159 = (V157(V158))), case V159 of {'Prelude.Types.Left', V160} -> {'Prelude.Types.Left', V160}; {'Prelude.Types.Right', V161} -> (begin (V162 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V121, V5, {'Core.TT.Bind', V104, V105, {'Core.TT.Lam', V108, V109, {'Core.TT.Explicit'}, V156}, {'Core.TT.App', V104, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V161)), {'Core.TT.Local', V104, {'Prelude.Types.Nothing'}, 0}}}))), V162 end(V158)) end end end end), fun (V164) -> begin (V165 = (V163(V164))), case V165 of {'Prelude.Types.Left', V166} -> {'Prelude.Types.Left', V166}; {'Prelude.Types.Right', V167} -> (begin (V190 = begin (V168 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> <<"Expand"/utf8>> end, V5, V167))), fun (V169) -> begin (V170 = (V168(V169))), case V170 of {'Prelude.Types.Left', V171} -> {'Prelude.Types.Left', V171}; {'Prelude.Types.Right', V172} -> (begin (V189 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> ('dn--un--unifyD_Unify_NF'(V173, V174, V175, V176, V177, V178, V179, V180)) end end end end end end end end, fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> ('dn--un--unifyWithLazyD_Unify_NF'(V181, V182, V183, V184, V185, V186, V187, V188)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V167))(V138))), V189 end(V169)) end end end end), V190 end(V164)) end end end end), V191 end(V153)) end end end end), V192 end(V148)) end end end end end end), V193 end(V134)) end end end end), V194 end(V126)) end end end end), V195 end(V118)) end end end end; _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end; _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end end; _ -> case V7 of {'Core.Value.NBind', V196, V197, V198, V199} -> case V198 of {'Core.TT.Lam', V200, V201, V202, V203} -> begin (V209 = begin (V204 = V1), fun (V205) -> begin (V208 = (begin (V206 = V204), fun (V207) -> ('erlang':'get'(V206)) end end(V205))), {'Prelude.Types.Right', V208} end end end), fun (V210) -> begin (V211 = (V209(V210))), case V211 of {'Prelude.Types.Left', V212} -> {'Prelude.Types.Left', V212}; {'Prelude.Types.Right', V213} -> (begin (V287 = begin (V217 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> (begin (V215 = fun (V214) -> V214 end), fun (V216) -> (V215(V216)) end end(<<"EtaL"/utf8>>)) end, V5, V6))), fun (V218) -> begin (V219 = (V217(V218))), case V219 of {'Prelude.Types.Left', V220} -> {'Prelude.Types.Left', V220}; {'Prelude.Types.Right', V221} -> (begin (V286 = begin (V225 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> (begin (V223 = fun (V222) -> V222 end), fun (V224) -> (V223(V224)) end end(<<"...with"/utf8>>)) end, V5, V7))), fun (V226) -> begin (V227 = (V225(V226))), case V227 of {'Prelude.Types.Left', V228} -> {'Prelude.Types.Left', V228}; {'Prelude.Types.Right', V229} -> (begin (V285 = begin (V230 = {'Core.Value.NBind', V196, V197, {'Core.TT.Lam', V200, V201, V202, V203}, V199}), case ('un--isHoleApp'(V6)) of 1 -> begin (V231 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V1, V0, V213, V5, V6, V230))), fun (V232) -> begin (V233 = (V231(V232))), case V233 of {'Prelude.Types.Left', V234} -> {'Prelude.Types.Left', V234}; {'Prelude.Types.Right', V235} -> (begin (V237 = case V235 of 1 -> fun (V236) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V6, V230)) end), V237 end(V232)) end end end end; 0 -> begin (V239 = fun (V238) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V213, V238)) end), fun (V240) -> begin (V241 = (V239(V240))), case V241 of {'Prelude.Types.Left', V242} -> {'Prelude.Types.Left', V242}; {'Prelude.Types.Right', V243} -> (begin (V284 = begin (V244 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1, V0, V243, V5, V203))), fun (V245) -> begin (V246 = (V244(V245))), case V246 of {'Prelude.Types.Left', V247} -> {'Prelude.Types.Left', V247}; {'Prelude.Types.Right', V248} -> (begin (V283 = begin (V255 = begin (V249 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V243, V5, V6))), fun (V250) -> begin (V251 = (V249(V250))), case V251 of {'Prelude.Types.Left', V252} -> {'Prelude.Types.Left', V252}; {'Prelude.Types.Right', V253} -> (begin (V254 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V213, V5, {'Core.TT.Bind', V196, V197, {'Core.TT.Lam', V200, V201, {'Core.TT.Explicit'}, V248}, {'Core.TT.App', V196, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V253)), {'Core.TT.Local', V196, {'Prelude.Types.Nothing'}, 0}}}))), V254 end(V250)) end end end end), fun (V256) -> begin (V257 = (V255(V256))), case V257 of {'Prelude.Types.Left', V258} -> {'Prelude.Types.Left', V258}; {'Prelude.Types.Right', V259} -> (begin (V282 = begin (V260 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 10, fun () -> <<"Expand"/utf8>> end, V5, V259))), fun (V261) -> begin (V262 = (V260(V261))), case V262 of {'Prelude.Types.Left', V263} -> {'Prelude.Types.Left', V263}; {'Prelude.Types.Right', V264} -> (begin (V281 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> fun (V271) -> fun (V272) -> ('dn--un--unifyD_Unify_NF'(V265, V266, V267, V268, V269, V270, V271, V272)) end end end end end end end end, fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> ('dn--un--unifyWithLazyD_Unify_NF'(V273, V274, V275, V276, V277, V278, V279, V280)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V259))(V230))), V281 end(V261)) end end end end), V282 end(V256)) end end end end), V283 end(V245)) end end end end), V284 end(V240)) end end end end end end), V285 end(V226)) end end end end), V286 end(V218)) end end end end), V287 end(V210)) end end end end; _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end; _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end.
'dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V13 = begin (V8 = V1), fun (V9) -> begin (V12 = (begin (V10 = V8), fun (V11) -> ('erlang':'get'(V10)) end end(V9))), {'Prelude.Types.Right', V12} end end end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V44 = begin (V19 = fun (V18) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V17, V18)) end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V43 = begin (V24 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_Closure'(V1, V0, V23, V5, V6, V7))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V42 = case V28 of 1 -> fun (V29) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> begin (V30 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V17, V6))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V41 = begin (V35 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V17, V7))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V40 = ('case--case block in unifyD-27578'(V0, V1, V2, V7, V6, V5, V4, V3, V17, V23, 0, V34, V39, {'Builtin.MkPair', V34, V39}))), V40 end(V36)) end end end end), V41 end(V31)) end end end end end), V42 end(V25)) end end end end), V43 end(V20)) end end end end), V44 end(V14)) end end end end.
'dn--un--show_Show_UnifyMode'(V0) -> case V0 of 0 -> <<"InLHS"/utf8>>; 1 -> <<"InTerm"/utf8>>; 2 -> <<"InMatch"/utf8>>; 3 -> <<"InSearch"/utf8>> end.
'dn--un--show_Show_AddLazy'(V0) -> case V0 of {'Core.Unify.NoLazy'} -> <<"NoLazy"/utf8>>; {'Core.Unify.AddForce', V1} -> <<"AddForce"/utf8>>; {'Core.Unify.AddDelay', V2} -> <<"AddDelay"/utf8>> end.
'dn--un--showPrec_Show_AddLazy'(V0, V1) -> ('dn--un--show_Show_AddLazy'(V1)).
'dn--un--__Impl_Unify_Term'() -> {'Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('dn--un--unifyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7)) end end end end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('dn--un--unifyWithLazyD_Unify_Term'(V8, V9, V10, V11, V12, V13, V14, V15)) end end end end end end end end}.
'dn--un--__Impl_Unify_NF'() -> {'Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('dn--un--unifyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7)) end end end end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('dn--un--unifyWithLazyD_Unify_NF'(V8, V9, V10, V11, V12, V13, V14, V15)) end end end end end end end end}.
'dn--un--__Impl_Unify_Closure'() -> {'Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7)) end end end end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V8, V9, V10, V11, V12, V13, V14, V15)) end end end end end end end end}.
'dn--un--__Impl_Show_AddLazy'() -> {'Prelude.Show.MkShow', fun (V0) -> ('dn--un--show_Show_AddLazy'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_AddLazy'(V1, V2)) end end}.
'dn--un--==_Eq_UnifyMode'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; 2 -> case V1 of 2 -> 1; _ -> 0 end; 3 -> case V1 of 3 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--==_Eq_SolveMode'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; 3 -> case V1 of 3 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--/=_Eq_UnifyMode'(V0, V1) -> case ('dn--un--==_Eq_UnifyMode'(V0, V1)) of 1 -> 0; 0 -> 1 end.
'un--updateSolution'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Core.TT.Meta', V6, V7, V8, V9} -> begin (V15 = begin (V10 = V1), fun (V11) -> begin (V14 = (begin (V12 = V10), fun (V13) -> ('erlang':'get'(V12)) end end(V11))), {'Prelude.Types.Right', V14} end end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V77 = begin (V20 = ('un--patternEnvTm'(V1, V2, V0, V3, V9))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V76 = case V24 of {'Prelude.Types.Nothing'} -> fun (V25) -> {'Prelude.Types.Right', 0} end; {'Prelude.Types.Just', V26} -> case V26 of {'Builtin.DPair.MkDPair', V27, V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V5, V30)) of {'Prelude.Types.Nothing'} -> fun (V31) -> {'Prelude.Types.Right', 0} end; {'Prelude.Types.Just', V32} -> begin (V65 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Core.Name.Resolved', V8}, case V19 of {'Core.Context.MkDefs', V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64} -> V33 end))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V75 = case V69 of {'Prelude.Types.Just', V70} -> ('un--tryInstantiate'(V1, V2, V0, V27, V6, ('un--inTerm'()), V3, V7, V8, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V9)), V70, V29, V5, V32)); {'Prelude.Types.Nothing'} -> fun (V71) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', (begin (V73 = fun (V72) -> V72 end), fun (V74) -> (V73(V74)) end end(<<"Can\x{27}t happen: no definition"/utf8>>))}, V71)) end end), V75 end(V66)) end end end end end end end end), V76 end(V21)) end end end end), V77 end(V16)) end end end end; _ -> fun (V78) -> {'Prelude.Types.Right', 0} end end.
'un--unionAll'(V0) -> case V0 of [] -> {'Core.Unify.MkUnifyResult', [], 0, [], {'Core.Unify.NoLazy'}}; [E0 | E1] -> (fun (V1, V2) -> case V2 of [] -> V1; _ -> ('un--union'(V1, ('un--unionAll'(V2)))) end end(E0, E1)) end.
'un--union'(V0, V1) -> {'Core.Unify.MkUnifyResult', ('Idris.Idris2.Data.List':'un--union'({'Prelude.EqOrd.MkEq', fun (V2) -> fun (V3) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2, V3)) end end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V4, V5)) end end}, case V0 of {'Core.Unify.MkUnifyResult', V6, V7, V8, V9} -> V6 end, case V1 of {'Core.Unify.MkUnifyResult', V10, V11, V12, V13} -> V10 end)), case case V0 of {'Core.Unify.MkUnifyResult', V14, V15, V16, V17} -> V15 end of 1 -> 1; 0 -> case V1 of {'Core.Unify.MkUnifyResult', V18, V19, V20, V21} -> V19 end end, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(case V0 of {'Core.Unify.MkUnifyResult', V22, V23, V24, V25} -> V24 end, case V1 of {'Core.Unify.MkUnifyResult', V26, V27, V28, V29} -> V28 end)), {'Core.Unify.NoLazy'}}.
'un--unifyWithLazyD'(V0, V1, V2, V3, V4) -> case V0 of {'Core.Unify.dn--un--__mkUnify', V5, V6} -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ((((((((V6(V1))(V2))(V3))(V4))(V7))(V8))(V9))(V10)) end end end end end.
'un--unifyWithLazy'(V0, V1, V2, V3, V4, V5, V6) -> case V0 of {'Core.Unify.dn--un--__mkUnify', V7, V8} -> fun (V9) -> fun (V10) -> ((((((((V8(V1))(V2))(V3))(V4))(V5))(V6))(V9))(V10)) end end end.
'un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Core.Value.NDCon', V8, V9, V10, V11, V12} -> case V7 of {'Core.Value.NDCon', V13, V14, V15, V16, V17} -> begin (V23 = begin (V18 = V0), fun (V19) -> begin (V22 = (begin (V20 = V18), fun (V21) -> ('erlang':'get'(V20)) end end(V19))), {'Prelude.Types.Right', V22} end end end), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V83 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V10, V15)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('dn--un--unifyD_Unify_Closure'(V28, V29, V30, V31, V32, V33, V34, V35)) end end end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V36, V37, V38, V39, V40, V41, V42, V43)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V44, V45, V46, V47, V48)) end end end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V49, V50, V51, V52, V53)) end end end end end, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V54, V55, V56, V57, V58, V59)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V60, V61, V62, V63, V64, V65, V66)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ((begin (V72 = fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V70, V71)) end end end end), fun (V73) -> fun (V74) -> ((((V72('erased'))('erased'))(V73))(V74)) end end end(fun (V67) -> ('Idris.Idris2.Builtin':'un--snd'(V67)) end))(V12)), ((begin (V80 = fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V78, V79)) end end end end), fun (V81) -> fun (V82) -> ((((V80('erased'))('erased'))(V81))(V82)) end end end(fun (V75) -> ('Idris.Idris2.Builtin':'un--snd'(V75)) end))(V17)))); 0 -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NDCon', V8, V9, V10, V11, V12}, {'Core.Value.NDCon', V13, V14, V15, V16, V17})) end), V83 end(V24)) end end end end; _ -> case V7 of {'Core.Value.NErased', V84, V85} -> case V85 of {'Core.TT.Dotted', V86} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V86)); _ -> case V6 of {'Core.Value.NErased', V87, V88} -> case V88 of {'Core.TT.Dotted', V89} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V89, V7)); _ -> case V7 of {'Core.Value.NApp', V90, V91, V92} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V93, V94} -> V94 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V90, V91, V92, V6)); 0 -> begin (V95 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V100 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V90, V91, V92}))), V100 end(V96)) end end end end end; {'Core.Value.NAs', V101, V102, V103, V104} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V104)); _ -> case V6 of {'Core.Value.NAs', V105, V106, V107, V108} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V108, V7)); _ -> begin (V114 = begin (V109 = V0), fun (V110) -> begin (V113 = (begin (V111 = V109), fun (V112) -> ('erlang':'get'(V111)) end end(V110))), {'Prelude.Types.Right', V113} end end end), fun (V115) -> begin (V116 = (V114(V115))), case V116 of {'Prelude.Types.Left', V117} -> {'Prelude.Types.Left', V117}; {'Prelude.Types.Right', V118} -> (begin (V132 = begin (V120 = fun (V119) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V118, V119)) end), fun (V121) -> begin (V122 = (V120(V121))), case V122 of {'Prelude.Types.Left', V123} -> {'Prelude.Types.Left', V123}; {'Prelude.Types.Right', V124} -> (begin (V131 = begin (V125 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V130 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V130 end(V126)) end end end end), V131 end(V121)) end end end end), V132 end(V115)) end end end end end end end; {'Core.Value.NApp', V133, V134, V135} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V133, V134, V135, V7)); _ -> case V7 of {'Core.Value.NApp', V136, V137, V138} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V139, V140} -> V140 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V136, V137, V138, V6)); 0 -> begin (V141 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V146 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V136, V137, V138}))), V146 end(V142)) end end end end end; {'Core.Value.NAs', V147, V148, V149, V150} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V150)); _ -> case V6 of {'Core.Value.NAs', V151, V152, V153, V154} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V154, V7)); _ -> begin (V160 = begin (V155 = V0), fun (V156) -> begin (V159 = (begin (V157 = V155), fun (V158) -> ('erlang':'get'(V157)) end end(V156))), {'Prelude.Types.Right', V159} end end end), fun (V161) -> begin (V162 = (V160(V161))), case V162 of {'Prelude.Types.Left', V163} -> {'Prelude.Types.Left', V163}; {'Prelude.Types.Right', V164} -> (begin (V178 = begin (V166 = fun (V165) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V164, V165)) end), fun (V167) -> begin (V168 = (V166(V167))), case V168 of {'Prelude.Types.Left', V169} -> {'Prelude.Types.Left', V169}; {'Prelude.Types.Right', V170} -> (begin (V177 = begin (V171 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V172) -> begin (V173 = (V171(V172))), case V173 of {'Prelude.Types.Left', V174} -> {'Prelude.Types.Left', V174}; {'Prelude.Types.Right', V175} -> (begin (V176 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V176 end(V172)) end end end end), V177 end(V167)) end end end end), V178 end(V161)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V179, V180} -> case V180 of {'Core.TT.Dotted', V181} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V181, V7)); _ -> case V7 of {'Core.Value.NApp', V182, V183, V184} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V185, V186} -> V186 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V182, V183, V184, V6)); 0 -> begin (V187 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V188) -> begin (V189 = (V187(V188))), case V189 of {'Prelude.Types.Left', V190} -> {'Prelude.Types.Left', V190}; {'Prelude.Types.Right', V191} -> (begin (V192 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V182, V183, V184}))), V192 end(V188)) end end end end end; {'Core.Value.NAs', V193, V194, V195, V196} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V196)); _ -> case V6 of {'Core.Value.NAs', V197, V198, V199, V200} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V200, V7)); _ -> begin (V206 = begin (V201 = V0), fun (V202) -> begin (V205 = (begin (V203 = V201), fun (V204) -> ('erlang':'get'(V203)) end end(V202))), {'Prelude.Types.Right', V205} end end end), fun (V207) -> begin (V208 = (V206(V207))), case V208 of {'Prelude.Types.Left', V209} -> {'Prelude.Types.Left', V209}; {'Prelude.Types.Right', V210} -> (begin (V224 = begin (V212 = fun (V211) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V210, V211)) end), fun (V213) -> begin (V214 = (V212(V213))), case V214 of {'Prelude.Types.Left', V215} -> {'Prelude.Types.Left', V215}; {'Prelude.Types.Right', V216} -> (begin (V223 = begin (V217 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V218) -> begin (V219 = (V217(V218))), case V219 of {'Prelude.Types.Left', V220} -> {'Prelude.Types.Left', V220}; {'Prelude.Types.Right', V221} -> (begin (V222 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V222 end(V218)) end end end end), V223 end(V213)) end end end end), V224 end(V207)) end end end end end end end; {'Core.Value.NApp', V225, V226, V227} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V225, V226, V227, V7)); _ -> case V7 of {'Core.Value.NApp', V228, V229, V230} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V231, V232} -> V232 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V228, V229, V230, V6)); 0 -> begin (V233 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V234) -> begin (V235 = (V233(V234))), case V235 of {'Prelude.Types.Left', V236} -> {'Prelude.Types.Left', V236}; {'Prelude.Types.Right', V237} -> (begin (V238 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V228, V229, V230}))), V238 end(V234)) end end end end end; {'Core.Value.NAs', V239, V240, V241, V242} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V242)); _ -> case V6 of {'Core.Value.NAs', V243, V244, V245, V246} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V246, V7)); _ -> begin (V252 = begin (V247 = V0), fun (V248) -> begin (V251 = (begin (V249 = V247), fun (V250) -> ('erlang':'get'(V249)) end end(V248))), {'Prelude.Types.Right', V251} end end end), fun (V253) -> begin (V254 = (V252(V253))), case V254 of {'Prelude.Types.Left', V255} -> {'Prelude.Types.Left', V255}; {'Prelude.Types.Right', V256} -> (begin (V270 = begin (V258 = fun (V257) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V256, V257)) end), fun (V259) -> begin (V260 = (V258(V259))), case V260 of {'Prelude.Types.Left', V261} -> {'Prelude.Types.Left', V261}; {'Prelude.Types.Right', V262} -> (begin (V269 = begin (V263 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V264) -> begin (V265 = (V263(V264))), case V265 of {'Prelude.Types.Left', V266} -> {'Prelude.Types.Left', V266}; {'Prelude.Types.Right', V267} -> (begin (V268 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V268 end(V264)) end end end end), V269 end(V259)) end end end end), V270 end(V253)) end end end end end end end end end; {'Core.Value.NTCon', V271, V272, V273, V274, V275} -> case V7 of {'Core.Value.NTCon', V276, V277, V278, V279, V280} -> begin (V304 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, 20, begin (V286 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V281, V282)) end end, fun (V283) -> fun (V284) -> fun (V285) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V283, V284, V285)) end end end}, V272))), fun (V287) -> begin (V288 = (V286(V287))), case V288 of {'Prelude.Types.Left', V289} -> {'Prelude.Types.Left', V289}; {'Prelude.Types.Right', V290} -> (begin (V303 = begin (V296 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V291) -> fun (V292) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V291, V292)) end end, fun (V293) -> fun (V294) -> fun (V295) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V293, V294, V295)) end end end}, V277))), fun (V297) -> begin (V298 = (V296(V297))), case V298 of {'Prelude.Types.Left', V299} -> {'Prelude.Types.Left', V299}; {'Prelude.Types.Right', V300} -> (begin (V302 = fun (V301) -> {'Prelude.Types.Right', <<<<"Comparing type constructors "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V290))/binary, <<<<" and "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V300))/binary>>/binary>>/binary>>} end), V302 end(V297)) end end end end), V303 end(V287)) end end end end))), fun (V305) -> begin (V306 = (V304(V305))), case V306 of {'Prelude.Types.Left', V307} -> {'Prelude.Types.Left', V307}; {'Prelude.Types.Right', V308} -> (begin (V425 = case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V272, V277)) of 1 -> begin (V317 = ((begin (V314 = fun (V310) -> fun (V311) -> fun (V312) -> fun (V313) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V312, V313)) end end end end), fun (V315) -> fun (V316) -> ((((V314('erased'))('erased'))(V315))(V316)) end end end(fun (V309) -> ('Idris.Idris2.Builtin':'un--snd'(V309)) end))(V275))), begin (V326 = ((begin (V323 = fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V321, V322)) end end end end), fun (V324) -> fun (V325) -> ((((V323('erased'))('erased'))(V324))(V325)) end end end(fun (V318) -> ('Idris.Idris2.Builtin':'un--snd'(V318)) end))(V280))), begin (V328 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, 20, fun (V327) -> {'Prelude.Types.Right', <<<<"Constructor "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V272))/binary>>} end))), fun (V329) -> begin (V330 = (V328(V329))), case V330 of {'Prelude.Types.Left', V331} -> {'Prelude.Types.Left', V331}; {'Prelude.Types.Right', V332} -> (begin (V424 = begin (V353 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, 20, begin (V334 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V333) -> ('un--dumpArg'(V2, V0, V5, V333)) end, V317))), ((begin (V350 = fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V347, V348, V349)) end end end end end), fun (V351) -> fun (V352) -> ((((V350('erased'))('erased'))(V351))(V352)) end end end((begin (V342 = fun (V336) -> fun (V337) -> fun (V338) -> fun (V339) -> case V339 of {'Prelude.Types.Left', V340} -> {'Prelude.Types.Left', V340}; {'Prelude.Types.Right', V341} -> {'Prelude.Types.Right', (V338(V341))} end end end end end), fun (V343) -> fun (V344) -> ((((V342('erased'))('erased'))(V343))(V344)) end end end(fun (V335) -> <<""/utf8>> end))))(V334)) end))), fun (V354) -> begin (V355 = (V353(V354))), case V355 of {'Prelude.Types.Left', V356} -> {'Prelude.Types.Left', V356}; {'Prelude.Types.Right', V357} -> (begin (V423 = begin (V378 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, 20, begin (V359 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V358) -> ('un--dumpArg'(V2, V0, V5, V358)) end, V326))), ((begin (V375 = fun (V370) -> fun (V371) -> fun (V372) -> fun (V373) -> fun (V374) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V372, V373, V374)) end end end end end), fun (V376) -> fun (V377) -> ((((V375('erased'))('erased'))(V376))(V377)) end end end((begin (V367 = fun (V361) -> fun (V362) -> fun (V363) -> fun (V364) -> case V364 of {'Prelude.Types.Left', V365} -> {'Prelude.Types.Left', V365}; {'Prelude.Types.Right', V366} -> {'Prelude.Types.Right', (V363(V366))} end end end end end), fun (V368) -> fun (V369) -> ((((V367('erased'))('erased'))(V368))(V369)) end end end(fun (V360) -> <<""/utf8>> end))))(V359)) end))), fun (V379) -> begin (V380 = (V378(V379))), case V380 of {'Prelude.Types.Left', V381} -> {'Prelude.Types.Left', V381}; {'Prelude.Types.Right', V382} -> (begin (V422 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V383) -> fun (V384) -> fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> fun (V390) -> ('dn--un--unifyD_Unify_Closure'(V383, V384, V385, V386, V387, V388, V389, V390)) end end end end end end end end, fun (V391) -> fun (V392) -> fun (V393) -> fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V391, V392, V393, V394, V395, V396, V397, V398)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V399) -> fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V399, V400, V401, V402, V403)) end end end end end, fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V404, V405, V406, V407, V408)) end end end end end, fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V409, V410, V411, V412, V413, V414)) end end end end end end, fun (V415) -> fun (V416) -> fun (V417) -> fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V415, V416, V417, V418, V419, V420, V421)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, V317, V326))), V422 end(V379)) end end end end), V423 end(V354)) end end end end), V424 end(V329)) end end end end end end; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NTCon', V271, V272, V273, V274, V275}, {'Core.Value.NTCon', V276, V277, V278, V279, V280})) end), V425 end(V305)) end end end end; _ -> case V7 of {'Core.Value.NErased', V426, V427} -> case V427 of {'Core.TT.Dotted', V428} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V428)); _ -> case V6 of {'Core.Value.NErased', V429, V430} -> case V430 of {'Core.TT.Dotted', V431} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V431, V7)); _ -> case V7 of {'Core.Value.NApp', V432, V433, V434} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V435, V436} -> V436 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V432, V433, V434, V6)); 0 -> begin (V437 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V438) -> begin (V439 = (V437(V438))), case V439 of {'Prelude.Types.Left', V440} -> {'Prelude.Types.Left', V440}; {'Prelude.Types.Right', V441} -> (begin (V442 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V432, V433, V434}))), V442 end(V438)) end end end end end; {'Core.Value.NAs', V443, V444, V445, V446} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V446)); _ -> case V6 of {'Core.Value.NAs', V447, V448, V449, V450} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V450, V7)); _ -> begin (V456 = begin (V451 = V0), fun (V452) -> begin (V455 = (begin (V453 = V451), fun (V454) -> ('erlang':'get'(V453)) end end(V452))), {'Prelude.Types.Right', V455} end end end), fun (V457) -> begin (V458 = (V456(V457))), case V458 of {'Prelude.Types.Left', V459} -> {'Prelude.Types.Left', V459}; {'Prelude.Types.Right', V460} -> (begin (V474 = begin (V462 = fun (V461) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V460, V461)) end), fun (V463) -> begin (V464 = (V462(V463))), case V464 of {'Prelude.Types.Left', V465} -> {'Prelude.Types.Left', V465}; {'Prelude.Types.Right', V466} -> (begin (V473 = begin (V467 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V468) -> begin (V469 = (V467(V468))), case V469 of {'Prelude.Types.Left', V470} -> {'Prelude.Types.Left', V470}; {'Prelude.Types.Right', V471} -> (begin (V472 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V472 end(V468)) end end end end), V473 end(V463)) end end end end), V474 end(V457)) end end end end end end end; {'Core.Value.NApp', V475, V476, V477} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V475, V476, V477, V7)); _ -> case V7 of {'Core.Value.NApp', V478, V479, V480} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V481, V482} -> V482 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V478, V479, V480, V6)); 0 -> begin (V483 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V484) -> begin (V485 = (V483(V484))), case V485 of {'Prelude.Types.Left', V486} -> {'Prelude.Types.Left', V486}; {'Prelude.Types.Right', V487} -> (begin (V488 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V478, V479, V480}))), V488 end(V484)) end end end end end; {'Core.Value.NAs', V489, V490, V491, V492} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V492)); _ -> case V6 of {'Core.Value.NAs', V493, V494, V495, V496} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V496, V7)); _ -> begin (V502 = begin (V497 = V0), fun (V498) -> begin (V501 = (begin (V499 = V497), fun (V500) -> ('erlang':'get'(V499)) end end(V498))), {'Prelude.Types.Right', V501} end end end), fun (V503) -> begin (V504 = (V502(V503))), case V504 of {'Prelude.Types.Left', V505} -> {'Prelude.Types.Left', V505}; {'Prelude.Types.Right', V506} -> (begin (V520 = begin (V508 = fun (V507) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V506, V507)) end), fun (V509) -> begin (V510 = (V508(V509))), case V510 of {'Prelude.Types.Left', V511} -> {'Prelude.Types.Left', V511}; {'Prelude.Types.Right', V512} -> (begin (V519 = begin (V513 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V514) -> begin (V515 = (V513(V514))), case V515 of {'Prelude.Types.Left', V516} -> {'Prelude.Types.Left', V516}; {'Prelude.Types.Right', V517} -> (begin (V518 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V518 end(V514)) end end end end), V519 end(V509)) end end end end), V520 end(V503)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V521, V522} -> case V522 of {'Core.TT.Dotted', V523} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V523, V7)); _ -> case V7 of {'Core.Value.NApp', V524, V525, V526} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V527, V528} -> V528 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V524, V525, V526, V6)); 0 -> begin (V529 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V530) -> begin (V531 = (V529(V530))), case V531 of {'Prelude.Types.Left', V532} -> {'Prelude.Types.Left', V532}; {'Prelude.Types.Right', V533} -> (begin (V534 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V524, V525, V526}))), V534 end(V530)) end end end end end; {'Core.Value.NAs', V535, V536, V537, V538} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V538)); _ -> case V6 of {'Core.Value.NAs', V539, V540, V541, V542} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V542, V7)); _ -> begin (V548 = begin (V543 = V0), fun (V544) -> begin (V547 = (begin (V545 = V543), fun (V546) -> ('erlang':'get'(V545)) end end(V544))), {'Prelude.Types.Right', V547} end end end), fun (V549) -> begin (V550 = (V548(V549))), case V550 of {'Prelude.Types.Left', V551} -> {'Prelude.Types.Left', V551}; {'Prelude.Types.Right', V552} -> (begin (V566 = begin (V554 = fun (V553) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V552, V553)) end), fun (V555) -> begin (V556 = (V554(V555))), case V556 of {'Prelude.Types.Left', V557} -> {'Prelude.Types.Left', V557}; {'Prelude.Types.Right', V558} -> (begin (V565 = begin (V559 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V560) -> begin (V561 = (V559(V560))), case V561 of {'Prelude.Types.Left', V562} -> {'Prelude.Types.Left', V562}; {'Prelude.Types.Right', V563} -> (begin (V564 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V564 end(V560)) end end end end), V565 end(V555)) end end end end), V566 end(V549)) end end end end end end end; {'Core.Value.NApp', V567, V568, V569} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V567, V568, V569, V7)); _ -> case V7 of {'Core.Value.NApp', V570, V571, V572} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V573, V574} -> V574 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V570, V571, V572, V6)); 0 -> begin (V575 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V576) -> begin (V577 = (V575(V576))), case V577 of {'Prelude.Types.Left', V578} -> {'Prelude.Types.Left', V578}; {'Prelude.Types.Right', V579} -> (begin (V580 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V570, V571, V572}))), V580 end(V576)) end end end end end; {'Core.Value.NAs', V581, V582, V583, V584} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V584)); _ -> case V6 of {'Core.Value.NAs', V585, V586, V587, V588} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V588, V7)); _ -> begin (V594 = begin (V589 = V0), fun (V590) -> begin (V593 = (begin (V591 = V589), fun (V592) -> ('erlang':'get'(V591)) end end(V590))), {'Prelude.Types.Right', V593} end end end), fun (V595) -> begin (V596 = (V594(V595))), case V596 of {'Prelude.Types.Left', V597} -> {'Prelude.Types.Left', V597}; {'Prelude.Types.Right', V598} -> (begin (V612 = begin (V600 = fun (V599) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V598, V599)) end), fun (V601) -> begin (V602 = (V600(V601))), case V602 of {'Prelude.Types.Left', V603} -> {'Prelude.Types.Left', V603}; {'Prelude.Types.Right', V604} -> (begin (V611 = begin (V605 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V606) -> begin (V607 = (V605(V606))), case V607 of {'Prelude.Types.Left', V608} -> {'Prelude.Types.Left', V608}; {'Prelude.Types.Right', V609} -> (begin (V610 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V610 end(V606)) end end end end), V611 end(V601)) end end end end), V612 end(V595)) end end end end end end end end end; {'Core.Value.NDelayed', V613, V614, V615} -> case V7 of {'Core.Value.NDelayed', V616, V617, V618} -> ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V619) -> fun (V620) -> fun (V621) -> fun (V622) -> fun (V623) -> fun (V624) -> fun (V625) -> fun (V626) -> ('dn--un--unifyD_Unify_NF'(V619, V620, V621, V622, V623, V624, V625, V626)) end end end end end end end end, fun (V627) -> fun (V628) -> fun (V629) -> fun (V630) -> fun (V631) -> fun (V632) -> fun (V633) -> fun (V634) -> ('dn--un--unifyWithLazyD_Unify_NF'(V627, V628, V629, V630, V631, V632, V633, V634)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V615))(V618)); _ -> case V7 of {'Core.Value.NErased', V635, V636} -> case V636 of {'Core.TT.Dotted', V637} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V637)); _ -> case V6 of {'Core.Value.NErased', V638, V639} -> case V639 of {'Core.TT.Dotted', V640} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V640, V7)); _ -> case V7 of {'Core.Value.NApp', V641, V642, V643} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V644, V645} -> V645 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V641, V642, V643, V6)); 0 -> begin (V646 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V647) -> begin (V648 = (V646(V647))), case V648 of {'Prelude.Types.Left', V649} -> {'Prelude.Types.Left', V649}; {'Prelude.Types.Right', V650} -> (begin (V651 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V641, V642, V643}))), V651 end(V647)) end end end end end; {'Core.Value.NAs', V652, V653, V654, V655} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V655)); _ -> case V6 of {'Core.Value.NAs', V656, V657, V658, V659} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V659, V7)); _ -> begin (V665 = begin (V660 = V0), fun (V661) -> begin (V664 = (begin (V662 = V660), fun (V663) -> ('erlang':'get'(V662)) end end(V661))), {'Prelude.Types.Right', V664} end end end), fun (V666) -> begin (V667 = (V665(V666))), case V667 of {'Prelude.Types.Left', V668} -> {'Prelude.Types.Left', V668}; {'Prelude.Types.Right', V669} -> (begin (V683 = begin (V671 = fun (V670) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V669, V670)) end), fun (V672) -> begin (V673 = (V671(V672))), case V673 of {'Prelude.Types.Left', V674} -> {'Prelude.Types.Left', V674}; {'Prelude.Types.Right', V675} -> (begin (V682 = begin (V676 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V677) -> begin (V678 = (V676(V677))), case V678 of {'Prelude.Types.Left', V679} -> {'Prelude.Types.Left', V679}; {'Prelude.Types.Right', V680} -> (begin (V681 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V681 end(V677)) end end end end), V682 end(V672)) end end end end), V683 end(V666)) end end end end end end end; {'Core.Value.NApp', V684, V685, V686} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V684, V685, V686, V7)); _ -> case V7 of {'Core.Value.NApp', V687, V688, V689} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V690, V691} -> V691 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V687, V688, V689, V6)); 0 -> begin (V692 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V693) -> begin (V694 = (V692(V693))), case V694 of {'Prelude.Types.Left', V695} -> {'Prelude.Types.Left', V695}; {'Prelude.Types.Right', V696} -> (begin (V697 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V687, V688, V689}))), V697 end(V693)) end end end end end; {'Core.Value.NAs', V698, V699, V700, V701} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V701)); _ -> case V6 of {'Core.Value.NAs', V702, V703, V704, V705} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V705, V7)); _ -> begin (V711 = begin (V706 = V0), fun (V707) -> begin (V710 = (begin (V708 = V706), fun (V709) -> ('erlang':'get'(V708)) end end(V707))), {'Prelude.Types.Right', V710} end end end), fun (V712) -> begin (V713 = (V711(V712))), case V713 of {'Prelude.Types.Left', V714} -> {'Prelude.Types.Left', V714}; {'Prelude.Types.Right', V715} -> (begin (V729 = begin (V717 = fun (V716) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V715, V716)) end), fun (V718) -> begin (V719 = (V717(V718))), case V719 of {'Prelude.Types.Left', V720} -> {'Prelude.Types.Left', V720}; {'Prelude.Types.Right', V721} -> (begin (V728 = begin (V722 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V723) -> begin (V724 = (V722(V723))), case V724 of {'Prelude.Types.Left', V725} -> {'Prelude.Types.Left', V725}; {'Prelude.Types.Right', V726} -> (begin (V727 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V727 end(V723)) end end end end), V728 end(V718)) end end end end), V729 end(V712)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V730, V731} -> case V731 of {'Core.TT.Dotted', V732} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V732, V7)); _ -> case V7 of {'Core.Value.NApp', V733, V734, V735} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V736, V737} -> V737 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V733, V734, V735, V6)); 0 -> begin (V738 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V739) -> begin (V740 = (V738(V739))), case V740 of {'Prelude.Types.Left', V741} -> {'Prelude.Types.Left', V741}; {'Prelude.Types.Right', V742} -> (begin (V743 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V733, V734, V735}))), V743 end(V739)) end end end end end; {'Core.Value.NAs', V744, V745, V746, V747} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V747)); _ -> case V6 of {'Core.Value.NAs', V748, V749, V750, V751} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V751, V7)); _ -> begin (V757 = begin (V752 = V0), fun (V753) -> begin (V756 = (begin (V754 = V752), fun (V755) -> ('erlang':'get'(V754)) end end(V753))), {'Prelude.Types.Right', V756} end end end), fun (V758) -> begin (V759 = (V757(V758))), case V759 of {'Prelude.Types.Left', V760} -> {'Prelude.Types.Left', V760}; {'Prelude.Types.Right', V761} -> (begin (V775 = begin (V763 = fun (V762) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V761, V762)) end), fun (V764) -> begin (V765 = (V763(V764))), case V765 of {'Prelude.Types.Left', V766} -> {'Prelude.Types.Left', V766}; {'Prelude.Types.Right', V767} -> (begin (V774 = begin (V768 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V769) -> begin (V770 = (V768(V769))), case V770 of {'Prelude.Types.Left', V771} -> {'Prelude.Types.Left', V771}; {'Prelude.Types.Right', V772} -> (begin (V773 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V773 end(V769)) end end end end), V774 end(V764)) end end end end), V775 end(V758)) end end end end end end end; {'Core.Value.NApp', V776, V777, V778} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V776, V777, V778, V7)); _ -> case V7 of {'Core.Value.NApp', V779, V780, V781} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V782, V783} -> V783 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V779, V780, V781, V6)); 0 -> begin (V784 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V785) -> begin (V786 = (V784(V785))), case V786 of {'Prelude.Types.Left', V787} -> {'Prelude.Types.Left', V787}; {'Prelude.Types.Right', V788} -> (begin (V789 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V779, V780, V781}))), V789 end(V785)) end end end end end; {'Core.Value.NAs', V790, V791, V792, V793} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V793)); _ -> case V6 of {'Core.Value.NAs', V794, V795, V796, V797} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V797, V7)); _ -> begin (V803 = begin (V798 = V0), fun (V799) -> begin (V802 = (begin (V800 = V798), fun (V801) -> ('erlang':'get'(V800)) end end(V799))), {'Prelude.Types.Right', V802} end end end), fun (V804) -> begin (V805 = (V803(V804))), case V805 of {'Prelude.Types.Left', V806} -> {'Prelude.Types.Left', V806}; {'Prelude.Types.Right', V807} -> (begin (V821 = begin (V809 = fun (V808) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V807, V808)) end), fun (V810) -> begin (V811 = (V809(V810))), case V811 of {'Prelude.Types.Left', V812} -> {'Prelude.Types.Left', V812}; {'Prelude.Types.Right', V813} -> (begin (V820 = begin (V814 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V815) -> begin (V816 = (V814(V815))), case V816 of {'Prelude.Types.Left', V817} -> {'Prelude.Types.Left', V817}; {'Prelude.Types.Right', V818} -> (begin (V819 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V819 end(V815)) end end end end), V820 end(V810)) end end end end), V821 end(V804)) end end end end end end end end end; {'Core.Value.NDelay', V822, V823, V824, V825} -> case V7 of {'Core.Value.NDelay', V826, V827, V828, V829} -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V830) -> fun (V831) -> fun (V832) -> fun (V833) -> fun (V834) -> fun (V835) -> fun (V836) -> fun (V837) -> ('dn--un--unifyD_Unify_Closure'(V830, V831, V832, V833, V834, V835, V836, V837)) end end end end end end end end, fun (V838) -> fun (V839) -> fun (V840) -> fun (V841) -> fun (V842) -> fun (V843) -> fun (V844) -> fun (V845) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V838, V839, V840, V841, V842, V843, V844, V845)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V846) -> fun (V847) -> fun (V848) -> fun (V849) -> fun (V850) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V846, V847, V848, V849, V850)) end end end end end, fun (V851) -> fun (V852) -> fun (V853) -> fun (V854) -> fun (V855) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V851, V852, V853, V854, V855)) end end end end end, fun (V856) -> fun (V857) -> fun (V858) -> fun (V859) -> fun (V860) -> fun (V861) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V856, V857, V858, V859, V860, V861)) end end end end end end, fun (V862) -> fun (V863) -> fun (V864) -> fun (V865) -> fun (V866) -> fun (V867) -> fun (V868) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V862, V863, V864, V865, V866, V867, V868)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, [V824 | [V825 | []]], [V828 | [V829 | []]])); _ -> case V7 of {'Core.Value.NErased', V869, V870} -> case V870 of {'Core.TT.Dotted', V871} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V871)); _ -> case V6 of {'Core.Value.NErased', V872, V873} -> case V873 of {'Core.TT.Dotted', V874} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V874, V7)); _ -> case V7 of {'Core.Value.NApp', V875, V876, V877} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V878, V879} -> V879 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V875, V876, V877, V6)); 0 -> begin (V880 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V881) -> begin (V882 = (V880(V881))), case V882 of {'Prelude.Types.Left', V883} -> {'Prelude.Types.Left', V883}; {'Prelude.Types.Right', V884} -> (begin (V885 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V875, V876, V877}))), V885 end(V881)) end end end end end; {'Core.Value.NAs', V886, V887, V888, V889} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V889)); _ -> case V6 of {'Core.Value.NAs', V890, V891, V892, V893} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V893, V7)); _ -> begin (V899 = begin (V894 = V0), fun (V895) -> begin (V898 = (begin (V896 = V894), fun (V897) -> ('erlang':'get'(V896)) end end(V895))), {'Prelude.Types.Right', V898} end end end), fun (V900) -> begin (V901 = (V899(V900))), case V901 of {'Prelude.Types.Left', V902} -> {'Prelude.Types.Left', V902}; {'Prelude.Types.Right', V903} -> (begin (V917 = begin (V905 = fun (V904) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V903, V904)) end), fun (V906) -> begin (V907 = (V905(V906))), case V907 of {'Prelude.Types.Left', V908} -> {'Prelude.Types.Left', V908}; {'Prelude.Types.Right', V909} -> (begin (V916 = begin (V910 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V911) -> begin (V912 = (V910(V911))), case V912 of {'Prelude.Types.Left', V913} -> {'Prelude.Types.Left', V913}; {'Prelude.Types.Right', V914} -> (begin (V915 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V915 end(V911)) end end end end), V916 end(V906)) end end end end), V917 end(V900)) end end end end end end end; {'Core.Value.NApp', V918, V919, V920} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V918, V919, V920, V7)); _ -> case V7 of {'Core.Value.NApp', V921, V922, V923} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V924, V925} -> V925 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V921, V922, V923, V6)); 0 -> begin (V926 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V927) -> begin (V928 = (V926(V927))), case V928 of {'Prelude.Types.Left', V929} -> {'Prelude.Types.Left', V929}; {'Prelude.Types.Right', V930} -> (begin (V931 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V921, V922, V923}))), V931 end(V927)) end end end end end; {'Core.Value.NAs', V932, V933, V934, V935} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V935)); _ -> case V6 of {'Core.Value.NAs', V936, V937, V938, V939} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V939, V7)); _ -> begin (V945 = begin (V940 = V0), fun (V941) -> begin (V944 = (begin (V942 = V940), fun (V943) -> ('erlang':'get'(V942)) end end(V941))), {'Prelude.Types.Right', V944} end end end), fun (V946) -> begin (V947 = (V945(V946))), case V947 of {'Prelude.Types.Left', V948} -> {'Prelude.Types.Left', V948}; {'Prelude.Types.Right', V949} -> (begin (V963 = begin (V951 = fun (V950) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V949, V950)) end), fun (V952) -> begin (V953 = (V951(V952))), case V953 of {'Prelude.Types.Left', V954} -> {'Prelude.Types.Left', V954}; {'Prelude.Types.Right', V955} -> (begin (V962 = begin (V956 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V957) -> begin (V958 = (V956(V957))), case V958 of {'Prelude.Types.Left', V959} -> {'Prelude.Types.Left', V959}; {'Prelude.Types.Right', V960} -> (begin (V961 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V961 end(V957)) end end end end), V962 end(V952)) end end end end), V963 end(V946)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V964, V965} -> case V965 of {'Core.TT.Dotted', V966} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V966, V7)); _ -> case V7 of {'Core.Value.NApp', V967, V968, V969} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V970, V971} -> V971 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V967, V968, V969, V6)); 0 -> begin (V972 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V973) -> begin (V974 = (V972(V973))), case V974 of {'Prelude.Types.Left', V975} -> {'Prelude.Types.Left', V975}; {'Prelude.Types.Right', V976} -> (begin (V977 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V967, V968, V969}))), V977 end(V973)) end end end end end; {'Core.Value.NAs', V978, V979, V980, V981} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V981)); _ -> case V6 of {'Core.Value.NAs', V982, V983, V984, V985} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V985, V7)); _ -> begin (V991 = begin (V986 = V0), fun (V987) -> begin (V990 = (begin (V988 = V986), fun (V989) -> ('erlang':'get'(V988)) end end(V987))), {'Prelude.Types.Right', V990} end end end), fun (V992) -> begin (V993 = (V991(V992))), case V993 of {'Prelude.Types.Left', V994} -> {'Prelude.Types.Left', V994}; {'Prelude.Types.Right', V995} -> (begin (V1009 = begin (V997 = fun (V996) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V995, V996)) end), fun (V998) -> begin (V999 = (V997(V998))), case V999 of {'Prelude.Types.Left', V1000} -> {'Prelude.Types.Left', V1000}; {'Prelude.Types.Right', V1001} -> (begin (V1008 = begin (V1002 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1003) -> begin (V1004 = (V1002(V1003))), case V1004 of {'Prelude.Types.Left', V1005} -> {'Prelude.Types.Left', V1005}; {'Prelude.Types.Right', V1006} -> (begin (V1007 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1007 end(V1003)) end end end end), V1008 end(V998)) end end end end), V1009 end(V992)) end end end end end end end; {'Core.Value.NApp', V1010, V1011, V1012} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1010, V1011, V1012, V7)); _ -> case V7 of {'Core.Value.NApp', V1013, V1014, V1015} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1016, V1017} -> V1017 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1013, V1014, V1015, V6)); 0 -> begin (V1018 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1019) -> begin (V1020 = (V1018(V1019))), case V1020 of {'Prelude.Types.Left', V1021} -> {'Prelude.Types.Left', V1021}; {'Prelude.Types.Right', V1022} -> (begin (V1023 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1013, V1014, V1015}))), V1023 end(V1019)) end end end end end; {'Core.Value.NAs', V1024, V1025, V1026, V1027} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1027)); _ -> case V6 of {'Core.Value.NAs', V1028, V1029, V1030, V1031} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1031, V7)); _ -> begin (V1037 = begin (V1032 = V0), fun (V1033) -> begin (V1036 = (begin (V1034 = V1032), fun (V1035) -> ('erlang':'get'(V1034)) end end(V1033))), {'Prelude.Types.Right', V1036} end end end), fun (V1038) -> begin (V1039 = (V1037(V1038))), case V1039 of {'Prelude.Types.Left', V1040} -> {'Prelude.Types.Left', V1040}; {'Prelude.Types.Right', V1041} -> (begin (V1055 = begin (V1043 = fun (V1042) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1041, V1042)) end), fun (V1044) -> begin (V1045 = (V1043(V1044))), case V1045 of {'Prelude.Types.Left', V1046} -> {'Prelude.Types.Left', V1046}; {'Prelude.Types.Right', V1047} -> (begin (V1054 = begin (V1048 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1049) -> begin (V1050 = (V1048(V1049))), case V1050 of {'Prelude.Types.Left', V1051} -> {'Prelude.Types.Left', V1051}; {'Prelude.Types.Right', V1052} -> (begin (V1053 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1053 end(V1049)) end end end end), V1054 end(V1044)) end end end end), V1055 end(V1038)) end end end end end end end end end; {'Core.Value.NForce', V1056, V1057, V1058, V1059} -> case V7 of {'Core.Value.NForce', V1060, V1061, V1062, V1063} -> begin (V1080 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V1064) -> fun (V1065) -> fun (V1066) -> fun (V1067) -> fun (V1068) -> fun (V1069) -> fun (V1070) -> fun (V1071) -> ('dn--un--unifyD_Unify_NF'(V1064, V1065, V1066, V1067, V1068, V1069, V1070, V1071)) end end end end end end end end, fun (V1072) -> fun (V1073) -> fun (V1074) -> fun (V1075) -> fun (V1076) -> fun (V1077) -> fun (V1078) -> fun (V1079) -> ('dn--un--unifyWithLazyD_Unify_NF'(V1072, V1073, V1074, V1075, V1076, V1077, V1078, V1079)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V1058))(V1062))), fun (V1081) -> begin (V1082 = (V1080(V1081))), case V1082 of {'Prelude.Types.Left', V1083} -> {'Prelude.Types.Left', V1083}; {'Prelude.Types.Right', V1084} -> (begin (V1147 = begin (V1140 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1085) -> fun (V1086) -> fun (V1087) -> fun (V1088) -> fun (V1089) -> fun (V1090) -> fun (V1091) -> fun (V1092) -> ('dn--un--unifyD_Unify_Closure'(V1085, V1086, V1087, V1088, V1089, V1090, V1091, V1092)) end end end end end end end end, fun (V1093) -> fun (V1094) -> fun (V1095) -> fun (V1096) -> fun (V1097) -> fun (V1098) -> fun (V1099) -> fun (V1100) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1093, V1094, V1095, V1096, V1097, V1098, V1099, V1100)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1101) -> fun (V1102) -> fun (V1103) -> fun (V1104) -> fun (V1105) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1101, V1102, V1103, V1104, V1105)) end end end end end, fun (V1106) -> fun (V1107) -> fun (V1108) -> fun (V1109) -> fun (V1110) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1106, V1107, V1108, V1109, V1110)) end end end end end, fun (V1111) -> fun (V1112) -> fun (V1113) -> fun (V1114) -> fun (V1115) -> fun (V1116) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1111, V1112, V1113, V1114, V1115, V1116)) end end end end end end, fun (V1117) -> fun (V1118) -> fun (V1119) -> fun (V1120) -> fun (V1121) -> fun (V1122) -> fun (V1123) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1117, V1118, V1119, V1120, V1121, V1122, V1123)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ((begin (V1129 = fun (V1125) -> fun (V1126) -> fun (V1127) -> fun (V1128) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1127, V1128)) end end end end), fun (V1130) -> fun (V1131) -> ((((V1129('erased'))('erased'))(V1130))(V1131)) end end end(fun (V1124) -> ('Idris.Idris2.Builtin':'un--snd'(V1124)) end))(V1059)), ((begin (V1137 = fun (V1133) -> fun (V1134) -> fun (V1135) -> fun (V1136) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1135, V1136)) end end end end), fun (V1138) -> fun (V1139) -> ((((V1137('erased'))('erased'))(V1138))(V1139)) end end end(fun (V1132) -> ('Idris.Idris2.Builtin':'un--snd'(V1132)) end))(V1063))))), fun (V1141) -> begin (V1142 = (V1140(V1141))), case V1142 of {'Prelude.Types.Left', V1143} -> {'Prelude.Types.Left', V1143}; {'Prelude.Types.Right', V1144} -> (begin (V1146 = fun (V1145) -> {'Prelude.Types.Right', ('un--union'(V1084, V1144))} end), V1146 end(V1141)) end end end end), V1147 end(V1081)) end end end end; _ -> case V7 of {'Core.Value.NErased', V1148, V1149} -> case V1149 of {'Core.TT.Dotted', V1150} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1150)); _ -> case V6 of {'Core.Value.NErased', V1151, V1152} -> case V1152 of {'Core.TT.Dotted', V1153} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1153, V7)); _ -> case V7 of {'Core.Value.NApp', V1154, V1155, V1156} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1157, V1158} -> V1158 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1154, V1155, V1156, V6)); 0 -> begin (V1159 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1160) -> begin (V1161 = (V1159(V1160))), case V1161 of {'Prelude.Types.Left', V1162} -> {'Prelude.Types.Left', V1162}; {'Prelude.Types.Right', V1163} -> (begin (V1164 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1154, V1155, V1156}))), V1164 end(V1160)) end end end end end; {'Core.Value.NAs', V1165, V1166, V1167, V1168} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1168)); _ -> case V6 of {'Core.Value.NAs', V1169, V1170, V1171, V1172} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1172, V7)); _ -> begin (V1178 = begin (V1173 = V0), fun (V1174) -> begin (V1177 = (begin (V1175 = V1173), fun (V1176) -> ('erlang':'get'(V1175)) end end(V1174))), {'Prelude.Types.Right', V1177} end end end), fun (V1179) -> begin (V1180 = (V1178(V1179))), case V1180 of {'Prelude.Types.Left', V1181} -> {'Prelude.Types.Left', V1181}; {'Prelude.Types.Right', V1182} -> (begin (V1196 = begin (V1184 = fun (V1183) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1182, V1183)) end), fun (V1185) -> begin (V1186 = (V1184(V1185))), case V1186 of {'Prelude.Types.Left', V1187} -> {'Prelude.Types.Left', V1187}; {'Prelude.Types.Right', V1188} -> (begin (V1195 = begin (V1189 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1190) -> begin (V1191 = (V1189(V1190))), case V1191 of {'Prelude.Types.Left', V1192} -> {'Prelude.Types.Left', V1192}; {'Prelude.Types.Right', V1193} -> (begin (V1194 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1194 end(V1190)) end end end end), V1195 end(V1185)) end end end end), V1196 end(V1179)) end end end end end end end; {'Core.Value.NApp', V1197, V1198, V1199} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1197, V1198, V1199, V7)); _ -> case V7 of {'Core.Value.NApp', V1200, V1201, V1202} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1203, V1204} -> V1204 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1200, V1201, V1202, V6)); 0 -> begin (V1205 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1206) -> begin (V1207 = (V1205(V1206))), case V1207 of {'Prelude.Types.Left', V1208} -> {'Prelude.Types.Left', V1208}; {'Prelude.Types.Right', V1209} -> (begin (V1210 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1200, V1201, V1202}))), V1210 end(V1206)) end end end end end; {'Core.Value.NAs', V1211, V1212, V1213, V1214} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1214)); _ -> case V6 of {'Core.Value.NAs', V1215, V1216, V1217, V1218} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1218, V7)); _ -> begin (V1224 = begin (V1219 = V0), fun (V1220) -> begin (V1223 = (begin (V1221 = V1219), fun (V1222) -> ('erlang':'get'(V1221)) end end(V1220))), {'Prelude.Types.Right', V1223} end end end), fun (V1225) -> begin (V1226 = (V1224(V1225))), case V1226 of {'Prelude.Types.Left', V1227} -> {'Prelude.Types.Left', V1227}; {'Prelude.Types.Right', V1228} -> (begin (V1242 = begin (V1230 = fun (V1229) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1228, V1229)) end), fun (V1231) -> begin (V1232 = (V1230(V1231))), case V1232 of {'Prelude.Types.Left', V1233} -> {'Prelude.Types.Left', V1233}; {'Prelude.Types.Right', V1234} -> (begin (V1241 = begin (V1235 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1236) -> begin (V1237 = (V1235(V1236))), case V1237 of {'Prelude.Types.Left', V1238} -> {'Prelude.Types.Left', V1238}; {'Prelude.Types.Right', V1239} -> (begin (V1240 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1240 end(V1236)) end end end end), V1241 end(V1231)) end end end end), V1242 end(V1225)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V1243, V1244} -> case V1244 of {'Core.TT.Dotted', V1245} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1245, V7)); _ -> case V7 of {'Core.Value.NApp', V1246, V1247, V1248} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1249, V1250} -> V1250 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1246, V1247, V1248, V6)); 0 -> begin (V1251 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1252) -> begin (V1253 = (V1251(V1252))), case V1253 of {'Prelude.Types.Left', V1254} -> {'Prelude.Types.Left', V1254}; {'Prelude.Types.Right', V1255} -> (begin (V1256 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1246, V1247, V1248}))), V1256 end(V1252)) end end end end end; {'Core.Value.NAs', V1257, V1258, V1259, V1260} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1260)); _ -> case V6 of {'Core.Value.NAs', V1261, V1262, V1263, V1264} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1264, V7)); _ -> begin (V1270 = begin (V1265 = V0), fun (V1266) -> begin (V1269 = (begin (V1267 = V1265), fun (V1268) -> ('erlang':'get'(V1267)) end end(V1266))), {'Prelude.Types.Right', V1269} end end end), fun (V1271) -> begin (V1272 = (V1270(V1271))), case V1272 of {'Prelude.Types.Left', V1273} -> {'Prelude.Types.Left', V1273}; {'Prelude.Types.Right', V1274} -> (begin (V1288 = begin (V1276 = fun (V1275) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1274, V1275)) end), fun (V1277) -> begin (V1278 = (V1276(V1277))), case V1278 of {'Prelude.Types.Left', V1279} -> {'Prelude.Types.Left', V1279}; {'Prelude.Types.Right', V1280} -> (begin (V1287 = begin (V1281 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1282) -> begin (V1283 = (V1281(V1282))), case V1283 of {'Prelude.Types.Left', V1284} -> {'Prelude.Types.Left', V1284}; {'Prelude.Types.Right', V1285} -> (begin (V1286 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1286 end(V1282)) end end end end), V1287 end(V1277)) end end end end), V1288 end(V1271)) end end end end end end end; {'Core.Value.NApp', V1289, V1290, V1291} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1289, V1290, V1291, V7)); _ -> case V7 of {'Core.Value.NApp', V1292, V1293, V1294} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1295, V1296} -> V1296 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1292, V1293, V1294, V6)); 0 -> begin (V1297 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1298) -> begin (V1299 = (V1297(V1298))), case V1299 of {'Prelude.Types.Left', V1300} -> {'Prelude.Types.Left', V1300}; {'Prelude.Types.Right', V1301} -> (begin (V1302 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1292, V1293, V1294}))), V1302 end(V1298)) end end end end end; {'Core.Value.NAs', V1303, V1304, V1305, V1306} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1306)); _ -> case V6 of {'Core.Value.NAs', V1307, V1308, V1309, V1310} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1310, V7)); _ -> begin (V1316 = begin (V1311 = V0), fun (V1312) -> begin (V1315 = (begin (V1313 = V1311), fun (V1314) -> ('erlang':'get'(V1313)) end end(V1312))), {'Prelude.Types.Right', V1315} end end end), fun (V1317) -> begin (V1318 = (V1316(V1317))), case V1318 of {'Prelude.Types.Left', V1319} -> {'Prelude.Types.Left', V1319}; {'Prelude.Types.Right', V1320} -> (begin (V1334 = begin (V1322 = fun (V1321) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1320, V1321)) end), fun (V1323) -> begin (V1324 = (V1322(V1323))), case V1324 of {'Prelude.Types.Left', V1325} -> {'Prelude.Types.Left', V1325}; {'Prelude.Types.Right', V1326} -> (begin (V1333 = begin (V1327 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1328) -> begin (V1329 = (V1327(V1328))), case V1329 of {'Prelude.Types.Left', V1330} -> {'Prelude.Types.Left', V1330}; {'Prelude.Types.Right', V1331} -> (begin (V1332 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1332 end(V1328)) end end end end), V1333 end(V1323)) end end end end), V1334 end(V1317)) end end end end end end end end end; {'Core.Value.NApp', V1335, V1336, V1337} -> case V1336 of {'Core.Value.NMeta', V1338, V1339, V1340} -> case V7 of {'Core.Value.NApp', V1341, V1342, V1343} -> case V1342 of {'Core.Value.NMeta', V1344, V1345, V1346} -> begin (V1352 = begin (V1347 = V0), fun (V1348) -> begin (V1351 = (begin (V1349 = V1347), fun (V1350) -> ('erlang':'get'(V1349)) end end(V1348))), {'Prelude.Types.Right', V1351} end end end), fun (V1353) -> begin (V1354 = (V1352(V1353))), case V1354 of {'Prelude.Types.Left', V1355} -> {'Prelude.Types.Left', V1355}; {'Prelude.Types.Right', V1356} -> (begin (V1366 = begin (V1357 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V1356, V5, V6, V7))), fun (V1358) -> begin (V1359 = (V1357(V1358))), case V1359 of {'Prelude.Types.Left', V1360} -> {'Prelude.Types.Left', V1360}; {'Prelude.Types.Right', V1361} -> (begin (V1365 = begin (V1362 = {'Core.Value.NMeta', V1338, V1339, V1340}), begin (V1363 = {'Core.Value.NMeta', V1344, V1345, V1346}), case V1361 of 1 -> fun (V1364) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V1335, V1362, V1337, V1341, V1363, V1343)) end end end), V1365 end(V1358)) end end end end), V1366 end(V1353)) end end end end; _ -> case V7 of {'Core.Value.NApp', V1367, V1368, V1369} -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V1335, V1336, V1337, V1367, V1368, V1369)); _ -> case V7 of {'Core.Value.NErased', V1370, V1371} -> case V1371 of {'Core.TT.Dotted', V1372} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1372)); _ -> case V6 of {'Core.Value.NErased', V1373, V1374} -> case V1374 of {'Core.TT.Dotted', V1375} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1375, V7)); _ -> case V7 of {'Core.Value.NApp', V1376, V1377, V1378} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1379, V1380} -> V1380 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1376, V1377, V1378, V6)); 0 -> begin (V1381 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1382) -> begin (V1383 = (V1381(V1382))), case V1383 of {'Prelude.Types.Left', V1384} -> {'Prelude.Types.Left', V1384}; {'Prelude.Types.Right', V1385} -> (begin (V1386 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1376, V1377, V1378}))), V1386 end(V1382)) end end end end end; {'Core.Value.NAs', V1387, V1388, V1389, V1390} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1390)); _ -> case V6 of {'Core.Value.NAs', V1391, V1392, V1393, V1394} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1394, V7)); _ -> begin (V1400 = begin (V1395 = V0), fun (V1396) -> begin (V1399 = (begin (V1397 = V1395), fun (V1398) -> ('erlang':'get'(V1397)) end end(V1396))), {'Prelude.Types.Right', V1399} end end end), fun (V1401) -> begin (V1402 = (V1400(V1401))), case V1402 of {'Prelude.Types.Left', V1403} -> {'Prelude.Types.Left', V1403}; {'Prelude.Types.Right', V1404} -> (begin (V1418 = begin (V1406 = fun (V1405) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1404, V1405)) end), fun (V1407) -> begin (V1408 = (V1406(V1407))), case V1408 of {'Prelude.Types.Left', V1409} -> {'Prelude.Types.Left', V1409}; {'Prelude.Types.Right', V1410} -> (begin (V1417 = begin (V1411 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1412) -> begin (V1413 = (V1411(V1412))), case V1413 of {'Prelude.Types.Left', V1414} -> {'Prelude.Types.Left', V1414}; {'Prelude.Types.Right', V1415} -> (begin (V1416 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1416 end(V1412)) end end end end), V1417 end(V1407)) end end end end), V1418 end(V1401)) end end end end end end end; {'Core.Value.NApp', V1419, V1420, V1421} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1419, V1420, V1421, V7)); _ -> case V7 of {'Core.Value.NApp', V1422, V1423, V1424} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1425, V1426} -> V1426 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1422, V1423, V1424, V6)); 0 -> begin (V1427 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1428) -> begin (V1429 = (V1427(V1428))), case V1429 of {'Prelude.Types.Left', V1430} -> {'Prelude.Types.Left', V1430}; {'Prelude.Types.Right', V1431} -> (begin (V1432 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1422, V1423, V1424}))), V1432 end(V1428)) end end end end end; {'Core.Value.NAs', V1433, V1434, V1435, V1436} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1436)); _ -> case V6 of {'Core.Value.NAs', V1437, V1438, V1439, V1440} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1440, V7)); _ -> begin (V1446 = begin (V1441 = V0), fun (V1442) -> begin (V1445 = (begin (V1443 = V1441), fun (V1444) -> ('erlang':'get'(V1443)) end end(V1442))), {'Prelude.Types.Right', V1445} end end end), fun (V1447) -> begin (V1448 = (V1446(V1447))), case V1448 of {'Prelude.Types.Left', V1449} -> {'Prelude.Types.Left', V1449}; {'Prelude.Types.Right', V1450} -> (begin (V1464 = begin (V1452 = fun (V1451) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1450, V1451)) end), fun (V1453) -> begin (V1454 = (V1452(V1453))), case V1454 of {'Prelude.Types.Left', V1455} -> {'Prelude.Types.Left', V1455}; {'Prelude.Types.Right', V1456} -> (begin (V1463 = begin (V1457 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1458) -> begin (V1459 = (V1457(V1458))), case V1459 of {'Prelude.Types.Left', V1460} -> {'Prelude.Types.Left', V1460}; {'Prelude.Types.Right', V1461} -> (begin (V1462 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1462 end(V1458)) end end end end), V1463 end(V1453)) end end end end), V1464 end(V1447)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V1465, V1466} -> case V1466 of {'Core.TT.Dotted', V1467} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1467, V7)); _ -> case V7 of {'Core.Value.NApp', V1468, V1469, V1470} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1471, V1472} -> V1472 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1468, V1469, V1470, V6)); 0 -> begin (V1473 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1474) -> begin (V1475 = (V1473(V1474))), case V1475 of {'Prelude.Types.Left', V1476} -> {'Prelude.Types.Left', V1476}; {'Prelude.Types.Right', V1477} -> (begin (V1478 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1468, V1469, V1470}))), V1478 end(V1474)) end end end end end; {'Core.Value.NAs', V1479, V1480, V1481, V1482} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1482)); _ -> case V6 of {'Core.Value.NAs', V1483, V1484, V1485, V1486} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1486, V7)); _ -> begin (V1492 = begin (V1487 = V0), fun (V1488) -> begin (V1491 = (begin (V1489 = V1487), fun (V1490) -> ('erlang':'get'(V1489)) end end(V1488))), {'Prelude.Types.Right', V1491} end end end), fun (V1493) -> begin (V1494 = (V1492(V1493))), case V1494 of {'Prelude.Types.Left', V1495} -> {'Prelude.Types.Left', V1495}; {'Prelude.Types.Right', V1496} -> (begin (V1510 = begin (V1498 = fun (V1497) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1496, V1497)) end), fun (V1499) -> begin (V1500 = (V1498(V1499))), case V1500 of {'Prelude.Types.Left', V1501} -> {'Prelude.Types.Left', V1501}; {'Prelude.Types.Right', V1502} -> (begin (V1509 = begin (V1503 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1504) -> begin (V1505 = (V1503(V1504))), case V1505 of {'Prelude.Types.Left', V1506} -> {'Prelude.Types.Left', V1506}; {'Prelude.Types.Right', V1507} -> (begin (V1508 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1508 end(V1504)) end end end end), V1509 end(V1499)) end end end end), V1510 end(V1493)) end end end end end end end; {'Core.Value.NApp', V1511, V1512, V1513} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1511, V1512, V1513, V7)); _ -> case V7 of {'Core.Value.NApp', V1514, V1515, V1516} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1517, V1518} -> V1518 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1514, V1515, V1516, V6)); 0 -> begin (V1519 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1520) -> begin (V1521 = (V1519(V1520))), case V1521 of {'Prelude.Types.Left', V1522} -> {'Prelude.Types.Left', V1522}; {'Prelude.Types.Right', V1523} -> (begin (V1524 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1514, V1515, V1516}))), V1524 end(V1520)) end end end end end; {'Core.Value.NAs', V1525, V1526, V1527, V1528} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1528)); _ -> case V6 of {'Core.Value.NAs', V1529, V1530, V1531, V1532} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1532, V7)); _ -> begin (V1538 = begin (V1533 = V0), fun (V1534) -> begin (V1537 = (begin (V1535 = V1533), fun (V1536) -> ('erlang':'get'(V1535)) end end(V1534))), {'Prelude.Types.Right', V1537} end end end), fun (V1539) -> begin (V1540 = (V1538(V1539))), case V1540 of {'Prelude.Types.Left', V1541} -> {'Prelude.Types.Left', V1541}; {'Prelude.Types.Right', V1542} -> (begin (V1556 = begin (V1544 = fun (V1543) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1542, V1543)) end), fun (V1545) -> begin (V1546 = (V1544(V1545))), case V1546 of {'Prelude.Types.Left', V1547} -> {'Prelude.Types.Left', V1547}; {'Prelude.Types.Right', V1548} -> (begin (V1555 = begin (V1549 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1550) -> begin (V1551 = (V1549(V1550))), case V1551 of {'Prelude.Types.Left', V1552} -> {'Prelude.Types.Left', V1552}; {'Prelude.Types.Right', V1553} -> (begin (V1554 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1554 end(V1550)) end end end end), V1555 end(V1545)) end end end end), V1556 end(V1539)) end end end end end end end end end end; _ -> case V7 of {'Core.Value.NApp', V1557, V1558, V1559} -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V1335, V1336, V1337, V1557, V1558, V1559)); _ -> case V7 of {'Core.Value.NErased', V1560, V1561} -> case V1561 of {'Core.TT.Dotted', V1562} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1562)); _ -> case V6 of {'Core.Value.NErased', V1563, V1564} -> case V1564 of {'Core.TT.Dotted', V1565} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1565, V7)); _ -> case V7 of {'Core.Value.NApp', V1566, V1567, V1568} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1569, V1570} -> V1570 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1566, V1567, V1568, V6)); 0 -> begin (V1571 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1572) -> begin (V1573 = (V1571(V1572))), case V1573 of {'Prelude.Types.Left', V1574} -> {'Prelude.Types.Left', V1574}; {'Prelude.Types.Right', V1575} -> (begin (V1576 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1566, V1567, V1568}))), V1576 end(V1572)) end end end end end; {'Core.Value.NAs', V1577, V1578, V1579, V1580} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1580)); _ -> case V6 of {'Core.Value.NAs', V1581, V1582, V1583, V1584} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1584, V7)); _ -> begin (V1590 = begin (V1585 = V0), fun (V1586) -> begin (V1589 = (begin (V1587 = V1585), fun (V1588) -> ('erlang':'get'(V1587)) end end(V1586))), {'Prelude.Types.Right', V1589} end end end), fun (V1591) -> begin (V1592 = (V1590(V1591))), case V1592 of {'Prelude.Types.Left', V1593} -> {'Prelude.Types.Left', V1593}; {'Prelude.Types.Right', V1594} -> (begin (V1608 = begin (V1596 = fun (V1595) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1594, V1595)) end), fun (V1597) -> begin (V1598 = (V1596(V1597))), case V1598 of {'Prelude.Types.Left', V1599} -> {'Prelude.Types.Left', V1599}; {'Prelude.Types.Right', V1600} -> (begin (V1607 = begin (V1601 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1602) -> begin (V1603 = (V1601(V1602))), case V1603 of {'Prelude.Types.Left', V1604} -> {'Prelude.Types.Left', V1604}; {'Prelude.Types.Right', V1605} -> (begin (V1606 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1606 end(V1602)) end end end end), V1607 end(V1597)) end end end end), V1608 end(V1591)) end end end end end end end; {'Core.Value.NApp', V1609, V1610, V1611} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1609, V1610, V1611, V7)); _ -> case V7 of {'Core.Value.NApp', V1612, V1613, V1614} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1615, V1616} -> V1616 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1612, V1613, V1614, V6)); 0 -> begin (V1617 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1618) -> begin (V1619 = (V1617(V1618))), case V1619 of {'Prelude.Types.Left', V1620} -> {'Prelude.Types.Left', V1620}; {'Prelude.Types.Right', V1621} -> (begin (V1622 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1612, V1613, V1614}))), V1622 end(V1618)) end end end end end; {'Core.Value.NAs', V1623, V1624, V1625, V1626} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1626)); _ -> case V6 of {'Core.Value.NAs', V1627, V1628, V1629, V1630} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1630, V7)); _ -> begin (V1636 = begin (V1631 = V0), fun (V1632) -> begin (V1635 = (begin (V1633 = V1631), fun (V1634) -> ('erlang':'get'(V1633)) end end(V1632))), {'Prelude.Types.Right', V1635} end end end), fun (V1637) -> begin (V1638 = (V1636(V1637))), case V1638 of {'Prelude.Types.Left', V1639} -> {'Prelude.Types.Left', V1639}; {'Prelude.Types.Right', V1640} -> (begin (V1654 = begin (V1642 = fun (V1641) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1640, V1641)) end), fun (V1643) -> begin (V1644 = (V1642(V1643))), case V1644 of {'Prelude.Types.Left', V1645} -> {'Prelude.Types.Left', V1645}; {'Prelude.Types.Right', V1646} -> (begin (V1653 = begin (V1647 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1648) -> begin (V1649 = (V1647(V1648))), case V1649 of {'Prelude.Types.Left', V1650} -> {'Prelude.Types.Left', V1650}; {'Prelude.Types.Right', V1651} -> (begin (V1652 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1652 end(V1648)) end end end end), V1653 end(V1643)) end end end end), V1654 end(V1637)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V1655, V1656} -> case V1656 of {'Core.TT.Dotted', V1657} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1657, V7)); _ -> case V7 of {'Core.Value.NApp', V1658, V1659, V1660} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1661, V1662} -> V1662 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1658, V1659, V1660, V6)); 0 -> begin (V1663 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1664) -> begin (V1665 = (V1663(V1664))), case V1665 of {'Prelude.Types.Left', V1666} -> {'Prelude.Types.Left', V1666}; {'Prelude.Types.Right', V1667} -> (begin (V1668 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1658, V1659, V1660}))), V1668 end(V1664)) end end end end end; {'Core.Value.NAs', V1669, V1670, V1671, V1672} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1672)); _ -> case V6 of {'Core.Value.NAs', V1673, V1674, V1675, V1676} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1676, V7)); _ -> begin (V1682 = begin (V1677 = V0), fun (V1678) -> begin (V1681 = (begin (V1679 = V1677), fun (V1680) -> ('erlang':'get'(V1679)) end end(V1678))), {'Prelude.Types.Right', V1681} end end end), fun (V1683) -> begin (V1684 = (V1682(V1683))), case V1684 of {'Prelude.Types.Left', V1685} -> {'Prelude.Types.Left', V1685}; {'Prelude.Types.Right', V1686} -> (begin (V1700 = begin (V1688 = fun (V1687) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1686, V1687)) end), fun (V1689) -> begin (V1690 = (V1688(V1689))), case V1690 of {'Prelude.Types.Left', V1691} -> {'Prelude.Types.Left', V1691}; {'Prelude.Types.Right', V1692} -> (begin (V1699 = begin (V1693 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1694) -> begin (V1695 = (V1693(V1694))), case V1695 of {'Prelude.Types.Left', V1696} -> {'Prelude.Types.Left', V1696}; {'Prelude.Types.Right', V1697} -> (begin (V1698 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1698 end(V1694)) end end end end), V1699 end(V1689)) end end end end), V1700 end(V1683)) end end end end end end end; {'Core.Value.NApp', V1701, V1702, V1703} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1701, V1702, V1703, V7)); _ -> case V7 of {'Core.Value.NApp', V1704, V1705, V1706} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1707, V1708} -> V1708 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1704, V1705, V1706, V6)); 0 -> begin (V1709 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1710) -> begin (V1711 = (V1709(V1710))), case V1711 of {'Prelude.Types.Left', V1712} -> {'Prelude.Types.Left', V1712}; {'Prelude.Types.Right', V1713} -> (begin (V1714 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1704, V1705, V1706}))), V1714 end(V1710)) end end end end end; {'Core.Value.NAs', V1715, V1716, V1717, V1718} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1718)); _ -> case V6 of {'Core.Value.NAs', V1719, V1720, V1721, V1722} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1722, V7)); _ -> begin (V1728 = begin (V1723 = V0), fun (V1724) -> begin (V1727 = (begin (V1725 = V1723), fun (V1726) -> ('erlang':'get'(V1725)) end end(V1724))), {'Prelude.Types.Right', V1727} end end end), fun (V1729) -> begin (V1730 = (V1728(V1729))), case V1730 of {'Prelude.Types.Left', V1731} -> {'Prelude.Types.Left', V1731}; {'Prelude.Types.Right', V1732} -> (begin (V1746 = begin (V1734 = fun (V1733) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1732, V1733)) end), fun (V1735) -> begin (V1736 = (V1734(V1735))), case V1736 of {'Prelude.Types.Left', V1737} -> {'Prelude.Types.Left', V1737}; {'Prelude.Types.Right', V1738} -> (begin (V1745 = begin (V1739 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1740) -> begin (V1741 = (V1739(V1740))), case V1741 of {'Prelude.Types.Left', V1742} -> {'Prelude.Types.Left', V1742}; {'Prelude.Types.Right', V1743} -> (begin (V1744 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1744 end(V1740)) end end end end), V1745 end(V1735)) end end end end), V1746 end(V1729)) end end end end end end end end end end; _ -> case V7 of {'Core.Value.NApp', V1747, V1748, V1749} -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V1335, V1336, V1337, V1747, V1748, V1749)); _ -> case V7 of {'Core.Value.NErased', V1750, V1751} -> case V1751 of {'Core.TT.Dotted', V1752} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1752)); _ -> case V6 of {'Core.Value.NErased', V1753, V1754} -> case V1754 of {'Core.TT.Dotted', V1755} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1755, V7)); _ -> case V7 of {'Core.Value.NApp', V1756, V1757, V1758} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1759, V1760} -> V1760 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1756, V1757, V1758, V6)); 0 -> begin (V1761 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1762) -> begin (V1763 = (V1761(V1762))), case V1763 of {'Prelude.Types.Left', V1764} -> {'Prelude.Types.Left', V1764}; {'Prelude.Types.Right', V1765} -> (begin (V1766 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1756, V1757, V1758}))), V1766 end(V1762)) end end end end end; {'Core.Value.NAs', V1767, V1768, V1769, V1770} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1770)); _ -> case V6 of {'Core.Value.NAs', V1771, V1772, V1773, V1774} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1774, V7)); _ -> begin (V1780 = begin (V1775 = V0), fun (V1776) -> begin (V1779 = (begin (V1777 = V1775), fun (V1778) -> ('erlang':'get'(V1777)) end end(V1776))), {'Prelude.Types.Right', V1779} end end end), fun (V1781) -> begin (V1782 = (V1780(V1781))), case V1782 of {'Prelude.Types.Left', V1783} -> {'Prelude.Types.Left', V1783}; {'Prelude.Types.Right', V1784} -> (begin (V1798 = begin (V1786 = fun (V1785) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1784, V1785)) end), fun (V1787) -> begin (V1788 = (V1786(V1787))), case V1788 of {'Prelude.Types.Left', V1789} -> {'Prelude.Types.Left', V1789}; {'Prelude.Types.Right', V1790} -> (begin (V1797 = begin (V1791 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1792) -> begin (V1793 = (V1791(V1792))), case V1793 of {'Prelude.Types.Left', V1794} -> {'Prelude.Types.Left', V1794}; {'Prelude.Types.Right', V1795} -> (begin (V1796 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1796 end(V1792)) end end end end), V1797 end(V1787)) end end end end), V1798 end(V1781)) end end end end end end end; {'Core.Value.NApp', V1799, V1800, V1801} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1799, V1800, V1801, V7)); _ -> case V7 of {'Core.Value.NApp', V1802, V1803, V1804} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1805, V1806} -> V1806 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1802, V1803, V1804, V6)); 0 -> begin (V1807 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1808) -> begin (V1809 = (V1807(V1808))), case V1809 of {'Prelude.Types.Left', V1810} -> {'Prelude.Types.Left', V1810}; {'Prelude.Types.Right', V1811} -> (begin (V1812 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1802, V1803, V1804}))), V1812 end(V1808)) end end end end end; {'Core.Value.NAs', V1813, V1814, V1815, V1816} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1816)); _ -> case V6 of {'Core.Value.NAs', V1817, V1818, V1819, V1820} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1820, V7)); _ -> begin (V1826 = begin (V1821 = V0), fun (V1822) -> begin (V1825 = (begin (V1823 = V1821), fun (V1824) -> ('erlang':'get'(V1823)) end end(V1822))), {'Prelude.Types.Right', V1825} end end end), fun (V1827) -> begin (V1828 = (V1826(V1827))), case V1828 of {'Prelude.Types.Left', V1829} -> {'Prelude.Types.Left', V1829}; {'Prelude.Types.Right', V1830} -> (begin (V1844 = begin (V1832 = fun (V1831) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1830, V1831)) end), fun (V1833) -> begin (V1834 = (V1832(V1833))), case V1834 of {'Prelude.Types.Left', V1835} -> {'Prelude.Types.Left', V1835}; {'Prelude.Types.Right', V1836} -> (begin (V1843 = begin (V1837 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1838) -> begin (V1839 = (V1837(V1838))), case V1839 of {'Prelude.Types.Left', V1840} -> {'Prelude.Types.Left', V1840}; {'Prelude.Types.Right', V1841} -> (begin (V1842 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1842 end(V1838)) end end end end), V1843 end(V1833)) end end end end), V1844 end(V1827)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V1845, V1846} -> case V1846 of {'Core.TT.Dotted', V1847} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1847, V7)); _ -> case V7 of {'Core.Value.NApp', V1848, V1849, V1850} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1851, V1852} -> V1852 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1848, V1849, V1850, V6)); 0 -> begin (V1853 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1854) -> begin (V1855 = (V1853(V1854))), case V1855 of {'Prelude.Types.Left', V1856} -> {'Prelude.Types.Left', V1856}; {'Prelude.Types.Right', V1857} -> (begin (V1858 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1848, V1849, V1850}))), V1858 end(V1854)) end end end end end; {'Core.Value.NAs', V1859, V1860, V1861, V1862} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1862)); _ -> case V6 of {'Core.Value.NAs', V1863, V1864, V1865, V1866} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1866, V7)); _ -> begin (V1872 = begin (V1867 = V0), fun (V1868) -> begin (V1871 = (begin (V1869 = V1867), fun (V1870) -> ('erlang':'get'(V1869)) end end(V1868))), {'Prelude.Types.Right', V1871} end end end), fun (V1873) -> begin (V1874 = (V1872(V1873))), case V1874 of {'Prelude.Types.Left', V1875} -> {'Prelude.Types.Left', V1875}; {'Prelude.Types.Right', V1876} -> (begin (V1890 = begin (V1878 = fun (V1877) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1876, V1877)) end), fun (V1879) -> begin (V1880 = (V1878(V1879))), case V1880 of {'Prelude.Types.Left', V1881} -> {'Prelude.Types.Left', V1881}; {'Prelude.Types.Right', V1882} -> (begin (V1889 = begin (V1883 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1884) -> begin (V1885 = (V1883(V1884))), case V1885 of {'Prelude.Types.Left', V1886} -> {'Prelude.Types.Left', V1886}; {'Prelude.Types.Right', V1887} -> (begin (V1888 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1888 end(V1884)) end end end end), V1889 end(V1879)) end end end end), V1890 end(V1873)) end end end end end end end; {'Core.Value.NApp', V1891, V1892, V1893} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1891, V1892, V1893, V7)); _ -> case V7 of {'Core.Value.NApp', V1894, V1895, V1896} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1897, V1898} -> V1898 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1894, V1895, V1896, V6)); 0 -> begin (V1899 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1900) -> begin (V1901 = (V1899(V1900))), case V1901 of {'Prelude.Types.Left', V1902} -> {'Prelude.Types.Left', V1902}; {'Prelude.Types.Right', V1903} -> (begin (V1904 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1894, V1895, V1896}))), V1904 end(V1900)) end end end end end; {'Core.Value.NAs', V1905, V1906, V1907, V1908} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1908)); _ -> case V6 of {'Core.Value.NAs', V1909, V1910, V1911, V1912} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1912, V7)); _ -> begin (V1918 = begin (V1913 = V0), fun (V1914) -> begin (V1917 = (begin (V1915 = V1913), fun (V1916) -> ('erlang':'get'(V1915)) end end(V1914))), {'Prelude.Types.Right', V1917} end end end), fun (V1919) -> begin (V1920 = (V1918(V1919))), case V1920 of {'Prelude.Types.Left', V1921} -> {'Prelude.Types.Left', V1921}; {'Prelude.Types.Right', V1922} -> (begin (V1936 = begin (V1924 = fun (V1923) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1922, V1923)) end), fun (V1925) -> begin (V1926 = (V1924(V1925))), case V1926 of {'Prelude.Types.Left', V1927} -> {'Prelude.Types.Left', V1927}; {'Prelude.Types.Right', V1928} -> (begin (V1935 = begin (V1929 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1930) -> begin (V1931 = (V1929(V1930))), case V1931 of {'Prelude.Types.Left', V1932} -> {'Prelude.Types.Left', V1932}; {'Prelude.Types.Right', V1933} -> (begin (V1934 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1934 end(V1930)) end end end end), V1935 end(V1925)) end end end end), V1936 end(V1919)) end end end end end end end end end end; _ -> case V7 of {'Core.Value.NErased', V1937, V1938} -> case V1938 of {'Core.TT.Dotted', V1939} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1939)); _ -> case V6 of {'Core.Value.NErased', V1940, V1941} -> case V1941 of {'Core.TT.Dotted', V1942} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1942, V7)); _ -> case V7 of {'Core.Value.NApp', V1943, V1944, V1945} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1946, V1947} -> V1947 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1943, V1944, V1945, V6)); 0 -> begin (V1948 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1949) -> begin (V1950 = (V1948(V1949))), case V1950 of {'Prelude.Types.Left', V1951} -> {'Prelude.Types.Left', V1951}; {'Prelude.Types.Right', V1952} -> (begin (V1953 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1943, V1944, V1945}))), V1953 end(V1949)) end end end end end; {'Core.Value.NAs', V1954, V1955, V1956, V1957} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V1957)); _ -> case V6 of {'Core.Value.NAs', V1958, V1959, V1960, V1961} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V1961, V7)); _ -> begin (V1967 = begin (V1962 = V0), fun (V1963) -> begin (V1966 = (begin (V1964 = V1962), fun (V1965) -> ('erlang':'get'(V1964)) end end(V1963))), {'Prelude.Types.Right', V1966} end end end), fun (V1968) -> begin (V1969 = (V1967(V1968))), case V1969 of {'Prelude.Types.Left', V1970} -> {'Prelude.Types.Left', V1970}; {'Prelude.Types.Right', V1971} -> (begin (V1985 = begin (V1973 = fun (V1972) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V1971, V1972)) end), fun (V1974) -> begin (V1975 = (V1973(V1974))), case V1975 of {'Prelude.Types.Left', V1976} -> {'Prelude.Types.Left', V1976}; {'Prelude.Types.Right', V1977} -> (begin (V1984 = begin (V1978 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V1979) -> begin (V1980 = (V1978(V1979))), case V1980 of {'Prelude.Types.Left', V1981} -> {'Prelude.Types.Left', V1981}; {'Prelude.Types.Right', V1982} -> (begin (V1983 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V1983 end(V1979)) end end end end), V1984 end(V1974)) end end end end), V1985 end(V1968)) end end end end end end end; {'Core.Value.NApp', V1986, V1987, V1988} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V1986, V1987, V1988, V7)); _ -> case V7 of {'Core.Value.NApp', V1989, V1990, V1991} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1992, V1993} -> V1993 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V1989, V1990, V1991, V6)); 0 -> begin (V1994 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V1995) -> begin (V1996 = (V1994(V1995))), case V1996 of {'Prelude.Types.Left', V1997} -> {'Prelude.Types.Left', V1997}; {'Prelude.Types.Right', V1998} -> (begin (V1999 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V1989, V1990, V1991}))), V1999 end(V1995)) end end end end end; {'Core.Value.NAs', V2000, V2001, V2002, V2003} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V2003)); _ -> case V6 of {'Core.Value.NAs', V2004, V2005, V2006, V2007} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V2007, V7)); _ -> begin (V2013 = begin (V2008 = V0), fun (V2009) -> begin (V2012 = (begin (V2010 = V2008), fun (V2011) -> ('erlang':'get'(V2010)) end end(V2009))), {'Prelude.Types.Right', V2012} end end end), fun (V2014) -> begin (V2015 = (V2013(V2014))), case V2015 of {'Prelude.Types.Left', V2016} -> {'Prelude.Types.Left', V2016}; {'Prelude.Types.Right', V2017} -> (begin (V2031 = begin (V2019 = fun (V2018) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V2017, V2018)) end), fun (V2020) -> begin (V2021 = (V2019(V2020))), case V2021 of {'Prelude.Types.Left', V2022} -> {'Prelude.Types.Left', V2022}; {'Prelude.Types.Right', V2023} -> (begin (V2030 = begin (V2024 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V2025) -> begin (V2026 = (V2024(V2025))), case V2026 of {'Prelude.Types.Left', V2027} -> {'Prelude.Types.Left', V2027}; {'Prelude.Types.Right', V2028} -> (begin (V2029 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V2029 end(V2025)) end end end end), V2030 end(V2020)) end end end end), V2031 end(V2014)) end end end end end end end end; _ -> case V6 of {'Core.Value.NErased', V2032, V2033} -> case V2033 of {'Core.TT.Dotted', V2034} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V2034, V7)); _ -> case V7 of {'Core.Value.NApp', V2035, V2036, V2037} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2038, V2039} -> V2039 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V2035, V2036, V2037, V6)); 0 -> begin (V2040 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V2041) -> begin (V2042 = (V2040(V2041))), case V2042 of {'Prelude.Types.Left', V2043} -> {'Prelude.Types.Left', V2043}; {'Prelude.Types.Right', V2044} -> (begin (V2045 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V2035, V2036, V2037}))), V2045 end(V2041)) end end end end end; {'Core.Value.NAs', V2046, V2047, V2048, V2049} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V2049)); _ -> case V6 of {'Core.Value.NAs', V2050, V2051, V2052, V2053} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V2053, V7)); _ -> begin (V2059 = begin (V2054 = V0), fun (V2055) -> begin (V2058 = (begin (V2056 = V2054), fun (V2057) -> ('erlang':'get'(V2056)) end end(V2055))), {'Prelude.Types.Right', V2058} end end end), fun (V2060) -> begin (V2061 = (V2059(V2060))), case V2061 of {'Prelude.Types.Left', V2062} -> {'Prelude.Types.Left', V2062}; {'Prelude.Types.Right', V2063} -> (begin (V2077 = begin (V2065 = fun (V2064) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V2063, V2064)) end), fun (V2066) -> begin (V2067 = (V2065(V2066))), case V2067 of {'Prelude.Types.Left', V2068} -> {'Prelude.Types.Left', V2068}; {'Prelude.Types.Right', V2069} -> (begin (V2076 = begin (V2070 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V2071) -> begin (V2072 = (V2070(V2071))), case V2072 of {'Prelude.Types.Left', V2073} -> {'Prelude.Types.Left', V2073}; {'Prelude.Types.Right', V2074} -> (begin (V2075 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V2075 end(V2071)) end end end end), V2076 end(V2066)) end end end end), V2077 end(V2060)) end end end end end end end; {'Core.Value.NApp', V2078, V2079, V2080} -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V2078, V2079, V2080, V7)); _ -> case V7 of {'Core.Value.NApp', V2081, V2082, V2083} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2084, V2085} -> V2085 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V2081, V2082, V2083, V6)); 0 -> begin (V2086 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Unify if Eq due to something with app"/utf8>> end))), fun (V2087) -> begin (V2088 = (V2086(V2087))), case V2088 of {'Prelude.Types.Left', V2089} -> {'Prelude.Types.Left', V2089}; {'Prelude.Types.Right', V2090} -> (begin (V2091 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Core.Value.NApp', V2081, V2082, V2083}))), V2091 end(V2087)) end end end end end; {'Core.Value.NAs', V2092, V2093, V2094, V2095} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V2095)); _ -> case V6 of {'Core.Value.NAs', V2096, V2097, V2098, V2099} -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V2099, V7)); _ -> begin (V2105 = begin (V2100 = V0), fun (V2101) -> begin (V2104 = (begin (V2102 = V2100), fun (V2103) -> ('erlang':'get'(V2102)) end end(V2101))), {'Prelude.Types.Right', V2104} end end end), fun (V2106) -> begin (V2107 = (V2105(V2106))), case V2107 of {'Prelude.Types.Left', V2108} -> {'Prelude.Types.Left', V2108}; {'Prelude.Types.Right', V2109} -> (begin (V2123 = begin (V2111 = fun (V2110) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V2109, V2110)) end), fun (V2112) -> begin (V2113 = (V2111(V2112))), case V2113 of {'Prelude.Types.Left', V2114} -> {'Prelude.Types.Left', V2114}; {'Prelude.Types.Right', V2115} -> (begin (V2122 = begin (V2116 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, 10, fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end))), fun (V2117) -> begin (V2118 = (V2116(V2117))), case V2118 of {'Prelude.Types.Left', V2119} -> {'Prelude.Types.Left', V2119}; {'Prelude.Types.Right', V2120} -> (begin (V2121 = ('un--unifyIfEq'(V0, V1, V2, case ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--14870-25978--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)) end, V4, V3, V5, V6, V7))), V2121 end(V2117)) end end end end), V2122 end(V2112)) end end end end), V2123 end(V2106)) end end end end end end end end end.
'un--unifyInvertible'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> begin (V19 = begin (V14 = V0), fun (V15) -> begin (V18 = (begin (V16 = V14), fun (V17) -> ('erlang':'get'(V16)) end end(V15))), {'Prelude.Types.Right', V18} end end end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V290 = begin (V56 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'({'Core.Name.Resolved', V8}, case V23 of {'Core.Context.MkDefs', V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55} -> V24 end))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V289 = case V60 of {'Prelude.Types.Just', V61} -> begin (V68 = begin (V62 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V0, V2, V23, V6, ('Idris.Idris2.Core.TT':'un--embed'(V61))))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V67 = ('un--getArgTypes'(V2, V0, V23, V66, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V9, V10))))), V67 end(V63)) end end end end), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V284 = begin (V89 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V73) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end, fun () -> fun (V74) -> begin (V75 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V0, V2, V23, V6, ('Idris.Idris2.Core.TT':'un--embed'(V74))))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V88 = ('un--getArgTypes'(V2, V0, V23, V79, ((begin (V85 = fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V83, V84)) end end end end), fun (V86) -> fun (V87) -> ((((V85('erased'))('erased'))(V86))(V87)) end end end(fun (V80) -> ('Idris.Idris2.Builtin':'un--snd'(V80)) end))(V13))))), V88 end(V76)) end end end end end end, V11))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V283 = begin (V94 = ('un--headsConvert'(V2, V0, V1, V4, V5, V6, V72, V93))), fun (V95) -> begin (V96 = (V94(V95))), case V96 of {'Prelude.Types.Left', V97} -> {'Prelude.Types.Left', V97}; {'Prelude.Types.Right', V98} -> (begin (V282 = case V98 of 1 -> case ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V10)) of [E0 | E1] -> (fun (V99, V100) -> case ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V13)) of [E2 | E3] -> (fun (V101, V102) -> ('Idris.Idris2.Core.UnifyState':'un--tryUnify'(V0, V1, case V3 of 1 -> begin (V103 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, 10, fun () -> <<"Unifying invertible"/utf8>> end))), fun (V104) -> begin (V105 = (V103(V104))), case V105 of {'Prelude.Types.Left', V106} -> {'Prelude.Types.Left', V106}; {'Prelude.Types.Right', V107} -> (begin (V174 = begin (V124 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> ('dn--un--unifyD_Unify_Closure'(V108, V109, V110, V111, V112, V113, V114, V115)) end end end end end end end end, fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V116, V117, V118, V119, V120, V121, V122, V123)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))(('Idris.Idris2.Builtin':'un--snd'(V101))))(V99))), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V173 = begin (V136 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, 10, fun () -> <<<<"Constraints "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V129) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V129)) end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V130, V131)) end end}, case V128 of {'Core.Unify.MkUnifyResult', V132, V133, V134, V135} -> V132 end))/binary>> end))), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V172 = begin (V165 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> ('dn--un--unifyD_Unify_NF'(V149, V150, V151, V152, V153, V154, V155, V156)) end end end end end end end end, fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> ('dn--un--unifyWithLazyD_Unify_NF'(V157, V158, V159, V160, V161, V162, V163, V164)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))((V12(('Idris.Idris2.Prelude.Types.List':'un--reverse'(V102))))))({'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(((begin (V146 = fun (V142) -> fun (V143) -> fun (V144) -> fun (V145) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V144, V145)) end end end end), fun (V147) -> fun (V148) -> ((((V146('erased'))('erased'))(V147))(V148)) end end end(fun (V141) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V141} end))(V100))))}))), fun (V166) -> begin (V167 = (V165(V166))), case V167 of {'Prelude.Types.Left', V168} -> {'Prelude.Types.Left', V168}; {'Prelude.Types.Right', V169} -> (begin (V171 = fun (V170) -> {'Prelude.Types.Right', ('un--union'(V128, V169))} end), V171 end(V166)) end end end end), V172 end(V137)) end end end end), V173 end(V125)) end end end end), V174 end(V104)) end end end end; 0 -> begin (V175 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, 10, fun () -> <<"Unifying invertible"/utf8>> end))), fun (V176) -> begin (V177 = (V175(V176))), case V177 of {'Prelude.Types.Left', V178} -> {'Prelude.Types.Left', V178}; {'Prelude.Types.Right', V179} -> (begin (V246 = begin (V196 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> ('dn--un--unifyD_Unify_Closure'(V180, V181, V182, V183, V184, V185, V186, V187)) end end end end end end end end, fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V188, V189, V190, V191, V192, V193, V194, V195)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))(V99))(('Idris.Idris2.Builtin':'un--snd'(V101))))), fun (V197) -> begin (V198 = (V196(V197))), case V198 of {'Prelude.Types.Left', V199} -> {'Prelude.Types.Left', V199}; {'Prelude.Types.Right', V200} -> (begin (V245 = begin (V208 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, 10, fun () -> <<<<"Constraints "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V201) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V201)) end, fun (V202) -> fun (V203) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V202, V203)) end end}, case V200 of {'Core.Unify.MkUnifyResult', V204, V205, V206, V207} -> V204 end))/binary>> end))), fun (V209) -> begin (V210 = (V208(V209))), case V210 of {'Prelude.Types.Left', V211} -> {'Prelude.Types.Left', V211}; {'Prelude.Types.Right', V212} -> (begin (V244 = begin (V237 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> ('dn--un--unifyD_Unify_NF'(V221, V222, V223, V224, V225, V226, V227, V228)) end end end end end end end end, fun (V229) -> fun (V230) -> fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> ('dn--un--unifyWithLazyD_Unify_NF'(V229, V230, V231, V232, V233, V234, V235, V236)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))({'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(((begin (V218 = fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V216, V217)) end end end end), fun (V219) -> fun (V220) -> ((((V218('erased'))('erased'))(V219))(V220)) end end end(fun (V213) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V213} end))(V100))))}))((V12(('Idris.Idris2.Prelude.Types.List':'un--reverse'(V102))))))), fun (V238) -> begin (V239 = (V237(V238))), case V239 of {'Prelude.Types.Left', V240} -> {'Prelude.Types.Left', V240}; {'Prelude.Types.Right', V241} -> (begin (V243 = fun (V242) -> {'Prelude.Types.Right', ('un--union'(V200, V241))} end), V243 end(V238)) end end end end), V244 end(V209)) end end end end), V245 end(V197)) end end end end), V246 end(V176)) end end end end end, ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [1]"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V252 = fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V250, V251)) end end end end), fun (V253) -> fun (V254) -> ((((V252('erased'))('erased'))(V253))(V254)) end end end(fun (V247) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V247} end))(V10))}, (V12(V13)))))) end(E2, E3)); _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [2]"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V260 = fun (V256) -> fun (V257) -> fun (V258) -> fun (V259) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V258, V259)) end end end end), fun (V261) -> fun (V262) -> ((((V260('erased'))('erased'))(V261))(V262)) end end end(fun (V255) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V255} end))(V10))}, (V12(V13)))) end end(E0, E1)); _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [2]"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V268 = fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V266, V267)) end end end end), fun (V269) -> fun (V270) -> ((((V268('erased'))('erased'))(V269))(V270)) end end end(fun (V263) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V263} end))(V10))}, (V12(V13)))) end; 0 -> ('un--postpone'(V2, V0, V1, V5, V4, (begin (V272 = fun (V271) -> V271 end), fun (V273) -> (V272(V273)) end end(<<"Postponing hole application [3]"/utf8>>)), V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V279 = fun (V275) -> fun (V276) -> fun (V277) -> fun (V278) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V277, V278)) end end end end), fun (V280) -> fun (V281) -> ((((V279('erased'))('erased'))(V280))(V281)) end end end(fun (V274) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V274} end))(V10))}, (V12(V13)))) end), V282 end(V95)) end end end end), V283 end(V90)) end end end end), V284 end(V69)) end end end end; {'Prelude.Types.Nothing'} -> fun (V285) -> ('un--ufail'(V5, <<(begin (V287 = fun (V286) -> V286 end), fun (V288) -> (V287(V288)) end end(<<"No such metavariable "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))/binary>>, V285)) end end), V289 end(V57)) end end end end), V290 end(V20)) end end end end.
'un--unifyIfEq'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V14 = begin (V9 = V0), fun (V10) -> begin (V13 = (begin (V11 = V9), fun (V12) -> ('erlang':'get'(V11)) end end(V10))), {'Prelude.Types.Right', V13} end end end), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V31 = begin (V19 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convertInf_Convert_NF'(V0, V2, V18, V6, V7, V8))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V30 = case V23 of 1 -> fun (V24) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> case V3 of 1 -> ('un--postpone'(V2, V0, V1, V4, V5, <<(begin (V26 = fun (V25) -> V25 end), fun (V27) -> (V26(V27)) end end(<<"Postponing unifyIfEq "/utf8>>))/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(case V5 of {'Core.Unify.MkUnifyInfo', V28, V29} -> V28 end))/binary>>, V6, V7, V8)); 0 -> ('un--convertError'(V2, V0, V4, V6, V7, V8)) end end), V30 end(V20)) end end end end), V31 end(V15)) end end end end.
'un--unifyHoleApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Core.Value.NTCon', V12, V13, V14, V15, V16} -> begin (V22 = begin (V17 = V0), fun (V18) -> begin (V21 = (begin (V19 = V17), fun (V20) -> ('erlang':'get'(V19)) end end(V18))), {'Prelude.Types.Right', V21} end end end), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V66 = begin (V59 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V13, case V26 of {'Core.Context.MkDefs', V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58} -> V27 end))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V65 = ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, V63, fun (V64) -> {'Core.Value.NTCon', V12, V13, V14, V15, V64} end, V16))), V65 end(V60)) end end end end), V66 end(V23)) end end end end; {'Core.Value.NDCon', V67, V68, V69, V70, V71} -> begin (V77 = begin (V72 = V0), fun (V73) -> begin (V76 = (begin (V74 = V72), fun (V75) -> ('erlang':'get'(V74)) end end(V73))), {'Prelude.Types.Right', V76} end end end), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V121 = begin (V114 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V68, case V81 of {'Core.Context.MkDefs', V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113} -> V82 end))), fun (V115) -> begin (V116 = (V114(V115))), case V116 of {'Prelude.Types.Left', V117} -> {'Prelude.Types.Left', V117}; {'Prelude.Types.Right', V118} -> (begin (V120 = ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, V118, fun (V119) -> {'Core.Value.NDCon', V67, V68, V69, V70, V119} end, V71))), V120 end(V115)) end end end end), V121 end(V78)) end end end end; {'Core.Value.NApp', V122, V123, V124} -> case V123 of {'Core.Value.NLocal', V125, V126} -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, {'Prelude.Types.Nothing'}, fun (V127) -> {'Core.Value.NApp', V122, {'Core.Value.NLocal', V125, V126}, V127} end, V124)); {'Core.Value.NMeta', V128, V129, V130} -> begin (V136 = begin (V131 = V0), fun (V132) -> begin (V135 = (begin (V133 = V131), fun (V134) -> ('erlang':'get'(V133)) end end(V132))), {'Prelude.Types.Right', V135} end end end), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V216 = begin (V173 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Core.Name.Resolved', V129}, case V140 of {'Core.Context.MkDefs', V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172} -> V141 end))), fun (V174) -> begin (V175 = (V173(V174))), case V175 of {'Prelude.Types.Left', V176} -> {'Prelude.Types.Left', V176}; {'Prelude.Types.Right', V177} -> (begin (V215 = begin (V178 = {'Core.Value.NApp', V122, {'Core.Value.NMeta', V128, V129, V130}, V124}), case V177 of {'Prelude.Types.Just', V179} -> begin (V202 = case ('nested--14517-20783--in--un--isPatName'(V2, V130, V129, V128, V124, V122, V178, V10, V9, V8, V7, V6, V5, V4, V3, V1, V0, V128)) of 1 -> 1; 0 -> case V179 of {'Core.Context.Context.MkGlobalDef', V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201} -> V194 end end), case V202 of 1 -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, {'Prelude.Types.Nothing'}, fun (V203) -> {'Core.Value.NApp', V122, {'Core.Value.NMeta', V128, V129, V130}, V203} end, V124)); 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, (begin (V205 = fun (V204) -> V204 end), fun (V206) -> (V205(V206)) end end(<<"Postponing hole application"/utf8>>)), V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V212 = fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V210, V211)) end end end end), fun (V213) -> fun (V214) -> ((((V212('erased'))('erased'))(V213))(V214)) end end end(fun (V207) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V207} end))(V10))}, V178)) end end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V122, V7)) end end), V215 end(V174)) end end end end), V216 end(V137)) end end end end; _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V222 = fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V220, V221)) end end end end), fun (V223) -> fun (V224) -> ((((V222('erased'))('erased'))(V223))(V224)) end end end(fun (V217) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V217} end))(V10))}, V11)) end; _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V230 = fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V228, V229)) end end end end), fun (V231) -> fun (V232) -> ((((V230('erased'))('erased'))(V231))(V232)) end end end(fun (V225) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V225} end))(V10))}, V11)) end.
'un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V18 = begin (V13 = V0), fun (V14) -> begin (V17 = (begin (V15 = V13), fun (V16) -> ('erlang':'get'(V15)) end end(V14))), {'Prelude.Types.Right', V17} end end end), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V319 = begin (V24 = fun (V23) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V22, V23)) end), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V318 = begin (V29 = case ('Idris.Idris2.Data.List':'un--isNil'(V11)) of 1 -> V10; 0 -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V10, V11)) end), begin (V54 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.hole"/utf8>>, 10, begin (V31 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V30) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalArg'(V0, V2, V28, V30)) end, V29, []))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V53 = begin (V37 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V36) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V28, V6, V36)) end, V35, []))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V52 = begin (V42 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V28, V6, V12))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V51 = fun (V47) -> {'Prelude.Types.Right', <<<<"Unifying: "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<<<" "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V49, V50)) end end}, V41))/binary, <<<<" with "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V46))/binary>>/binary>>/binary>>/binary>>/binary>>} end), V51 end(V43)) end end end end), V52 end(V38)) end end end end), V53 end(V32)) end end end end))), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V317 = begin (V59 = ('un--patternEnv'(V0, V1, V2, V6, V29))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V316 = case V63 of {'Prelude.Types.Nothing'} -> begin (V96 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Core.Name.Resolved', V9}, case V22 of {'Core.Context.MkDefs', V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95} -> V64 end))), fun (V97) -> begin (V98 = (V96(V97))), case V98 of {'Prelude.Types.Left', V99} -> {'Prelude.Types.Left', V99}; {'Prelude.Types.Right', V100} -> (begin (V148 = case V100 of {'Prelude.Types.Just', V101} -> case V101 of {'Core.Context.Context.MkGlobalDef', V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123} -> case V119 of {'Core.Context.Context.Hole', V124, V125} -> case case V101 of {'Core.Context.Context.MkGlobalDef', V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147} -> V140 end of 1 -> ('un--unifyHoleApp'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12)); 0 -> ('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12)) end; _ -> ('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12)) end end; _ -> ('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12)) end), V148 end(V97)) end end end end; {'Prelude.Types.Just', V149} -> case V149 of {'Builtin.DPair.MkDPair', V150, V151} -> case V151 of {'Builtin.MkPair', V152, V153} -> begin (V186 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Core.Name.Resolved', V9}, case V22 of {'Core.Context.MkDefs', V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185} -> V154 end))), fun (V187) -> begin (V188 = (V186(V187))), case V188 of {'Prelude.Types.Left', V189} -> {'Prelude.Types.Left', V189}; {'Prelude.Types.Right', V190} -> (begin (V315 = begin (V191 = {'Prelude.Types.Just', {'Builtin.DPair.MkDPair', V150, {'Builtin.MkPair', V152, V153}}}), case V190 of {'Prelude.Types.Just', V192} -> begin (V193 = {'Prelude.Types.Just', V192}), case V192 of {'Core.Context.Context.MkGlobalDef', V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215} -> case V211 of {'Core.Context.Context.Hole', V216, V217} -> begin (V267 = {'Core.Normalise.Quote.MkQuoteOpts', 0, 0, {'Prelude.Types.Just', case V22 of {'Core.Context.MkDefs', V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249} -> case V222 of {'Core.Options.MkOptions', V250, V251, V252, V253, V254, V255, V256, V257, V258, V259} -> case V253 of {'Core.Options.MkElabDirectives', V260, V261, V262, V263, V264, V265, V266} -> V265 end end end}}), begin (V269 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_NF'(V0, V2, V267, V28, V6, V12)), fun (V268) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V22, V6, V12)) end))), fun (V270) -> begin (V271 = (V269(V270))), case V271 of {'Prelude.Types.Left', V272} -> {'Prelude.Types.Left', V272}; {'Prelude.Types.Right', V273} -> (begin (V306 = begin (V274 = ('un--occursCheck'(V2, V0, V5, V6, V4, V8, V273))), fun (V275) -> begin (V276 = (V274(V275))), case V276 of {'Prelude.Types.Left', V277} -> {'Prelude.Types.Left', V277}; {'Prelude.Types.Right', V278} -> (begin (V305 = case V278 of {'Prelude.Types.Just', V279} -> begin (V280 = {'Prelude.Types.Just', V279}), case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V279, V153)) of {'Prelude.Types.Just', V281} -> ('nested--17870-22213--in--un--solveOrElsePostpone'(V2, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V0, V22, V28, V29, V150, V152, V153, V191, V192, V193, V216, V217, V267, V273, V279, V280, V281)); {'Prelude.Types.Nothing'} -> begin (V282 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V22, V6, V12))), fun (V283) -> begin (V284 = (V282(V283))), case V284 of {'Prelude.Types.Left', V285} -> {'Prelude.Types.Left', V285}; {'Prelude.Types.Right', V286} -> (begin (V296 = case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V286, V153)) of {'Prelude.Types.Nothing'} -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Can\x{27}t shrink"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V8, V9, V10}, ((begin (V292 = fun (V288) -> fun (V289) -> fun (V290) -> fun (V291) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V290, V291)) end end end end), fun (V293) -> fun (V294) -> ((((V292('erased'))('erased'))(V293))(V294)) end end end(fun (V287) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V287} end))(V11))}, V12)); {'Prelude.Types.Just', V295} -> ('nested--17870-22213--in--un--solveOrElsePostpone'(V2, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V0, V22, V28, V29, V150, V152, V153, V191, V192, V193, V216, V217, V267, V273, V279, V280, V295)) end), V296 end(V283)) end end end end end end; _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Occurs check failed"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V8, V9, V10}, ((begin (V302 = fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V300, V301)) end end end end), fun (V303) -> fun (V304) -> ((((V302('erased'))('erased'))(V303))(V304)) end end end(fun (V297) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V297} end))(V11))}, V12)) end), V305 end(V275)) end end end end), V306 end(V270)) end end end end end; _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Delayed hole"/utf8>>, V6, {'Core.Value.NApp', V5, {'Core.Value.NMeta', V8, V9, V10}, ((begin (V312 = fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V310, V311)) end end end end), fun (V313) -> fun (V314) -> ((((V312('erased'))('erased'))(V313))(V314)) end end end(fun (V307) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V307} end))(V11))}, V12)) end end end; _ -> ('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12)) end end), V315 end(V187)) end end end end end end end), V316 end(V60)) end end end end), V317 end(V55)) end end end end end), V318 end(V25)) end end end end), V319 end(V19)) end end end end.
'un--unifyD'(V0, V1, V2, V3, V4) -> case V0 of {'Core.Unify.dn--un--__mkUnify', V5, V6} -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ((((((((V5(V1))(V2))(V3))(V4))(V7))(V8))(V9))(V10)) end end end end end.
'un--unifyBothBinders'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V8 of {'Core.TT.Pi', V14, V15, V16, V17} -> case V12 of {'Core.TT.Pi', V18, V19, V20, V21} -> begin (V27 = begin (V22 = V0), fun (V23) -> begin (V26 = (begin (V24 = V22), fun (V25) -> ('erlang':'get'(V24)) end end(V23))), {'Prelude.Types.Right', V26} end end end), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V91 = case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V15, V19)) of 1 -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NBind', V6, V7, {'Core.TT.Pi', V14, V15, V16, V17}, V9}, {'Core.Value.NBind', V10, V11, {'Core.TT.Pi', V18, V19, V20, V21}, V13})); 0 -> begin (V33 = fun (V32) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V31, V32)) end), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V90 = begin (V38 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V37, V5, V17))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V89 = begin (V50 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.binder"/utf8>>, 10, begin (V43 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V37, V5, V21))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V49 = fun (V48) -> {'Prelude.Types.Right', <<<<"Unifying arg types "/utf8>>/binary, <<('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V42))/binary, <<<<" and "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V47))/binary>>/binary>>/binary>>} end), V49 end(V44)) end end end end))), fun (V51) -> begin (V52 = (V50(V51))), case V52 of {'Prelude.Types.Left', V53} -> {'Prelude.Types.Left', V53}; {'Prelude.Types.Right', V54} -> (begin (V88 = begin (V71 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('dn--un--unifyD_Unify_Closure'(V55, V56, V57, V58, V59, V60, V61, V62)) end end end end end end end end, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V63, V64, V65, V66, V67, V68, V69, V70)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V17))(V21))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V87 = begin (V76 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V1, <<"x"/utf8>>))), fun (V77) -> begin (V78 = (V76(V77))), case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> (begin (V86 = begin (V81 = {'Core.Env.::', {'Core.TT.Pi', V18, V19, {'Core.TT.Explicit'}, V42}, V5}), ('case--case block in unifyBothBinders-24603'(V2, V17, V16, V15, V14, V21, V20, V19, V18, V13, V11, V10, V9, V7, V6, V5, V4, V3, V1, V0, V31, V37, V42, V75, V80, V81, case V75 of {'Core.Unify.MkUnifyResult', V82, V83, V84, V85} -> V82 end)) end), V86 end(V77)) end end end end), V87 end(V72)) end end end end), V88 end(V51)) end end end end), V89 end(V39)) end end end end), V90 end(V34)) end end end end end), V91 end(V28)) end end end end; _ -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NBind', V6, V7, V8, V9}, {'Core.Value.NBind', V10, V11, V12, V13})) end; {'Core.TT.Lam', V92, V93, V94, V95} -> case V12 of {'Core.TT.Lam', V96, V97, V98, V99} -> begin (V105 = begin (V100 = V0), fun (V101) -> begin (V104 = (begin (V102 = V100), fun (V103) -> ('erlang':'get'(V102)) end end(V101))), {'Prelude.Types.Right', V104} end end end), fun (V106) -> begin (V107 = (V105(V106))), case V107 of {'Prelude.Types.Left', V108} -> {'Prelude.Types.Left', V108}; {'Prelude.Types.Right', V109} -> (begin (V199 = case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V93, V97)) of 1 -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NBind', V6, V7, {'Core.TT.Lam', V92, V93, V94, V95}, V9}, {'Core.Value.NBind', V10, V11, {'Core.TT.Lam', V96, V97, V98, V99}, V13})); 0 -> begin (V111 = fun (V110) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V109, V110)) end), fun (V112) -> begin (V113 = (V111(V112))), case V113 of {'Prelude.Types.Left', V114} -> {'Prelude.Types.Left', V114}; {'Prelude.Types.Right', V115} -> (begin (V198 = begin (V132 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('dn--un--unifyD_Unify_Closure'(V116, V117, V118, V119, V120, V121, V122, V123)) end end end end end end end end, fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V124, V125, V126, V127, V128, V129, V130, V131)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V95))(V99))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V197 = begin (V137 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V1, <<"x"/utf8>>))), fun (V138) -> begin (V139 = (V137(V138))), case V139 of {'Prelude.Types.Left', V140} -> {'Prelude.Types.Left', V140}; {'Prelude.Types.Right', V141} -> (begin (V196 = begin (V142 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V115, V5, V95))), fun (V143) -> begin (V144 = (V142(V143))), case V144 of {'Prelude.Types.Left', V145} -> {'Prelude.Types.Left', V145}; {'Prelude.Types.Right', V146} -> (begin (V195 = begin (V147 = {'Core.Env.::', {'Core.TT.Lam', V92, V93, {'Core.TT.Explicit'}, V146}, V5}), begin (V148 = ((V9(V109))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V5, {'Core.TT.Ref', V4, {'Core.TT.Bound'}, V141}))))), fun (V149) -> begin (V150 = (V148(V149))), case V150 of {'Prelude.Types.Left', V151} -> {'Prelude.Types.Left', V151}; {'Prelude.Types.Right', V152} -> (begin (V194 = begin (V153 = ((V13(V109))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V5, {'Core.TT.Ref', V4, {'Core.TT.Bound'}, V141}))))), fun (V154) -> begin (V155 = (V153(V154))), case V155 of {'Prelude.Types.Left', V156} -> {'Prelude.Types.Left', V156}; {'Prelude.Types.Right', V157} -> (begin (V193 = begin (V158 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V115, V5, V152))), fun (V159) -> begin (V160 = (V158(V159))), case V160 of {'Prelude.Types.Left', V161} -> {'Prelude.Types.Left', V161}; {'Prelude.Types.Right', V162} -> (begin (V192 = begin (V163 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V115, V5, V157))), fun (V164) -> begin (V165 = (V163(V164))), case V165 of {'Prelude.Types.Left', V166} -> {'Prelude.Types.Left', V166}; {'Prelude.Types.Right', V167} -> (begin (V191 = begin (V184 = ((('un--unify'({'Core.Unify.dn--un--__mkUnify', fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> ('dn--un--unifyD_Unify_Term'(V168, V169, V170, V171, V172, V173, V174, V175)) end end end end end end end end, fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> ('dn--un--unifyWithLazyD_Unify_Term'(V176, V177, V178, V179, V180, V181, V182, V183)) end end end end end end end end}, [V7 | V2], V0, V1, ('un--lower'(V3)), V4, V147))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Core.TT.Bounds.Add', V7, V141, {'Core.TT.Bounds.None'}}, V162))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Core.TT.Bounds.Add', V7, V141, {'Core.TT.Bounds.None'}}, V167))))), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V190 = fun (V189) -> {'Prelude.Types.Right', ('un--union'(V136, V188))} end), V190 end(V185)) end end end end), V191 end(V164)) end end end end), V192 end(V159)) end end end end), V193 end(V154)) end end end end), V194 end(V149)) end end end end end), V195 end(V143)) end end end end), V196 end(V138)) end end end end), V197 end(V133)) end end end end), V198 end(V112)) end end end end end), V199 end(V106)) end end end end; _ -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NBind', V6, V7, V8, V9}, {'Core.Value.NBind', V10, V11, V12, V13})) end; _ -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NBind', V6, V7, V8, V9}, {'Core.Value.NBind', V10, V11, V12, V13})) end.
'un--unifyBothApps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V7 of {'Core.Value.NLocal', V12, V13} -> case V8 of [] -> case V10 of {'Core.Value.NLocal', V14, V15} -> case V11 of [] -> case case (V13 =:= V15) of 'false' -> 0; _ -> 1 end of 1 -> fun (V16) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V12, V13}, []}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V14, V15}, []})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V17, V18} -> case V18 of 1 -> case V7 of {'Core.Value.NLocal', V19, V20} -> case V10 of {'Core.Value.NLocal', V21, V22} -> begin (V23 = {'Core.Unify.MkUnifyInfo', V17, 1}), case case (V20 =:= V22) of 'false' -> 0; _ -> 1 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('dn--un--unifyD_Unify_Closure'(V24, V25, V26, V27, V28, V29, V30, V31)) end end end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V32, V33, V34, V35, V36, V37, V38, V39)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V40, V41, V42, V43, V44)) end end end end end, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V45, V46, V47, V48, V49)) end end end end end, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V50, V51, V52, V53, V54, V55)) end end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V56, V57, V58, V59, V60, V61, V62)) end end end end end end end}}, V2, V0, V1, V23, V4, V5, ((begin (V68 = fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V66, V67)) end end end end), fun (V69) -> fun (V70) -> ((((V68('erased'))('erased'))(V69))(V70)) end end end(fun (V63) -> ('Idris.Idris2.Builtin':'un--snd'(V63)) end))(V8)), ((begin (V76 = fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V74, V75)) end end end end), fun (V77) -> fun (V78) -> ((((V76('erased'))('erased'))(V77))(V78)) end end end(fun (V71) -> ('Idris.Idris2.Builtin':'un--snd'(V71)) end))(V11)))); 0 -> ('un--postpone'(V2, V0, V1, V4, V23, <<"Postponing local app"/utf8>>, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V19, V20}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V21, V22}, V11})) end end; _ -> case V7 of {'Core.Value.NLocal', V79, V80} -> case V10 of {'Core.Value.NLocal', V81, V82} -> begin (V83 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V84) -> begin (V85 = (V83(V84))), case V85 of {'Prelude.Types.Left', V86} -> {'Prelude.Types.Left', V86}; {'Prelude.Types.Right', V87} -> (begin (V88 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V79, V80}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V81, V82}, V11}))), V88 end(V84)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V89, V90, V91} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V92, V93} -> V93 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V89, V90, V91}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V89, V90, V91}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V94, V95} -> case V95 of 3 -> case V7 of {'Core.Value.NRef', V96, V97} -> case V10 of {'Core.Value.NRef', V98, V99} -> begin (V100 = {'Core.Unify.MkUnifyInfo', V94, 3}), begin (V101 = {'Core.Value.NRef', V96, V97}), begin (V102 = {'Core.Value.NRef', V98, V99}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V97, V99)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> ('dn--un--unifyD_Unify_Closure'(V103, V104, V105, V106, V107, V108, V109, V110)) end end end end end end end end, fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V111, V112, V113, V114, V115, V116, V117, V118)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V119, V120, V121, V122, V123)) end end end end end, fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V124, V125, V126, V127, V128)) end end end end end, fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V129, V130, V131, V132, V133, V134)) end end end end end end, fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V135, V136, V137, V138, V139, V140, V141)) end end end end end end end}}, V2, V0, V1, V100, V4, V5, ((begin (V147 = fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V145, V146)) end end end end), fun (V148) -> fun (V149) -> ((((V147('erased'))('erased'))(V148))(V149)) end end end(fun (V142) -> ('Idris.Idris2.Builtin':'un--snd'(V142)) end))(V8)), ((begin (V155 = fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V153, V154)) end end end end), fun (V156) -> fun (V157) -> ((((V155('erased'))('erased'))(V156))(V157)) end end end(fun (V150) -> ('Idris.Idris2.Builtin':'un--snd'(V150)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V100, V4, V5, V6, V101, V8, {'Core.Value.NApp', V9, V102, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V158, V159} -> case V10 of {'Core.Value.NRef', V160, V161} -> begin (V162 = {'Core.Unify.MkUnifyInfo', V94, 2}), begin (V163 = {'Core.Value.NRef', V158, V159}), begin (V164 = {'Core.Value.NRef', V160, V161}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V159, V161)) of 1 -> begin (V213 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V170 = begin (V165 = V0), fun (V166) -> begin (V169 = (begin (V167 = V165), fun (V168) -> ('erlang':'get'(V167)) end end(V166))), {'Prelude.Types.Right', V169} end end end), fun (V171) -> begin (V172 = (V170(V171))), case V172 of {'Prelude.Types.Left', V173} -> {'Prelude.Types.Left', V173}; {'Prelude.Types.Right', V174} -> (begin (V212 = begin (V184 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V175) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V174, V5, V175)) end, ((begin (V181 = fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V179, V180)) end end end end), fun (V182) -> fun (V183) -> ((((V181('erased'))('erased'))(V182))(V183)) end end end(fun (V176) -> ('Idris.Idris2.Builtin':'un--snd'(V176)) end))(V8)), []))), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V211 = begin (V198 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V189) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V174, V5, V189)) end, ((begin (V195 = fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V193, V194)) end end end end), fun (V196) -> fun (V197) -> ((((V195('erased'))('erased'))(V196))(V197)) end end end(fun (V190) -> ('Idris.Idris2.Builtin':'un--snd'(V190)) end))(V11)), []))), fun (V199) -> begin (V200 = (V198(V199))), case V200 of {'Prelude.Types.Left', V201} -> {'Prelude.Types.Left', V201}; {'Prelude.Types.Right', V202} -> (begin (V210 = fun (V203) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V204) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V204)) end, fun (V205) -> fun (V206) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V205, V206)) end end}, V188))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V207) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V207)) end, fun (V208) -> fun (V209) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V208, V209)) end end}, V202))/binary>>/binary>>/binary>>} end), V210 end(V199)) end end end end), V211 end(V185)) end end end end), V212 end(V171)) end end end end))), fun (V214) -> begin (V215 = (V213(V214))), case V215 of {'Prelude.Types.Left', V216} -> {'Prelude.Types.Left', V216}; {'Prelude.Types.Right', V217} -> (begin (V273 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> ('dn--un--unifyD_Unify_Closure'(V218, V219, V220, V221, V222, V223, V224, V225)) end end end end end end end end, fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> fun (V231) -> fun (V232) -> fun (V233) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V226, V227, V228, V229, V230, V231, V232, V233)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> fun (V238) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V234, V235, V236, V237, V238)) end end end end end, fun (V239) -> fun (V240) -> fun (V241) -> fun (V242) -> fun (V243) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V239, V240, V241, V242, V243)) end end end end end, fun (V244) -> fun (V245) -> fun (V246) -> fun (V247) -> fun (V248) -> fun (V249) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V244, V245, V246, V247, V248, V249)) end end end end end end, fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> fun (V254) -> fun (V255) -> fun (V256) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V250, V251, V252, V253, V254, V255, V256)) end end end end end end end}}, V2, V0, V1, V162, V4, V5, ((begin (V262 = fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V260, V261)) end end end end), fun (V263) -> fun (V264) -> ((((V262('erased'))('erased'))(V263))(V264)) end end end(fun (V257) -> ('Idris.Idris2.Builtin':'un--snd'(V257)) end))(V8)), ((begin (V270 = fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V268, V269)) end end end end), fun (V271) -> fun (V272) -> ((((V270('erased'))('erased'))(V271))(V272)) end end end(fun (V265) -> ('Idris.Idris2.Builtin':'un--snd'(V265)) end))(V11))))), V273 end(V214)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V162, V4, V5, V6, V163, V8, {'Core.Value.NApp', V9, V164, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V274, V275, V276} -> case V10 of {'Core.Value.NMeta', V277, V278, V279} -> begin (V280 = ('un--isDefInvertible'(V0, V4, V275))), fun (V281) -> begin (V282 = (V280(V281))), case V282 of {'Prelude.Types.Left', V283} -> {'Prelude.Types.Left', V283}; {'Prelude.Types.Right', V284} -> (begin (V357 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V275, V278)) of 1 -> case V284 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V285, V286} -> V286 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> ('dn--un--unifyD_Unify_Closure'(V287, V288, V289, V290, V291, V292, V293, V294)) end end end end end end end end, fun (V295) -> fun (V296) -> fun (V297) -> fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V295, V296, V297, V298, V299, V300, V301, V302)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V303) -> fun (V304) -> fun (V305) -> fun (V306) -> fun (V307) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V303, V304, V305, V306, V307)) end end end end end, fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V308, V309, V310, V311, V312)) end end end end end, fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V313, V314, V315, V316, V317, V318)) end end end end end end, fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V319, V320, V321, V322, V323, V324, V325)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V276, ((begin (V331 = fun (V327) -> fun (V328) -> fun (V329) -> fun (V330) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V329, V330)) end end end end), fun (V332) -> fun (V333) -> ((((V331('erased'))('erased'))(V332))(V333)) end end end(fun (V326) -> ('Idris.Idris2.Builtin':'un--snd'(V326)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V279, ((begin (V339 = fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V337, V338)) end end end end), fun (V340) -> fun (V341) -> ((((V339('erased'))('erased'))(V340))(V341)) end end end(fun (V334) -> ('Idris.Idris2.Builtin':'un--snd'(V334)) end))(V11)))))); 0 -> begin (V342 = ('nested--14746-23552--in--un--localsIn'(V2, V276, V275, V274, V279, V278, V277, V11, V9, V8, V6, V5, V4, V3, V1, V0, V276))), fun (V343) -> begin (V344 = (V342(V343))), case V344 of {'Prelude.Types.Left', V345} -> {'Prelude.Types.Left', V345}; {'Prelude.Types.Right', V346} -> (begin (V356 = begin (V347 = ('nested--14746-23552--in--un--localsIn'(V2, V276, V275, V274, V279, V278, V277, V11, V9, V8, V6, V5, V4, V3, V1, V0, V279))), fun (V348) -> begin (V349 = (V347(V348))), case V349 of {'Prelude.Types.Left', V350} -> {'Prelude.Types.Left', V350}; {'Prelude.Types.Right', V351} -> (begin (V355 = begin (V352 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V346, V351)) of 1 -> 1; 0 -> case case (V346 =:= V351) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V352 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V353, V354} -> V354 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V276, V275, V274, V279, V278, V277, V11, V9, V8, V6, V5, V4, V3, V1, V0, V274)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V274, V275, V276}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V277, V278, V279}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V277, V278, V279}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V274, V275, V276}, V8})) end end), V355 end(V348)) end end end end), V356 end(V343)) end end end end end), V357 end(V281)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V274, V275, V276}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V358, V359, V360} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V361, V362} -> V362 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V358, V359, V360}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V358, V359, V360}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V363, V364} -> case V364 of 3 -> case V7 of {'Core.Value.NRef', V365, V366} -> case V10 of {'Core.Value.NRef', V367, V368} -> begin (V369 = {'Core.Unify.MkUnifyInfo', V363, 3}), begin (V370 = {'Core.Value.NRef', V365, V366}), begin (V371 = {'Core.Value.NRef', V367, V368}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V366, V368)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V372) -> fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> fun (V377) -> fun (V378) -> fun (V379) -> ('dn--un--unifyD_Unify_Closure'(V372, V373, V374, V375, V376, V377, V378, V379)) end end end end end end end end, fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> fun (V386) -> fun (V387) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V380, V381, V382, V383, V384, V385, V386, V387)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> fun (V392) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V388, V389, V390, V391, V392)) end end end end end, fun (V393) -> fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V393, V394, V395, V396, V397)) end end end end end, fun (V398) -> fun (V399) -> fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V398, V399, V400, V401, V402, V403)) end end end end end end, fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> fun (V409) -> fun (V410) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V404, V405, V406, V407, V408, V409, V410)) end end end end end end end}}, V2, V0, V1, V369, V4, V5, ((begin (V416 = fun (V412) -> fun (V413) -> fun (V414) -> fun (V415) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V414, V415)) end end end end), fun (V417) -> fun (V418) -> ((((V416('erased'))('erased'))(V417))(V418)) end end end(fun (V411) -> ('Idris.Idris2.Builtin':'un--snd'(V411)) end))(V8)), ((begin (V424 = fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V422, V423)) end end end end), fun (V425) -> fun (V426) -> ((((V424('erased'))('erased'))(V425))(V426)) end end end(fun (V419) -> ('Idris.Idris2.Builtin':'un--snd'(V419)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V369, V4, V5, V6, V370, V8, {'Core.Value.NApp', V9, V371, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V427, V428} -> case V10 of {'Core.Value.NRef', V429, V430} -> begin (V431 = {'Core.Unify.MkUnifyInfo', V363, 2}), begin (V432 = {'Core.Value.NRef', V427, V428}), begin (V433 = {'Core.Value.NRef', V429, V430}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V428, V430)) of 1 -> begin (V482 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V439 = begin (V434 = V0), fun (V435) -> begin (V438 = (begin (V436 = V434), fun (V437) -> ('erlang':'get'(V436)) end end(V435))), {'Prelude.Types.Right', V438} end end end), fun (V440) -> begin (V441 = (V439(V440))), case V441 of {'Prelude.Types.Left', V442} -> {'Prelude.Types.Left', V442}; {'Prelude.Types.Right', V443} -> (begin (V481 = begin (V453 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V444) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V443, V5, V444)) end, ((begin (V450 = fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V448, V449)) end end end end), fun (V451) -> fun (V452) -> ((((V450('erased'))('erased'))(V451))(V452)) end end end(fun (V445) -> ('Idris.Idris2.Builtin':'un--snd'(V445)) end))(V8)), []))), fun (V454) -> begin (V455 = (V453(V454))), case V455 of {'Prelude.Types.Left', V456} -> {'Prelude.Types.Left', V456}; {'Prelude.Types.Right', V457} -> (begin (V480 = begin (V467 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V458) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V443, V5, V458)) end, ((begin (V464 = fun (V460) -> fun (V461) -> fun (V462) -> fun (V463) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V462, V463)) end end end end), fun (V465) -> fun (V466) -> ((((V464('erased'))('erased'))(V465))(V466)) end end end(fun (V459) -> ('Idris.Idris2.Builtin':'un--snd'(V459)) end))(V11)), []))), fun (V468) -> begin (V469 = (V467(V468))), case V469 of {'Prelude.Types.Left', V470} -> {'Prelude.Types.Left', V470}; {'Prelude.Types.Right', V471} -> (begin (V479 = fun (V472) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V473) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V473)) end, fun (V474) -> fun (V475) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V474, V475)) end end}, V457))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V476) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V476)) end, fun (V477) -> fun (V478) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V477, V478)) end end}, V471))/binary>>/binary>>/binary>>} end), V479 end(V468)) end end end end), V480 end(V454)) end end end end), V481 end(V440)) end end end end))), fun (V483) -> begin (V484 = (V482(V483))), case V484 of {'Prelude.Types.Left', V485} -> {'Prelude.Types.Left', V485}; {'Prelude.Types.Right', V486} -> (begin (V542 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> ('dn--un--unifyD_Unify_Closure'(V487, V488, V489, V490, V491, V492, V493, V494)) end end end end end end end end, fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> fun (V499) -> fun (V500) -> fun (V501) -> fun (V502) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V495, V496, V497, V498, V499, V500, V501, V502)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V503) -> fun (V504) -> fun (V505) -> fun (V506) -> fun (V507) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V503, V504, V505, V506, V507)) end end end end end, fun (V508) -> fun (V509) -> fun (V510) -> fun (V511) -> fun (V512) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V508, V509, V510, V511, V512)) end end end end end, fun (V513) -> fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> fun (V518) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V513, V514, V515, V516, V517, V518)) end end end end end end, fun (V519) -> fun (V520) -> fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> fun (V525) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V519, V520, V521, V522, V523, V524, V525)) end end end end end end end}}, V2, V0, V1, V431, V4, V5, ((begin (V531 = fun (V527) -> fun (V528) -> fun (V529) -> fun (V530) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V529, V530)) end end end end), fun (V532) -> fun (V533) -> ((((V531('erased'))('erased'))(V532))(V533)) end end end(fun (V526) -> ('Idris.Idris2.Builtin':'un--snd'(V526)) end))(V8)), ((begin (V539 = fun (V535) -> fun (V536) -> fun (V537) -> fun (V538) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V537, V538)) end end end end), fun (V540) -> fun (V541) -> ((((V539('erased'))('erased'))(V540))(V541)) end end end(fun (V534) -> ('Idris.Idris2.Builtin':'un--snd'(V534)) end))(V11))))), V542 end(V483)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V431, V4, V5, V6, V432, V8, {'Core.Value.NApp', V9, V433, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V543, V544} -> case V10 of {'Core.Value.NLocal', V545, V546} -> begin (V547 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V548) -> begin (V549 = (V547(V548))), case V549 of {'Prelude.Types.Left', V550} -> {'Prelude.Types.Left', V550}; {'Prelude.Types.Right', V551} -> (begin (V552 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V543, V544}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V545, V546}, V11}))), V552 end(V548)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V553, V554, V555} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V556, V557} -> V557 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V553, V554, V555}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V553, V554, V555}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V558, V559} -> case V559 of 3 -> case V7 of {'Core.Value.NRef', V560, V561} -> case V10 of {'Core.Value.NRef', V562, V563} -> begin (V564 = {'Core.Unify.MkUnifyInfo', V558, 3}), begin (V565 = {'Core.Value.NRef', V560, V561}), begin (V566 = {'Core.Value.NRef', V562, V563}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V561, V563)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V567) -> fun (V568) -> fun (V569) -> fun (V570) -> fun (V571) -> fun (V572) -> fun (V573) -> fun (V574) -> ('dn--un--unifyD_Unify_Closure'(V567, V568, V569, V570, V571, V572, V573, V574)) end end end end end end end end, fun (V575) -> fun (V576) -> fun (V577) -> fun (V578) -> fun (V579) -> fun (V580) -> fun (V581) -> fun (V582) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V575, V576, V577, V578, V579, V580, V581, V582)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V583) -> fun (V584) -> fun (V585) -> fun (V586) -> fun (V587) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V583, V584, V585, V586, V587)) end end end end end, fun (V588) -> fun (V589) -> fun (V590) -> fun (V591) -> fun (V592) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V588, V589, V590, V591, V592)) end end end end end, fun (V593) -> fun (V594) -> fun (V595) -> fun (V596) -> fun (V597) -> fun (V598) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V593, V594, V595, V596, V597, V598)) end end end end end end, fun (V599) -> fun (V600) -> fun (V601) -> fun (V602) -> fun (V603) -> fun (V604) -> fun (V605) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V599, V600, V601, V602, V603, V604, V605)) end end end end end end end}}, V2, V0, V1, V564, V4, V5, ((begin (V611 = fun (V607) -> fun (V608) -> fun (V609) -> fun (V610) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V609, V610)) end end end end), fun (V612) -> fun (V613) -> ((((V611('erased'))('erased'))(V612))(V613)) end end end(fun (V606) -> ('Idris.Idris2.Builtin':'un--snd'(V606)) end))(V8)), ((begin (V619 = fun (V615) -> fun (V616) -> fun (V617) -> fun (V618) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V617, V618)) end end end end), fun (V620) -> fun (V621) -> ((((V619('erased'))('erased'))(V620))(V621)) end end end(fun (V614) -> ('Idris.Idris2.Builtin':'un--snd'(V614)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V564, V4, V5, V6, V565, V8, {'Core.Value.NApp', V9, V566, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V622, V623} -> case V10 of {'Core.Value.NRef', V624, V625} -> begin (V626 = {'Core.Unify.MkUnifyInfo', V558, 2}), begin (V627 = {'Core.Value.NRef', V622, V623}), begin (V628 = {'Core.Value.NRef', V624, V625}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V623, V625)) of 1 -> begin (V677 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V634 = begin (V629 = V0), fun (V630) -> begin (V633 = (begin (V631 = V629), fun (V632) -> ('erlang':'get'(V631)) end end(V630))), {'Prelude.Types.Right', V633} end end end), fun (V635) -> begin (V636 = (V634(V635))), case V636 of {'Prelude.Types.Left', V637} -> {'Prelude.Types.Left', V637}; {'Prelude.Types.Right', V638} -> (begin (V676 = begin (V648 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V639) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V638, V5, V639)) end, ((begin (V645 = fun (V641) -> fun (V642) -> fun (V643) -> fun (V644) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V643, V644)) end end end end), fun (V646) -> fun (V647) -> ((((V645('erased'))('erased'))(V646))(V647)) end end end(fun (V640) -> ('Idris.Idris2.Builtin':'un--snd'(V640)) end))(V8)), []))), fun (V649) -> begin (V650 = (V648(V649))), case V650 of {'Prelude.Types.Left', V651} -> {'Prelude.Types.Left', V651}; {'Prelude.Types.Right', V652} -> (begin (V675 = begin (V662 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V653) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V638, V5, V653)) end, ((begin (V659 = fun (V655) -> fun (V656) -> fun (V657) -> fun (V658) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V657, V658)) end end end end), fun (V660) -> fun (V661) -> ((((V659('erased'))('erased'))(V660))(V661)) end end end(fun (V654) -> ('Idris.Idris2.Builtin':'un--snd'(V654)) end))(V11)), []))), fun (V663) -> begin (V664 = (V662(V663))), case V664 of {'Prelude.Types.Left', V665} -> {'Prelude.Types.Left', V665}; {'Prelude.Types.Right', V666} -> (begin (V674 = fun (V667) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V668) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V668)) end, fun (V669) -> fun (V670) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V669, V670)) end end}, V652))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V671) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V671)) end, fun (V672) -> fun (V673) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V672, V673)) end end}, V666))/binary>>/binary>>/binary>>} end), V674 end(V663)) end end end end), V675 end(V649)) end end end end), V676 end(V635)) end end end end))), fun (V678) -> begin (V679 = (V677(V678))), case V679 of {'Prelude.Types.Left', V680} -> {'Prelude.Types.Left', V680}; {'Prelude.Types.Right', V681} -> (begin (V737 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V682) -> fun (V683) -> fun (V684) -> fun (V685) -> fun (V686) -> fun (V687) -> fun (V688) -> fun (V689) -> ('dn--un--unifyD_Unify_Closure'(V682, V683, V684, V685, V686, V687, V688, V689)) end end end end end end end end, fun (V690) -> fun (V691) -> fun (V692) -> fun (V693) -> fun (V694) -> fun (V695) -> fun (V696) -> fun (V697) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V690, V691, V692, V693, V694, V695, V696, V697)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V698) -> fun (V699) -> fun (V700) -> fun (V701) -> fun (V702) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V698, V699, V700, V701, V702)) end end end end end, fun (V703) -> fun (V704) -> fun (V705) -> fun (V706) -> fun (V707) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V703, V704, V705, V706, V707)) end end end end end, fun (V708) -> fun (V709) -> fun (V710) -> fun (V711) -> fun (V712) -> fun (V713) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V708, V709, V710, V711, V712, V713)) end end end end end end, fun (V714) -> fun (V715) -> fun (V716) -> fun (V717) -> fun (V718) -> fun (V719) -> fun (V720) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V714, V715, V716, V717, V718, V719, V720)) end end end end end end end}}, V2, V0, V1, V626, V4, V5, ((begin (V726 = fun (V722) -> fun (V723) -> fun (V724) -> fun (V725) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V724, V725)) end end end end), fun (V727) -> fun (V728) -> ((((V726('erased'))('erased'))(V727))(V728)) end end end(fun (V721) -> ('Idris.Idris2.Builtin':'un--snd'(V721)) end))(V8)), ((begin (V734 = fun (V730) -> fun (V731) -> fun (V732) -> fun (V733) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V732, V733)) end end end end), fun (V735) -> fun (V736) -> ((((V734('erased'))('erased'))(V735))(V736)) end end end(fun (V729) -> ('Idris.Idris2.Builtin':'un--snd'(V729)) end))(V11))))), V737 end(V678)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V626, V4, V5, V6, V627, V8, {'Core.Value.NApp', V9, V628, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V738, V739, V740} -> case V10 of {'Core.Value.NMeta', V741, V742, V743} -> begin (V744 = ('un--isDefInvertible'(V0, V4, V739))), fun (V745) -> begin (V746 = (V744(V745))), case V746 of {'Prelude.Types.Left', V747} -> {'Prelude.Types.Left', V747}; {'Prelude.Types.Right', V748} -> (begin (V821 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V739, V742)) of 1 -> case V748 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V749, V750} -> V750 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V751) -> fun (V752) -> fun (V753) -> fun (V754) -> fun (V755) -> fun (V756) -> fun (V757) -> fun (V758) -> ('dn--un--unifyD_Unify_Closure'(V751, V752, V753, V754, V755, V756, V757, V758)) end end end end end end end end, fun (V759) -> fun (V760) -> fun (V761) -> fun (V762) -> fun (V763) -> fun (V764) -> fun (V765) -> fun (V766) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V759, V760, V761, V762, V763, V764, V765, V766)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V767) -> fun (V768) -> fun (V769) -> fun (V770) -> fun (V771) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V767, V768, V769, V770, V771)) end end end end end, fun (V772) -> fun (V773) -> fun (V774) -> fun (V775) -> fun (V776) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V772, V773, V774, V775, V776)) end end end end end, fun (V777) -> fun (V778) -> fun (V779) -> fun (V780) -> fun (V781) -> fun (V782) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V777, V778, V779, V780, V781, V782)) end end end end end end, fun (V783) -> fun (V784) -> fun (V785) -> fun (V786) -> fun (V787) -> fun (V788) -> fun (V789) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V783, V784, V785, V786, V787, V788, V789)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V740, ((begin (V795 = fun (V791) -> fun (V792) -> fun (V793) -> fun (V794) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V793, V794)) end end end end), fun (V796) -> fun (V797) -> ((((V795('erased'))('erased'))(V796))(V797)) end end end(fun (V790) -> ('Idris.Idris2.Builtin':'un--snd'(V790)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V743, ((begin (V803 = fun (V799) -> fun (V800) -> fun (V801) -> fun (V802) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V801, V802)) end end end end), fun (V804) -> fun (V805) -> ((((V803('erased'))('erased'))(V804))(V805)) end end end(fun (V798) -> ('Idris.Idris2.Builtin':'un--snd'(V798)) end))(V11)))))); 0 -> begin (V806 = ('nested--14746-23552--in--un--localsIn'(V2, V740, V739, V738, V743, V742, V741, V11, V9, V8, V6, V5, V4, V3, V1, V0, V740))), fun (V807) -> begin (V808 = (V806(V807))), case V808 of {'Prelude.Types.Left', V809} -> {'Prelude.Types.Left', V809}; {'Prelude.Types.Right', V810} -> (begin (V820 = begin (V811 = ('nested--14746-23552--in--un--localsIn'(V2, V740, V739, V738, V743, V742, V741, V11, V9, V8, V6, V5, V4, V3, V1, V0, V743))), fun (V812) -> begin (V813 = (V811(V812))), case V813 of {'Prelude.Types.Left', V814} -> {'Prelude.Types.Left', V814}; {'Prelude.Types.Right', V815} -> (begin (V819 = begin (V816 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V810, V815)) of 1 -> 1; 0 -> case case (V810 =:= V815) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V816 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V817, V818} -> V818 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V740, V739, V738, V743, V742, V741, V11, V9, V8, V6, V5, V4, V3, V1, V0, V738)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V738, V739, V740}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V741, V742, V743}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V741, V742, V743}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V738, V739, V740}, V8})) end end), V819 end(V812)) end end end end), V820 end(V807)) end end end end end), V821 end(V745)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V738, V739, V740}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V822, V823, V824} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V825, V826} -> V826 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V822, V823, V824}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V822, V823, V824}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V827, V828} -> case V828 of 3 -> case V7 of {'Core.Value.NRef', V829, V830} -> case V10 of {'Core.Value.NRef', V831, V832} -> begin (V833 = {'Core.Unify.MkUnifyInfo', V827, 3}), begin (V834 = {'Core.Value.NRef', V829, V830}), begin (V835 = {'Core.Value.NRef', V831, V832}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V830, V832)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V836) -> fun (V837) -> fun (V838) -> fun (V839) -> fun (V840) -> fun (V841) -> fun (V842) -> fun (V843) -> ('dn--un--unifyD_Unify_Closure'(V836, V837, V838, V839, V840, V841, V842, V843)) end end end end end end end end, fun (V844) -> fun (V845) -> fun (V846) -> fun (V847) -> fun (V848) -> fun (V849) -> fun (V850) -> fun (V851) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V844, V845, V846, V847, V848, V849, V850, V851)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V852) -> fun (V853) -> fun (V854) -> fun (V855) -> fun (V856) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V852, V853, V854, V855, V856)) end end end end end, fun (V857) -> fun (V858) -> fun (V859) -> fun (V860) -> fun (V861) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V857, V858, V859, V860, V861)) end end end end end, fun (V862) -> fun (V863) -> fun (V864) -> fun (V865) -> fun (V866) -> fun (V867) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V862, V863, V864, V865, V866, V867)) end end end end end end, fun (V868) -> fun (V869) -> fun (V870) -> fun (V871) -> fun (V872) -> fun (V873) -> fun (V874) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V868, V869, V870, V871, V872, V873, V874)) end end end end end end end}}, V2, V0, V1, V833, V4, V5, ((begin (V880 = fun (V876) -> fun (V877) -> fun (V878) -> fun (V879) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V878, V879)) end end end end), fun (V881) -> fun (V882) -> ((((V880('erased'))('erased'))(V881))(V882)) end end end(fun (V875) -> ('Idris.Idris2.Builtin':'un--snd'(V875)) end))(V8)), ((begin (V888 = fun (V884) -> fun (V885) -> fun (V886) -> fun (V887) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V886, V887)) end end end end), fun (V889) -> fun (V890) -> ((((V888('erased'))('erased'))(V889))(V890)) end end end(fun (V883) -> ('Idris.Idris2.Builtin':'un--snd'(V883)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V833, V4, V5, V6, V834, V8, {'Core.Value.NApp', V9, V835, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V891, V892} -> case V10 of {'Core.Value.NRef', V893, V894} -> begin (V895 = {'Core.Unify.MkUnifyInfo', V827, 2}), begin (V896 = {'Core.Value.NRef', V891, V892}), begin (V897 = {'Core.Value.NRef', V893, V894}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V892, V894)) of 1 -> begin (V946 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V903 = begin (V898 = V0), fun (V899) -> begin (V902 = (begin (V900 = V898), fun (V901) -> ('erlang':'get'(V900)) end end(V899))), {'Prelude.Types.Right', V902} end end end), fun (V904) -> begin (V905 = (V903(V904))), case V905 of {'Prelude.Types.Left', V906} -> {'Prelude.Types.Left', V906}; {'Prelude.Types.Right', V907} -> (begin (V945 = begin (V917 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V908) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V907, V5, V908)) end, ((begin (V914 = fun (V910) -> fun (V911) -> fun (V912) -> fun (V913) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V912, V913)) end end end end), fun (V915) -> fun (V916) -> ((((V914('erased'))('erased'))(V915))(V916)) end end end(fun (V909) -> ('Idris.Idris2.Builtin':'un--snd'(V909)) end))(V8)), []))), fun (V918) -> begin (V919 = (V917(V918))), case V919 of {'Prelude.Types.Left', V920} -> {'Prelude.Types.Left', V920}; {'Prelude.Types.Right', V921} -> (begin (V944 = begin (V931 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V922) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V907, V5, V922)) end, ((begin (V928 = fun (V924) -> fun (V925) -> fun (V926) -> fun (V927) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V926, V927)) end end end end), fun (V929) -> fun (V930) -> ((((V928('erased'))('erased'))(V929))(V930)) end end end(fun (V923) -> ('Idris.Idris2.Builtin':'un--snd'(V923)) end))(V11)), []))), fun (V932) -> begin (V933 = (V931(V932))), case V933 of {'Prelude.Types.Left', V934} -> {'Prelude.Types.Left', V934}; {'Prelude.Types.Right', V935} -> (begin (V943 = fun (V936) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V937) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V937)) end, fun (V938) -> fun (V939) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V938, V939)) end end}, V921))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V940) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V940)) end, fun (V941) -> fun (V942) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V941, V942)) end end}, V935))/binary>>/binary>>/binary>>} end), V943 end(V932)) end end end end), V944 end(V918)) end end end end), V945 end(V904)) end end end end))), fun (V947) -> begin (V948 = (V946(V947))), case V948 of {'Prelude.Types.Left', V949} -> {'Prelude.Types.Left', V949}; {'Prelude.Types.Right', V950} -> (begin (V1006 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V951) -> fun (V952) -> fun (V953) -> fun (V954) -> fun (V955) -> fun (V956) -> fun (V957) -> fun (V958) -> ('dn--un--unifyD_Unify_Closure'(V951, V952, V953, V954, V955, V956, V957, V958)) end end end end end end end end, fun (V959) -> fun (V960) -> fun (V961) -> fun (V962) -> fun (V963) -> fun (V964) -> fun (V965) -> fun (V966) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V959, V960, V961, V962, V963, V964, V965, V966)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V967) -> fun (V968) -> fun (V969) -> fun (V970) -> fun (V971) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V967, V968, V969, V970, V971)) end end end end end, fun (V972) -> fun (V973) -> fun (V974) -> fun (V975) -> fun (V976) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V972, V973, V974, V975, V976)) end end end end end, fun (V977) -> fun (V978) -> fun (V979) -> fun (V980) -> fun (V981) -> fun (V982) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V977, V978, V979, V980, V981, V982)) end end end end end end, fun (V983) -> fun (V984) -> fun (V985) -> fun (V986) -> fun (V987) -> fun (V988) -> fun (V989) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V983, V984, V985, V986, V987, V988, V989)) end end end end end end end}}, V2, V0, V1, V895, V4, V5, ((begin (V995 = fun (V991) -> fun (V992) -> fun (V993) -> fun (V994) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V993, V994)) end end end end), fun (V996) -> fun (V997) -> ((((V995('erased'))('erased'))(V996))(V997)) end end end(fun (V990) -> ('Idris.Idris2.Builtin':'un--snd'(V990)) end))(V8)), ((begin (V1003 = fun (V999) -> fun (V1000) -> fun (V1001) -> fun (V1002) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1001, V1002)) end end end end), fun (V1004) -> fun (V1005) -> ((((V1003('erased'))('erased'))(V1004))(V1005)) end end end(fun (V998) -> ('Idris.Idris2.Builtin':'un--snd'(V998)) end))(V11))))), V1006 end(V947)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V895, V4, V5, V6, V896, V8, {'Core.Value.NApp', V9, V897, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V1007, V1008} -> case V10 of {'Core.Value.NLocal', V1009, V1010} -> begin (V1011 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V1012) -> begin (V1013 = (V1011(V1012))), case V1013 of {'Prelude.Types.Left', V1014} -> {'Prelude.Types.Left', V1014}; {'Prelude.Types.Right', V1015} -> (begin (V1016 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V1007, V1008}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V1009, V1010}, V11}))), V1016 end(V1012)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V1017, V1018, V1019} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1020, V1021} -> V1021 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V1017, V1018, V1019}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V1017, V1018, V1019}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V1022, V1023} -> case V1023 of 3 -> case V7 of {'Core.Value.NRef', V1024, V1025} -> case V10 of {'Core.Value.NRef', V1026, V1027} -> begin (V1028 = {'Core.Unify.MkUnifyInfo', V1022, 3}), begin (V1029 = {'Core.Value.NRef', V1024, V1025}), begin (V1030 = {'Core.Value.NRef', V1026, V1027}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1025, V1027)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1031) -> fun (V1032) -> fun (V1033) -> fun (V1034) -> fun (V1035) -> fun (V1036) -> fun (V1037) -> fun (V1038) -> ('dn--un--unifyD_Unify_Closure'(V1031, V1032, V1033, V1034, V1035, V1036, V1037, V1038)) end end end end end end end end, fun (V1039) -> fun (V1040) -> fun (V1041) -> fun (V1042) -> fun (V1043) -> fun (V1044) -> fun (V1045) -> fun (V1046) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1039, V1040, V1041, V1042, V1043, V1044, V1045, V1046)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1047) -> fun (V1048) -> fun (V1049) -> fun (V1050) -> fun (V1051) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1047, V1048, V1049, V1050, V1051)) end end end end end, fun (V1052) -> fun (V1053) -> fun (V1054) -> fun (V1055) -> fun (V1056) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1052, V1053, V1054, V1055, V1056)) end end end end end, fun (V1057) -> fun (V1058) -> fun (V1059) -> fun (V1060) -> fun (V1061) -> fun (V1062) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1057, V1058, V1059, V1060, V1061, V1062)) end end end end end end, fun (V1063) -> fun (V1064) -> fun (V1065) -> fun (V1066) -> fun (V1067) -> fun (V1068) -> fun (V1069) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1063, V1064, V1065, V1066, V1067, V1068, V1069)) end end end end end end end}}, V2, V0, V1, V1028, V4, V5, ((begin (V1075 = fun (V1071) -> fun (V1072) -> fun (V1073) -> fun (V1074) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1073, V1074)) end end end end), fun (V1076) -> fun (V1077) -> ((((V1075('erased'))('erased'))(V1076))(V1077)) end end end(fun (V1070) -> ('Idris.Idris2.Builtin':'un--snd'(V1070)) end))(V8)), ((begin (V1083 = fun (V1079) -> fun (V1080) -> fun (V1081) -> fun (V1082) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1081, V1082)) end end end end), fun (V1084) -> fun (V1085) -> ((((V1083('erased'))('erased'))(V1084))(V1085)) end end end(fun (V1078) -> ('Idris.Idris2.Builtin':'un--snd'(V1078)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1028, V4, V5, V6, V1029, V8, {'Core.Value.NApp', V9, V1030, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V1086, V1087} -> case V10 of {'Core.Value.NRef', V1088, V1089} -> begin (V1090 = {'Core.Unify.MkUnifyInfo', V1022, 2}), begin (V1091 = {'Core.Value.NRef', V1086, V1087}), begin (V1092 = {'Core.Value.NRef', V1088, V1089}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1087, V1089)) of 1 -> begin (V1141 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V1098 = begin (V1093 = V0), fun (V1094) -> begin (V1097 = (begin (V1095 = V1093), fun (V1096) -> ('erlang':'get'(V1095)) end end(V1094))), {'Prelude.Types.Right', V1097} end end end), fun (V1099) -> begin (V1100 = (V1098(V1099))), case V1100 of {'Prelude.Types.Left', V1101} -> {'Prelude.Types.Left', V1101}; {'Prelude.Types.Right', V1102} -> (begin (V1140 = begin (V1112 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1103) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1102, V5, V1103)) end, ((begin (V1109 = fun (V1105) -> fun (V1106) -> fun (V1107) -> fun (V1108) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1107, V1108)) end end end end), fun (V1110) -> fun (V1111) -> ((((V1109('erased'))('erased'))(V1110))(V1111)) end end end(fun (V1104) -> ('Idris.Idris2.Builtin':'un--snd'(V1104)) end))(V8)), []))), fun (V1113) -> begin (V1114 = (V1112(V1113))), case V1114 of {'Prelude.Types.Left', V1115} -> {'Prelude.Types.Left', V1115}; {'Prelude.Types.Right', V1116} -> (begin (V1139 = begin (V1126 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1117) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1102, V5, V1117)) end, ((begin (V1123 = fun (V1119) -> fun (V1120) -> fun (V1121) -> fun (V1122) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1121, V1122)) end end end end), fun (V1124) -> fun (V1125) -> ((((V1123('erased'))('erased'))(V1124))(V1125)) end end end(fun (V1118) -> ('Idris.Idris2.Builtin':'un--snd'(V1118)) end))(V11)), []))), fun (V1127) -> begin (V1128 = (V1126(V1127))), case V1128 of {'Prelude.Types.Left', V1129} -> {'Prelude.Types.Left', V1129}; {'Prelude.Types.Right', V1130} -> (begin (V1138 = fun (V1131) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1132) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1132)) end, fun (V1133) -> fun (V1134) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1133, V1134)) end end}, V1116))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1135) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1135)) end, fun (V1136) -> fun (V1137) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1136, V1137)) end end}, V1130))/binary>>/binary>>/binary>>} end), V1138 end(V1127)) end end end end), V1139 end(V1113)) end end end end), V1140 end(V1099)) end end end end))), fun (V1142) -> begin (V1143 = (V1141(V1142))), case V1143 of {'Prelude.Types.Left', V1144} -> {'Prelude.Types.Left', V1144}; {'Prelude.Types.Right', V1145} -> (begin (V1201 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1146) -> fun (V1147) -> fun (V1148) -> fun (V1149) -> fun (V1150) -> fun (V1151) -> fun (V1152) -> fun (V1153) -> ('dn--un--unifyD_Unify_Closure'(V1146, V1147, V1148, V1149, V1150, V1151, V1152, V1153)) end end end end end end end end, fun (V1154) -> fun (V1155) -> fun (V1156) -> fun (V1157) -> fun (V1158) -> fun (V1159) -> fun (V1160) -> fun (V1161) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1154, V1155, V1156, V1157, V1158, V1159, V1160, V1161)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1162) -> fun (V1163) -> fun (V1164) -> fun (V1165) -> fun (V1166) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1162, V1163, V1164, V1165, V1166)) end end end end end, fun (V1167) -> fun (V1168) -> fun (V1169) -> fun (V1170) -> fun (V1171) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1167, V1168, V1169, V1170, V1171)) end end end end end, fun (V1172) -> fun (V1173) -> fun (V1174) -> fun (V1175) -> fun (V1176) -> fun (V1177) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1172, V1173, V1174, V1175, V1176, V1177)) end end end end end end, fun (V1178) -> fun (V1179) -> fun (V1180) -> fun (V1181) -> fun (V1182) -> fun (V1183) -> fun (V1184) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1178, V1179, V1180, V1181, V1182, V1183, V1184)) end end end end end end end}}, V2, V0, V1, V1090, V4, V5, ((begin (V1190 = fun (V1186) -> fun (V1187) -> fun (V1188) -> fun (V1189) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1188, V1189)) end end end end), fun (V1191) -> fun (V1192) -> ((((V1190('erased'))('erased'))(V1191))(V1192)) end end end(fun (V1185) -> ('Idris.Idris2.Builtin':'un--snd'(V1185)) end))(V8)), ((begin (V1198 = fun (V1194) -> fun (V1195) -> fun (V1196) -> fun (V1197) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1196, V1197)) end end end end), fun (V1199) -> fun (V1200) -> ((((V1198('erased'))('erased'))(V1199))(V1200)) end end end(fun (V1193) -> ('Idris.Idris2.Builtin':'un--snd'(V1193)) end))(V11))))), V1201 end(V1142)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1090, V4, V5, V6, V1091, V8, {'Core.Value.NApp', V9, V1092, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V1202, V1203, V1204} -> case V10 of {'Core.Value.NMeta', V1205, V1206, V1207} -> begin (V1208 = ('un--isDefInvertible'(V0, V4, V1203))), fun (V1209) -> begin (V1210 = (V1208(V1209))), case V1210 of {'Prelude.Types.Left', V1211} -> {'Prelude.Types.Left', V1211}; {'Prelude.Types.Right', V1212} -> (begin (V1285 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1203, V1206)) of 1 -> case V1212 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1213, V1214} -> V1214 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1215) -> fun (V1216) -> fun (V1217) -> fun (V1218) -> fun (V1219) -> fun (V1220) -> fun (V1221) -> fun (V1222) -> ('dn--un--unifyD_Unify_Closure'(V1215, V1216, V1217, V1218, V1219, V1220, V1221, V1222)) end end end end end end end end, fun (V1223) -> fun (V1224) -> fun (V1225) -> fun (V1226) -> fun (V1227) -> fun (V1228) -> fun (V1229) -> fun (V1230) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1223, V1224, V1225, V1226, V1227, V1228, V1229, V1230)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1231) -> fun (V1232) -> fun (V1233) -> fun (V1234) -> fun (V1235) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1231, V1232, V1233, V1234, V1235)) end end end end end, fun (V1236) -> fun (V1237) -> fun (V1238) -> fun (V1239) -> fun (V1240) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1236, V1237, V1238, V1239, V1240)) end end end end end, fun (V1241) -> fun (V1242) -> fun (V1243) -> fun (V1244) -> fun (V1245) -> fun (V1246) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1241, V1242, V1243, V1244, V1245, V1246)) end end end end end end, fun (V1247) -> fun (V1248) -> fun (V1249) -> fun (V1250) -> fun (V1251) -> fun (V1252) -> fun (V1253) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1247, V1248, V1249, V1250, V1251, V1252, V1253)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1204, ((begin (V1259 = fun (V1255) -> fun (V1256) -> fun (V1257) -> fun (V1258) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1257, V1258)) end end end end), fun (V1260) -> fun (V1261) -> ((((V1259('erased'))('erased'))(V1260))(V1261)) end end end(fun (V1254) -> ('Idris.Idris2.Builtin':'un--snd'(V1254)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1207, ((begin (V1267 = fun (V1263) -> fun (V1264) -> fun (V1265) -> fun (V1266) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1265, V1266)) end end end end), fun (V1268) -> fun (V1269) -> ((((V1267('erased'))('erased'))(V1268))(V1269)) end end end(fun (V1262) -> ('Idris.Idris2.Builtin':'un--snd'(V1262)) end))(V11)))))); 0 -> begin (V1270 = ('nested--14746-23552--in--un--localsIn'(V2, V1204, V1203, V1202, V1207, V1206, V1205, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1204))), fun (V1271) -> begin (V1272 = (V1270(V1271))), case V1272 of {'Prelude.Types.Left', V1273} -> {'Prelude.Types.Left', V1273}; {'Prelude.Types.Right', V1274} -> (begin (V1284 = begin (V1275 = ('nested--14746-23552--in--un--localsIn'(V2, V1204, V1203, V1202, V1207, V1206, V1205, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1207))), fun (V1276) -> begin (V1277 = (V1275(V1276))), case V1277 of {'Prelude.Types.Left', V1278} -> {'Prelude.Types.Left', V1278}; {'Prelude.Types.Right', V1279} -> (begin (V1283 = begin (V1280 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1274, V1279)) of 1 -> 1; 0 -> case case (V1274 =:= V1279) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V1280 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1281, V1282} -> V1282 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V1204, V1203, V1202, V1207, V1206, V1205, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1202)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V1202, V1203, V1204}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V1205, V1206, V1207}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V1205, V1206, V1207}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V1202, V1203, V1204}, V8})) end end), V1283 end(V1276)) end end end end), V1284 end(V1271)) end end end end end), V1285 end(V1209)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V1202, V1203, V1204}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V1286, V1287, V1288} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1289, V1290} -> V1290 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V1286, V1287, V1288}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V1286, V1287, V1288}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V1291, V1292} -> case V1292 of 3 -> case V7 of {'Core.Value.NRef', V1293, V1294} -> case V10 of {'Core.Value.NRef', V1295, V1296} -> begin (V1297 = {'Core.Unify.MkUnifyInfo', V1291, 3}), begin (V1298 = {'Core.Value.NRef', V1293, V1294}), begin (V1299 = {'Core.Value.NRef', V1295, V1296}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1294, V1296)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1300) -> fun (V1301) -> fun (V1302) -> fun (V1303) -> fun (V1304) -> fun (V1305) -> fun (V1306) -> fun (V1307) -> ('dn--un--unifyD_Unify_Closure'(V1300, V1301, V1302, V1303, V1304, V1305, V1306, V1307)) end end end end end end end end, fun (V1308) -> fun (V1309) -> fun (V1310) -> fun (V1311) -> fun (V1312) -> fun (V1313) -> fun (V1314) -> fun (V1315) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1308, V1309, V1310, V1311, V1312, V1313, V1314, V1315)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1316) -> fun (V1317) -> fun (V1318) -> fun (V1319) -> fun (V1320) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1316, V1317, V1318, V1319, V1320)) end end end end end, fun (V1321) -> fun (V1322) -> fun (V1323) -> fun (V1324) -> fun (V1325) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1321, V1322, V1323, V1324, V1325)) end end end end end, fun (V1326) -> fun (V1327) -> fun (V1328) -> fun (V1329) -> fun (V1330) -> fun (V1331) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1326, V1327, V1328, V1329, V1330, V1331)) end end end end end end, fun (V1332) -> fun (V1333) -> fun (V1334) -> fun (V1335) -> fun (V1336) -> fun (V1337) -> fun (V1338) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1332, V1333, V1334, V1335, V1336, V1337, V1338)) end end end end end end end}}, V2, V0, V1, V1297, V4, V5, ((begin (V1344 = fun (V1340) -> fun (V1341) -> fun (V1342) -> fun (V1343) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1342, V1343)) end end end end), fun (V1345) -> fun (V1346) -> ((((V1344('erased'))('erased'))(V1345))(V1346)) end end end(fun (V1339) -> ('Idris.Idris2.Builtin':'un--snd'(V1339)) end))(V8)), ((begin (V1352 = fun (V1348) -> fun (V1349) -> fun (V1350) -> fun (V1351) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1350, V1351)) end end end end), fun (V1353) -> fun (V1354) -> ((((V1352('erased'))('erased'))(V1353))(V1354)) end end end(fun (V1347) -> ('Idris.Idris2.Builtin':'un--snd'(V1347)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1297, V4, V5, V6, V1298, V8, {'Core.Value.NApp', V9, V1299, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V1355, V1356} -> case V10 of {'Core.Value.NRef', V1357, V1358} -> begin (V1359 = {'Core.Unify.MkUnifyInfo', V1291, 2}), begin (V1360 = {'Core.Value.NRef', V1355, V1356}), begin (V1361 = {'Core.Value.NRef', V1357, V1358}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1356, V1358)) of 1 -> begin (V1410 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V1367 = begin (V1362 = V0), fun (V1363) -> begin (V1366 = (begin (V1364 = V1362), fun (V1365) -> ('erlang':'get'(V1364)) end end(V1363))), {'Prelude.Types.Right', V1366} end end end), fun (V1368) -> begin (V1369 = (V1367(V1368))), case V1369 of {'Prelude.Types.Left', V1370} -> {'Prelude.Types.Left', V1370}; {'Prelude.Types.Right', V1371} -> (begin (V1409 = begin (V1381 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1372) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1371, V5, V1372)) end, ((begin (V1378 = fun (V1374) -> fun (V1375) -> fun (V1376) -> fun (V1377) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1376, V1377)) end end end end), fun (V1379) -> fun (V1380) -> ((((V1378('erased'))('erased'))(V1379))(V1380)) end end end(fun (V1373) -> ('Idris.Idris2.Builtin':'un--snd'(V1373)) end))(V8)), []))), fun (V1382) -> begin (V1383 = (V1381(V1382))), case V1383 of {'Prelude.Types.Left', V1384} -> {'Prelude.Types.Left', V1384}; {'Prelude.Types.Right', V1385} -> (begin (V1408 = begin (V1395 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1386) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1371, V5, V1386)) end, ((begin (V1392 = fun (V1388) -> fun (V1389) -> fun (V1390) -> fun (V1391) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1390, V1391)) end end end end), fun (V1393) -> fun (V1394) -> ((((V1392('erased'))('erased'))(V1393))(V1394)) end end end(fun (V1387) -> ('Idris.Idris2.Builtin':'un--snd'(V1387)) end))(V11)), []))), fun (V1396) -> begin (V1397 = (V1395(V1396))), case V1397 of {'Prelude.Types.Left', V1398} -> {'Prelude.Types.Left', V1398}; {'Prelude.Types.Right', V1399} -> (begin (V1407 = fun (V1400) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1401) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1401)) end, fun (V1402) -> fun (V1403) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1402, V1403)) end end}, V1385))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1404) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1404)) end, fun (V1405) -> fun (V1406) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1405, V1406)) end end}, V1399))/binary>>/binary>>/binary>>} end), V1407 end(V1396)) end end end end), V1408 end(V1382)) end end end end), V1409 end(V1368)) end end end end))), fun (V1411) -> begin (V1412 = (V1410(V1411))), case V1412 of {'Prelude.Types.Left', V1413} -> {'Prelude.Types.Left', V1413}; {'Prelude.Types.Right', V1414} -> (begin (V1470 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1415) -> fun (V1416) -> fun (V1417) -> fun (V1418) -> fun (V1419) -> fun (V1420) -> fun (V1421) -> fun (V1422) -> ('dn--un--unifyD_Unify_Closure'(V1415, V1416, V1417, V1418, V1419, V1420, V1421, V1422)) end end end end end end end end, fun (V1423) -> fun (V1424) -> fun (V1425) -> fun (V1426) -> fun (V1427) -> fun (V1428) -> fun (V1429) -> fun (V1430) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1423, V1424, V1425, V1426, V1427, V1428, V1429, V1430)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1431) -> fun (V1432) -> fun (V1433) -> fun (V1434) -> fun (V1435) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1431, V1432, V1433, V1434, V1435)) end end end end end, fun (V1436) -> fun (V1437) -> fun (V1438) -> fun (V1439) -> fun (V1440) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1436, V1437, V1438, V1439, V1440)) end end end end end, fun (V1441) -> fun (V1442) -> fun (V1443) -> fun (V1444) -> fun (V1445) -> fun (V1446) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1441, V1442, V1443, V1444, V1445, V1446)) end end end end end end, fun (V1447) -> fun (V1448) -> fun (V1449) -> fun (V1450) -> fun (V1451) -> fun (V1452) -> fun (V1453) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1447, V1448, V1449, V1450, V1451, V1452, V1453)) end end end end end end end}}, V2, V0, V1, V1359, V4, V5, ((begin (V1459 = fun (V1455) -> fun (V1456) -> fun (V1457) -> fun (V1458) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1457, V1458)) end end end end), fun (V1460) -> fun (V1461) -> ((((V1459('erased'))('erased'))(V1460))(V1461)) end end end(fun (V1454) -> ('Idris.Idris2.Builtin':'un--snd'(V1454)) end))(V8)), ((begin (V1467 = fun (V1463) -> fun (V1464) -> fun (V1465) -> fun (V1466) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1465, V1466)) end end end end), fun (V1468) -> fun (V1469) -> ((((V1467('erased'))('erased'))(V1468))(V1469)) end end end(fun (V1462) -> ('Idris.Idris2.Builtin':'un--snd'(V1462)) end))(V11))))), V1470 end(V1411)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1359, V4, V5, V6, V1360, V8, {'Core.Value.NApp', V9, V1361, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V1471, V1472} -> case V10 of {'Core.Value.NLocal', V1473, V1474} -> begin (V1475 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V1476) -> begin (V1477 = (V1475(V1476))), case V1477 of {'Prelude.Types.Left', V1478} -> {'Prelude.Types.Left', V1478}; {'Prelude.Types.Right', V1479} -> (begin (V1480 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V1471, V1472}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V1473, V1474}, V11}))), V1480 end(V1476)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V1481, V1482, V1483} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1484, V1485} -> V1485 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V1481, V1482, V1483}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V1481, V1482, V1483}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V1486, V1487} -> case V1487 of 3 -> case V7 of {'Core.Value.NRef', V1488, V1489} -> case V10 of {'Core.Value.NRef', V1490, V1491} -> begin (V1492 = {'Core.Unify.MkUnifyInfo', V1486, 3}), begin (V1493 = {'Core.Value.NRef', V1488, V1489}), begin (V1494 = {'Core.Value.NRef', V1490, V1491}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1489, V1491)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1495) -> fun (V1496) -> fun (V1497) -> fun (V1498) -> fun (V1499) -> fun (V1500) -> fun (V1501) -> fun (V1502) -> ('dn--un--unifyD_Unify_Closure'(V1495, V1496, V1497, V1498, V1499, V1500, V1501, V1502)) end end end end end end end end, fun (V1503) -> fun (V1504) -> fun (V1505) -> fun (V1506) -> fun (V1507) -> fun (V1508) -> fun (V1509) -> fun (V1510) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1503, V1504, V1505, V1506, V1507, V1508, V1509, V1510)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1511) -> fun (V1512) -> fun (V1513) -> fun (V1514) -> fun (V1515) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1511, V1512, V1513, V1514, V1515)) end end end end end, fun (V1516) -> fun (V1517) -> fun (V1518) -> fun (V1519) -> fun (V1520) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1516, V1517, V1518, V1519, V1520)) end end end end end, fun (V1521) -> fun (V1522) -> fun (V1523) -> fun (V1524) -> fun (V1525) -> fun (V1526) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1521, V1522, V1523, V1524, V1525, V1526)) end end end end end end, fun (V1527) -> fun (V1528) -> fun (V1529) -> fun (V1530) -> fun (V1531) -> fun (V1532) -> fun (V1533) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1527, V1528, V1529, V1530, V1531, V1532, V1533)) end end end end end end end}}, V2, V0, V1, V1492, V4, V5, ((begin (V1539 = fun (V1535) -> fun (V1536) -> fun (V1537) -> fun (V1538) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1537, V1538)) end end end end), fun (V1540) -> fun (V1541) -> ((((V1539('erased'))('erased'))(V1540))(V1541)) end end end(fun (V1534) -> ('Idris.Idris2.Builtin':'un--snd'(V1534)) end))(V8)), ((begin (V1547 = fun (V1543) -> fun (V1544) -> fun (V1545) -> fun (V1546) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1545, V1546)) end end end end), fun (V1548) -> fun (V1549) -> ((((V1547('erased'))('erased'))(V1548))(V1549)) end end end(fun (V1542) -> ('Idris.Idris2.Builtin':'un--snd'(V1542)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1492, V4, V5, V6, V1493, V8, {'Core.Value.NApp', V9, V1494, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V1550, V1551} -> case V10 of {'Core.Value.NRef', V1552, V1553} -> begin (V1554 = {'Core.Unify.MkUnifyInfo', V1486, 2}), begin (V1555 = {'Core.Value.NRef', V1550, V1551}), begin (V1556 = {'Core.Value.NRef', V1552, V1553}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1551, V1553)) of 1 -> begin (V1605 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V1562 = begin (V1557 = V0), fun (V1558) -> begin (V1561 = (begin (V1559 = V1557), fun (V1560) -> ('erlang':'get'(V1559)) end end(V1558))), {'Prelude.Types.Right', V1561} end end end), fun (V1563) -> begin (V1564 = (V1562(V1563))), case V1564 of {'Prelude.Types.Left', V1565} -> {'Prelude.Types.Left', V1565}; {'Prelude.Types.Right', V1566} -> (begin (V1604 = begin (V1576 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1567) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1566, V5, V1567)) end, ((begin (V1573 = fun (V1569) -> fun (V1570) -> fun (V1571) -> fun (V1572) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1571, V1572)) end end end end), fun (V1574) -> fun (V1575) -> ((((V1573('erased'))('erased'))(V1574))(V1575)) end end end(fun (V1568) -> ('Idris.Idris2.Builtin':'un--snd'(V1568)) end))(V8)), []))), fun (V1577) -> begin (V1578 = (V1576(V1577))), case V1578 of {'Prelude.Types.Left', V1579} -> {'Prelude.Types.Left', V1579}; {'Prelude.Types.Right', V1580} -> (begin (V1603 = begin (V1590 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1581) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1566, V5, V1581)) end, ((begin (V1587 = fun (V1583) -> fun (V1584) -> fun (V1585) -> fun (V1586) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1585, V1586)) end end end end), fun (V1588) -> fun (V1589) -> ((((V1587('erased'))('erased'))(V1588))(V1589)) end end end(fun (V1582) -> ('Idris.Idris2.Builtin':'un--snd'(V1582)) end))(V11)), []))), fun (V1591) -> begin (V1592 = (V1590(V1591))), case V1592 of {'Prelude.Types.Left', V1593} -> {'Prelude.Types.Left', V1593}; {'Prelude.Types.Right', V1594} -> (begin (V1602 = fun (V1595) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1596) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1596)) end, fun (V1597) -> fun (V1598) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1597, V1598)) end end}, V1580))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1599) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1599)) end, fun (V1600) -> fun (V1601) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1600, V1601)) end end}, V1594))/binary>>/binary>>/binary>>} end), V1602 end(V1591)) end end end end), V1603 end(V1577)) end end end end), V1604 end(V1563)) end end end end))), fun (V1606) -> begin (V1607 = (V1605(V1606))), case V1607 of {'Prelude.Types.Left', V1608} -> {'Prelude.Types.Left', V1608}; {'Prelude.Types.Right', V1609} -> (begin (V1665 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1610) -> fun (V1611) -> fun (V1612) -> fun (V1613) -> fun (V1614) -> fun (V1615) -> fun (V1616) -> fun (V1617) -> ('dn--un--unifyD_Unify_Closure'(V1610, V1611, V1612, V1613, V1614, V1615, V1616, V1617)) end end end end end end end end, fun (V1618) -> fun (V1619) -> fun (V1620) -> fun (V1621) -> fun (V1622) -> fun (V1623) -> fun (V1624) -> fun (V1625) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1618, V1619, V1620, V1621, V1622, V1623, V1624, V1625)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1626) -> fun (V1627) -> fun (V1628) -> fun (V1629) -> fun (V1630) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1626, V1627, V1628, V1629, V1630)) end end end end end, fun (V1631) -> fun (V1632) -> fun (V1633) -> fun (V1634) -> fun (V1635) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1631, V1632, V1633, V1634, V1635)) end end end end end, fun (V1636) -> fun (V1637) -> fun (V1638) -> fun (V1639) -> fun (V1640) -> fun (V1641) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1636, V1637, V1638, V1639, V1640, V1641)) end end end end end end, fun (V1642) -> fun (V1643) -> fun (V1644) -> fun (V1645) -> fun (V1646) -> fun (V1647) -> fun (V1648) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1642, V1643, V1644, V1645, V1646, V1647, V1648)) end end end end end end end}}, V2, V0, V1, V1554, V4, V5, ((begin (V1654 = fun (V1650) -> fun (V1651) -> fun (V1652) -> fun (V1653) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1652, V1653)) end end end end), fun (V1655) -> fun (V1656) -> ((((V1654('erased'))('erased'))(V1655))(V1656)) end end end(fun (V1649) -> ('Idris.Idris2.Builtin':'un--snd'(V1649)) end))(V8)), ((begin (V1662 = fun (V1658) -> fun (V1659) -> fun (V1660) -> fun (V1661) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1660, V1661)) end end end end), fun (V1663) -> fun (V1664) -> ((((V1662('erased'))('erased'))(V1663))(V1664)) end end end(fun (V1657) -> ('Idris.Idris2.Builtin':'un--snd'(V1657)) end))(V11))))), V1665 end(V1606)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1554, V4, V5, V6, V1555, V8, {'Core.Value.NApp', V9, V1556, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V1666, V1667, V1668} -> case V10 of {'Core.Value.NMeta', V1669, V1670, V1671} -> begin (V1672 = ('un--isDefInvertible'(V0, V4, V1667))), fun (V1673) -> begin (V1674 = (V1672(V1673))), case V1674 of {'Prelude.Types.Left', V1675} -> {'Prelude.Types.Left', V1675}; {'Prelude.Types.Right', V1676} -> (begin (V1749 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1667, V1670)) of 1 -> case V1676 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1677, V1678} -> V1678 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1679) -> fun (V1680) -> fun (V1681) -> fun (V1682) -> fun (V1683) -> fun (V1684) -> fun (V1685) -> fun (V1686) -> ('dn--un--unifyD_Unify_Closure'(V1679, V1680, V1681, V1682, V1683, V1684, V1685, V1686)) end end end end end end end end, fun (V1687) -> fun (V1688) -> fun (V1689) -> fun (V1690) -> fun (V1691) -> fun (V1692) -> fun (V1693) -> fun (V1694) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1687, V1688, V1689, V1690, V1691, V1692, V1693, V1694)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1695) -> fun (V1696) -> fun (V1697) -> fun (V1698) -> fun (V1699) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1695, V1696, V1697, V1698, V1699)) end end end end end, fun (V1700) -> fun (V1701) -> fun (V1702) -> fun (V1703) -> fun (V1704) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1700, V1701, V1702, V1703, V1704)) end end end end end, fun (V1705) -> fun (V1706) -> fun (V1707) -> fun (V1708) -> fun (V1709) -> fun (V1710) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1705, V1706, V1707, V1708, V1709, V1710)) end end end end end end, fun (V1711) -> fun (V1712) -> fun (V1713) -> fun (V1714) -> fun (V1715) -> fun (V1716) -> fun (V1717) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1711, V1712, V1713, V1714, V1715, V1716, V1717)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1668, ((begin (V1723 = fun (V1719) -> fun (V1720) -> fun (V1721) -> fun (V1722) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1721, V1722)) end end end end), fun (V1724) -> fun (V1725) -> ((((V1723('erased'))('erased'))(V1724))(V1725)) end end end(fun (V1718) -> ('Idris.Idris2.Builtin':'un--snd'(V1718)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1671, ((begin (V1731 = fun (V1727) -> fun (V1728) -> fun (V1729) -> fun (V1730) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1729, V1730)) end end end end), fun (V1732) -> fun (V1733) -> ((((V1731('erased'))('erased'))(V1732))(V1733)) end end end(fun (V1726) -> ('Idris.Idris2.Builtin':'un--snd'(V1726)) end))(V11)))))); 0 -> begin (V1734 = ('nested--14746-23552--in--un--localsIn'(V2, V1668, V1667, V1666, V1671, V1670, V1669, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1668))), fun (V1735) -> begin (V1736 = (V1734(V1735))), case V1736 of {'Prelude.Types.Left', V1737} -> {'Prelude.Types.Left', V1737}; {'Prelude.Types.Right', V1738} -> (begin (V1748 = begin (V1739 = ('nested--14746-23552--in--un--localsIn'(V2, V1668, V1667, V1666, V1671, V1670, V1669, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1671))), fun (V1740) -> begin (V1741 = (V1739(V1740))), case V1741 of {'Prelude.Types.Left', V1742} -> {'Prelude.Types.Left', V1742}; {'Prelude.Types.Right', V1743} -> (begin (V1747 = begin (V1744 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1738, V1743)) of 1 -> 1; 0 -> case case (V1738 =:= V1743) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V1744 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1745, V1746} -> V1746 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V1668, V1667, V1666, V1671, V1670, V1669, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1666)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V1666, V1667, V1668}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V1669, V1670, V1671}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V1669, V1670, V1671}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V1666, V1667, V1668}, V8})) end end), V1747 end(V1740)) end end end end), V1748 end(V1735)) end end end end end), V1749 end(V1673)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V1666, V1667, V1668}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V1750, V1751, V1752} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V1753, V1754} -> V1754 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V1750, V1751, V1752}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V1750, V1751, V1752}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V1755, V1756} -> case V1756 of 3 -> case V7 of {'Core.Value.NRef', V1757, V1758} -> case V10 of {'Core.Value.NRef', V1759, V1760} -> begin (V1761 = {'Core.Unify.MkUnifyInfo', V1755, 3}), begin (V1762 = {'Core.Value.NRef', V1757, V1758}), begin (V1763 = {'Core.Value.NRef', V1759, V1760}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1758, V1760)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1764) -> fun (V1765) -> fun (V1766) -> fun (V1767) -> fun (V1768) -> fun (V1769) -> fun (V1770) -> fun (V1771) -> ('dn--un--unifyD_Unify_Closure'(V1764, V1765, V1766, V1767, V1768, V1769, V1770, V1771)) end end end end end end end end, fun (V1772) -> fun (V1773) -> fun (V1774) -> fun (V1775) -> fun (V1776) -> fun (V1777) -> fun (V1778) -> fun (V1779) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1772, V1773, V1774, V1775, V1776, V1777, V1778, V1779)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1780) -> fun (V1781) -> fun (V1782) -> fun (V1783) -> fun (V1784) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1780, V1781, V1782, V1783, V1784)) end end end end end, fun (V1785) -> fun (V1786) -> fun (V1787) -> fun (V1788) -> fun (V1789) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1785, V1786, V1787, V1788, V1789)) end end end end end, fun (V1790) -> fun (V1791) -> fun (V1792) -> fun (V1793) -> fun (V1794) -> fun (V1795) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1790, V1791, V1792, V1793, V1794, V1795)) end end end end end end, fun (V1796) -> fun (V1797) -> fun (V1798) -> fun (V1799) -> fun (V1800) -> fun (V1801) -> fun (V1802) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1796, V1797, V1798, V1799, V1800, V1801, V1802)) end end end end end end end}}, V2, V0, V1, V1761, V4, V5, ((begin (V1808 = fun (V1804) -> fun (V1805) -> fun (V1806) -> fun (V1807) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1806, V1807)) end end end end), fun (V1809) -> fun (V1810) -> ((((V1808('erased'))('erased'))(V1809))(V1810)) end end end(fun (V1803) -> ('Idris.Idris2.Builtin':'un--snd'(V1803)) end))(V8)), ((begin (V1816 = fun (V1812) -> fun (V1813) -> fun (V1814) -> fun (V1815) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1814, V1815)) end end end end), fun (V1817) -> fun (V1818) -> ((((V1816('erased'))('erased'))(V1817))(V1818)) end end end(fun (V1811) -> ('Idris.Idris2.Builtin':'un--snd'(V1811)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1761, V4, V5, V6, V1762, V8, {'Core.Value.NApp', V9, V1763, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V1819, V1820} -> case V10 of {'Core.Value.NRef', V1821, V1822} -> begin (V1823 = {'Core.Unify.MkUnifyInfo', V1755, 2}), begin (V1824 = {'Core.Value.NRef', V1819, V1820}), begin (V1825 = {'Core.Value.NRef', V1821, V1822}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1820, V1822)) of 1 -> begin (V1874 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V1831 = begin (V1826 = V0), fun (V1827) -> begin (V1830 = (begin (V1828 = V1826), fun (V1829) -> ('erlang':'get'(V1828)) end end(V1827))), {'Prelude.Types.Right', V1830} end end end), fun (V1832) -> begin (V1833 = (V1831(V1832))), case V1833 of {'Prelude.Types.Left', V1834} -> {'Prelude.Types.Left', V1834}; {'Prelude.Types.Right', V1835} -> (begin (V1873 = begin (V1845 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1836) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1835, V5, V1836)) end, ((begin (V1842 = fun (V1838) -> fun (V1839) -> fun (V1840) -> fun (V1841) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1840, V1841)) end end end end), fun (V1843) -> fun (V1844) -> ((((V1842('erased'))('erased'))(V1843))(V1844)) end end end(fun (V1837) -> ('Idris.Idris2.Builtin':'un--snd'(V1837)) end))(V8)), []))), fun (V1846) -> begin (V1847 = (V1845(V1846))), case V1847 of {'Prelude.Types.Left', V1848} -> {'Prelude.Types.Left', V1848}; {'Prelude.Types.Right', V1849} -> (begin (V1872 = begin (V1859 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1850) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1835, V5, V1850)) end, ((begin (V1856 = fun (V1852) -> fun (V1853) -> fun (V1854) -> fun (V1855) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1854, V1855)) end end end end), fun (V1857) -> fun (V1858) -> ((((V1856('erased'))('erased'))(V1857))(V1858)) end end end(fun (V1851) -> ('Idris.Idris2.Builtin':'un--snd'(V1851)) end))(V11)), []))), fun (V1860) -> begin (V1861 = (V1859(V1860))), case V1861 of {'Prelude.Types.Left', V1862} -> {'Prelude.Types.Left', V1862}; {'Prelude.Types.Right', V1863} -> (begin (V1871 = fun (V1864) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1865) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1865)) end, fun (V1866) -> fun (V1867) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1866, V1867)) end end}, V1849))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V1868) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1868)) end, fun (V1869) -> fun (V1870) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1869, V1870)) end end}, V1863))/binary>>/binary>>/binary>>} end), V1871 end(V1860)) end end end end), V1872 end(V1846)) end end end end), V1873 end(V1832)) end end end end))), fun (V1875) -> begin (V1876 = (V1874(V1875))), case V1876 of {'Prelude.Types.Left', V1877} -> {'Prelude.Types.Left', V1877}; {'Prelude.Types.Right', V1878} -> (begin (V1934 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1879) -> fun (V1880) -> fun (V1881) -> fun (V1882) -> fun (V1883) -> fun (V1884) -> fun (V1885) -> fun (V1886) -> ('dn--un--unifyD_Unify_Closure'(V1879, V1880, V1881, V1882, V1883, V1884, V1885, V1886)) end end end end end end end end, fun (V1887) -> fun (V1888) -> fun (V1889) -> fun (V1890) -> fun (V1891) -> fun (V1892) -> fun (V1893) -> fun (V1894) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1887, V1888, V1889, V1890, V1891, V1892, V1893, V1894)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1895) -> fun (V1896) -> fun (V1897) -> fun (V1898) -> fun (V1899) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1895, V1896, V1897, V1898, V1899)) end end end end end, fun (V1900) -> fun (V1901) -> fun (V1902) -> fun (V1903) -> fun (V1904) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1900, V1901, V1902, V1903, V1904)) end end end end end, fun (V1905) -> fun (V1906) -> fun (V1907) -> fun (V1908) -> fun (V1909) -> fun (V1910) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1905, V1906, V1907, V1908, V1909, V1910)) end end end end end end, fun (V1911) -> fun (V1912) -> fun (V1913) -> fun (V1914) -> fun (V1915) -> fun (V1916) -> fun (V1917) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1911, V1912, V1913, V1914, V1915, V1916, V1917)) end end end end end end end}}, V2, V0, V1, V1823, V4, V5, ((begin (V1923 = fun (V1919) -> fun (V1920) -> fun (V1921) -> fun (V1922) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1921, V1922)) end end end end), fun (V1924) -> fun (V1925) -> ((((V1923('erased'))('erased'))(V1924))(V1925)) end end end(fun (V1918) -> ('Idris.Idris2.Builtin':'un--snd'(V1918)) end))(V8)), ((begin (V1931 = fun (V1927) -> fun (V1928) -> fun (V1929) -> fun (V1930) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1929, V1930)) end end end end), fun (V1932) -> fun (V1933) -> ((((V1931('erased'))('erased'))(V1932))(V1933)) end end end(fun (V1926) -> ('Idris.Idris2.Builtin':'un--snd'(V1926)) end))(V11))))), V1934 end(V1875)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1823, V4, V5, V6, V1824, V8, {'Core.Value.NApp', V9, V1825, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V1935, V1936} -> case V1936 of 1 -> case V7 of {'Core.Value.NLocal', V1937, V1938} -> case V10 of {'Core.Value.NLocal', V1939, V1940} -> begin (V1941 = {'Core.Unify.MkUnifyInfo', V1935, 1}), case case (V1938 =:= V1940) of 'false' -> 0; _ -> 1 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V1942) -> fun (V1943) -> fun (V1944) -> fun (V1945) -> fun (V1946) -> fun (V1947) -> fun (V1948) -> fun (V1949) -> ('dn--un--unifyD_Unify_Closure'(V1942, V1943, V1944, V1945, V1946, V1947, V1948, V1949)) end end end end end end end end, fun (V1950) -> fun (V1951) -> fun (V1952) -> fun (V1953) -> fun (V1954) -> fun (V1955) -> fun (V1956) -> fun (V1957) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1950, V1951, V1952, V1953, V1954, V1955, V1956, V1957)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V1958) -> fun (V1959) -> fun (V1960) -> fun (V1961) -> fun (V1962) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1958, V1959, V1960, V1961, V1962)) end end end end end, fun (V1963) -> fun (V1964) -> fun (V1965) -> fun (V1966) -> fun (V1967) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1963, V1964, V1965, V1966, V1967)) end end end end end, fun (V1968) -> fun (V1969) -> fun (V1970) -> fun (V1971) -> fun (V1972) -> fun (V1973) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1968, V1969, V1970, V1971, V1972, V1973)) end end end end end end, fun (V1974) -> fun (V1975) -> fun (V1976) -> fun (V1977) -> fun (V1978) -> fun (V1979) -> fun (V1980) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1974, V1975, V1976, V1977, V1978, V1979, V1980)) end end end end end end end}}, V2, V0, V1, V1941, V4, V5, ((begin (V1986 = fun (V1982) -> fun (V1983) -> fun (V1984) -> fun (V1985) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1984, V1985)) end end end end), fun (V1987) -> fun (V1988) -> ((((V1986('erased'))('erased'))(V1987))(V1988)) end end end(fun (V1981) -> ('Idris.Idris2.Builtin':'un--snd'(V1981)) end))(V8)), ((begin (V1994 = fun (V1990) -> fun (V1991) -> fun (V1992) -> fun (V1993) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1992, V1993)) end end end end), fun (V1995) -> fun (V1996) -> ((((V1994('erased'))('erased'))(V1995))(V1996)) end end end(fun (V1989) -> ('Idris.Idris2.Builtin':'un--snd'(V1989)) end))(V11)))); 0 -> ('un--postpone'(V2, V0, V1, V4, V1941, <<"Postponing local app"/utf8>>, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V1937, V1938}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V1939, V1940}, V11})) end end; _ -> case V7 of {'Core.Value.NLocal', V1997, V1998} -> case V10 of {'Core.Value.NLocal', V1999, V2000} -> begin (V2001 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V2002) -> begin (V2003 = (V2001(V2002))), case V2003 of {'Prelude.Types.Left', V2004} -> {'Prelude.Types.Left', V2004}; {'Prelude.Types.Right', V2005} -> (begin (V2006 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V1997, V1998}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V1999, V2000}, V11}))), V2006 end(V2002)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V2007, V2008, V2009} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2010, V2011} -> V2011 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V2007, V2008, V2009}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V2007, V2008, V2009}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V2012, V2013} -> case V2013 of 3 -> case V7 of {'Core.Value.NRef', V2014, V2015} -> case V10 of {'Core.Value.NRef', V2016, V2017} -> begin (V2018 = {'Core.Unify.MkUnifyInfo', V2012, 3}), begin (V2019 = {'Core.Value.NRef', V2014, V2015}), begin (V2020 = {'Core.Value.NRef', V2016, V2017}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2015, V2017)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2021) -> fun (V2022) -> fun (V2023) -> fun (V2024) -> fun (V2025) -> fun (V2026) -> fun (V2027) -> fun (V2028) -> ('dn--un--unifyD_Unify_Closure'(V2021, V2022, V2023, V2024, V2025, V2026, V2027, V2028)) end end end end end end end end, fun (V2029) -> fun (V2030) -> fun (V2031) -> fun (V2032) -> fun (V2033) -> fun (V2034) -> fun (V2035) -> fun (V2036) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2029, V2030, V2031, V2032, V2033, V2034, V2035, V2036)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2037) -> fun (V2038) -> fun (V2039) -> fun (V2040) -> fun (V2041) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2037, V2038, V2039, V2040, V2041)) end end end end end, fun (V2042) -> fun (V2043) -> fun (V2044) -> fun (V2045) -> fun (V2046) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2042, V2043, V2044, V2045, V2046)) end end end end end, fun (V2047) -> fun (V2048) -> fun (V2049) -> fun (V2050) -> fun (V2051) -> fun (V2052) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2047, V2048, V2049, V2050, V2051, V2052)) end end end end end end, fun (V2053) -> fun (V2054) -> fun (V2055) -> fun (V2056) -> fun (V2057) -> fun (V2058) -> fun (V2059) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2053, V2054, V2055, V2056, V2057, V2058, V2059)) end end end end end end end}}, V2, V0, V1, V2018, V4, V5, ((begin (V2065 = fun (V2061) -> fun (V2062) -> fun (V2063) -> fun (V2064) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2063, V2064)) end end end end), fun (V2066) -> fun (V2067) -> ((((V2065('erased'))('erased'))(V2066))(V2067)) end end end(fun (V2060) -> ('Idris.Idris2.Builtin':'un--snd'(V2060)) end))(V8)), ((begin (V2073 = fun (V2069) -> fun (V2070) -> fun (V2071) -> fun (V2072) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2071, V2072)) end end end end), fun (V2074) -> fun (V2075) -> ((((V2073('erased'))('erased'))(V2074))(V2075)) end end end(fun (V2068) -> ('Idris.Idris2.Builtin':'un--snd'(V2068)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2018, V4, V5, V6, V2019, V8, {'Core.Value.NApp', V9, V2020, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V2076, V2077} -> case V10 of {'Core.Value.NRef', V2078, V2079} -> begin (V2080 = {'Core.Unify.MkUnifyInfo', V2012, 2}), begin (V2081 = {'Core.Value.NRef', V2076, V2077}), begin (V2082 = {'Core.Value.NRef', V2078, V2079}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2077, V2079)) of 1 -> begin (V2131 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V2088 = begin (V2083 = V0), fun (V2084) -> begin (V2087 = (begin (V2085 = V2083), fun (V2086) -> ('erlang':'get'(V2085)) end end(V2084))), {'Prelude.Types.Right', V2087} end end end), fun (V2089) -> begin (V2090 = (V2088(V2089))), case V2090 of {'Prelude.Types.Left', V2091} -> {'Prelude.Types.Left', V2091}; {'Prelude.Types.Right', V2092} -> (begin (V2130 = begin (V2102 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2093) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2092, V5, V2093)) end, ((begin (V2099 = fun (V2095) -> fun (V2096) -> fun (V2097) -> fun (V2098) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2097, V2098)) end end end end), fun (V2100) -> fun (V2101) -> ((((V2099('erased'))('erased'))(V2100))(V2101)) end end end(fun (V2094) -> ('Idris.Idris2.Builtin':'un--snd'(V2094)) end))(V8)), []))), fun (V2103) -> begin (V2104 = (V2102(V2103))), case V2104 of {'Prelude.Types.Left', V2105} -> {'Prelude.Types.Left', V2105}; {'Prelude.Types.Right', V2106} -> (begin (V2129 = begin (V2116 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2107) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2092, V5, V2107)) end, ((begin (V2113 = fun (V2109) -> fun (V2110) -> fun (V2111) -> fun (V2112) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2111, V2112)) end end end end), fun (V2114) -> fun (V2115) -> ((((V2113('erased'))('erased'))(V2114))(V2115)) end end end(fun (V2108) -> ('Idris.Idris2.Builtin':'un--snd'(V2108)) end))(V11)), []))), fun (V2117) -> begin (V2118 = (V2116(V2117))), case V2118 of {'Prelude.Types.Left', V2119} -> {'Prelude.Types.Left', V2119}; {'Prelude.Types.Right', V2120} -> (begin (V2128 = fun (V2121) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2122) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2122)) end, fun (V2123) -> fun (V2124) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2123, V2124)) end end}, V2106))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2125) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2125)) end, fun (V2126) -> fun (V2127) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2126, V2127)) end end}, V2120))/binary>>/binary>>/binary>>} end), V2128 end(V2117)) end end end end), V2129 end(V2103)) end end end end), V2130 end(V2089)) end end end end))), fun (V2132) -> begin (V2133 = (V2131(V2132))), case V2133 of {'Prelude.Types.Left', V2134} -> {'Prelude.Types.Left', V2134}; {'Prelude.Types.Right', V2135} -> (begin (V2191 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2136) -> fun (V2137) -> fun (V2138) -> fun (V2139) -> fun (V2140) -> fun (V2141) -> fun (V2142) -> fun (V2143) -> ('dn--un--unifyD_Unify_Closure'(V2136, V2137, V2138, V2139, V2140, V2141, V2142, V2143)) end end end end end end end end, fun (V2144) -> fun (V2145) -> fun (V2146) -> fun (V2147) -> fun (V2148) -> fun (V2149) -> fun (V2150) -> fun (V2151) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2144, V2145, V2146, V2147, V2148, V2149, V2150, V2151)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2152) -> fun (V2153) -> fun (V2154) -> fun (V2155) -> fun (V2156) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2152, V2153, V2154, V2155, V2156)) end end end end end, fun (V2157) -> fun (V2158) -> fun (V2159) -> fun (V2160) -> fun (V2161) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2157, V2158, V2159, V2160, V2161)) end end end end end, fun (V2162) -> fun (V2163) -> fun (V2164) -> fun (V2165) -> fun (V2166) -> fun (V2167) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2162, V2163, V2164, V2165, V2166, V2167)) end end end end end end, fun (V2168) -> fun (V2169) -> fun (V2170) -> fun (V2171) -> fun (V2172) -> fun (V2173) -> fun (V2174) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2168, V2169, V2170, V2171, V2172, V2173, V2174)) end end end end end end end}}, V2, V0, V1, V2080, V4, V5, ((begin (V2180 = fun (V2176) -> fun (V2177) -> fun (V2178) -> fun (V2179) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2178, V2179)) end end end end), fun (V2181) -> fun (V2182) -> ((((V2180('erased'))('erased'))(V2181))(V2182)) end end end(fun (V2175) -> ('Idris.Idris2.Builtin':'un--snd'(V2175)) end))(V8)), ((begin (V2188 = fun (V2184) -> fun (V2185) -> fun (V2186) -> fun (V2187) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2186, V2187)) end end end end), fun (V2189) -> fun (V2190) -> ((((V2188('erased'))('erased'))(V2189))(V2190)) end end end(fun (V2183) -> ('Idris.Idris2.Builtin':'un--snd'(V2183)) end))(V11))))), V2191 end(V2132)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2080, V4, V5, V6, V2081, V8, {'Core.Value.NApp', V9, V2082, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V2192, V2193, V2194} -> case V10 of {'Core.Value.NMeta', V2195, V2196, V2197} -> begin (V2198 = ('un--isDefInvertible'(V0, V4, V2193))), fun (V2199) -> begin (V2200 = (V2198(V2199))), case V2200 of {'Prelude.Types.Left', V2201} -> {'Prelude.Types.Left', V2201}; {'Prelude.Types.Right', V2202} -> (begin (V2275 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2193, V2196)) of 1 -> case V2202 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2203, V2204} -> V2204 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2205) -> fun (V2206) -> fun (V2207) -> fun (V2208) -> fun (V2209) -> fun (V2210) -> fun (V2211) -> fun (V2212) -> ('dn--un--unifyD_Unify_Closure'(V2205, V2206, V2207, V2208, V2209, V2210, V2211, V2212)) end end end end end end end end, fun (V2213) -> fun (V2214) -> fun (V2215) -> fun (V2216) -> fun (V2217) -> fun (V2218) -> fun (V2219) -> fun (V2220) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2213, V2214, V2215, V2216, V2217, V2218, V2219, V2220)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2221) -> fun (V2222) -> fun (V2223) -> fun (V2224) -> fun (V2225) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2221, V2222, V2223, V2224, V2225)) end end end end end, fun (V2226) -> fun (V2227) -> fun (V2228) -> fun (V2229) -> fun (V2230) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2226, V2227, V2228, V2229, V2230)) end end end end end, fun (V2231) -> fun (V2232) -> fun (V2233) -> fun (V2234) -> fun (V2235) -> fun (V2236) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2231, V2232, V2233, V2234, V2235, V2236)) end end end end end end, fun (V2237) -> fun (V2238) -> fun (V2239) -> fun (V2240) -> fun (V2241) -> fun (V2242) -> fun (V2243) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2237, V2238, V2239, V2240, V2241, V2242, V2243)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2194, ((begin (V2249 = fun (V2245) -> fun (V2246) -> fun (V2247) -> fun (V2248) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2247, V2248)) end end end end), fun (V2250) -> fun (V2251) -> ((((V2249('erased'))('erased'))(V2250))(V2251)) end end end(fun (V2244) -> ('Idris.Idris2.Builtin':'un--snd'(V2244)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2197, ((begin (V2257 = fun (V2253) -> fun (V2254) -> fun (V2255) -> fun (V2256) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2255, V2256)) end end end end), fun (V2258) -> fun (V2259) -> ((((V2257('erased'))('erased'))(V2258))(V2259)) end end end(fun (V2252) -> ('Idris.Idris2.Builtin':'un--snd'(V2252)) end))(V11)))))); 0 -> begin (V2260 = ('nested--14746-23552--in--un--localsIn'(V2, V2194, V2193, V2192, V2197, V2196, V2195, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2194))), fun (V2261) -> begin (V2262 = (V2260(V2261))), case V2262 of {'Prelude.Types.Left', V2263} -> {'Prelude.Types.Left', V2263}; {'Prelude.Types.Right', V2264} -> (begin (V2274 = begin (V2265 = ('nested--14746-23552--in--un--localsIn'(V2, V2194, V2193, V2192, V2197, V2196, V2195, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2197))), fun (V2266) -> begin (V2267 = (V2265(V2266))), case V2267 of {'Prelude.Types.Left', V2268} -> {'Prelude.Types.Left', V2268}; {'Prelude.Types.Right', V2269} -> (begin (V2273 = begin (V2270 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2264, V2269)) of 1 -> 1; 0 -> case case (V2264 =:= V2269) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V2270 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2271, V2272} -> V2272 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V2194, V2193, V2192, V2197, V2196, V2195, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2192)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V2192, V2193, V2194}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V2195, V2196, V2197}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V2195, V2196, V2197}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V2192, V2193, V2194}, V8})) end end), V2273 end(V2266)) end end end end), V2274 end(V2261)) end end end end end), V2275 end(V2199)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V2192, V2193, V2194}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V2276, V2277, V2278} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2279, V2280} -> V2280 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V2276, V2277, V2278}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V2276, V2277, V2278}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V2281, V2282} -> case V2282 of 3 -> case V7 of {'Core.Value.NRef', V2283, V2284} -> case V10 of {'Core.Value.NRef', V2285, V2286} -> begin (V2287 = {'Core.Unify.MkUnifyInfo', V2281, 3}), begin (V2288 = {'Core.Value.NRef', V2283, V2284}), begin (V2289 = {'Core.Value.NRef', V2285, V2286}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2284, V2286)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2290) -> fun (V2291) -> fun (V2292) -> fun (V2293) -> fun (V2294) -> fun (V2295) -> fun (V2296) -> fun (V2297) -> ('dn--un--unifyD_Unify_Closure'(V2290, V2291, V2292, V2293, V2294, V2295, V2296, V2297)) end end end end end end end end, fun (V2298) -> fun (V2299) -> fun (V2300) -> fun (V2301) -> fun (V2302) -> fun (V2303) -> fun (V2304) -> fun (V2305) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2298, V2299, V2300, V2301, V2302, V2303, V2304, V2305)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2306) -> fun (V2307) -> fun (V2308) -> fun (V2309) -> fun (V2310) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2306, V2307, V2308, V2309, V2310)) end end end end end, fun (V2311) -> fun (V2312) -> fun (V2313) -> fun (V2314) -> fun (V2315) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2311, V2312, V2313, V2314, V2315)) end end end end end, fun (V2316) -> fun (V2317) -> fun (V2318) -> fun (V2319) -> fun (V2320) -> fun (V2321) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2316, V2317, V2318, V2319, V2320, V2321)) end end end end end end, fun (V2322) -> fun (V2323) -> fun (V2324) -> fun (V2325) -> fun (V2326) -> fun (V2327) -> fun (V2328) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2322, V2323, V2324, V2325, V2326, V2327, V2328)) end end end end end end end}}, V2, V0, V1, V2287, V4, V5, ((begin (V2334 = fun (V2330) -> fun (V2331) -> fun (V2332) -> fun (V2333) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2332, V2333)) end end end end), fun (V2335) -> fun (V2336) -> ((((V2334('erased'))('erased'))(V2335))(V2336)) end end end(fun (V2329) -> ('Idris.Idris2.Builtin':'un--snd'(V2329)) end))(V8)), ((begin (V2342 = fun (V2338) -> fun (V2339) -> fun (V2340) -> fun (V2341) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2340, V2341)) end end end end), fun (V2343) -> fun (V2344) -> ((((V2342('erased'))('erased'))(V2343))(V2344)) end end end(fun (V2337) -> ('Idris.Idris2.Builtin':'un--snd'(V2337)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2287, V4, V5, V6, V2288, V8, {'Core.Value.NApp', V9, V2289, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V2345, V2346} -> case V10 of {'Core.Value.NRef', V2347, V2348} -> begin (V2349 = {'Core.Unify.MkUnifyInfo', V2281, 2}), begin (V2350 = {'Core.Value.NRef', V2345, V2346}), begin (V2351 = {'Core.Value.NRef', V2347, V2348}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2346, V2348)) of 1 -> begin (V2400 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V2357 = begin (V2352 = V0), fun (V2353) -> begin (V2356 = (begin (V2354 = V2352), fun (V2355) -> ('erlang':'get'(V2354)) end end(V2353))), {'Prelude.Types.Right', V2356} end end end), fun (V2358) -> begin (V2359 = (V2357(V2358))), case V2359 of {'Prelude.Types.Left', V2360} -> {'Prelude.Types.Left', V2360}; {'Prelude.Types.Right', V2361} -> (begin (V2399 = begin (V2371 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2362) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2361, V5, V2362)) end, ((begin (V2368 = fun (V2364) -> fun (V2365) -> fun (V2366) -> fun (V2367) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2366, V2367)) end end end end), fun (V2369) -> fun (V2370) -> ((((V2368('erased'))('erased'))(V2369))(V2370)) end end end(fun (V2363) -> ('Idris.Idris2.Builtin':'un--snd'(V2363)) end))(V8)), []))), fun (V2372) -> begin (V2373 = (V2371(V2372))), case V2373 of {'Prelude.Types.Left', V2374} -> {'Prelude.Types.Left', V2374}; {'Prelude.Types.Right', V2375} -> (begin (V2398 = begin (V2385 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2376) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2361, V5, V2376)) end, ((begin (V2382 = fun (V2378) -> fun (V2379) -> fun (V2380) -> fun (V2381) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2380, V2381)) end end end end), fun (V2383) -> fun (V2384) -> ((((V2382('erased'))('erased'))(V2383))(V2384)) end end end(fun (V2377) -> ('Idris.Idris2.Builtin':'un--snd'(V2377)) end))(V11)), []))), fun (V2386) -> begin (V2387 = (V2385(V2386))), case V2387 of {'Prelude.Types.Left', V2388} -> {'Prelude.Types.Left', V2388}; {'Prelude.Types.Right', V2389} -> (begin (V2397 = fun (V2390) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2391) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2391)) end, fun (V2392) -> fun (V2393) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2392, V2393)) end end}, V2375))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2394) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2394)) end, fun (V2395) -> fun (V2396) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2395, V2396)) end end}, V2389))/binary>>/binary>>/binary>>} end), V2397 end(V2386)) end end end end), V2398 end(V2372)) end end end end), V2399 end(V2358)) end end end end))), fun (V2401) -> begin (V2402 = (V2400(V2401))), case V2402 of {'Prelude.Types.Left', V2403} -> {'Prelude.Types.Left', V2403}; {'Prelude.Types.Right', V2404} -> (begin (V2460 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2405) -> fun (V2406) -> fun (V2407) -> fun (V2408) -> fun (V2409) -> fun (V2410) -> fun (V2411) -> fun (V2412) -> ('dn--un--unifyD_Unify_Closure'(V2405, V2406, V2407, V2408, V2409, V2410, V2411, V2412)) end end end end end end end end, fun (V2413) -> fun (V2414) -> fun (V2415) -> fun (V2416) -> fun (V2417) -> fun (V2418) -> fun (V2419) -> fun (V2420) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2413, V2414, V2415, V2416, V2417, V2418, V2419, V2420)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2421) -> fun (V2422) -> fun (V2423) -> fun (V2424) -> fun (V2425) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2421, V2422, V2423, V2424, V2425)) end end end end end, fun (V2426) -> fun (V2427) -> fun (V2428) -> fun (V2429) -> fun (V2430) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2426, V2427, V2428, V2429, V2430)) end end end end end, fun (V2431) -> fun (V2432) -> fun (V2433) -> fun (V2434) -> fun (V2435) -> fun (V2436) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2431, V2432, V2433, V2434, V2435, V2436)) end end end end end end, fun (V2437) -> fun (V2438) -> fun (V2439) -> fun (V2440) -> fun (V2441) -> fun (V2442) -> fun (V2443) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2437, V2438, V2439, V2440, V2441, V2442, V2443)) end end end end end end end}}, V2, V0, V1, V2349, V4, V5, ((begin (V2449 = fun (V2445) -> fun (V2446) -> fun (V2447) -> fun (V2448) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2447, V2448)) end end end end), fun (V2450) -> fun (V2451) -> ((((V2449('erased'))('erased'))(V2450))(V2451)) end end end(fun (V2444) -> ('Idris.Idris2.Builtin':'un--snd'(V2444)) end))(V8)), ((begin (V2457 = fun (V2453) -> fun (V2454) -> fun (V2455) -> fun (V2456) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2455, V2456)) end end end end), fun (V2458) -> fun (V2459) -> ((((V2457('erased'))('erased'))(V2458))(V2459)) end end end(fun (V2452) -> ('Idris.Idris2.Builtin':'un--snd'(V2452)) end))(V11))))), V2460 end(V2401)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2349, V4, V5, V6, V2350, V8, {'Core.Value.NApp', V9, V2351, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V2461, V2462} -> case V10 of {'Core.Value.NLocal', V2463, V2464} -> begin (V2465 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V2466) -> begin (V2467 = (V2465(V2466))), case V2467 of {'Prelude.Types.Left', V2468} -> {'Prelude.Types.Left', V2468}; {'Prelude.Types.Right', V2469} -> (begin (V2470 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V2461, V2462}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V2463, V2464}, V11}))), V2470 end(V2466)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V2471, V2472, V2473} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2474, V2475} -> V2475 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V2471, V2472, V2473}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V2471, V2472, V2473}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V2476, V2477} -> case V2477 of 3 -> case V7 of {'Core.Value.NRef', V2478, V2479} -> case V10 of {'Core.Value.NRef', V2480, V2481} -> begin (V2482 = {'Core.Unify.MkUnifyInfo', V2476, 3}), begin (V2483 = {'Core.Value.NRef', V2478, V2479}), begin (V2484 = {'Core.Value.NRef', V2480, V2481}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2479, V2481)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2485) -> fun (V2486) -> fun (V2487) -> fun (V2488) -> fun (V2489) -> fun (V2490) -> fun (V2491) -> fun (V2492) -> ('dn--un--unifyD_Unify_Closure'(V2485, V2486, V2487, V2488, V2489, V2490, V2491, V2492)) end end end end end end end end, fun (V2493) -> fun (V2494) -> fun (V2495) -> fun (V2496) -> fun (V2497) -> fun (V2498) -> fun (V2499) -> fun (V2500) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2493, V2494, V2495, V2496, V2497, V2498, V2499, V2500)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2501) -> fun (V2502) -> fun (V2503) -> fun (V2504) -> fun (V2505) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2501, V2502, V2503, V2504, V2505)) end end end end end, fun (V2506) -> fun (V2507) -> fun (V2508) -> fun (V2509) -> fun (V2510) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2506, V2507, V2508, V2509, V2510)) end end end end end, fun (V2511) -> fun (V2512) -> fun (V2513) -> fun (V2514) -> fun (V2515) -> fun (V2516) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2511, V2512, V2513, V2514, V2515, V2516)) end end end end end end, fun (V2517) -> fun (V2518) -> fun (V2519) -> fun (V2520) -> fun (V2521) -> fun (V2522) -> fun (V2523) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2517, V2518, V2519, V2520, V2521, V2522, V2523)) end end end end end end end}}, V2, V0, V1, V2482, V4, V5, ((begin (V2529 = fun (V2525) -> fun (V2526) -> fun (V2527) -> fun (V2528) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2527, V2528)) end end end end), fun (V2530) -> fun (V2531) -> ((((V2529('erased'))('erased'))(V2530))(V2531)) end end end(fun (V2524) -> ('Idris.Idris2.Builtin':'un--snd'(V2524)) end))(V8)), ((begin (V2537 = fun (V2533) -> fun (V2534) -> fun (V2535) -> fun (V2536) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2535, V2536)) end end end end), fun (V2538) -> fun (V2539) -> ((((V2537('erased'))('erased'))(V2538))(V2539)) end end end(fun (V2532) -> ('Idris.Idris2.Builtin':'un--snd'(V2532)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2482, V4, V5, V6, V2483, V8, {'Core.Value.NApp', V9, V2484, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V2540, V2541} -> case V10 of {'Core.Value.NRef', V2542, V2543} -> begin (V2544 = {'Core.Unify.MkUnifyInfo', V2476, 2}), begin (V2545 = {'Core.Value.NRef', V2540, V2541}), begin (V2546 = {'Core.Value.NRef', V2542, V2543}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2541, V2543)) of 1 -> begin (V2595 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V2552 = begin (V2547 = V0), fun (V2548) -> begin (V2551 = (begin (V2549 = V2547), fun (V2550) -> ('erlang':'get'(V2549)) end end(V2548))), {'Prelude.Types.Right', V2551} end end end), fun (V2553) -> begin (V2554 = (V2552(V2553))), case V2554 of {'Prelude.Types.Left', V2555} -> {'Prelude.Types.Left', V2555}; {'Prelude.Types.Right', V2556} -> (begin (V2594 = begin (V2566 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2557) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2556, V5, V2557)) end, ((begin (V2563 = fun (V2559) -> fun (V2560) -> fun (V2561) -> fun (V2562) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2561, V2562)) end end end end), fun (V2564) -> fun (V2565) -> ((((V2563('erased'))('erased'))(V2564))(V2565)) end end end(fun (V2558) -> ('Idris.Idris2.Builtin':'un--snd'(V2558)) end))(V8)), []))), fun (V2567) -> begin (V2568 = (V2566(V2567))), case V2568 of {'Prelude.Types.Left', V2569} -> {'Prelude.Types.Left', V2569}; {'Prelude.Types.Right', V2570} -> (begin (V2593 = begin (V2580 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2571) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2556, V5, V2571)) end, ((begin (V2577 = fun (V2573) -> fun (V2574) -> fun (V2575) -> fun (V2576) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2575, V2576)) end end end end), fun (V2578) -> fun (V2579) -> ((((V2577('erased'))('erased'))(V2578))(V2579)) end end end(fun (V2572) -> ('Idris.Idris2.Builtin':'un--snd'(V2572)) end))(V11)), []))), fun (V2581) -> begin (V2582 = (V2580(V2581))), case V2582 of {'Prelude.Types.Left', V2583} -> {'Prelude.Types.Left', V2583}; {'Prelude.Types.Right', V2584} -> (begin (V2592 = fun (V2585) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2586) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2586)) end, fun (V2587) -> fun (V2588) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2587, V2588)) end end}, V2570))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2589) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2589)) end, fun (V2590) -> fun (V2591) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2590, V2591)) end end}, V2584))/binary>>/binary>>/binary>>} end), V2592 end(V2581)) end end end end), V2593 end(V2567)) end end end end), V2594 end(V2553)) end end end end))), fun (V2596) -> begin (V2597 = (V2595(V2596))), case V2597 of {'Prelude.Types.Left', V2598} -> {'Prelude.Types.Left', V2598}; {'Prelude.Types.Right', V2599} -> (begin (V2655 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2600) -> fun (V2601) -> fun (V2602) -> fun (V2603) -> fun (V2604) -> fun (V2605) -> fun (V2606) -> fun (V2607) -> ('dn--un--unifyD_Unify_Closure'(V2600, V2601, V2602, V2603, V2604, V2605, V2606, V2607)) end end end end end end end end, fun (V2608) -> fun (V2609) -> fun (V2610) -> fun (V2611) -> fun (V2612) -> fun (V2613) -> fun (V2614) -> fun (V2615) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2608, V2609, V2610, V2611, V2612, V2613, V2614, V2615)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2616) -> fun (V2617) -> fun (V2618) -> fun (V2619) -> fun (V2620) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2616, V2617, V2618, V2619, V2620)) end end end end end, fun (V2621) -> fun (V2622) -> fun (V2623) -> fun (V2624) -> fun (V2625) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2621, V2622, V2623, V2624, V2625)) end end end end end, fun (V2626) -> fun (V2627) -> fun (V2628) -> fun (V2629) -> fun (V2630) -> fun (V2631) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2626, V2627, V2628, V2629, V2630, V2631)) end end end end end end, fun (V2632) -> fun (V2633) -> fun (V2634) -> fun (V2635) -> fun (V2636) -> fun (V2637) -> fun (V2638) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2632, V2633, V2634, V2635, V2636, V2637, V2638)) end end end end end end end}}, V2, V0, V1, V2544, V4, V5, ((begin (V2644 = fun (V2640) -> fun (V2641) -> fun (V2642) -> fun (V2643) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2642, V2643)) end end end end), fun (V2645) -> fun (V2646) -> ((((V2644('erased'))('erased'))(V2645))(V2646)) end end end(fun (V2639) -> ('Idris.Idris2.Builtin':'un--snd'(V2639)) end))(V8)), ((begin (V2652 = fun (V2648) -> fun (V2649) -> fun (V2650) -> fun (V2651) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2650, V2651)) end end end end), fun (V2653) -> fun (V2654) -> ((((V2652('erased'))('erased'))(V2653))(V2654)) end end end(fun (V2647) -> ('Idris.Idris2.Builtin':'un--snd'(V2647)) end))(V11))))), V2655 end(V2596)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2544, V4, V5, V6, V2545, V8, {'Core.Value.NApp', V9, V2546, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V2656, V2657, V2658} -> case V10 of {'Core.Value.NMeta', V2659, V2660, V2661} -> begin (V2662 = ('un--isDefInvertible'(V0, V4, V2657))), fun (V2663) -> begin (V2664 = (V2662(V2663))), case V2664 of {'Prelude.Types.Left', V2665} -> {'Prelude.Types.Left', V2665}; {'Prelude.Types.Right', V2666} -> (begin (V2739 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2657, V2660)) of 1 -> case V2666 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2667, V2668} -> V2668 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2669) -> fun (V2670) -> fun (V2671) -> fun (V2672) -> fun (V2673) -> fun (V2674) -> fun (V2675) -> fun (V2676) -> ('dn--un--unifyD_Unify_Closure'(V2669, V2670, V2671, V2672, V2673, V2674, V2675, V2676)) end end end end end end end end, fun (V2677) -> fun (V2678) -> fun (V2679) -> fun (V2680) -> fun (V2681) -> fun (V2682) -> fun (V2683) -> fun (V2684) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2677, V2678, V2679, V2680, V2681, V2682, V2683, V2684)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2685) -> fun (V2686) -> fun (V2687) -> fun (V2688) -> fun (V2689) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2685, V2686, V2687, V2688, V2689)) end end end end end, fun (V2690) -> fun (V2691) -> fun (V2692) -> fun (V2693) -> fun (V2694) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2690, V2691, V2692, V2693, V2694)) end end end end end, fun (V2695) -> fun (V2696) -> fun (V2697) -> fun (V2698) -> fun (V2699) -> fun (V2700) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2695, V2696, V2697, V2698, V2699, V2700)) end end end end end end, fun (V2701) -> fun (V2702) -> fun (V2703) -> fun (V2704) -> fun (V2705) -> fun (V2706) -> fun (V2707) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2701, V2702, V2703, V2704, V2705, V2706, V2707)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2658, ((begin (V2713 = fun (V2709) -> fun (V2710) -> fun (V2711) -> fun (V2712) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2711, V2712)) end end end end), fun (V2714) -> fun (V2715) -> ((((V2713('erased'))('erased'))(V2714))(V2715)) end end end(fun (V2708) -> ('Idris.Idris2.Builtin':'un--snd'(V2708)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2661, ((begin (V2721 = fun (V2717) -> fun (V2718) -> fun (V2719) -> fun (V2720) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2719, V2720)) end end end end), fun (V2722) -> fun (V2723) -> ((((V2721('erased'))('erased'))(V2722))(V2723)) end end end(fun (V2716) -> ('Idris.Idris2.Builtin':'un--snd'(V2716)) end))(V11)))))); 0 -> begin (V2724 = ('nested--14746-23552--in--un--localsIn'(V2, V2658, V2657, V2656, V2661, V2660, V2659, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2658))), fun (V2725) -> begin (V2726 = (V2724(V2725))), case V2726 of {'Prelude.Types.Left', V2727} -> {'Prelude.Types.Left', V2727}; {'Prelude.Types.Right', V2728} -> (begin (V2738 = begin (V2729 = ('nested--14746-23552--in--un--localsIn'(V2, V2658, V2657, V2656, V2661, V2660, V2659, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2661))), fun (V2730) -> begin (V2731 = (V2729(V2730))), case V2731 of {'Prelude.Types.Left', V2732} -> {'Prelude.Types.Left', V2732}; {'Prelude.Types.Right', V2733} -> (begin (V2737 = begin (V2734 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2728, V2733)) of 1 -> 1; 0 -> case case (V2728 =:= V2733) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V2734 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2735, V2736} -> V2736 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V2658, V2657, V2656, V2661, V2660, V2659, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2656)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V2656, V2657, V2658}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V2659, V2660, V2661}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V2659, V2660, V2661}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V2656, V2657, V2658}, V8})) end end), V2737 end(V2730)) end end end end), V2738 end(V2725)) end end end end end), V2739 end(V2663)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V2656, V2657, V2658}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V2740, V2741, V2742} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2743, V2744} -> V2744 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V2740, V2741, V2742}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V2740, V2741, V2742}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V2745, V2746} -> case V2746 of 3 -> case V7 of {'Core.Value.NRef', V2747, V2748} -> case V10 of {'Core.Value.NRef', V2749, V2750} -> begin (V2751 = {'Core.Unify.MkUnifyInfo', V2745, 3}), begin (V2752 = {'Core.Value.NRef', V2747, V2748}), begin (V2753 = {'Core.Value.NRef', V2749, V2750}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2748, V2750)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2754) -> fun (V2755) -> fun (V2756) -> fun (V2757) -> fun (V2758) -> fun (V2759) -> fun (V2760) -> fun (V2761) -> ('dn--un--unifyD_Unify_Closure'(V2754, V2755, V2756, V2757, V2758, V2759, V2760, V2761)) end end end end end end end end, fun (V2762) -> fun (V2763) -> fun (V2764) -> fun (V2765) -> fun (V2766) -> fun (V2767) -> fun (V2768) -> fun (V2769) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2762, V2763, V2764, V2765, V2766, V2767, V2768, V2769)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2770) -> fun (V2771) -> fun (V2772) -> fun (V2773) -> fun (V2774) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2770, V2771, V2772, V2773, V2774)) end end end end end, fun (V2775) -> fun (V2776) -> fun (V2777) -> fun (V2778) -> fun (V2779) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2775, V2776, V2777, V2778, V2779)) end end end end end, fun (V2780) -> fun (V2781) -> fun (V2782) -> fun (V2783) -> fun (V2784) -> fun (V2785) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2780, V2781, V2782, V2783, V2784, V2785)) end end end end end end, fun (V2786) -> fun (V2787) -> fun (V2788) -> fun (V2789) -> fun (V2790) -> fun (V2791) -> fun (V2792) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2786, V2787, V2788, V2789, V2790, V2791, V2792)) end end end end end end end}}, V2, V0, V1, V2751, V4, V5, ((begin (V2798 = fun (V2794) -> fun (V2795) -> fun (V2796) -> fun (V2797) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2796, V2797)) end end end end), fun (V2799) -> fun (V2800) -> ((((V2798('erased'))('erased'))(V2799))(V2800)) end end end(fun (V2793) -> ('Idris.Idris2.Builtin':'un--snd'(V2793)) end))(V8)), ((begin (V2806 = fun (V2802) -> fun (V2803) -> fun (V2804) -> fun (V2805) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2804, V2805)) end end end end), fun (V2807) -> fun (V2808) -> ((((V2806('erased'))('erased'))(V2807))(V2808)) end end end(fun (V2801) -> ('Idris.Idris2.Builtin':'un--snd'(V2801)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2751, V4, V5, V6, V2752, V8, {'Core.Value.NApp', V9, V2753, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V2809, V2810} -> case V10 of {'Core.Value.NRef', V2811, V2812} -> begin (V2813 = {'Core.Unify.MkUnifyInfo', V2745, 2}), begin (V2814 = {'Core.Value.NRef', V2809, V2810}), begin (V2815 = {'Core.Value.NRef', V2811, V2812}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2810, V2812)) of 1 -> begin (V2864 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V2821 = begin (V2816 = V0), fun (V2817) -> begin (V2820 = (begin (V2818 = V2816), fun (V2819) -> ('erlang':'get'(V2818)) end end(V2817))), {'Prelude.Types.Right', V2820} end end end), fun (V2822) -> begin (V2823 = (V2821(V2822))), case V2823 of {'Prelude.Types.Left', V2824} -> {'Prelude.Types.Left', V2824}; {'Prelude.Types.Right', V2825} -> (begin (V2863 = begin (V2835 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2826) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2825, V5, V2826)) end, ((begin (V2832 = fun (V2828) -> fun (V2829) -> fun (V2830) -> fun (V2831) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2830, V2831)) end end end end), fun (V2833) -> fun (V2834) -> ((((V2832('erased'))('erased'))(V2833))(V2834)) end end end(fun (V2827) -> ('Idris.Idris2.Builtin':'un--snd'(V2827)) end))(V8)), []))), fun (V2836) -> begin (V2837 = (V2835(V2836))), case V2837 of {'Prelude.Types.Left', V2838} -> {'Prelude.Types.Left', V2838}; {'Prelude.Types.Right', V2839} -> (begin (V2862 = begin (V2849 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2840) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2825, V5, V2840)) end, ((begin (V2846 = fun (V2842) -> fun (V2843) -> fun (V2844) -> fun (V2845) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2844, V2845)) end end end end), fun (V2847) -> fun (V2848) -> ((((V2846('erased'))('erased'))(V2847))(V2848)) end end end(fun (V2841) -> ('Idris.Idris2.Builtin':'un--snd'(V2841)) end))(V11)), []))), fun (V2850) -> begin (V2851 = (V2849(V2850))), case V2851 of {'Prelude.Types.Left', V2852} -> {'Prelude.Types.Left', V2852}; {'Prelude.Types.Right', V2853} -> (begin (V2861 = fun (V2854) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2855) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2855)) end, fun (V2856) -> fun (V2857) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2856, V2857)) end end}, V2839))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V2858) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2858)) end, fun (V2859) -> fun (V2860) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2859, V2860)) end end}, V2853))/binary>>/binary>>/binary>>} end), V2861 end(V2850)) end end end end), V2862 end(V2836)) end end end end), V2863 end(V2822)) end end end end))), fun (V2865) -> begin (V2866 = (V2864(V2865))), case V2866 of {'Prelude.Types.Left', V2867} -> {'Prelude.Types.Left', V2867}; {'Prelude.Types.Right', V2868} -> (begin (V2924 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2869) -> fun (V2870) -> fun (V2871) -> fun (V2872) -> fun (V2873) -> fun (V2874) -> fun (V2875) -> fun (V2876) -> ('dn--un--unifyD_Unify_Closure'(V2869, V2870, V2871, V2872, V2873, V2874, V2875, V2876)) end end end end end end end end, fun (V2877) -> fun (V2878) -> fun (V2879) -> fun (V2880) -> fun (V2881) -> fun (V2882) -> fun (V2883) -> fun (V2884) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2877, V2878, V2879, V2880, V2881, V2882, V2883, V2884)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2885) -> fun (V2886) -> fun (V2887) -> fun (V2888) -> fun (V2889) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2885, V2886, V2887, V2888, V2889)) end end end end end, fun (V2890) -> fun (V2891) -> fun (V2892) -> fun (V2893) -> fun (V2894) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2890, V2891, V2892, V2893, V2894)) end end end end end, fun (V2895) -> fun (V2896) -> fun (V2897) -> fun (V2898) -> fun (V2899) -> fun (V2900) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2895, V2896, V2897, V2898, V2899, V2900)) end end end end end end, fun (V2901) -> fun (V2902) -> fun (V2903) -> fun (V2904) -> fun (V2905) -> fun (V2906) -> fun (V2907) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2901, V2902, V2903, V2904, V2905, V2906, V2907)) end end end end end end end}}, V2, V0, V1, V2813, V4, V5, ((begin (V2913 = fun (V2909) -> fun (V2910) -> fun (V2911) -> fun (V2912) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2911, V2912)) end end end end), fun (V2914) -> fun (V2915) -> ((((V2913('erased'))('erased'))(V2914))(V2915)) end end end(fun (V2908) -> ('Idris.Idris2.Builtin':'un--snd'(V2908)) end))(V8)), ((begin (V2921 = fun (V2917) -> fun (V2918) -> fun (V2919) -> fun (V2920) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2919, V2920)) end end end end), fun (V2922) -> fun (V2923) -> ((((V2921('erased'))('erased'))(V2922))(V2923)) end end end(fun (V2916) -> ('Idris.Idris2.Builtin':'un--snd'(V2916)) end))(V11))))), V2924 end(V2865)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2813, V4, V5, V6, V2814, V8, {'Core.Value.NApp', V9, V2815, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V2925, V2926} -> case V10 of {'Core.Value.NLocal', V2927, V2928} -> begin (V2929 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V2930) -> begin (V2931 = (V2929(V2930))), case V2931 of {'Prelude.Types.Left', V2932} -> {'Prelude.Types.Left', V2932}; {'Prelude.Types.Right', V2933} -> (begin (V2934 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V2925, V2926}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V2927, V2928}, V11}))), V2934 end(V2930)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V2935, V2936, V2937} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V2938, V2939} -> V2939 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V2935, V2936, V2937}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V2935, V2936, V2937}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V2940, V2941} -> case V2941 of 3 -> case V7 of {'Core.Value.NRef', V2942, V2943} -> case V10 of {'Core.Value.NRef', V2944, V2945} -> begin (V2946 = {'Core.Unify.MkUnifyInfo', V2940, 3}), begin (V2947 = {'Core.Value.NRef', V2942, V2943}), begin (V2948 = {'Core.Value.NRef', V2944, V2945}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2943, V2945)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V2949) -> fun (V2950) -> fun (V2951) -> fun (V2952) -> fun (V2953) -> fun (V2954) -> fun (V2955) -> fun (V2956) -> ('dn--un--unifyD_Unify_Closure'(V2949, V2950, V2951, V2952, V2953, V2954, V2955, V2956)) end end end end end end end end, fun (V2957) -> fun (V2958) -> fun (V2959) -> fun (V2960) -> fun (V2961) -> fun (V2962) -> fun (V2963) -> fun (V2964) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2957, V2958, V2959, V2960, V2961, V2962, V2963, V2964)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V2965) -> fun (V2966) -> fun (V2967) -> fun (V2968) -> fun (V2969) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2965, V2966, V2967, V2968, V2969)) end end end end end, fun (V2970) -> fun (V2971) -> fun (V2972) -> fun (V2973) -> fun (V2974) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2970, V2971, V2972, V2973, V2974)) end end end end end, fun (V2975) -> fun (V2976) -> fun (V2977) -> fun (V2978) -> fun (V2979) -> fun (V2980) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2975, V2976, V2977, V2978, V2979, V2980)) end end end end end end, fun (V2981) -> fun (V2982) -> fun (V2983) -> fun (V2984) -> fun (V2985) -> fun (V2986) -> fun (V2987) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2981, V2982, V2983, V2984, V2985, V2986, V2987)) end end end end end end end}}, V2, V0, V1, V2946, V4, V5, ((begin (V2993 = fun (V2989) -> fun (V2990) -> fun (V2991) -> fun (V2992) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2991, V2992)) end end end end), fun (V2994) -> fun (V2995) -> ((((V2993('erased'))('erased'))(V2994))(V2995)) end end end(fun (V2988) -> ('Idris.Idris2.Builtin':'un--snd'(V2988)) end))(V8)), ((begin (V3001 = fun (V2997) -> fun (V2998) -> fun (V2999) -> fun (V3000) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V2999, V3000)) end end end end), fun (V3002) -> fun (V3003) -> ((((V3001('erased'))('erased'))(V3002))(V3003)) end end end(fun (V2996) -> ('Idris.Idris2.Builtin':'un--snd'(V2996)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2946, V4, V5, V6, V2947, V8, {'Core.Value.NApp', V9, V2948, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V3004, V3005} -> case V10 of {'Core.Value.NRef', V3006, V3007} -> begin (V3008 = {'Core.Unify.MkUnifyInfo', V2940, 2}), begin (V3009 = {'Core.Value.NRef', V3004, V3005}), begin (V3010 = {'Core.Value.NRef', V3006, V3007}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3005, V3007)) of 1 -> begin (V3059 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V3016 = begin (V3011 = V0), fun (V3012) -> begin (V3015 = (begin (V3013 = V3011), fun (V3014) -> ('erlang':'get'(V3013)) end end(V3012))), {'Prelude.Types.Right', V3015} end end end), fun (V3017) -> begin (V3018 = (V3016(V3017))), case V3018 of {'Prelude.Types.Left', V3019} -> {'Prelude.Types.Left', V3019}; {'Prelude.Types.Right', V3020} -> (begin (V3058 = begin (V3030 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3021) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3020, V5, V3021)) end, ((begin (V3027 = fun (V3023) -> fun (V3024) -> fun (V3025) -> fun (V3026) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3025, V3026)) end end end end), fun (V3028) -> fun (V3029) -> ((((V3027('erased'))('erased'))(V3028))(V3029)) end end end(fun (V3022) -> ('Idris.Idris2.Builtin':'un--snd'(V3022)) end))(V8)), []))), fun (V3031) -> begin (V3032 = (V3030(V3031))), case V3032 of {'Prelude.Types.Left', V3033} -> {'Prelude.Types.Left', V3033}; {'Prelude.Types.Right', V3034} -> (begin (V3057 = begin (V3044 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3035) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3020, V5, V3035)) end, ((begin (V3041 = fun (V3037) -> fun (V3038) -> fun (V3039) -> fun (V3040) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3039, V3040)) end end end end), fun (V3042) -> fun (V3043) -> ((((V3041('erased'))('erased'))(V3042))(V3043)) end end end(fun (V3036) -> ('Idris.Idris2.Builtin':'un--snd'(V3036)) end))(V11)), []))), fun (V3045) -> begin (V3046 = (V3044(V3045))), case V3046 of {'Prelude.Types.Left', V3047} -> {'Prelude.Types.Left', V3047}; {'Prelude.Types.Right', V3048} -> (begin (V3056 = fun (V3049) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3050) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3050)) end, fun (V3051) -> fun (V3052) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3051, V3052)) end end}, V3034))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3053) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3053)) end, fun (V3054) -> fun (V3055) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3054, V3055)) end end}, V3048))/binary>>/binary>>/binary>>} end), V3056 end(V3045)) end end end end), V3057 end(V3031)) end end end end), V3058 end(V3017)) end end end end))), fun (V3060) -> begin (V3061 = (V3059(V3060))), case V3061 of {'Prelude.Types.Left', V3062} -> {'Prelude.Types.Left', V3062}; {'Prelude.Types.Right', V3063} -> (begin (V3119 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3064) -> fun (V3065) -> fun (V3066) -> fun (V3067) -> fun (V3068) -> fun (V3069) -> fun (V3070) -> fun (V3071) -> ('dn--un--unifyD_Unify_Closure'(V3064, V3065, V3066, V3067, V3068, V3069, V3070, V3071)) end end end end end end end end, fun (V3072) -> fun (V3073) -> fun (V3074) -> fun (V3075) -> fun (V3076) -> fun (V3077) -> fun (V3078) -> fun (V3079) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3072, V3073, V3074, V3075, V3076, V3077, V3078, V3079)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3080) -> fun (V3081) -> fun (V3082) -> fun (V3083) -> fun (V3084) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3080, V3081, V3082, V3083, V3084)) end end end end end, fun (V3085) -> fun (V3086) -> fun (V3087) -> fun (V3088) -> fun (V3089) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3085, V3086, V3087, V3088, V3089)) end end end end end, fun (V3090) -> fun (V3091) -> fun (V3092) -> fun (V3093) -> fun (V3094) -> fun (V3095) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3090, V3091, V3092, V3093, V3094, V3095)) end end end end end end, fun (V3096) -> fun (V3097) -> fun (V3098) -> fun (V3099) -> fun (V3100) -> fun (V3101) -> fun (V3102) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3096, V3097, V3098, V3099, V3100, V3101, V3102)) end end end end end end end}}, V2, V0, V1, V3008, V4, V5, ((begin (V3108 = fun (V3104) -> fun (V3105) -> fun (V3106) -> fun (V3107) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3106, V3107)) end end end end), fun (V3109) -> fun (V3110) -> ((((V3108('erased'))('erased'))(V3109))(V3110)) end end end(fun (V3103) -> ('Idris.Idris2.Builtin':'un--snd'(V3103)) end))(V8)), ((begin (V3116 = fun (V3112) -> fun (V3113) -> fun (V3114) -> fun (V3115) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3114, V3115)) end end end end), fun (V3117) -> fun (V3118) -> ((((V3116('erased'))('erased'))(V3117))(V3118)) end end end(fun (V3111) -> ('Idris.Idris2.Builtin':'un--snd'(V3111)) end))(V11))))), V3119 end(V3060)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3008, V4, V5, V6, V3009, V8, {'Core.Value.NApp', V9, V3010, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V3120, V3121, V3122} -> case V10 of {'Core.Value.NMeta', V3123, V3124, V3125} -> begin (V3126 = ('un--isDefInvertible'(V0, V4, V3121))), fun (V3127) -> begin (V3128 = (V3126(V3127))), case V3128 of {'Prelude.Types.Left', V3129} -> {'Prelude.Types.Left', V3129}; {'Prelude.Types.Right', V3130} -> (begin (V3203 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3121, V3124)) of 1 -> case V3130 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3131, V3132} -> V3132 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3133) -> fun (V3134) -> fun (V3135) -> fun (V3136) -> fun (V3137) -> fun (V3138) -> fun (V3139) -> fun (V3140) -> ('dn--un--unifyD_Unify_Closure'(V3133, V3134, V3135, V3136, V3137, V3138, V3139, V3140)) end end end end end end end end, fun (V3141) -> fun (V3142) -> fun (V3143) -> fun (V3144) -> fun (V3145) -> fun (V3146) -> fun (V3147) -> fun (V3148) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3141, V3142, V3143, V3144, V3145, V3146, V3147, V3148)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3149) -> fun (V3150) -> fun (V3151) -> fun (V3152) -> fun (V3153) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3149, V3150, V3151, V3152, V3153)) end end end end end, fun (V3154) -> fun (V3155) -> fun (V3156) -> fun (V3157) -> fun (V3158) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3154, V3155, V3156, V3157, V3158)) end end end end end, fun (V3159) -> fun (V3160) -> fun (V3161) -> fun (V3162) -> fun (V3163) -> fun (V3164) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3159, V3160, V3161, V3162, V3163, V3164)) end end end end end end, fun (V3165) -> fun (V3166) -> fun (V3167) -> fun (V3168) -> fun (V3169) -> fun (V3170) -> fun (V3171) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3165, V3166, V3167, V3168, V3169, V3170, V3171)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3122, ((begin (V3177 = fun (V3173) -> fun (V3174) -> fun (V3175) -> fun (V3176) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3175, V3176)) end end end end), fun (V3178) -> fun (V3179) -> ((((V3177('erased'))('erased'))(V3178))(V3179)) end end end(fun (V3172) -> ('Idris.Idris2.Builtin':'un--snd'(V3172)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3125, ((begin (V3185 = fun (V3181) -> fun (V3182) -> fun (V3183) -> fun (V3184) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3183, V3184)) end end end end), fun (V3186) -> fun (V3187) -> ((((V3185('erased'))('erased'))(V3186))(V3187)) end end end(fun (V3180) -> ('Idris.Idris2.Builtin':'un--snd'(V3180)) end))(V11)))))); 0 -> begin (V3188 = ('nested--14746-23552--in--un--localsIn'(V2, V3122, V3121, V3120, V3125, V3124, V3123, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3122))), fun (V3189) -> begin (V3190 = (V3188(V3189))), case V3190 of {'Prelude.Types.Left', V3191} -> {'Prelude.Types.Left', V3191}; {'Prelude.Types.Right', V3192} -> (begin (V3202 = begin (V3193 = ('nested--14746-23552--in--un--localsIn'(V2, V3122, V3121, V3120, V3125, V3124, V3123, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3125))), fun (V3194) -> begin (V3195 = (V3193(V3194))), case V3195 of {'Prelude.Types.Left', V3196} -> {'Prelude.Types.Left', V3196}; {'Prelude.Types.Right', V3197} -> (begin (V3201 = begin (V3198 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3192, V3197)) of 1 -> 1; 0 -> case case (V3192 =:= V3197) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V3198 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3199, V3200} -> V3200 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V3122, V3121, V3120, V3125, V3124, V3123, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3120)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V3120, V3121, V3122}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V3123, V3124, V3125}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V3123, V3124, V3125}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V3120, V3121, V3122}, V8})) end end), V3201 end(V3194)) end end end end), V3202 end(V3189)) end end end end end), V3203 end(V3127)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V3120, V3121, V3122}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V3204, V3205, V3206} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3207, V3208} -> V3208 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V3204, V3205, V3206}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V3204, V3205, V3206}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V3209, V3210} -> case V3210 of 3 -> case V7 of {'Core.Value.NRef', V3211, V3212} -> case V10 of {'Core.Value.NRef', V3213, V3214} -> begin (V3215 = {'Core.Unify.MkUnifyInfo', V3209, 3}), begin (V3216 = {'Core.Value.NRef', V3211, V3212}), begin (V3217 = {'Core.Value.NRef', V3213, V3214}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3212, V3214)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3218) -> fun (V3219) -> fun (V3220) -> fun (V3221) -> fun (V3222) -> fun (V3223) -> fun (V3224) -> fun (V3225) -> ('dn--un--unifyD_Unify_Closure'(V3218, V3219, V3220, V3221, V3222, V3223, V3224, V3225)) end end end end end end end end, fun (V3226) -> fun (V3227) -> fun (V3228) -> fun (V3229) -> fun (V3230) -> fun (V3231) -> fun (V3232) -> fun (V3233) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3226, V3227, V3228, V3229, V3230, V3231, V3232, V3233)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3234) -> fun (V3235) -> fun (V3236) -> fun (V3237) -> fun (V3238) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3234, V3235, V3236, V3237, V3238)) end end end end end, fun (V3239) -> fun (V3240) -> fun (V3241) -> fun (V3242) -> fun (V3243) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3239, V3240, V3241, V3242, V3243)) end end end end end, fun (V3244) -> fun (V3245) -> fun (V3246) -> fun (V3247) -> fun (V3248) -> fun (V3249) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3244, V3245, V3246, V3247, V3248, V3249)) end end end end end end, fun (V3250) -> fun (V3251) -> fun (V3252) -> fun (V3253) -> fun (V3254) -> fun (V3255) -> fun (V3256) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3250, V3251, V3252, V3253, V3254, V3255, V3256)) end end end end end end end}}, V2, V0, V1, V3215, V4, V5, ((begin (V3262 = fun (V3258) -> fun (V3259) -> fun (V3260) -> fun (V3261) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3260, V3261)) end end end end), fun (V3263) -> fun (V3264) -> ((((V3262('erased'))('erased'))(V3263))(V3264)) end end end(fun (V3257) -> ('Idris.Idris2.Builtin':'un--snd'(V3257)) end))(V8)), ((begin (V3270 = fun (V3266) -> fun (V3267) -> fun (V3268) -> fun (V3269) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3268, V3269)) end end end end), fun (V3271) -> fun (V3272) -> ((((V3270('erased'))('erased'))(V3271))(V3272)) end end end(fun (V3265) -> ('Idris.Idris2.Builtin':'un--snd'(V3265)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3215, V4, V5, V6, V3216, V8, {'Core.Value.NApp', V9, V3217, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V3273, V3274} -> case V10 of {'Core.Value.NRef', V3275, V3276} -> begin (V3277 = {'Core.Unify.MkUnifyInfo', V3209, 2}), begin (V3278 = {'Core.Value.NRef', V3273, V3274}), begin (V3279 = {'Core.Value.NRef', V3275, V3276}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3274, V3276)) of 1 -> begin (V3328 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V3285 = begin (V3280 = V0), fun (V3281) -> begin (V3284 = (begin (V3282 = V3280), fun (V3283) -> ('erlang':'get'(V3282)) end end(V3281))), {'Prelude.Types.Right', V3284} end end end), fun (V3286) -> begin (V3287 = (V3285(V3286))), case V3287 of {'Prelude.Types.Left', V3288} -> {'Prelude.Types.Left', V3288}; {'Prelude.Types.Right', V3289} -> (begin (V3327 = begin (V3299 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3290) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3289, V5, V3290)) end, ((begin (V3296 = fun (V3292) -> fun (V3293) -> fun (V3294) -> fun (V3295) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3294, V3295)) end end end end), fun (V3297) -> fun (V3298) -> ((((V3296('erased'))('erased'))(V3297))(V3298)) end end end(fun (V3291) -> ('Idris.Idris2.Builtin':'un--snd'(V3291)) end))(V8)), []))), fun (V3300) -> begin (V3301 = (V3299(V3300))), case V3301 of {'Prelude.Types.Left', V3302} -> {'Prelude.Types.Left', V3302}; {'Prelude.Types.Right', V3303} -> (begin (V3326 = begin (V3313 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3304) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3289, V5, V3304)) end, ((begin (V3310 = fun (V3306) -> fun (V3307) -> fun (V3308) -> fun (V3309) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3308, V3309)) end end end end), fun (V3311) -> fun (V3312) -> ((((V3310('erased'))('erased'))(V3311))(V3312)) end end end(fun (V3305) -> ('Idris.Idris2.Builtin':'un--snd'(V3305)) end))(V11)), []))), fun (V3314) -> begin (V3315 = (V3313(V3314))), case V3315 of {'Prelude.Types.Left', V3316} -> {'Prelude.Types.Left', V3316}; {'Prelude.Types.Right', V3317} -> (begin (V3325 = fun (V3318) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3319) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3319)) end, fun (V3320) -> fun (V3321) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3320, V3321)) end end}, V3303))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3322) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3322)) end, fun (V3323) -> fun (V3324) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3323, V3324)) end end}, V3317))/binary>>/binary>>/binary>>} end), V3325 end(V3314)) end end end end), V3326 end(V3300)) end end end end), V3327 end(V3286)) end end end end))), fun (V3329) -> begin (V3330 = (V3328(V3329))), case V3330 of {'Prelude.Types.Left', V3331} -> {'Prelude.Types.Left', V3331}; {'Prelude.Types.Right', V3332} -> (begin (V3388 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3333) -> fun (V3334) -> fun (V3335) -> fun (V3336) -> fun (V3337) -> fun (V3338) -> fun (V3339) -> fun (V3340) -> ('dn--un--unifyD_Unify_Closure'(V3333, V3334, V3335, V3336, V3337, V3338, V3339, V3340)) end end end end end end end end, fun (V3341) -> fun (V3342) -> fun (V3343) -> fun (V3344) -> fun (V3345) -> fun (V3346) -> fun (V3347) -> fun (V3348) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3341, V3342, V3343, V3344, V3345, V3346, V3347, V3348)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3349) -> fun (V3350) -> fun (V3351) -> fun (V3352) -> fun (V3353) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3349, V3350, V3351, V3352, V3353)) end end end end end, fun (V3354) -> fun (V3355) -> fun (V3356) -> fun (V3357) -> fun (V3358) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3354, V3355, V3356, V3357, V3358)) end end end end end, fun (V3359) -> fun (V3360) -> fun (V3361) -> fun (V3362) -> fun (V3363) -> fun (V3364) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3359, V3360, V3361, V3362, V3363, V3364)) end end end end end end, fun (V3365) -> fun (V3366) -> fun (V3367) -> fun (V3368) -> fun (V3369) -> fun (V3370) -> fun (V3371) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3365, V3366, V3367, V3368, V3369, V3370, V3371)) end end end end end end end}}, V2, V0, V1, V3277, V4, V5, ((begin (V3377 = fun (V3373) -> fun (V3374) -> fun (V3375) -> fun (V3376) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3375, V3376)) end end end end), fun (V3378) -> fun (V3379) -> ((((V3377('erased'))('erased'))(V3378))(V3379)) end end end(fun (V3372) -> ('Idris.Idris2.Builtin':'un--snd'(V3372)) end))(V8)), ((begin (V3385 = fun (V3381) -> fun (V3382) -> fun (V3383) -> fun (V3384) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3383, V3384)) end end end end), fun (V3386) -> fun (V3387) -> ((((V3385('erased'))('erased'))(V3386))(V3387)) end end end(fun (V3380) -> ('Idris.Idris2.Builtin':'un--snd'(V3380)) end))(V11))))), V3388 end(V3329)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3277, V4, V5, V6, V3278, V8, {'Core.Value.NApp', V9, V3279, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V3389, V3390} -> case V10 of {'Core.Value.NLocal', V3391, V3392} -> begin (V3393 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V3394) -> begin (V3395 = (V3393(V3394))), case V3395 of {'Prelude.Types.Left', V3396} -> {'Prelude.Types.Left', V3396}; {'Prelude.Types.Right', V3397} -> (begin (V3398 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V3389, V3390}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V3391, V3392}, V11}))), V3398 end(V3394)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V3399, V3400, V3401} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3402, V3403} -> V3403 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V3399, V3400, V3401}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V3399, V3400, V3401}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V3404, V3405} -> case V3405 of 3 -> case V7 of {'Core.Value.NRef', V3406, V3407} -> case V10 of {'Core.Value.NRef', V3408, V3409} -> begin (V3410 = {'Core.Unify.MkUnifyInfo', V3404, 3}), begin (V3411 = {'Core.Value.NRef', V3406, V3407}), begin (V3412 = {'Core.Value.NRef', V3408, V3409}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3407, V3409)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3413) -> fun (V3414) -> fun (V3415) -> fun (V3416) -> fun (V3417) -> fun (V3418) -> fun (V3419) -> fun (V3420) -> ('dn--un--unifyD_Unify_Closure'(V3413, V3414, V3415, V3416, V3417, V3418, V3419, V3420)) end end end end end end end end, fun (V3421) -> fun (V3422) -> fun (V3423) -> fun (V3424) -> fun (V3425) -> fun (V3426) -> fun (V3427) -> fun (V3428) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3421, V3422, V3423, V3424, V3425, V3426, V3427, V3428)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3429) -> fun (V3430) -> fun (V3431) -> fun (V3432) -> fun (V3433) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3429, V3430, V3431, V3432, V3433)) end end end end end, fun (V3434) -> fun (V3435) -> fun (V3436) -> fun (V3437) -> fun (V3438) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3434, V3435, V3436, V3437, V3438)) end end end end end, fun (V3439) -> fun (V3440) -> fun (V3441) -> fun (V3442) -> fun (V3443) -> fun (V3444) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3439, V3440, V3441, V3442, V3443, V3444)) end end end end end end, fun (V3445) -> fun (V3446) -> fun (V3447) -> fun (V3448) -> fun (V3449) -> fun (V3450) -> fun (V3451) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3445, V3446, V3447, V3448, V3449, V3450, V3451)) end end end end end end end}}, V2, V0, V1, V3410, V4, V5, ((begin (V3457 = fun (V3453) -> fun (V3454) -> fun (V3455) -> fun (V3456) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3455, V3456)) end end end end), fun (V3458) -> fun (V3459) -> ((((V3457('erased'))('erased'))(V3458))(V3459)) end end end(fun (V3452) -> ('Idris.Idris2.Builtin':'un--snd'(V3452)) end))(V8)), ((begin (V3465 = fun (V3461) -> fun (V3462) -> fun (V3463) -> fun (V3464) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3463, V3464)) end end end end), fun (V3466) -> fun (V3467) -> ((((V3465('erased'))('erased'))(V3466))(V3467)) end end end(fun (V3460) -> ('Idris.Idris2.Builtin':'un--snd'(V3460)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3410, V4, V5, V6, V3411, V8, {'Core.Value.NApp', V9, V3412, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V3468, V3469} -> case V10 of {'Core.Value.NRef', V3470, V3471} -> begin (V3472 = {'Core.Unify.MkUnifyInfo', V3404, 2}), begin (V3473 = {'Core.Value.NRef', V3468, V3469}), begin (V3474 = {'Core.Value.NRef', V3470, V3471}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3469, V3471)) of 1 -> begin (V3523 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V3480 = begin (V3475 = V0), fun (V3476) -> begin (V3479 = (begin (V3477 = V3475), fun (V3478) -> ('erlang':'get'(V3477)) end end(V3476))), {'Prelude.Types.Right', V3479} end end end), fun (V3481) -> begin (V3482 = (V3480(V3481))), case V3482 of {'Prelude.Types.Left', V3483} -> {'Prelude.Types.Left', V3483}; {'Prelude.Types.Right', V3484} -> (begin (V3522 = begin (V3494 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3485) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3484, V5, V3485)) end, ((begin (V3491 = fun (V3487) -> fun (V3488) -> fun (V3489) -> fun (V3490) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3489, V3490)) end end end end), fun (V3492) -> fun (V3493) -> ((((V3491('erased'))('erased'))(V3492))(V3493)) end end end(fun (V3486) -> ('Idris.Idris2.Builtin':'un--snd'(V3486)) end))(V8)), []))), fun (V3495) -> begin (V3496 = (V3494(V3495))), case V3496 of {'Prelude.Types.Left', V3497} -> {'Prelude.Types.Left', V3497}; {'Prelude.Types.Right', V3498} -> (begin (V3521 = begin (V3508 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3499) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3484, V5, V3499)) end, ((begin (V3505 = fun (V3501) -> fun (V3502) -> fun (V3503) -> fun (V3504) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3503, V3504)) end end end end), fun (V3506) -> fun (V3507) -> ((((V3505('erased'))('erased'))(V3506))(V3507)) end end end(fun (V3500) -> ('Idris.Idris2.Builtin':'un--snd'(V3500)) end))(V11)), []))), fun (V3509) -> begin (V3510 = (V3508(V3509))), case V3510 of {'Prelude.Types.Left', V3511} -> {'Prelude.Types.Left', V3511}; {'Prelude.Types.Right', V3512} -> (begin (V3520 = fun (V3513) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3514) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3514)) end, fun (V3515) -> fun (V3516) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3515, V3516)) end end}, V3498))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3517) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3517)) end, fun (V3518) -> fun (V3519) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3518, V3519)) end end}, V3512))/binary>>/binary>>/binary>>} end), V3520 end(V3509)) end end end end), V3521 end(V3495)) end end end end), V3522 end(V3481)) end end end end))), fun (V3524) -> begin (V3525 = (V3523(V3524))), case V3525 of {'Prelude.Types.Left', V3526} -> {'Prelude.Types.Left', V3526}; {'Prelude.Types.Right', V3527} -> (begin (V3583 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3528) -> fun (V3529) -> fun (V3530) -> fun (V3531) -> fun (V3532) -> fun (V3533) -> fun (V3534) -> fun (V3535) -> ('dn--un--unifyD_Unify_Closure'(V3528, V3529, V3530, V3531, V3532, V3533, V3534, V3535)) end end end end end end end end, fun (V3536) -> fun (V3537) -> fun (V3538) -> fun (V3539) -> fun (V3540) -> fun (V3541) -> fun (V3542) -> fun (V3543) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3536, V3537, V3538, V3539, V3540, V3541, V3542, V3543)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3544) -> fun (V3545) -> fun (V3546) -> fun (V3547) -> fun (V3548) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3544, V3545, V3546, V3547, V3548)) end end end end end, fun (V3549) -> fun (V3550) -> fun (V3551) -> fun (V3552) -> fun (V3553) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3549, V3550, V3551, V3552, V3553)) end end end end end, fun (V3554) -> fun (V3555) -> fun (V3556) -> fun (V3557) -> fun (V3558) -> fun (V3559) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3554, V3555, V3556, V3557, V3558, V3559)) end end end end end end, fun (V3560) -> fun (V3561) -> fun (V3562) -> fun (V3563) -> fun (V3564) -> fun (V3565) -> fun (V3566) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3560, V3561, V3562, V3563, V3564, V3565, V3566)) end end end end end end end}}, V2, V0, V1, V3472, V4, V5, ((begin (V3572 = fun (V3568) -> fun (V3569) -> fun (V3570) -> fun (V3571) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3570, V3571)) end end end end), fun (V3573) -> fun (V3574) -> ((((V3572('erased'))('erased'))(V3573))(V3574)) end end end(fun (V3567) -> ('Idris.Idris2.Builtin':'un--snd'(V3567)) end))(V8)), ((begin (V3580 = fun (V3576) -> fun (V3577) -> fun (V3578) -> fun (V3579) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3578, V3579)) end end end end), fun (V3581) -> fun (V3582) -> ((((V3580('erased'))('erased'))(V3581))(V3582)) end end end(fun (V3575) -> ('Idris.Idris2.Builtin':'un--snd'(V3575)) end))(V11))))), V3583 end(V3524)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3472, V4, V5, V6, V3473, V8, {'Core.Value.NApp', V9, V3474, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V3584, V3585, V3586} -> case V10 of {'Core.Value.NMeta', V3587, V3588, V3589} -> begin (V3590 = ('un--isDefInvertible'(V0, V4, V3585))), fun (V3591) -> begin (V3592 = (V3590(V3591))), case V3592 of {'Prelude.Types.Left', V3593} -> {'Prelude.Types.Left', V3593}; {'Prelude.Types.Right', V3594} -> (begin (V3667 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3585, V3588)) of 1 -> case V3594 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3595, V3596} -> V3596 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3597) -> fun (V3598) -> fun (V3599) -> fun (V3600) -> fun (V3601) -> fun (V3602) -> fun (V3603) -> fun (V3604) -> ('dn--un--unifyD_Unify_Closure'(V3597, V3598, V3599, V3600, V3601, V3602, V3603, V3604)) end end end end end end end end, fun (V3605) -> fun (V3606) -> fun (V3607) -> fun (V3608) -> fun (V3609) -> fun (V3610) -> fun (V3611) -> fun (V3612) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3605, V3606, V3607, V3608, V3609, V3610, V3611, V3612)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3613) -> fun (V3614) -> fun (V3615) -> fun (V3616) -> fun (V3617) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3613, V3614, V3615, V3616, V3617)) end end end end end, fun (V3618) -> fun (V3619) -> fun (V3620) -> fun (V3621) -> fun (V3622) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3618, V3619, V3620, V3621, V3622)) end end end end end, fun (V3623) -> fun (V3624) -> fun (V3625) -> fun (V3626) -> fun (V3627) -> fun (V3628) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3623, V3624, V3625, V3626, V3627, V3628)) end end end end end end, fun (V3629) -> fun (V3630) -> fun (V3631) -> fun (V3632) -> fun (V3633) -> fun (V3634) -> fun (V3635) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3629, V3630, V3631, V3632, V3633, V3634, V3635)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3586, ((begin (V3641 = fun (V3637) -> fun (V3638) -> fun (V3639) -> fun (V3640) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3639, V3640)) end end end end), fun (V3642) -> fun (V3643) -> ((((V3641('erased'))('erased'))(V3642))(V3643)) end end end(fun (V3636) -> ('Idris.Idris2.Builtin':'un--snd'(V3636)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3589, ((begin (V3649 = fun (V3645) -> fun (V3646) -> fun (V3647) -> fun (V3648) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3647, V3648)) end end end end), fun (V3650) -> fun (V3651) -> ((((V3649('erased'))('erased'))(V3650))(V3651)) end end end(fun (V3644) -> ('Idris.Idris2.Builtin':'un--snd'(V3644)) end))(V11)))))); 0 -> begin (V3652 = ('nested--14746-23552--in--un--localsIn'(V2, V3586, V3585, V3584, V3589, V3588, V3587, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3586))), fun (V3653) -> begin (V3654 = (V3652(V3653))), case V3654 of {'Prelude.Types.Left', V3655} -> {'Prelude.Types.Left', V3655}; {'Prelude.Types.Right', V3656} -> (begin (V3666 = begin (V3657 = ('nested--14746-23552--in--un--localsIn'(V2, V3586, V3585, V3584, V3589, V3588, V3587, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3589))), fun (V3658) -> begin (V3659 = (V3657(V3658))), case V3659 of {'Prelude.Types.Left', V3660} -> {'Prelude.Types.Left', V3660}; {'Prelude.Types.Right', V3661} -> (begin (V3665 = begin (V3662 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3656, V3661)) of 1 -> 1; 0 -> case case (V3656 =:= V3661) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V3662 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3663, V3664} -> V3664 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V3586, V3585, V3584, V3589, V3588, V3587, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3584)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V3584, V3585, V3586}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V3587, V3588, V3589}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V3587, V3588, V3589}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V3584, V3585, V3586}, V8})) end end), V3665 end(V3658)) end end end end), V3666 end(V3653)) end end end end end), V3667 end(V3591)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V3584, V3585, V3586}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V3668, V3669, V3670} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3671, V3672} -> V3672 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V3668, V3669, V3670}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V3668, V3669, V3670}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V3673, V3674} -> case V3674 of 3 -> case V7 of {'Core.Value.NRef', V3675, V3676} -> case V10 of {'Core.Value.NRef', V3677, V3678} -> begin (V3679 = {'Core.Unify.MkUnifyInfo', V3673, 3}), begin (V3680 = {'Core.Value.NRef', V3675, V3676}), begin (V3681 = {'Core.Value.NRef', V3677, V3678}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3676, V3678)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3682) -> fun (V3683) -> fun (V3684) -> fun (V3685) -> fun (V3686) -> fun (V3687) -> fun (V3688) -> fun (V3689) -> ('dn--un--unifyD_Unify_Closure'(V3682, V3683, V3684, V3685, V3686, V3687, V3688, V3689)) end end end end end end end end, fun (V3690) -> fun (V3691) -> fun (V3692) -> fun (V3693) -> fun (V3694) -> fun (V3695) -> fun (V3696) -> fun (V3697) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3690, V3691, V3692, V3693, V3694, V3695, V3696, V3697)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3698) -> fun (V3699) -> fun (V3700) -> fun (V3701) -> fun (V3702) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3698, V3699, V3700, V3701, V3702)) end end end end end, fun (V3703) -> fun (V3704) -> fun (V3705) -> fun (V3706) -> fun (V3707) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3703, V3704, V3705, V3706, V3707)) end end end end end, fun (V3708) -> fun (V3709) -> fun (V3710) -> fun (V3711) -> fun (V3712) -> fun (V3713) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3708, V3709, V3710, V3711, V3712, V3713)) end end end end end end, fun (V3714) -> fun (V3715) -> fun (V3716) -> fun (V3717) -> fun (V3718) -> fun (V3719) -> fun (V3720) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3714, V3715, V3716, V3717, V3718, V3719, V3720)) end end end end end end end}}, V2, V0, V1, V3679, V4, V5, ((begin (V3726 = fun (V3722) -> fun (V3723) -> fun (V3724) -> fun (V3725) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3724, V3725)) end end end end), fun (V3727) -> fun (V3728) -> ((((V3726('erased'))('erased'))(V3727))(V3728)) end end end(fun (V3721) -> ('Idris.Idris2.Builtin':'un--snd'(V3721)) end))(V8)), ((begin (V3734 = fun (V3730) -> fun (V3731) -> fun (V3732) -> fun (V3733) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3732, V3733)) end end end end), fun (V3735) -> fun (V3736) -> ((((V3734('erased'))('erased'))(V3735))(V3736)) end end end(fun (V3729) -> ('Idris.Idris2.Builtin':'un--snd'(V3729)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3679, V4, V5, V6, V3680, V8, {'Core.Value.NApp', V9, V3681, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V3737, V3738} -> case V10 of {'Core.Value.NRef', V3739, V3740} -> begin (V3741 = {'Core.Unify.MkUnifyInfo', V3673, 2}), begin (V3742 = {'Core.Value.NRef', V3737, V3738}), begin (V3743 = {'Core.Value.NRef', V3739, V3740}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3738, V3740)) of 1 -> begin (V3792 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V3749 = begin (V3744 = V0), fun (V3745) -> begin (V3748 = (begin (V3746 = V3744), fun (V3747) -> ('erlang':'get'(V3746)) end end(V3745))), {'Prelude.Types.Right', V3748} end end end), fun (V3750) -> begin (V3751 = (V3749(V3750))), case V3751 of {'Prelude.Types.Left', V3752} -> {'Prelude.Types.Left', V3752}; {'Prelude.Types.Right', V3753} -> (begin (V3791 = begin (V3763 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3754) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3753, V5, V3754)) end, ((begin (V3760 = fun (V3756) -> fun (V3757) -> fun (V3758) -> fun (V3759) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3758, V3759)) end end end end), fun (V3761) -> fun (V3762) -> ((((V3760('erased'))('erased'))(V3761))(V3762)) end end end(fun (V3755) -> ('Idris.Idris2.Builtin':'un--snd'(V3755)) end))(V8)), []))), fun (V3764) -> begin (V3765 = (V3763(V3764))), case V3765 of {'Prelude.Types.Left', V3766} -> {'Prelude.Types.Left', V3766}; {'Prelude.Types.Right', V3767} -> (begin (V3790 = begin (V3777 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3768) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3753, V5, V3768)) end, ((begin (V3774 = fun (V3770) -> fun (V3771) -> fun (V3772) -> fun (V3773) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3772, V3773)) end end end end), fun (V3775) -> fun (V3776) -> ((((V3774('erased'))('erased'))(V3775))(V3776)) end end end(fun (V3769) -> ('Idris.Idris2.Builtin':'un--snd'(V3769)) end))(V11)), []))), fun (V3778) -> begin (V3779 = (V3777(V3778))), case V3779 of {'Prelude.Types.Left', V3780} -> {'Prelude.Types.Left', V3780}; {'Prelude.Types.Right', V3781} -> (begin (V3789 = fun (V3782) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3783) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3783)) end, fun (V3784) -> fun (V3785) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3784, V3785)) end end}, V3767))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V3786) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3786)) end, fun (V3787) -> fun (V3788) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3787, V3788)) end end}, V3781))/binary>>/binary>>/binary>>} end), V3789 end(V3778)) end end end end), V3790 end(V3764)) end end end end), V3791 end(V3750)) end end end end))), fun (V3793) -> begin (V3794 = (V3792(V3793))), case V3794 of {'Prelude.Types.Left', V3795} -> {'Prelude.Types.Left', V3795}; {'Prelude.Types.Right', V3796} -> (begin (V3852 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3797) -> fun (V3798) -> fun (V3799) -> fun (V3800) -> fun (V3801) -> fun (V3802) -> fun (V3803) -> fun (V3804) -> ('dn--un--unifyD_Unify_Closure'(V3797, V3798, V3799, V3800, V3801, V3802, V3803, V3804)) end end end end end end end end, fun (V3805) -> fun (V3806) -> fun (V3807) -> fun (V3808) -> fun (V3809) -> fun (V3810) -> fun (V3811) -> fun (V3812) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3805, V3806, V3807, V3808, V3809, V3810, V3811, V3812)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3813) -> fun (V3814) -> fun (V3815) -> fun (V3816) -> fun (V3817) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3813, V3814, V3815, V3816, V3817)) end end end end end, fun (V3818) -> fun (V3819) -> fun (V3820) -> fun (V3821) -> fun (V3822) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3818, V3819, V3820, V3821, V3822)) end end end end end, fun (V3823) -> fun (V3824) -> fun (V3825) -> fun (V3826) -> fun (V3827) -> fun (V3828) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3823, V3824, V3825, V3826, V3827, V3828)) end end end end end end, fun (V3829) -> fun (V3830) -> fun (V3831) -> fun (V3832) -> fun (V3833) -> fun (V3834) -> fun (V3835) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3829, V3830, V3831, V3832, V3833, V3834, V3835)) end end end end end end end}}, V2, V0, V1, V3741, V4, V5, ((begin (V3841 = fun (V3837) -> fun (V3838) -> fun (V3839) -> fun (V3840) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3839, V3840)) end end end end), fun (V3842) -> fun (V3843) -> ((((V3841('erased'))('erased'))(V3842))(V3843)) end end end(fun (V3836) -> ('Idris.Idris2.Builtin':'un--snd'(V3836)) end))(V8)), ((begin (V3849 = fun (V3845) -> fun (V3846) -> fun (V3847) -> fun (V3848) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3847, V3848)) end end end end), fun (V3850) -> fun (V3851) -> ((((V3849('erased'))('erased'))(V3850))(V3851)) end end end(fun (V3844) -> ('Idris.Idris2.Builtin':'un--snd'(V3844)) end))(V11))))), V3852 end(V3793)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3741, V4, V5, V6, V3742, V8, {'Core.Value.NApp', V9, V3743, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V3853, V3854} -> case V3854 of 1 -> case V7 of {'Core.Value.NLocal', V3855, V3856} -> case V10 of {'Core.Value.NLocal', V3857, V3858} -> begin (V3859 = {'Core.Unify.MkUnifyInfo', V3853, 1}), case case (V3856 =:= V3858) of 'false' -> 0; _ -> 1 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3860) -> fun (V3861) -> fun (V3862) -> fun (V3863) -> fun (V3864) -> fun (V3865) -> fun (V3866) -> fun (V3867) -> ('dn--un--unifyD_Unify_Closure'(V3860, V3861, V3862, V3863, V3864, V3865, V3866, V3867)) end end end end end end end end, fun (V3868) -> fun (V3869) -> fun (V3870) -> fun (V3871) -> fun (V3872) -> fun (V3873) -> fun (V3874) -> fun (V3875) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3868, V3869, V3870, V3871, V3872, V3873, V3874, V3875)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3876) -> fun (V3877) -> fun (V3878) -> fun (V3879) -> fun (V3880) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3876, V3877, V3878, V3879, V3880)) end end end end end, fun (V3881) -> fun (V3882) -> fun (V3883) -> fun (V3884) -> fun (V3885) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3881, V3882, V3883, V3884, V3885)) end end end end end, fun (V3886) -> fun (V3887) -> fun (V3888) -> fun (V3889) -> fun (V3890) -> fun (V3891) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3886, V3887, V3888, V3889, V3890, V3891)) end end end end end end, fun (V3892) -> fun (V3893) -> fun (V3894) -> fun (V3895) -> fun (V3896) -> fun (V3897) -> fun (V3898) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3892, V3893, V3894, V3895, V3896, V3897, V3898)) end end end end end end end}}, V2, V0, V1, V3859, V4, V5, ((begin (V3904 = fun (V3900) -> fun (V3901) -> fun (V3902) -> fun (V3903) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3902, V3903)) end end end end), fun (V3905) -> fun (V3906) -> ((((V3904('erased'))('erased'))(V3905))(V3906)) end end end(fun (V3899) -> ('Idris.Idris2.Builtin':'un--snd'(V3899)) end))(V8)), ((begin (V3912 = fun (V3908) -> fun (V3909) -> fun (V3910) -> fun (V3911) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3910, V3911)) end end end end), fun (V3913) -> fun (V3914) -> ((((V3912('erased'))('erased'))(V3913))(V3914)) end end end(fun (V3907) -> ('Idris.Idris2.Builtin':'un--snd'(V3907)) end))(V11)))); 0 -> ('un--postpone'(V2, V0, V1, V4, V3859, <<"Postponing local app"/utf8>>, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V3855, V3856}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V3857, V3858}, V11})) end end; _ -> case V7 of {'Core.Value.NLocal', V3915, V3916} -> case V10 of {'Core.Value.NLocal', V3917, V3918} -> begin (V3919 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V3920) -> begin (V3921 = (V3919(V3920))), case V3921 of {'Prelude.Types.Left', V3922} -> {'Prelude.Types.Left', V3922}; {'Prelude.Types.Right', V3923} -> (begin (V3924 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V3915, V3916}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V3917, V3918}, V11}))), V3924 end(V3920)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V3925, V3926, V3927} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V3928, V3929} -> V3929 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V3925, V3926, V3927}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V3925, V3926, V3927}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V3930, V3931} -> case V3931 of 3 -> case V7 of {'Core.Value.NRef', V3932, V3933} -> case V10 of {'Core.Value.NRef', V3934, V3935} -> begin (V3936 = {'Core.Unify.MkUnifyInfo', V3930, 3}), begin (V3937 = {'Core.Value.NRef', V3932, V3933}), begin (V3938 = {'Core.Value.NRef', V3934, V3935}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3933, V3935)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V3939) -> fun (V3940) -> fun (V3941) -> fun (V3942) -> fun (V3943) -> fun (V3944) -> fun (V3945) -> fun (V3946) -> ('dn--un--unifyD_Unify_Closure'(V3939, V3940, V3941, V3942, V3943, V3944, V3945, V3946)) end end end end end end end end, fun (V3947) -> fun (V3948) -> fun (V3949) -> fun (V3950) -> fun (V3951) -> fun (V3952) -> fun (V3953) -> fun (V3954) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3947, V3948, V3949, V3950, V3951, V3952, V3953, V3954)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V3955) -> fun (V3956) -> fun (V3957) -> fun (V3958) -> fun (V3959) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3955, V3956, V3957, V3958, V3959)) end end end end end, fun (V3960) -> fun (V3961) -> fun (V3962) -> fun (V3963) -> fun (V3964) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3960, V3961, V3962, V3963, V3964)) end end end end end, fun (V3965) -> fun (V3966) -> fun (V3967) -> fun (V3968) -> fun (V3969) -> fun (V3970) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3965, V3966, V3967, V3968, V3969, V3970)) end end end end end end, fun (V3971) -> fun (V3972) -> fun (V3973) -> fun (V3974) -> fun (V3975) -> fun (V3976) -> fun (V3977) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3971, V3972, V3973, V3974, V3975, V3976, V3977)) end end end end end end end}}, V2, V0, V1, V3936, V4, V5, ((begin (V3983 = fun (V3979) -> fun (V3980) -> fun (V3981) -> fun (V3982) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3981, V3982)) end end end end), fun (V3984) -> fun (V3985) -> ((((V3983('erased'))('erased'))(V3984))(V3985)) end end end(fun (V3978) -> ('Idris.Idris2.Builtin':'un--snd'(V3978)) end))(V8)), ((begin (V3991 = fun (V3987) -> fun (V3988) -> fun (V3989) -> fun (V3990) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3989, V3990)) end end end end), fun (V3992) -> fun (V3993) -> ((((V3991('erased'))('erased'))(V3992))(V3993)) end end end(fun (V3986) -> ('Idris.Idris2.Builtin':'un--snd'(V3986)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3936, V4, V5, V6, V3937, V8, {'Core.Value.NApp', V9, V3938, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V3994, V3995} -> case V10 of {'Core.Value.NRef', V3996, V3997} -> begin (V3998 = {'Core.Unify.MkUnifyInfo', V3930, 2}), begin (V3999 = {'Core.Value.NRef', V3994, V3995}), begin (V4000 = {'Core.Value.NRef', V3996, V3997}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3995, V3997)) of 1 -> begin (V4049 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V4006 = begin (V4001 = V0), fun (V4002) -> begin (V4005 = (begin (V4003 = V4001), fun (V4004) -> ('erlang':'get'(V4003)) end end(V4002))), {'Prelude.Types.Right', V4005} end end end), fun (V4007) -> begin (V4008 = (V4006(V4007))), case V4008 of {'Prelude.Types.Left', V4009} -> {'Prelude.Types.Left', V4009}; {'Prelude.Types.Right', V4010} -> (begin (V4048 = begin (V4020 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4011) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4010, V5, V4011)) end, ((begin (V4017 = fun (V4013) -> fun (V4014) -> fun (V4015) -> fun (V4016) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4015, V4016)) end end end end), fun (V4018) -> fun (V4019) -> ((((V4017('erased'))('erased'))(V4018))(V4019)) end end end(fun (V4012) -> ('Idris.Idris2.Builtin':'un--snd'(V4012)) end))(V8)), []))), fun (V4021) -> begin (V4022 = (V4020(V4021))), case V4022 of {'Prelude.Types.Left', V4023} -> {'Prelude.Types.Left', V4023}; {'Prelude.Types.Right', V4024} -> (begin (V4047 = begin (V4034 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4025) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4010, V5, V4025)) end, ((begin (V4031 = fun (V4027) -> fun (V4028) -> fun (V4029) -> fun (V4030) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4029, V4030)) end end end end), fun (V4032) -> fun (V4033) -> ((((V4031('erased'))('erased'))(V4032))(V4033)) end end end(fun (V4026) -> ('Idris.Idris2.Builtin':'un--snd'(V4026)) end))(V11)), []))), fun (V4035) -> begin (V4036 = (V4034(V4035))), case V4036 of {'Prelude.Types.Left', V4037} -> {'Prelude.Types.Left', V4037}; {'Prelude.Types.Right', V4038} -> (begin (V4046 = fun (V4039) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4040) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4040)) end, fun (V4041) -> fun (V4042) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4041, V4042)) end end}, V4024))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4043) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4043)) end, fun (V4044) -> fun (V4045) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4044, V4045)) end end}, V4038))/binary>>/binary>>/binary>>} end), V4046 end(V4035)) end end end end), V4047 end(V4021)) end end end end), V4048 end(V4007)) end end end end))), fun (V4050) -> begin (V4051 = (V4049(V4050))), case V4051 of {'Prelude.Types.Left', V4052} -> {'Prelude.Types.Left', V4052}; {'Prelude.Types.Right', V4053} -> (begin (V4109 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4054) -> fun (V4055) -> fun (V4056) -> fun (V4057) -> fun (V4058) -> fun (V4059) -> fun (V4060) -> fun (V4061) -> ('dn--un--unifyD_Unify_Closure'(V4054, V4055, V4056, V4057, V4058, V4059, V4060, V4061)) end end end end end end end end, fun (V4062) -> fun (V4063) -> fun (V4064) -> fun (V4065) -> fun (V4066) -> fun (V4067) -> fun (V4068) -> fun (V4069) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4062, V4063, V4064, V4065, V4066, V4067, V4068, V4069)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4070) -> fun (V4071) -> fun (V4072) -> fun (V4073) -> fun (V4074) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4070, V4071, V4072, V4073, V4074)) end end end end end, fun (V4075) -> fun (V4076) -> fun (V4077) -> fun (V4078) -> fun (V4079) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4075, V4076, V4077, V4078, V4079)) end end end end end, fun (V4080) -> fun (V4081) -> fun (V4082) -> fun (V4083) -> fun (V4084) -> fun (V4085) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4080, V4081, V4082, V4083, V4084, V4085)) end end end end end end, fun (V4086) -> fun (V4087) -> fun (V4088) -> fun (V4089) -> fun (V4090) -> fun (V4091) -> fun (V4092) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4086, V4087, V4088, V4089, V4090, V4091, V4092)) end end end end end end end}}, V2, V0, V1, V3998, V4, V5, ((begin (V4098 = fun (V4094) -> fun (V4095) -> fun (V4096) -> fun (V4097) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4096, V4097)) end end end end), fun (V4099) -> fun (V4100) -> ((((V4098('erased'))('erased'))(V4099))(V4100)) end end end(fun (V4093) -> ('Idris.Idris2.Builtin':'un--snd'(V4093)) end))(V8)), ((begin (V4106 = fun (V4102) -> fun (V4103) -> fun (V4104) -> fun (V4105) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4104, V4105)) end end end end), fun (V4107) -> fun (V4108) -> ((((V4106('erased'))('erased'))(V4107))(V4108)) end end end(fun (V4101) -> ('Idris.Idris2.Builtin':'un--snd'(V4101)) end))(V11))))), V4109 end(V4050)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3998, V4, V5, V6, V3999, V8, {'Core.Value.NApp', V9, V4000, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V4110, V4111, V4112} -> case V10 of {'Core.Value.NMeta', V4113, V4114, V4115} -> begin (V4116 = ('un--isDefInvertible'(V0, V4, V4111))), fun (V4117) -> begin (V4118 = (V4116(V4117))), case V4118 of {'Prelude.Types.Left', V4119} -> {'Prelude.Types.Left', V4119}; {'Prelude.Types.Right', V4120} -> (begin (V4193 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V4111, V4114)) of 1 -> case V4120 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4121, V4122} -> V4122 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4123) -> fun (V4124) -> fun (V4125) -> fun (V4126) -> fun (V4127) -> fun (V4128) -> fun (V4129) -> fun (V4130) -> ('dn--un--unifyD_Unify_Closure'(V4123, V4124, V4125, V4126, V4127, V4128, V4129, V4130)) end end end end end end end end, fun (V4131) -> fun (V4132) -> fun (V4133) -> fun (V4134) -> fun (V4135) -> fun (V4136) -> fun (V4137) -> fun (V4138) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4131, V4132, V4133, V4134, V4135, V4136, V4137, V4138)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4139) -> fun (V4140) -> fun (V4141) -> fun (V4142) -> fun (V4143) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4139, V4140, V4141, V4142, V4143)) end end end end end, fun (V4144) -> fun (V4145) -> fun (V4146) -> fun (V4147) -> fun (V4148) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4144, V4145, V4146, V4147, V4148)) end end end end end, fun (V4149) -> fun (V4150) -> fun (V4151) -> fun (V4152) -> fun (V4153) -> fun (V4154) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4149, V4150, V4151, V4152, V4153, V4154)) end end end end end end, fun (V4155) -> fun (V4156) -> fun (V4157) -> fun (V4158) -> fun (V4159) -> fun (V4160) -> fun (V4161) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4155, V4156, V4157, V4158, V4159, V4160, V4161)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4112, ((begin (V4167 = fun (V4163) -> fun (V4164) -> fun (V4165) -> fun (V4166) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4165, V4166)) end end end end), fun (V4168) -> fun (V4169) -> ((((V4167('erased'))('erased'))(V4168))(V4169)) end end end(fun (V4162) -> ('Idris.Idris2.Builtin':'un--snd'(V4162)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4115, ((begin (V4175 = fun (V4171) -> fun (V4172) -> fun (V4173) -> fun (V4174) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4173, V4174)) end end end end), fun (V4176) -> fun (V4177) -> ((((V4175('erased'))('erased'))(V4176))(V4177)) end end end(fun (V4170) -> ('Idris.Idris2.Builtin':'un--snd'(V4170)) end))(V11)))))); 0 -> begin (V4178 = ('nested--14746-23552--in--un--localsIn'(V2, V4112, V4111, V4110, V4115, V4114, V4113, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4112))), fun (V4179) -> begin (V4180 = (V4178(V4179))), case V4180 of {'Prelude.Types.Left', V4181} -> {'Prelude.Types.Left', V4181}; {'Prelude.Types.Right', V4182} -> (begin (V4192 = begin (V4183 = ('nested--14746-23552--in--un--localsIn'(V2, V4112, V4111, V4110, V4115, V4114, V4113, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4115))), fun (V4184) -> begin (V4185 = (V4183(V4184))), case V4185 of {'Prelude.Types.Left', V4186} -> {'Prelude.Types.Left', V4186}; {'Prelude.Types.Right', V4187} -> (begin (V4191 = begin (V4188 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V4182, V4187)) of 1 -> 1; 0 -> case case (V4182 =:= V4187) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V4188 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4189, V4190} -> V4190 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V4112, V4111, V4110, V4115, V4114, V4113, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4110)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V4110, V4111, V4112}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V4113, V4114, V4115}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V4113, V4114, V4115}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V4110, V4111, V4112}, V8})) end end), V4191 end(V4184)) end end end end), V4192 end(V4179)) end end end end end), V4193 end(V4117)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V4110, V4111, V4112}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V4194, V4195, V4196} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4197, V4198} -> V4198 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V4194, V4195, V4196}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V4194, V4195, V4196}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V4199, V4200} -> case V4200 of 3 -> case V7 of {'Core.Value.NRef', V4201, V4202} -> case V10 of {'Core.Value.NRef', V4203, V4204} -> begin (V4205 = {'Core.Unify.MkUnifyInfo', V4199, 3}), begin (V4206 = {'Core.Value.NRef', V4201, V4202}), begin (V4207 = {'Core.Value.NRef', V4203, V4204}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4202, V4204)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4208) -> fun (V4209) -> fun (V4210) -> fun (V4211) -> fun (V4212) -> fun (V4213) -> fun (V4214) -> fun (V4215) -> ('dn--un--unifyD_Unify_Closure'(V4208, V4209, V4210, V4211, V4212, V4213, V4214, V4215)) end end end end end end end end, fun (V4216) -> fun (V4217) -> fun (V4218) -> fun (V4219) -> fun (V4220) -> fun (V4221) -> fun (V4222) -> fun (V4223) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4216, V4217, V4218, V4219, V4220, V4221, V4222, V4223)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4224) -> fun (V4225) -> fun (V4226) -> fun (V4227) -> fun (V4228) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4224, V4225, V4226, V4227, V4228)) end end end end end, fun (V4229) -> fun (V4230) -> fun (V4231) -> fun (V4232) -> fun (V4233) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4229, V4230, V4231, V4232, V4233)) end end end end end, fun (V4234) -> fun (V4235) -> fun (V4236) -> fun (V4237) -> fun (V4238) -> fun (V4239) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4234, V4235, V4236, V4237, V4238, V4239)) end end end end end end, fun (V4240) -> fun (V4241) -> fun (V4242) -> fun (V4243) -> fun (V4244) -> fun (V4245) -> fun (V4246) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4240, V4241, V4242, V4243, V4244, V4245, V4246)) end end end end end end end}}, V2, V0, V1, V4205, V4, V5, ((begin (V4252 = fun (V4248) -> fun (V4249) -> fun (V4250) -> fun (V4251) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4250, V4251)) end end end end), fun (V4253) -> fun (V4254) -> ((((V4252('erased'))('erased'))(V4253))(V4254)) end end end(fun (V4247) -> ('Idris.Idris2.Builtin':'un--snd'(V4247)) end))(V8)), ((begin (V4260 = fun (V4256) -> fun (V4257) -> fun (V4258) -> fun (V4259) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4258, V4259)) end end end end), fun (V4261) -> fun (V4262) -> ((((V4260('erased'))('erased'))(V4261))(V4262)) end end end(fun (V4255) -> ('Idris.Idris2.Builtin':'un--snd'(V4255)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4205, V4, V5, V6, V4206, V8, {'Core.Value.NApp', V9, V4207, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V4263, V4264} -> case V10 of {'Core.Value.NRef', V4265, V4266} -> begin (V4267 = {'Core.Unify.MkUnifyInfo', V4199, 2}), begin (V4268 = {'Core.Value.NRef', V4263, V4264}), begin (V4269 = {'Core.Value.NRef', V4265, V4266}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4264, V4266)) of 1 -> begin (V4318 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V4275 = begin (V4270 = V0), fun (V4271) -> begin (V4274 = (begin (V4272 = V4270), fun (V4273) -> ('erlang':'get'(V4272)) end end(V4271))), {'Prelude.Types.Right', V4274} end end end), fun (V4276) -> begin (V4277 = (V4275(V4276))), case V4277 of {'Prelude.Types.Left', V4278} -> {'Prelude.Types.Left', V4278}; {'Prelude.Types.Right', V4279} -> (begin (V4317 = begin (V4289 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4280) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4279, V5, V4280)) end, ((begin (V4286 = fun (V4282) -> fun (V4283) -> fun (V4284) -> fun (V4285) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4284, V4285)) end end end end), fun (V4287) -> fun (V4288) -> ((((V4286('erased'))('erased'))(V4287))(V4288)) end end end(fun (V4281) -> ('Idris.Idris2.Builtin':'un--snd'(V4281)) end))(V8)), []))), fun (V4290) -> begin (V4291 = (V4289(V4290))), case V4291 of {'Prelude.Types.Left', V4292} -> {'Prelude.Types.Left', V4292}; {'Prelude.Types.Right', V4293} -> (begin (V4316 = begin (V4303 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4294) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4279, V5, V4294)) end, ((begin (V4300 = fun (V4296) -> fun (V4297) -> fun (V4298) -> fun (V4299) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4298, V4299)) end end end end), fun (V4301) -> fun (V4302) -> ((((V4300('erased'))('erased'))(V4301))(V4302)) end end end(fun (V4295) -> ('Idris.Idris2.Builtin':'un--snd'(V4295)) end))(V11)), []))), fun (V4304) -> begin (V4305 = (V4303(V4304))), case V4305 of {'Prelude.Types.Left', V4306} -> {'Prelude.Types.Left', V4306}; {'Prelude.Types.Right', V4307} -> (begin (V4315 = fun (V4308) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4309) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4309)) end, fun (V4310) -> fun (V4311) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4310, V4311)) end end}, V4293))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4312) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4312)) end, fun (V4313) -> fun (V4314) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4313, V4314)) end end}, V4307))/binary>>/binary>>/binary>>} end), V4315 end(V4304)) end end end end), V4316 end(V4290)) end end end end), V4317 end(V4276)) end end end end))), fun (V4319) -> begin (V4320 = (V4318(V4319))), case V4320 of {'Prelude.Types.Left', V4321} -> {'Prelude.Types.Left', V4321}; {'Prelude.Types.Right', V4322} -> (begin (V4378 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4323) -> fun (V4324) -> fun (V4325) -> fun (V4326) -> fun (V4327) -> fun (V4328) -> fun (V4329) -> fun (V4330) -> ('dn--un--unifyD_Unify_Closure'(V4323, V4324, V4325, V4326, V4327, V4328, V4329, V4330)) end end end end end end end end, fun (V4331) -> fun (V4332) -> fun (V4333) -> fun (V4334) -> fun (V4335) -> fun (V4336) -> fun (V4337) -> fun (V4338) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4331, V4332, V4333, V4334, V4335, V4336, V4337, V4338)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4339) -> fun (V4340) -> fun (V4341) -> fun (V4342) -> fun (V4343) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4339, V4340, V4341, V4342, V4343)) end end end end end, fun (V4344) -> fun (V4345) -> fun (V4346) -> fun (V4347) -> fun (V4348) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4344, V4345, V4346, V4347, V4348)) end end end end end, fun (V4349) -> fun (V4350) -> fun (V4351) -> fun (V4352) -> fun (V4353) -> fun (V4354) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4349, V4350, V4351, V4352, V4353, V4354)) end end end end end end, fun (V4355) -> fun (V4356) -> fun (V4357) -> fun (V4358) -> fun (V4359) -> fun (V4360) -> fun (V4361) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4355, V4356, V4357, V4358, V4359, V4360, V4361)) end end end end end end end}}, V2, V0, V1, V4267, V4, V5, ((begin (V4367 = fun (V4363) -> fun (V4364) -> fun (V4365) -> fun (V4366) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4365, V4366)) end end end end), fun (V4368) -> fun (V4369) -> ((((V4367('erased'))('erased'))(V4368))(V4369)) end end end(fun (V4362) -> ('Idris.Idris2.Builtin':'un--snd'(V4362)) end))(V8)), ((begin (V4375 = fun (V4371) -> fun (V4372) -> fun (V4373) -> fun (V4374) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4373, V4374)) end end end end), fun (V4376) -> fun (V4377) -> ((((V4375('erased'))('erased'))(V4376))(V4377)) end end end(fun (V4370) -> ('Idris.Idris2.Builtin':'un--snd'(V4370)) end))(V11))))), V4378 end(V4319)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4267, V4, V5, V6, V4268, V8, {'Core.Value.NApp', V9, V4269, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V4379, V4380} -> case V10 of {'Core.Value.NLocal', V4381, V4382} -> begin (V4383 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V4384) -> begin (V4385 = (V4383(V4384))), case V4385 of {'Prelude.Types.Left', V4386} -> {'Prelude.Types.Left', V4386}; {'Prelude.Types.Right', V4387} -> (begin (V4388 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V4379, V4380}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V4381, V4382}, V11}))), V4388 end(V4384)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V4389, V4390, V4391} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4392, V4393} -> V4393 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V4389, V4390, V4391}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V4389, V4390, V4391}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V4394, V4395} -> case V4395 of 3 -> case V7 of {'Core.Value.NRef', V4396, V4397} -> case V10 of {'Core.Value.NRef', V4398, V4399} -> begin (V4400 = {'Core.Unify.MkUnifyInfo', V4394, 3}), begin (V4401 = {'Core.Value.NRef', V4396, V4397}), begin (V4402 = {'Core.Value.NRef', V4398, V4399}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4397, V4399)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4403) -> fun (V4404) -> fun (V4405) -> fun (V4406) -> fun (V4407) -> fun (V4408) -> fun (V4409) -> fun (V4410) -> ('dn--un--unifyD_Unify_Closure'(V4403, V4404, V4405, V4406, V4407, V4408, V4409, V4410)) end end end end end end end end, fun (V4411) -> fun (V4412) -> fun (V4413) -> fun (V4414) -> fun (V4415) -> fun (V4416) -> fun (V4417) -> fun (V4418) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4411, V4412, V4413, V4414, V4415, V4416, V4417, V4418)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4419) -> fun (V4420) -> fun (V4421) -> fun (V4422) -> fun (V4423) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4419, V4420, V4421, V4422, V4423)) end end end end end, fun (V4424) -> fun (V4425) -> fun (V4426) -> fun (V4427) -> fun (V4428) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4424, V4425, V4426, V4427, V4428)) end end end end end, fun (V4429) -> fun (V4430) -> fun (V4431) -> fun (V4432) -> fun (V4433) -> fun (V4434) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4429, V4430, V4431, V4432, V4433, V4434)) end end end end end end, fun (V4435) -> fun (V4436) -> fun (V4437) -> fun (V4438) -> fun (V4439) -> fun (V4440) -> fun (V4441) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4435, V4436, V4437, V4438, V4439, V4440, V4441)) end end end end end end end}}, V2, V0, V1, V4400, V4, V5, ((begin (V4447 = fun (V4443) -> fun (V4444) -> fun (V4445) -> fun (V4446) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4445, V4446)) end end end end), fun (V4448) -> fun (V4449) -> ((((V4447('erased'))('erased'))(V4448))(V4449)) end end end(fun (V4442) -> ('Idris.Idris2.Builtin':'un--snd'(V4442)) end))(V8)), ((begin (V4455 = fun (V4451) -> fun (V4452) -> fun (V4453) -> fun (V4454) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4453, V4454)) end end end end), fun (V4456) -> fun (V4457) -> ((((V4455('erased'))('erased'))(V4456))(V4457)) end end end(fun (V4450) -> ('Idris.Idris2.Builtin':'un--snd'(V4450)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4400, V4, V5, V6, V4401, V8, {'Core.Value.NApp', V9, V4402, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V4458, V4459} -> case V10 of {'Core.Value.NRef', V4460, V4461} -> begin (V4462 = {'Core.Unify.MkUnifyInfo', V4394, 2}), begin (V4463 = {'Core.Value.NRef', V4458, V4459}), begin (V4464 = {'Core.Value.NRef', V4460, V4461}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4459, V4461)) of 1 -> begin (V4513 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V4470 = begin (V4465 = V0), fun (V4466) -> begin (V4469 = (begin (V4467 = V4465), fun (V4468) -> ('erlang':'get'(V4467)) end end(V4466))), {'Prelude.Types.Right', V4469} end end end), fun (V4471) -> begin (V4472 = (V4470(V4471))), case V4472 of {'Prelude.Types.Left', V4473} -> {'Prelude.Types.Left', V4473}; {'Prelude.Types.Right', V4474} -> (begin (V4512 = begin (V4484 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4475) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4474, V5, V4475)) end, ((begin (V4481 = fun (V4477) -> fun (V4478) -> fun (V4479) -> fun (V4480) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4479, V4480)) end end end end), fun (V4482) -> fun (V4483) -> ((((V4481('erased'))('erased'))(V4482))(V4483)) end end end(fun (V4476) -> ('Idris.Idris2.Builtin':'un--snd'(V4476)) end))(V8)), []))), fun (V4485) -> begin (V4486 = (V4484(V4485))), case V4486 of {'Prelude.Types.Left', V4487} -> {'Prelude.Types.Left', V4487}; {'Prelude.Types.Right', V4488} -> (begin (V4511 = begin (V4498 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4489) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4474, V5, V4489)) end, ((begin (V4495 = fun (V4491) -> fun (V4492) -> fun (V4493) -> fun (V4494) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4493, V4494)) end end end end), fun (V4496) -> fun (V4497) -> ((((V4495('erased'))('erased'))(V4496))(V4497)) end end end(fun (V4490) -> ('Idris.Idris2.Builtin':'un--snd'(V4490)) end))(V11)), []))), fun (V4499) -> begin (V4500 = (V4498(V4499))), case V4500 of {'Prelude.Types.Left', V4501} -> {'Prelude.Types.Left', V4501}; {'Prelude.Types.Right', V4502} -> (begin (V4510 = fun (V4503) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4504) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4504)) end, fun (V4505) -> fun (V4506) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4505, V4506)) end end}, V4488))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4507) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4507)) end, fun (V4508) -> fun (V4509) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4508, V4509)) end end}, V4502))/binary>>/binary>>/binary>>} end), V4510 end(V4499)) end end end end), V4511 end(V4485)) end end end end), V4512 end(V4471)) end end end end))), fun (V4514) -> begin (V4515 = (V4513(V4514))), case V4515 of {'Prelude.Types.Left', V4516} -> {'Prelude.Types.Left', V4516}; {'Prelude.Types.Right', V4517} -> (begin (V4573 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4518) -> fun (V4519) -> fun (V4520) -> fun (V4521) -> fun (V4522) -> fun (V4523) -> fun (V4524) -> fun (V4525) -> ('dn--un--unifyD_Unify_Closure'(V4518, V4519, V4520, V4521, V4522, V4523, V4524, V4525)) end end end end end end end end, fun (V4526) -> fun (V4527) -> fun (V4528) -> fun (V4529) -> fun (V4530) -> fun (V4531) -> fun (V4532) -> fun (V4533) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4526, V4527, V4528, V4529, V4530, V4531, V4532, V4533)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4534) -> fun (V4535) -> fun (V4536) -> fun (V4537) -> fun (V4538) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4534, V4535, V4536, V4537, V4538)) end end end end end, fun (V4539) -> fun (V4540) -> fun (V4541) -> fun (V4542) -> fun (V4543) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4539, V4540, V4541, V4542, V4543)) end end end end end, fun (V4544) -> fun (V4545) -> fun (V4546) -> fun (V4547) -> fun (V4548) -> fun (V4549) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4544, V4545, V4546, V4547, V4548, V4549)) end end end end end end, fun (V4550) -> fun (V4551) -> fun (V4552) -> fun (V4553) -> fun (V4554) -> fun (V4555) -> fun (V4556) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4550, V4551, V4552, V4553, V4554, V4555, V4556)) end end end end end end end}}, V2, V0, V1, V4462, V4, V5, ((begin (V4562 = fun (V4558) -> fun (V4559) -> fun (V4560) -> fun (V4561) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4560, V4561)) end end end end), fun (V4563) -> fun (V4564) -> ((((V4562('erased'))('erased'))(V4563))(V4564)) end end end(fun (V4557) -> ('Idris.Idris2.Builtin':'un--snd'(V4557)) end))(V8)), ((begin (V4570 = fun (V4566) -> fun (V4567) -> fun (V4568) -> fun (V4569) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4568, V4569)) end end end end), fun (V4571) -> fun (V4572) -> ((((V4570('erased'))('erased'))(V4571))(V4572)) end end end(fun (V4565) -> ('Idris.Idris2.Builtin':'un--snd'(V4565)) end))(V11))))), V4573 end(V4514)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4462, V4, V5, V6, V4463, V8, {'Core.Value.NApp', V9, V4464, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V4574, V4575, V4576} -> case V10 of {'Core.Value.NMeta', V4577, V4578, V4579} -> begin (V4580 = ('un--isDefInvertible'(V0, V4, V4575))), fun (V4581) -> begin (V4582 = (V4580(V4581))), case V4582 of {'Prelude.Types.Left', V4583} -> {'Prelude.Types.Left', V4583}; {'Prelude.Types.Right', V4584} -> (begin (V4657 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V4575, V4578)) of 1 -> case V4584 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4585, V4586} -> V4586 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4587) -> fun (V4588) -> fun (V4589) -> fun (V4590) -> fun (V4591) -> fun (V4592) -> fun (V4593) -> fun (V4594) -> ('dn--un--unifyD_Unify_Closure'(V4587, V4588, V4589, V4590, V4591, V4592, V4593, V4594)) end end end end end end end end, fun (V4595) -> fun (V4596) -> fun (V4597) -> fun (V4598) -> fun (V4599) -> fun (V4600) -> fun (V4601) -> fun (V4602) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4595, V4596, V4597, V4598, V4599, V4600, V4601, V4602)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4603) -> fun (V4604) -> fun (V4605) -> fun (V4606) -> fun (V4607) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4603, V4604, V4605, V4606, V4607)) end end end end end, fun (V4608) -> fun (V4609) -> fun (V4610) -> fun (V4611) -> fun (V4612) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4608, V4609, V4610, V4611, V4612)) end end end end end, fun (V4613) -> fun (V4614) -> fun (V4615) -> fun (V4616) -> fun (V4617) -> fun (V4618) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4613, V4614, V4615, V4616, V4617, V4618)) end end end end end end, fun (V4619) -> fun (V4620) -> fun (V4621) -> fun (V4622) -> fun (V4623) -> fun (V4624) -> fun (V4625) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4619, V4620, V4621, V4622, V4623, V4624, V4625)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4576, ((begin (V4631 = fun (V4627) -> fun (V4628) -> fun (V4629) -> fun (V4630) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4629, V4630)) end end end end), fun (V4632) -> fun (V4633) -> ((((V4631('erased'))('erased'))(V4632))(V4633)) end end end(fun (V4626) -> ('Idris.Idris2.Builtin':'un--snd'(V4626)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4579, ((begin (V4639 = fun (V4635) -> fun (V4636) -> fun (V4637) -> fun (V4638) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4637, V4638)) end end end end), fun (V4640) -> fun (V4641) -> ((((V4639('erased'))('erased'))(V4640))(V4641)) end end end(fun (V4634) -> ('Idris.Idris2.Builtin':'un--snd'(V4634)) end))(V11)))))); 0 -> begin (V4642 = ('nested--14746-23552--in--un--localsIn'(V2, V4576, V4575, V4574, V4579, V4578, V4577, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4576))), fun (V4643) -> begin (V4644 = (V4642(V4643))), case V4644 of {'Prelude.Types.Left', V4645} -> {'Prelude.Types.Left', V4645}; {'Prelude.Types.Right', V4646} -> (begin (V4656 = begin (V4647 = ('nested--14746-23552--in--un--localsIn'(V2, V4576, V4575, V4574, V4579, V4578, V4577, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4579))), fun (V4648) -> begin (V4649 = (V4647(V4648))), case V4649 of {'Prelude.Types.Left', V4650} -> {'Prelude.Types.Left', V4650}; {'Prelude.Types.Right', V4651} -> (begin (V4655 = begin (V4652 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V4646, V4651)) of 1 -> 1; 0 -> case case (V4646 =:= V4651) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V4652 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4653, V4654} -> V4654 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V4576, V4575, V4574, V4579, V4578, V4577, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4574)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V4574, V4575, V4576}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V4577, V4578, V4579}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V4577, V4578, V4579}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V4574, V4575, V4576}, V8})) end end), V4655 end(V4648)) end end end end), V4656 end(V4643)) end end end end end), V4657 end(V4581)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V4574, V4575, V4576}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V4658, V4659, V4660} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4661, V4662} -> V4662 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V4658, V4659, V4660}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V4658, V4659, V4660}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V4663, V4664} -> case V4664 of 3 -> case V7 of {'Core.Value.NRef', V4665, V4666} -> case V10 of {'Core.Value.NRef', V4667, V4668} -> begin (V4669 = {'Core.Unify.MkUnifyInfo', V4663, 3}), begin (V4670 = {'Core.Value.NRef', V4665, V4666}), begin (V4671 = {'Core.Value.NRef', V4667, V4668}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4666, V4668)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4672) -> fun (V4673) -> fun (V4674) -> fun (V4675) -> fun (V4676) -> fun (V4677) -> fun (V4678) -> fun (V4679) -> ('dn--un--unifyD_Unify_Closure'(V4672, V4673, V4674, V4675, V4676, V4677, V4678, V4679)) end end end end end end end end, fun (V4680) -> fun (V4681) -> fun (V4682) -> fun (V4683) -> fun (V4684) -> fun (V4685) -> fun (V4686) -> fun (V4687) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4680, V4681, V4682, V4683, V4684, V4685, V4686, V4687)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4688) -> fun (V4689) -> fun (V4690) -> fun (V4691) -> fun (V4692) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4688, V4689, V4690, V4691, V4692)) end end end end end, fun (V4693) -> fun (V4694) -> fun (V4695) -> fun (V4696) -> fun (V4697) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4693, V4694, V4695, V4696, V4697)) end end end end end, fun (V4698) -> fun (V4699) -> fun (V4700) -> fun (V4701) -> fun (V4702) -> fun (V4703) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4698, V4699, V4700, V4701, V4702, V4703)) end end end end end end, fun (V4704) -> fun (V4705) -> fun (V4706) -> fun (V4707) -> fun (V4708) -> fun (V4709) -> fun (V4710) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4704, V4705, V4706, V4707, V4708, V4709, V4710)) end end end end end end end}}, V2, V0, V1, V4669, V4, V5, ((begin (V4716 = fun (V4712) -> fun (V4713) -> fun (V4714) -> fun (V4715) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4714, V4715)) end end end end), fun (V4717) -> fun (V4718) -> ((((V4716('erased'))('erased'))(V4717))(V4718)) end end end(fun (V4711) -> ('Idris.Idris2.Builtin':'un--snd'(V4711)) end))(V8)), ((begin (V4724 = fun (V4720) -> fun (V4721) -> fun (V4722) -> fun (V4723) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4722, V4723)) end end end end), fun (V4725) -> fun (V4726) -> ((((V4724('erased'))('erased'))(V4725))(V4726)) end end end(fun (V4719) -> ('Idris.Idris2.Builtin':'un--snd'(V4719)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4669, V4, V5, V6, V4670, V8, {'Core.Value.NApp', V9, V4671, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V4727, V4728} -> case V10 of {'Core.Value.NRef', V4729, V4730} -> begin (V4731 = {'Core.Unify.MkUnifyInfo', V4663, 2}), begin (V4732 = {'Core.Value.NRef', V4727, V4728}), begin (V4733 = {'Core.Value.NRef', V4729, V4730}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4728, V4730)) of 1 -> begin (V4782 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V4739 = begin (V4734 = V0), fun (V4735) -> begin (V4738 = (begin (V4736 = V4734), fun (V4737) -> ('erlang':'get'(V4736)) end end(V4735))), {'Prelude.Types.Right', V4738} end end end), fun (V4740) -> begin (V4741 = (V4739(V4740))), case V4741 of {'Prelude.Types.Left', V4742} -> {'Prelude.Types.Left', V4742}; {'Prelude.Types.Right', V4743} -> (begin (V4781 = begin (V4753 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4744) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4743, V5, V4744)) end, ((begin (V4750 = fun (V4746) -> fun (V4747) -> fun (V4748) -> fun (V4749) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4748, V4749)) end end end end), fun (V4751) -> fun (V4752) -> ((((V4750('erased'))('erased'))(V4751))(V4752)) end end end(fun (V4745) -> ('Idris.Idris2.Builtin':'un--snd'(V4745)) end))(V8)), []))), fun (V4754) -> begin (V4755 = (V4753(V4754))), case V4755 of {'Prelude.Types.Left', V4756} -> {'Prelude.Types.Left', V4756}; {'Prelude.Types.Right', V4757} -> (begin (V4780 = begin (V4767 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4758) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4743, V5, V4758)) end, ((begin (V4764 = fun (V4760) -> fun (V4761) -> fun (V4762) -> fun (V4763) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4762, V4763)) end end end end), fun (V4765) -> fun (V4766) -> ((((V4764('erased'))('erased'))(V4765))(V4766)) end end end(fun (V4759) -> ('Idris.Idris2.Builtin':'un--snd'(V4759)) end))(V11)), []))), fun (V4768) -> begin (V4769 = (V4767(V4768))), case V4769 of {'Prelude.Types.Left', V4770} -> {'Prelude.Types.Left', V4770}; {'Prelude.Types.Right', V4771} -> (begin (V4779 = fun (V4772) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4773) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4773)) end, fun (V4774) -> fun (V4775) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4774, V4775)) end end}, V4757))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4776) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4776)) end, fun (V4777) -> fun (V4778) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4777, V4778)) end end}, V4771))/binary>>/binary>>/binary>>} end), V4779 end(V4768)) end end end end), V4780 end(V4754)) end end end end), V4781 end(V4740)) end end end end))), fun (V4783) -> begin (V4784 = (V4782(V4783))), case V4784 of {'Prelude.Types.Left', V4785} -> {'Prelude.Types.Left', V4785}; {'Prelude.Types.Right', V4786} -> (begin (V4842 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4787) -> fun (V4788) -> fun (V4789) -> fun (V4790) -> fun (V4791) -> fun (V4792) -> fun (V4793) -> fun (V4794) -> ('dn--un--unifyD_Unify_Closure'(V4787, V4788, V4789, V4790, V4791, V4792, V4793, V4794)) end end end end end end end end, fun (V4795) -> fun (V4796) -> fun (V4797) -> fun (V4798) -> fun (V4799) -> fun (V4800) -> fun (V4801) -> fun (V4802) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4795, V4796, V4797, V4798, V4799, V4800, V4801, V4802)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4803) -> fun (V4804) -> fun (V4805) -> fun (V4806) -> fun (V4807) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4803, V4804, V4805, V4806, V4807)) end end end end end, fun (V4808) -> fun (V4809) -> fun (V4810) -> fun (V4811) -> fun (V4812) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4808, V4809, V4810, V4811, V4812)) end end end end end, fun (V4813) -> fun (V4814) -> fun (V4815) -> fun (V4816) -> fun (V4817) -> fun (V4818) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4813, V4814, V4815, V4816, V4817, V4818)) end end end end end end, fun (V4819) -> fun (V4820) -> fun (V4821) -> fun (V4822) -> fun (V4823) -> fun (V4824) -> fun (V4825) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4819, V4820, V4821, V4822, V4823, V4824, V4825)) end end end end end end end}}, V2, V0, V1, V4731, V4, V5, ((begin (V4831 = fun (V4827) -> fun (V4828) -> fun (V4829) -> fun (V4830) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4829, V4830)) end end end end), fun (V4832) -> fun (V4833) -> ((((V4831('erased'))('erased'))(V4832))(V4833)) end end end(fun (V4826) -> ('Idris.Idris2.Builtin':'un--snd'(V4826)) end))(V8)), ((begin (V4839 = fun (V4835) -> fun (V4836) -> fun (V4837) -> fun (V4838) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4837, V4838)) end end end end), fun (V4840) -> fun (V4841) -> ((((V4839('erased'))('erased'))(V4840))(V4841)) end end end(fun (V4834) -> ('Idris.Idris2.Builtin':'un--snd'(V4834)) end))(V11))))), V4842 end(V4783)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4731, V4, V5, V6, V4732, V8, {'Core.Value.NApp', V9, V4733, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V4843, V4844} -> case V10 of {'Core.Value.NLocal', V4845, V4846} -> begin (V4847 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V4848) -> begin (V4849 = (V4847(V4848))), case V4849 of {'Prelude.Types.Left', V4850} -> {'Prelude.Types.Left', V4850}; {'Prelude.Types.Right', V4851} -> (begin (V4852 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V4843, V4844}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V4845, V4846}, V11}))), V4852 end(V4848)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V4853, V4854, V4855} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V4856, V4857} -> V4857 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V4853, V4854, V4855}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V4853, V4854, V4855}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V4858, V4859} -> case V4859 of 3 -> case V7 of {'Core.Value.NRef', V4860, V4861} -> case V10 of {'Core.Value.NRef', V4862, V4863} -> begin (V4864 = {'Core.Unify.MkUnifyInfo', V4858, 3}), begin (V4865 = {'Core.Value.NRef', V4860, V4861}), begin (V4866 = {'Core.Value.NRef', V4862, V4863}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4861, V4863)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4867) -> fun (V4868) -> fun (V4869) -> fun (V4870) -> fun (V4871) -> fun (V4872) -> fun (V4873) -> fun (V4874) -> ('dn--un--unifyD_Unify_Closure'(V4867, V4868, V4869, V4870, V4871, V4872, V4873, V4874)) end end end end end end end end, fun (V4875) -> fun (V4876) -> fun (V4877) -> fun (V4878) -> fun (V4879) -> fun (V4880) -> fun (V4881) -> fun (V4882) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4875, V4876, V4877, V4878, V4879, V4880, V4881, V4882)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4883) -> fun (V4884) -> fun (V4885) -> fun (V4886) -> fun (V4887) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4883, V4884, V4885, V4886, V4887)) end end end end end, fun (V4888) -> fun (V4889) -> fun (V4890) -> fun (V4891) -> fun (V4892) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4888, V4889, V4890, V4891, V4892)) end end end end end, fun (V4893) -> fun (V4894) -> fun (V4895) -> fun (V4896) -> fun (V4897) -> fun (V4898) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4893, V4894, V4895, V4896, V4897, V4898)) end end end end end end, fun (V4899) -> fun (V4900) -> fun (V4901) -> fun (V4902) -> fun (V4903) -> fun (V4904) -> fun (V4905) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4899, V4900, V4901, V4902, V4903, V4904, V4905)) end end end end end end end}}, V2, V0, V1, V4864, V4, V5, ((begin (V4911 = fun (V4907) -> fun (V4908) -> fun (V4909) -> fun (V4910) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4909, V4910)) end end end end), fun (V4912) -> fun (V4913) -> ((((V4911('erased'))('erased'))(V4912))(V4913)) end end end(fun (V4906) -> ('Idris.Idris2.Builtin':'un--snd'(V4906)) end))(V8)), ((begin (V4919 = fun (V4915) -> fun (V4916) -> fun (V4917) -> fun (V4918) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4917, V4918)) end end end end), fun (V4920) -> fun (V4921) -> ((((V4919('erased'))('erased'))(V4920))(V4921)) end end end(fun (V4914) -> ('Idris.Idris2.Builtin':'un--snd'(V4914)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4864, V4, V5, V6, V4865, V8, {'Core.Value.NApp', V9, V4866, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V4922, V4923} -> case V10 of {'Core.Value.NRef', V4924, V4925} -> begin (V4926 = {'Core.Unify.MkUnifyInfo', V4858, 2}), begin (V4927 = {'Core.Value.NRef', V4922, V4923}), begin (V4928 = {'Core.Value.NRef', V4924, V4925}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4923, V4925)) of 1 -> begin (V4977 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V4934 = begin (V4929 = V0), fun (V4930) -> begin (V4933 = (begin (V4931 = V4929), fun (V4932) -> ('erlang':'get'(V4931)) end end(V4930))), {'Prelude.Types.Right', V4933} end end end), fun (V4935) -> begin (V4936 = (V4934(V4935))), case V4936 of {'Prelude.Types.Left', V4937} -> {'Prelude.Types.Left', V4937}; {'Prelude.Types.Right', V4938} -> (begin (V4976 = begin (V4948 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4939) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4938, V5, V4939)) end, ((begin (V4945 = fun (V4941) -> fun (V4942) -> fun (V4943) -> fun (V4944) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4943, V4944)) end end end end), fun (V4946) -> fun (V4947) -> ((((V4945('erased'))('erased'))(V4946))(V4947)) end end end(fun (V4940) -> ('Idris.Idris2.Builtin':'un--snd'(V4940)) end))(V8)), []))), fun (V4949) -> begin (V4950 = (V4948(V4949))), case V4950 of {'Prelude.Types.Left', V4951} -> {'Prelude.Types.Left', V4951}; {'Prelude.Types.Right', V4952} -> (begin (V4975 = begin (V4962 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4953) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4938, V5, V4953)) end, ((begin (V4959 = fun (V4955) -> fun (V4956) -> fun (V4957) -> fun (V4958) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V4957, V4958)) end end end end), fun (V4960) -> fun (V4961) -> ((((V4959('erased'))('erased'))(V4960))(V4961)) end end end(fun (V4954) -> ('Idris.Idris2.Builtin':'un--snd'(V4954)) end))(V11)), []))), fun (V4963) -> begin (V4964 = (V4962(V4963))), case V4964 of {'Prelude.Types.Left', V4965} -> {'Prelude.Types.Left', V4965}; {'Prelude.Types.Right', V4966} -> (begin (V4974 = fun (V4967) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4968) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4968)) end, fun (V4969) -> fun (V4970) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4969, V4970)) end end}, V4952))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V4971) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4971)) end, fun (V4972) -> fun (V4973) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4972, V4973)) end end}, V4966))/binary>>/binary>>/binary>>} end), V4974 end(V4963)) end end end end), V4975 end(V4949)) end end end end), V4976 end(V4935)) end end end end))), fun (V4978) -> begin (V4979 = (V4977(V4978))), case V4979 of {'Prelude.Types.Left', V4980} -> {'Prelude.Types.Left', V4980}; {'Prelude.Types.Right', V4981} -> (begin (V5037 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V4982) -> fun (V4983) -> fun (V4984) -> fun (V4985) -> fun (V4986) -> fun (V4987) -> fun (V4988) -> fun (V4989) -> ('dn--un--unifyD_Unify_Closure'(V4982, V4983, V4984, V4985, V4986, V4987, V4988, V4989)) end end end end end end end end, fun (V4990) -> fun (V4991) -> fun (V4992) -> fun (V4993) -> fun (V4994) -> fun (V4995) -> fun (V4996) -> fun (V4997) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4990, V4991, V4992, V4993, V4994, V4995, V4996, V4997)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V4998) -> fun (V4999) -> fun (V5000) -> fun (V5001) -> fun (V5002) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4998, V4999, V5000, V5001, V5002)) end end end end end, fun (V5003) -> fun (V5004) -> fun (V5005) -> fun (V5006) -> fun (V5007) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5003, V5004, V5005, V5006, V5007)) end end end end end, fun (V5008) -> fun (V5009) -> fun (V5010) -> fun (V5011) -> fun (V5012) -> fun (V5013) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5008, V5009, V5010, V5011, V5012, V5013)) end end end end end end, fun (V5014) -> fun (V5015) -> fun (V5016) -> fun (V5017) -> fun (V5018) -> fun (V5019) -> fun (V5020) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5014, V5015, V5016, V5017, V5018, V5019, V5020)) end end end end end end end}}, V2, V0, V1, V4926, V4, V5, ((begin (V5026 = fun (V5022) -> fun (V5023) -> fun (V5024) -> fun (V5025) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5024, V5025)) end end end end), fun (V5027) -> fun (V5028) -> ((((V5026('erased'))('erased'))(V5027))(V5028)) end end end(fun (V5021) -> ('Idris.Idris2.Builtin':'un--snd'(V5021)) end))(V8)), ((begin (V5034 = fun (V5030) -> fun (V5031) -> fun (V5032) -> fun (V5033) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5032, V5033)) end end end end), fun (V5035) -> fun (V5036) -> ((((V5034('erased'))('erased'))(V5035))(V5036)) end end end(fun (V5029) -> ('Idris.Idris2.Builtin':'un--snd'(V5029)) end))(V11))))), V5037 end(V4978)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4926, V4, V5, V6, V4927, V8, {'Core.Value.NApp', V9, V4928, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V5038, V5039, V5040} -> case V10 of {'Core.Value.NMeta', V5041, V5042, V5043} -> begin (V5044 = ('un--isDefInvertible'(V0, V4, V5039))), fun (V5045) -> begin (V5046 = (V5044(V5045))), case V5046 of {'Prelude.Types.Left', V5047} -> {'Prelude.Types.Left', V5047}; {'Prelude.Types.Right', V5048} -> (begin (V5121 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V5039, V5042)) of 1 -> case V5048 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5049, V5050} -> V5050 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5051) -> fun (V5052) -> fun (V5053) -> fun (V5054) -> fun (V5055) -> fun (V5056) -> fun (V5057) -> fun (V5058) -> ('dn--un--unifyD_Unify_Closure'(V5051, V5052, V5053, V5054, V5055, V5056, V5057, V5058)) end end end end end end end end, fun (V5059) -> fun (V5060) -> fun (V5061) -> fun (V5062) -> fun (V5063) -> fun (V5064) -> fun (V5065) -> fun (V5066) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5059, V5060, V5061, V5062, V5063, V5064, V5065, V5066)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5067) -> fun (V5068) -> fun (V5069) -> fun (V5070) -> fun (V5071) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5067, V5068, V5069, V5070, V5071)) end end end end end, fun (V5072) -> fun (V5073) -> fun (V5074) -> fun (V5075) -> fun (V5076) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5072, V5073, V5074, V5075, V5076)) end end end end end, fun (V5077) -> fun (V5078) -> fun (V5079) -> fun (V5080) -> fun (V5081) -> fun (V5082) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5077, V5078, V5079, V5080, V5081, V5082)) end end end end end end, fun (V5083) -> fun (V5084) -> fun (V5085) -> fun (V5086) -> fun (V5087) -> fun (V5088) -> fun (V5089) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5083, V5084, V5085, V5086, V5087, V5088, V5089)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5040, ((begin (V5095 = fun (V5091) -> fun (V5092) -> fun (V5093) -> fun (V5094) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5093, V5094)) end end end end), fun (V5096) -> fun (V5097) -> ((((V5095('erased'))('erased'))(V5096))(V5097)) end end end(fun (V5090) -> ('Idris.Idris2.Builtin':'un--snd'(V5090)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5043, ((begin (V5103 = fun (V5099) -> fun (V5100) -> fun (V5101) -> fun (V5102) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5101, V5102)) end end end end), fun (V5104) -> fun (V5105) -> ((((V5103('erased'))('erased'))(V5104))(V5105)) end end end(fun (V5098) -> ('Idris.Idris2.Builtin':'un--snd'(V5098)) end))(V11)))))); 0 -> begin (V5106 = ('nested--14746-23552--in--un--localsIn'(V2, V5040, V5039, V5038, V5043, V5042, V5041, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5040))), fun (V5107) -> begin (V5108 = (V5106(V5107))), case V5108 of {'Prelude.Types.Left', V5109} -> {'Prelude.Types.Left', V5109}; {'Prelude.Types.Right', V5110} -> (begin (V5120 = begin (V5111 = ('nested--14746-23552--in--un--localsIn'(V2, V5040, V5039, V5038, V5043, V5042, V5041, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5043))), fun (V5112) -> begin (V5113 = (V5111(V5112))), case V5113 of {'Prelude.Types.Left', V5114} -> {'Prelude.Types.Left', V5114}; {'Prelude.Types.Right', V5115} -> (begin (V5119 = begin (V5116 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V5110, V5115)) of 1 -> 1; 0 -> case case (V5110 =:= V5115) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V5116 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5117, V5118} -> V5118 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V5040, V5039, V5038, V5043, V5042, V5041, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5038)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V5038, V5039, V5040}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V5041, V5042, V5043}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V5041, V5042, V5043}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V5038, V5039, V5040}, V8})) end end), V5119 end(V5112)) end end end end), V5120 end(V5107)) end end end end end), V5121 end(V5045)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V5038, V5039, V5040}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V5122, V5123, V5124} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5125, V5126} -> V5126 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V5122, V5123, V5124}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V5122, V5123, V5124}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V5127, V5128} -> case V5128 of 3 -> case V7 of {'Core.Value.NRef', V5129, V5130} -> case V10 of {'Core.Value.NRef', V5131, V5132} -> begin (V5133 = {'Core.Unify.MkUnifyInfo', V5127, 3}), begin (V5134 = {'Core.Value.NRef', V5129, V5130}), begin (V5135 = {'Core.Value.NRef', V5131, V5132}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5130, V5132)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5136) -> fun (V5137) -> fun (V5138) -> fun (V5139) -> fun (V5140) -> fun (V5141) -> fun (V5142) -> fun (V5143) -> ('dn--un--unifyD_Unify_Closure'(V5136, V5137, V5138, V5139, V5140, V5141, V5142, V5143)) end end end end end end end end, fun (V5144) -> fun (V5145) -> fun (V5146) -> fun (V5147) -> fun (V5148) -> fun (V5149) -> fun (V5150) -> fun (V5151) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5144, V5145, V5146, V5147, V5148, V5149, V5150, V5151)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5152) -> fun (V5153) -> fun (V5154) -> fun (V5155) -> fun (V5156) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5152, V5153, V5154, V5155, V5156)) end end end end end, fun (V5157) -> fun (V5158) -> fun (V5159) -> fun (V5160) -> fun (V5161) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5157, V5158, V5159, V5160, V5161)) end end end end end, fun (V5162) -> fun (V5163) -> fun (V5164) -> fun (V5165) -> fun (V5166) -> fun (V5167) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5162, V5163, V5164, V5165, V5166, V5167)) end end end end end end, fun (V5168) -> fun (V5169) -> fun (V5170) -> fun (V5171) -> fun (V5172) -> fun (V5173) -> fun (V5174) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5168, V5169, V5170, V5171, V5172, V5173, V5174)) end end end end end end end}}, V2, V0, V1, V5133, V4, V5, ((begin (V5180 = fun (V5176) -> fun (V5177) -> fun (V5178) -> fun (V5179) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5178, V5179)) end end end end), fun (V5181) -> fun (V5182) -> ((((V5180('erased'))('erased'))(V5181))(V5182)) end end end(fun (V5175) -> ('Idris.Idris2.Builtin':'un--snd'(V5175)) end))(V8)), ((begin (V5188 = fun (V5184) -> fun (V5185) -> fun (V5186) -> fun (V5187) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5186, V5187)) end end end end), fun (V5189) -> fun (V5190) -> ((((V5188('erased'))('erased'))(V5189))(V5190)) end end end(fun (V5183) -> ('Idris.Idris2.Builtin':'un--snd'(V5183)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5133, V4, V5, V6, V5134, V8, {'Core.Value.NApp', V9, V5135, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V5191, V5192} -> case V10 of {'Core.Value.NRef', V5193, V5194} -> begin (V5195 = {'Core.Unify.MkUnifyInfo', V5127, 2}), begin (V5196 = {'Core.Value.NRef', V5191, V5192}), begin (V5197 = {'Core.Value.NRef', V5193, V5194}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5192, V5194)) of 1 -> begin (V5246 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V5203 = begin (V5198 = V0), fun (V5199) -> begin (V5202 = (begin (V5200 = V5198), fun (V5201) -> ('erlang':'get'(V5200)) end end(V5199))), {'Prelude.Types.Right', V5202} end end end), fun (V5204) -> begin (V5205 = (V5203(V5204))), case V5205 of {'Prelude.Types.Left', V5206} -> {'Prelude.Types.Left', V5206}; {'Prelude.Types.Right', V5207} -> (begin (V5245 = begin (V5217 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5208) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5207, V5, V5208)) end, ((begin (V5214 = fun (V5210) -> fun (V5211) -> fun (V5212) -> fun (V5213) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5212, V5213)) end end end end), fun (V5215) -> fun (V5216) -> ((((V5214('erased'))('erased'))(V5215))(V5216)) end end end(fun (V5209) -> ('Idris.Idris2.Builtin':'un--snd'(V5209)) end))(V8)), []))), fun (V5218) -> begin (V5219 = (V5217(V5218))), case V5219 of {'Prelude.Types.Left', V5220} -> {'Prelude.Types.Left', V5220}; {'Prelude.Types.Right', V5221} -> (begin (V5244 = begin (V5231 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5222) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5207, V5, V5222)) end, ((begin (V5228 = fun (V5224) -> fun (V5225) -> fun (V5226) -> fun (V5227) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5226, V5227)) end end end end), fun (V5229) -> fun (V5230) -> ((((V5228('erased'))('erased'))(V5229))(V5230)) end end end(fun (V5223) -> ('Idris.Idris2.Builtin':'un--snd'(V5223)) end))(V11)), []))), fun (V5232) -> begin (V5233 = (V5231(V5232))), case V5233 of {'Prelude.Types.Left', V5234} -> {'Prelude.Types.Left', V5234}; {'Prelude.Types.Right', V5235} -> (begin (V5243 = fun (V5236) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5237) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5237)) end, fun (V5238) -> fun (V5239) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5238, V5239)) end end}, V5221))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5240) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5240)) end, fun (V5241) -> fun (V5242) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5241, V5242)) end end}, V5235))/binary>>/binary>>/binary>>} end), V5243 end(V5232)) end end end end), V5244 end(V5218)) end end end end), V5245 end(V5204)) end end end end))), fun (V5247) -> begin (V5248 = (V5246(V5247))), case V5248 of {'Prelude.Types.Left', V5249} -> {'Prelude.Types.Left', V5249}; {'Prelude.Types.Right', V5250} -> (begin (V5306 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5251) -> fun (V5252) -> fun (V5253) -> fun (V5254) -> fun (V5255) -> fun (V5256) -> fun (V5257) -> fun (V5258) -> ('dn--un--unifyD_Unify_Closure'(V5251, V5252, V5253, V5254, V5255, V5256, V5257, V5258)) end end end end end end end end, fun (V5259) -> fun (V5260) -> fun (V5261) -> fun (V5262) -> fun (V5263) -> fun (V5264) -> fun (V5265) -> fun (V5266) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5259, V5260, V5261, V5262, V5263, V5264, V5265, V5266)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5267) -> fun (V5268) -> fun (V5269) -> fun (V5270) -> fun (V5271) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5267, V5268, V5269, V5270, V5271)) end end end end end, fun (V5272) -> fun (V5273) -> fun (V5274) -> fun (V5275) -> fun (V5276) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5272, V5273, V5274, V5275, V5276)) end end end end end, fun (V5277) -> fun (V5278) -> fun (V5279) -> fun (V5280) -> fun (V5281) -> fun (V5282) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5277, V5278, V5279, V5280, V5281, V5282)) end end end end end end, fun (V5283) -> fun (V5284) -> fun (V5285) -> fun (V5286) -> fun (V5287) -> fun (V5288) -> fun (V5289) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5283, V5284, V5285, V5286, V5287, V5288, V5289)) end end end end end end end}}, V2, V0, V1, V5195, V4, V5, ((begin (V5295 = fun (V5291) -> fun (V5292) -> fun (V5293) -> fun (V5294) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5293, V5294)) end end end end), fun (V5296) -> fun (V5297) -> ((((V5295('erased'))('erased'))(V5296))(V5297)) end end end(fun (V5290) -> ('Idris.Idris2.Builtin':'un--snd'(V5290)) end))(V8)), ((begin (V5303 = fun (V5299) -> fun (V5300) -> fun (V5301) -> fun (V5302) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5301, V5302)) end end end end), fun (V5304) -> fun (V5305) -> ((((V5303('erased'))('erased'))(V5304))(V5305)) end end end(fun (V5298) -> ('Idris.Idris2.Builtin':'un--snd'(V5298)) end))(V11))))), V5306 end(V5247)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5195, V4, V5, V6, V5196, V8, {'Core.Value.NApp', V9, V5197, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V5307, V5308} -> case V10 of {'Core.Value.NLocal', V5309, V5310} -> begin (V5311 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V5312) -> begin (V5313 = (V5311(V5312))), case V5313 of {'Prelude.Types.Left', V5314} -> {'Prelude.Types.Left', V5314}; {'Prelude.Types.Right', V5315} -> (begin (V5316 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V5307, V5308}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V5309, V5310}, V11}))), V5316 end(V5312)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V5317, V5318, V5319} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5320, V5321} -> V5321 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V5317, V5318, V5319}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V5317, V5318, V5319}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V5322, V5323} -> case V5323 of 3 -> case V7 of {'Core.Value.NRef', V5324, V5325} -> case V10 of {'Core.Value.NRef', V5326, V5327} -> begin (V5328 = {'Core.Unify.MkUnifyInfo', V5322, 3}), begin (V5329 = {'Core.Value.NRef', V5324, V5325}), begin (V5330 = {'Core.Value.NRef', V5326, V5327}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5325, V5327)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5331) -> fun (V5332) -> fun (V5333) -> fun (V5334) -> fun (V5335) -> fun (V5336) -> fun (V5337) -> fun (V5338) -> ('dn--un--unifyD_Unify_Closure'(V5331, V5332, V5333, V5334, V5335, V5336, V5337, V5338)) end end end end end end end end, fun (V5339) -> fun (V5340) -> fun (V5341) -> fun (V5342) -> fun (V5343) -> fun (V5344) -> fun (V5345) -> fun (V5346) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5339, V5340, V5341, V5342, V5343, V5344, V5345, V5346)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5347) -> fun (V5348) -> fun (V5349) -> fun (V5350) -> fun (V5351) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5347, V5348, V5349, V5350, V5351)) end end end end end, fun (V5352) -> fun (V5353) -> fun (V5354) -> fun (V5355) -> fun (V5356) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5352, V5353, V5354, V5355, V5356)) end end end end end, fun (V5357) -> fun (V5358) -> fun (V5359) -> fun (V5360) -> fun (V5361) -> fun (V5362) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5357, V5358, V5359, V5360, V5361, V5362)) end end end end end end, fun (V5363) -> fun (V5364) -> fun (V5365) -> fun (V5366) -> fun (V5367) -> fun (V5368) -> fun (V5369) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5363, V5364, V5365, V5366, V5367, V5368, V5369)) end end end end end end end}}, V2, V0, V1, V5328, V4, V5, ((begin (V5375 = fun (V5371) -> fun (V5372) -> fun (V5373) -> fun (V5374) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5373, V5374)) end end end end), fun (V5376) -> fun (V5377) -> ((((V5375('erased'))('erased'))(V5376))(V5377)) end end end(fun (V5370) -> ('Idris.Idris2.Builtin':'un--snd'(V5370)) end))(V8)), ((begin (V5383 = fun (V5379) -> fun (V5380) -> fun (V5381) -> fun (V5382) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5381, V5382)) end end end end), fun (V5384) -> fun (V5385) -> ((((V5383('erased'))('erased'))(V5384))(V5385)) end end end(fun (V5378) -> ('Idris.Idris2.Builtin':'un--snd'(V5378)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5328, V4, V5, V6, V5329, V8, {'Core.Value.NApp', V9, V5330, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V5386, V5387} -> case V10 of {'Core.Value.NRef', V5388, V5389} -> begin (V5390 = {'Core.Unify.MkUnifyInfo', V5322, 2}), begin (V5391 = {'Core.Value.NRef', V5386, V5387}), begin (V5392 = {'Core.Value.NRef', V5388, V5389}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5387, V5389)) of 1 -> begin (V5441 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V5398 = begin (V5393 = V0), fun (V5394) -> begin (V5397 = (begin (V5395 = V5393), fun (V5396) -> ('erlang':'get'(V5395)) end end(V5394))), {'Prelude.Types.Right', V5397} end end end), fun (V5399) -> begin (V5400 = (V5398(V5399))), case V5400 of {'Prelude.Types.Left', V5401} -> {'Prelude.Types.Left', V5401}; {'Prelude.Types.Right', V5402} -> (begin (V5440 = begin (V5412 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5403) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5402, V5, V5403)) end, ((begin (V5409 = fun (V5405) -> fun (V5406) -> fun (V5407) -> fun (V5408) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5407, V5408)) end end end end), fun (V5410) -> fun (V5411) -> ((((V5409('erased'))('erased'))(V5410))(V5411)) end end end(fun (V5404) -> ('Idris.Idris2.Builtin':'un--snd'(V5404)) end))(V8)), []))), fun (V5413) -> begin (V5414 = (V5412(V5413))), case V5414 of {'Prelude.Types.Left', V5415} -> {'Prelude.Types.Left', V5415}; {'Prelude.Types.Right', V5416} -> (begin (V5439 = begin (V5426 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5417) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5402, V5, V5417)) end, ((begin (V5423 = fun (V5419) -> fun (V5420) -> fun (V5421) -> fun (V5422) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5421, V5422)) end end end end), fun (V5424) -> fun (V5425) -> ((((V5423('erased'))('erased'))(V5424))(V5425)) end end end(fun (V5418) -> ('Idris.Idris2.Builtin':'un--snd'(V5418)) end))(V11)), []))), fun (V5427) -> begin (V5428 = (V5426(V5427))), case V5428 of {'Prelude.Types.Left', V5429} -> {'Prelude.Types.Left', V5429}; {'Prelude.Types.Right', V5430} -> (begin (V5438 = fun (V5431) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5432) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5432)) end, fun (V5433) -> fun (V5434) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5433, V5434)) end end}, V5416))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5435) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5435)) end, fun (V5436) -> fun (V5437) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5436, V5437)) end end}, V5430))/binary>>/binary>>/binary>>} end), V5438 end(V5427)) end end end end), V5439 end(V5413)) end end end end), V5440 end(V5399)) end end end end))), fun (V5442) -> begin (V5443 = (V5441(V5442))), case V5443 of {'Prelude.Types.Left', V5444} -> {'Prelude.Types.Left', V5444}; {'Prelude.Types.Right', V5445} -> (begin (V5501 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5446) -> fun (V5447) -> fun (V5448) -> fun (V5449) -> fun (V5450) -> fun (V5451) -> fun (V5452) -> fun (V5453) -> ('dn--un--unifyD_Unify_Closure'(V5446, V5447, V5448, V5449, V5450, V5451, V5452, V5453)) end end end end end end end end, fun (V5454) -> fun (V5455) -> fun (V5456) -> fun (V5457) -> fun (V5458) -> fun (V5459) -> fun (V5460) -> fun (V5461) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5454, V5455, V5456, V5457, V5458, V5459, V5460, V5461)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5462) -> fun (V5463) -> fun (V5464) -> fun (V5465) -> fun (V5466) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5462, V5463, V5464, V5465, V5466)) end end end end end, fun (V5467) -> fun (V5468) -> fun (V5469) -> fun (V5470) -> fun (V5471) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5467, V5468, V5469, V5470, V5471)) end end end end end, fun (V5472) -> fun (V5473) -> fun (V5474) -> fun (V5475) -> fun (V5476) -> fun (V5477) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5472, V5473, V5474, V5475, V5476, V5477)) end end end end end end, fun (V5478) -> fun (V5479) -> fun (V5480) -> fun (V5481) -> fun (V5482) -> fun (V5483) -> fun (V5484) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5478, V5479, V5480, V5481, V5482, V5483, V5484)) end end end end end end end}}, V2, V0, V1, V5390, V4, V5, ((begin (V5490 = fun (V5486) -> fun (V5487) -> fun (V5488) -> fun (V5489) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5488, V5489)) end end end end), fun (V5491) -> fun (V5492) -> ((((V5490('erased'))('erased'))(V5491))(V5492)) end end end(fun (V5485) -> ('Idris.Idris2.Builtin':'un--snd'(V5485)) end))(V8)), ((begin (V5498 = fun (V5494) -> fun (V5495) -> fun (V5496) -> fun (V5497) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5496, V5497)) end end end end), fun (V5499) -> fun (V5500) -> ((((V5498('erased'))('erased'))(V5499))(V5500)) end end end(fun (V5493) -> ('Idris.Idris2.Builtin':'un--snd'(V5493)) end))(V11))))), V5501 end(V5442)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5390, V4, V5, V6, V5391, V8, {'Core.Value.NApp', V9, V5392, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V5502, V5503, V5504} -> case V10 of {'Core.Value.NMeta', V5505, V5506, V5507} -> begin (V5508 = ('un--isDefInvertible'(V0, V4, V5503))), fun (V5509) -> begin (V5510 = (V5508(V5509))), case V5510 of {'Prelude.Types.Left', V5511} -> {'Prelude.Types.Left', V5511}; {'Prelude.Types.Right', V5512} -> (begin (V5585 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V5503, V5506)) of 1 -> case V5512 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5513, V5514} -> V5514 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5515) -> fun (V5516) -> fun (V5517) -> fun (V5518) -> fun (V5519) -> fun (V5520) -> fun (V5521) -> fun (V5522) -> ('dn--un--unifyD_Unify_Closure'(V5515, V5516, V5517, V5518, V5519, V5520, V5521, V5522)) end end end end end end end end, fun (V5523) -> fun (V5524) -> fun (V5525) -> fun (V5526) -> fun (V5527) -> fun (V5528) -> fun (V5529) -> fun (V5530) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5523, V5524, V5525, V5526, V5527, V5528, V5529, V5530)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5531) -> fun (V5532) -> fun (V5533) -> fun (V5534) -> fun (V5535) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5531, V5532, V5533, V5534, V5535)) end end end end end, fun (V5536) -> fun (V5537) -> fun (V5538) -> fun (V5539) -> fun (V5540) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5536, V5537, V5538, V5539, V5540)) end end end end end, fun (V5541) -> fun (V5542) -> fun (V5543) -> fun (V5544) -> fun (V5545) -> fun (V5546) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5541, V5542, V5543, V5544, V5545, V5546)) end end end end end end, fun (V5547) -> fun (V5548) -> fun (V5549) -> fun (V5550) -> fun (V5551) -> fun (V5552) -> fun (V5553) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5547, V5548, V5549, V5550, V5551, V5552, V5553)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5504, ((begin (V5559 = fun (V5555) -> fun (V5556) -> fun (V5557) -> fun (V5558) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5557, V5558)) end end end end), fun (V5560) -> fun (V5561) -> ((((V5559('erased'))('erased'))(V5560))(V5561)) end end end(fun (V5554) -> ('Idris.Idris2.Builtin':'un--snd'(V5554)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5507, ((begin (V5567 = fun (V5563) -> fun (V5564) -> fun (V5565) -> fun (V5566) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5565, V5566)) end end end end), fun (V5568) -> fun (V5569) -> ((((V5567('erased'))('erased'))(V5568))(V5569)) end end end(fun (V5562) -> ('Idris.Idris2.Builtin':'un--snd'(V5562)) end))(V11)))))); 0 -> begin (V5570 = ('nested--14746-23552--in--un--localsIn'(V2, V5504, V5503, V5502, V5507, V5506, V5505, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5504))), fun (V5571) -> begin (V5572 = (V5570(V5571))), case V5572 of {'Prelude.Types.Left', V5573} -> {'Prelude.Types.Left', V5573}; {'Prelude.Types.Right', V5574} -> (begin (V5584 = begin (V5575 = ('nested--14746-23552--in--un--localsIn'(V2, V5504, V5503, V5502, V5507, V5506, V5505, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5507))), fun (V5576) -> begin (V5577 = (V5575(V5576))), case V5577 of {'Prelude.Types.Left', V5578} -> {'Prelude.Types.Left', V5578}; {'Prelude.Types.Right', V5579} -> (begin (V5583 = begin (V5580 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V5574, V5579)) of 1 -> 1; 0 -> case case (V5574 =:= V5579) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V5580 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5581, V5582} -> V5582 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V5504, V5503, V5502, V5507, V5506, V5505, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5502)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V5502, V5503, V5504}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V5505, V5506, V5507}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V5505, V5506, V5507}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V5502, V5503, V5504}, V8})) end end), V5583 end(V5576)) end end end end), V5584 end(V5571)) end end end end end), V5585 end(V5509)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V5502, V5503, V5504}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V5586, V5587, V5588} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5589, V5590} -> V5590 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V5586, V5587, V5588}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V5586, V5587, V5588}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V5591, V5592} -> case V5592 of 3 -> case V7 of {'Core.Value.NRef', V5593, V5594} -> case V10 of {'Core.Value.NRef', V5595, V5596} -> begin (V5597 = {'Core.Unify.MkUnifyInfo', V5591, 3}), begin (V5598 = {'Core.Value.NRef', V5593, V5594}), begin (V5599 = {'Core.Value.NRef', V5595, V5596}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5594, V5596)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5600) -> fun (V5601) -> fun (V5602) -> fun (V5603) -> fun (V5604) -> fun (V5605) -> fun (V5606) -> fun (V5607) -> ('dn--un--unifyD_Unify_Closure'(V5600, V5601, V5602, V5603, V5604, V5605, V5606, V5607)) end end end end end end end end, fun (V5608) -> fun (V5609) -> fun (V5610) -> fun (V5611) -> fun (V5612) -> fun (V5613) -> fun (V5614) -> fun (V5615) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5608, V5609, V5610, V5611, V5612, V5613, V5614, V5615)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5616) -> fun (V5617) -> fun (V5618) -> fun (V5619) -> fun (V5620) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5616, V5617, V5618, V5619, V5620)) end end end end end, fun (V5621) -> fun (V5622) -> fun (V5623) -> fun (V5624) -> fun (V5625) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5621, V5622, V5623, V5624, V5625)) end end end end end, fun (V5626) -> fun (V5627) -> fun (V5628) -> fun (V5629) -> fun (V5630) -> fun (V5631) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5626, V5627, V5628, V5629, V5630, V5631)) end end end end end end, fun (V5632) -> fun (V5633) -> fun (V5634) -> fun (V5635) -> fun (V5636) -> fun (V5637) -> fun (V5638) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5632, V5633, V5634, V5635, V5636, V5637, V5638)) end end end end end end end}}, V2, V0, V1, V5597, V4, V5, ((begin (V5644 = fun (V5640) -> fun (V5641) -> fun (V5642) -> fun (V5643) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5642, V5643)) end end end end), fun (V5645) -> fun (V5646) -> ((((V5644('erased'))('erased'))(V5645))(V5646)) end end end(fun (V5639) -> ('Idris.Idris2.Builtin':'un--snd'(V5639)) end))(V8)), ((begin (V5652 = fun (V5648) -> fun (V5649) -> fun (V5650) -> fun (V5651) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5650, V5651)) end end end end), fun (V5653) -> fun (V5654) -> ((((V5652('erased'))('erased'))(V5653))(V5654)) end end end(fun (V5647) -> ('Idris.Idris2.Builtin':'un--snd'(V5647)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5597, V4, V5, V6, V5598, V8, {'Core.Value.NApp', V9, V5599, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V5655, V5656} -> case V10 of {'Core.Value.NRef', V5657, V5658} -> begin (V5659 = {'Core.Unify.MkUnifyInfo', V5591, 2}), begin (V5660 = {'Core.Value.NRef', V5655, V5656}), begin (V5661 = {'Core.Value.NRef', V5657, V5658}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5656, V5658)) of 1 -> begin (V5710 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V5667 = begin (V5662 = V0), fun (V5663) -> begin (V5666 = (begin (V5664 = V5662), fun (V5665) -> ('erlang':'get'(V5664)) end end(V5663))), {'Prelude.Types.Right', V5666} end end end), fun (V5668) -> begin (V5669 = (V5667(V5668))), case V5669 of {'Prelude.Types.Left', V5670} -> {'Prelude.Types.Left', V5670}; {'Prelude.Types.Right', V5671} -> (begin (V5709 = begin (V5681 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5672) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5671, V5, V5672)) end, ((begin (V5678 = fun (V5674) -> fun (V5675) -> fun (V5676) -> fun (V5677) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5676, V5677)) end end end end), fun (V5679) -> fun (V5680) -> ((((V5678('erased'))('erased'))(V5679))(V5680)) end end end(fun (V5673) -> ('Idris.Idris2.Builtin':'un--snd'(V5673)) end))(V8)), []))), fun (V5682) -> begin (V5683 = (V5681(V5682))), case V5683 of {'Prelude.Types.Left', V5684} -> {'Prelude.Types.Left', V5684}; {'Prelude.Types.Right', V5685} -> (begin (V5708 = begin (V5695 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5686) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5671, V5, V5686)) end, ((begin (V5692 = fun (V5688) -> fun (V5689) -> fun (V5690) -> fun (V5691) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5690, V5691)) end end end end), fun (V5693) -> fun (V5694) -> ((((V5692('erased'))('erased'))(V5693))(V5694)) end end end(fun (V5687) -> ('Idris.Idris2.Builtin':'un--snd'(V5687)) end))(V11)), []))), fun (V5696) -> begin (V5697 = (V5695(V5696))), case V5697 of {'Prelude.Types.Left', V5698} -> {'Prelude.Types.Left', V5698}; {'Prelude.Types.Right', V5699} -> (begin (V5707 = fun (V5700) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5701) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5701)) end, fun (V5702) -> fun (V5703) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5702, V5703)) end end}, V5685))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5704) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5704)) end, fun (V5705) -> fun (V5706) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5705, V5706)) end end}, V5699))/binary>>/binary>>/binary>>} end), V5707 end(V5696)) end end end end), V5708 end(V5682)) end end end end), V5709 end(V5668)) end end end end))), fun (V5711) -> begin (V5712 = (V5710(V5711))), case V5712 of {'Prelude.Types.Left', V5713} -> {'Prelude.Types.Left', V5713}; {'Prelude.Types.Right', V5714} -> (begin (V5770 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5715) -> fun (V5716) -> fun (V5717) -> fun (V5718) -> fun (V5719) -> fun (V5720) -> fun (V5721) -> fun (V5722) -> ('dn--un--unifyD_Unify_Closure'(V5715, V5716, V5717, V5718, V5719, V5720, V5721, V5722)) end end end end end end end end, fun (V5723) -> fun (V5724) -> fun (V5725) -> fun (V5726) -> fun (V5727) -> fun (V5728) -> fun (V5729) -> fun (V5730) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5723, V5724, V5725, V5726, V5727, V5728, V5729, V5730)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5731) -> fun (V5732) -> fun (V5733) -> fun (V5734) -> fun (V5735) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5731, V5732, V5733, V5734, V5735)) end end end end end, fun (V5736) -> fun (V5737) -> fun (V5738) -> fun (V5739) -> fun (V5740) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5736, V5737, V5738, V5739, V5740)) end end end end end, fun (V5741) -> fun (V5742) -> fun (V5743) -> fun (V5744) -> fun (V5745) -> fun (V5746) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5741, V5742, V5743, V5744, V5745, V5746)) end end end end end end, fun (V5747) -> fun (V5748) -> fun (V5749) -> fun (V5750) -> fun (V5751) -> fun (V5752) -> fun (V5753) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5747, V5748, V5749, V5750, V5751, V5752, V5753)) end end end end end end end}}, V2, V0, V1, V5659, V4, V5, ((begin (V5759 = fun (V5755) -> fun (V5756) -> fun (V5757) -> fun (V5758) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5757, V5758)) end end end end), fun (V5760) -> fun (V5761) -> ((((V5759('erased'))('erased'))(V5760))(V5761)) end end end(fun (V5754) -> ('Idris.Idris2.Builtin':'un--snd'(V5754)) end))(V8)), ((begin (V5767 = fun (V5763) -> fun (V5764) -> fun (V5765) -> fun (V5766) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5765, V5766)) end end end end), fun (V5768) -> fun (V5769) -> ((((V5767('erased'))('erased'))(V5768))(V5769)) end end end(fun (V5762) -> ('Idris.Idris2.Builtin':'un--snd'(V5762)) end))(V11))))), V5770 end(V5711)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5659, V4, V5, V6, V5660, V8, {'Core.Value.NApp', V9, V5661, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V5771, V5772} -> case V5772 of 1 -> case V7 of {'Core.Value.NLocal', V5773, V5774} -> case V10 of {'Core.Value.NLocal', V5775, V5776} -> begin (V5777 = {'Core.Unify.MkUnifyInfo', V5771, 1}), case case (V5774 =:= V5776) of 'false' -> 0; _ -> 1 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5778) -> fun (V5779) -> fun (V5780) -> fun (V5781) -> fun (V5782) -> fun (V5783) -> fun (V5784) -> fun (V5785) -> ('dn--un--unifyD_Unify_Closure'(V5778, V5779, V5780, V5781, V5782, V5783, V5784, V5785)) end end end end end end end end, fun (V5786) -> fun (V5787) -> fun (V5788) -> fun (V5789) -> fun (V5790) -> fun (V5791) -> fun (V5792) -> fun (V5793) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5786, V5787, V5788, V5789, V5790, V5791, V5792, V5793)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5794) -> fun (V5795) -> fun (V5796) -> fun (V5797) -> fun (V5798) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5794, V5795, V5796, V5797, V5798)) end end end end end, fun (V5799) -> fun (V5800) -> fun (V5801) -> fun (V5802) -> fun (V5803) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5799, V5800, V5801, V5802, V5803)) end end end end end, fun (V5804) -> fun (V5805) -> fun (V5806) -> fun (V5807) -> fun (V5808) -> fun (V5809) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5804, V5805, V5806, V5807, V5808, V5809)) end end end end end end, fun (V5810) -> fun (V5811) -> fun (V5812) -> fun (V5813) -> fun (V5814) -> fun (V5815) -> fun (V5816) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5810, V5811, V5812, V5813, V5814, V5815, V5816)) end end end end end end end}}, V2, V0, V1, V5777, V4, V5, ((begin (V5822 = fun (V5818) -> fun (V5819) -> fun (V5820) -> fun (V5821) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5820, V5821)) end end end end), fun (V5823) -> fun (V5824) -> ((((V5822('erased'))('erased'))(V5823))(V5824)) end end end(fun (V5817) -> ('Idris.Idris2.Builtin':'un--snd'(V5817)) end))(V8)), ((begin (V5830 = fun (V5826) -> fun (V5827) -> fun (V5828) -> fun (V5829) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5828, V5829)) end end end end), fun (V5831) -> fun (V5832) -> ((((V5830('erased'))('erased'))(V5831))(V5832)) end end end(fun (V5825) -> ('Idris.Idris2.Builtin':'un--snd'(V5825)) end))(V11)))); 0 -> ('un--postpone'(V2, V0, V1, V4, V5777, <<"Postponing local app"/utf8>>, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V5773, V5774}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V5775, V5776}, V11})) end end; _ -> case V7 of {'Core.Value.NLocal', V5833, V5834} -> case V10 of {'Core.Value.NLocal', V5835, V5836} -> begin (V5837 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V5838) -> begin (V5839 = (V5837(V5838))), case V5839 of {'Prelude.Types.Left', V5840} -> {'Prelude.Types.Left', V5840}; {'Prelude.Types.Right', V5841} -> (begin (V5842 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V5833, V5834}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V5835, V5836}, V11}))), V5842 end(V5838)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V5843, V5844, V5845} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V5846, V5847} -> V5847 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V5843, V5844, V5845}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V5843, V5844, V5845}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V5848, V5849} -> case V5849 of 3 -> case V7 of {'Core.Value.NRef', V5850, V5851} -> case V10 of {'Core.Value.NRef', V5852, V5853} -> begin (V5854 = {'Core.Unify.MkUnifyInfo', V5848, 3}), begin (V5855 = {'Core.Value.NRef', V5850, V5851}), begin (V5856 = {'Core.Value.NRef', V5852, V5853}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5851, V5853)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5857) -> fun (V5858) -> fun (V5859) -> fun (V5860) -> fun (V5861) -> fun (V5862) -> fun (V5863) -> fun (V5864) -> ('dn--un--unifyD_Unify_Closure'(V5857, V5858, V5859, V5860, V5861, V5862, V5863, V5864)) end end end end end end end end, fun (V5865) -> fun (V5866) -> fun (V5867) -> fun (V5868) -> fun (V5869) -> fun (V5870) -> fun (V5871) -> fun (V5872) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5865, V5866, V5867, V5868, V5869, V5870, V5871, V5872)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5873) -> fun (V5874) -> fun (V5875) -> fun (V5876) -> fun (V5877) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5873, V5874, V5875, V5876, V5877)) end end end end end, fun (V5878) -> fun (V5879) -> fun (V5880) -> fun (V5881) -> fun (V5882) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5878, V5879, V5880, V5881, V5882)) end end end end end, fun (V5883) -> fun (V5884) -> fun (V5885) -> fun (V5886) -> fun (V5887) -> fun (V5888) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5883, V5884, V5885, V5886, V5887, V5888)) end end end end end end, fun (V5889) -> fun (V5890) -> fun (V5891) -> fun (V5892) -> fun (V5893) -> fun (V5894) -> fun (V5895) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5889, V5890, V5891, V5892, V5893, V5894, V5895)) end end end end end end end}}, V2, V0, V1, V5854, V4, V5, ((begin (V5901 = fun (V5897) -> fun (V5898) -> fun (V5899) -> fun (V5900) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5899, V5900)) end end end end), fun (V5902) -> fun (V5903) -> ((((V5901('erased'))('erased'))(V5902))(V5903)) end end end(fun (V5896) -> ('Idris.Idris2.Builtin':'un--snd'(V5896)) end))(V8)), ((begin (V5909 = fun (V5905) -> fun (V5906) -> fun (V5907) -> fun (V5908) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5907, V5908)) end end end end), fun (V5910) -> fun (V5911) -> ((((V5909('erased'))('erased'))(V5910))(V5911)) end end end(fun (V5904) -> ('Idris.Idris2.Builtin':'un--snd'(V5904)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5854, V4, V5, V6, V5855, V8, {'Core.Value.NApp', V9, V5856, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V5912, V5913} -> case V10 of {'Core.Value.NRef', V5914, V5915} -> begin (V5916 = {'Core.Unify.MkUnifyInfo', V5848, 2}), begin (V5917 = {'Core.Value.NRef', V5912, V5913}), begin (V5918 = {'Core.Value.NRef', V5914, V5915}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5913, V5915)) of 1 -> begin (V5967 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V5924 = begin (V5919 = V0), fun (V5920) -> begin (V5923 = (begin (V5921 = V5919), fun (V5922) -> ('erlang':'get'(V5921)) end end(V5920))), {'Prelude.Types.Right', V5923} end end end), fun (V5925) -> begin (V5926 = (V5924(V5925))), case V5926 of {'Prelude.Types.Left', V5927} -> {'Prelude.Types.Left', V5927}; {'Prelude.Types.Right', V5928} -> (begin (V5966 = begin (V5938 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5929) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5928, V5, V5929)) end, ((begin (V5935 = fun (V5931) -> fun (V5932) -> fun (V5933) -> fun (V5934) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5933, V5934)) end end end end), fun (V5936) -> fun (V5937) -> ((((V5935('erased'))('erased'))(V5936))(V5937)) end end end(fun (V5930) -> ('Idris.Idris2.Builtin':'un--snd'(V5930)) end))(V8)), []))), fun (V5939) -> begin (V5940 = (V5938(V5939))), case V5940 of {'Prelude.Types.Left', V5941} -> {'Prelude.Types.Left', V5941}; {'Prelude.Types.Right', V5942} -> (begin (V5965 = begin (V5952 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5943) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5928, V5, V5943)) end, ((begin (V5949 = fun (V5945) -> fun (V5946) -> fun (V5947) -> fun (V5948) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V5947, V5948)) end end end end), fun (V5950) -> fun (V5951) -> ((((V5949('erased'))('erased'))(V5950))(V5951)) end end end(fun (V5944) -> ('Idris.Idris2.Builtin':'un--snd'(V5944)) end))(V11)), []))), fun (V5953) -> begin (V5954 = (V5952(V5953))), case V5954 of {'Prelude.Types.Left', V5955} -> {'Prelude.Types.Left', V5955}; {'Prelude.Types.Right', V5956} -> (begin (V5964 = fun (V5957) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5958) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5958)) end, fun (V5959) -> fun (V5960) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5959, V5960)) end end}, V5942))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V5961) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5961)) end, fun (V5962) -> fun (V5963) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5962, V5963)) end end}, V5956))/binary>>/binary>>/binary>>} end), V5964 end(V5953)) end end end end), V5965 end(V5939)) end end end end), V5966 end(V5925)) end end end end))), fun (V5968) -> begin (V5969 = (V5967(V5968))), case V5969 of {'Prelude.Types.Left', V5970} -> {'Prelude.Types.Left', V5970}; {'Prelude.Types.Right', V5971} -> (begin (V6027 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V5972) -> fun (V5973) -> fun (V5974) -> fun (V5975) -> fun (V5976) -> fun (V5977) -> fun (V5978) -> fun (V5979) -> ('dn--un--unifyD_Unify_Closure'(V5972, V5973, V5974, V5975, V5976, V5977, V5978, V5979)) end end end end end end end end, fun (V5980) -> fun (V5981) -> fun (V5982) -> fun (V5983) -> fun (V5984) -> fun (V5985) -> fun (V5986) -> fun (V5987) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5980, V5981, V5982, V5983, V5984, V5985, V5986, V5987)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V5988) -> fun (V5989) -> fun (V5990) -> fun (V5991) -> fun (V5992) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5988, V5989, V5990, V5991, V5992)) end end end end end, fun (V5993) -> fun (V5994) -> fun (V5995) -> fun (V5996) -> fun (V5997) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5993, V5994, V5995, V5996, V5997)) end end end end end, fun (V5998) -> fun (V5999) -> fun (V6000) -> fun (V6001) -> fun (V6002) -> fun (V6003) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5998, V5999, V6000, V6001, V6002, V6003)) end end end end end end, fun (V6004) -> fun (V6005) -> fun (V6006) -> fun (V6007) -> fun (V6008) -> fun (V6009) -> fun (V6010) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6004, V6005, V6006, V6007, V6008, V6009, V6010)) end end end end end end end}}, V2, V0, V1, V5916, V4, V5, ((begin (V6016 = fun (V6012) -> fun (V6013) -> fun (V6014) -> fun (V6015) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6014, V6015)) end end end end), fun (V6017) -> fun (V6018) -> ((((V6016('erased'))('erased'))(V6017))(V6018)) end end end(fun (V6011) -> ('Idris.Idris2.Builtin':'un--snd'(V6011)) end))(V8)), ((begin (V6024 = fun (V6020) -> fun (V6021) -> fun (V6022) -> fun (V6023) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6022, V6023)) end end end end), fun (V6025) -> fun (V6026) -> ((((V6024('erased'))('erased'))(V6025))(V6026)) end end end(fun (V6019) -> ('Idris.Idris2.Builtin':'un--snd'(V6019)) end))(V11))))), V6027 end(V5968)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5916, V4, V5, V6, V5917, V8, {'Core.Value.NApp', V9, V5918, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V6028, V6029, V6030} -> case V10 of {'Core.Value.NMeta', V6031, V6032, V6033} -> begin (V6034 = ('un--isDefInvertible'(V0, V4, V6029))), fun (V6035) -> begin (V6036 = (V6034(V6035))), case V6036 of {'Prelude.Types.Left', V6037} -> {'Prelude.Types.Left', V6037}; {'Prelude.Types.Right', V6038} -> (begin (V6111 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V6029, V6032)) of 1 -> case V6038 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6039, V6040} -> V6040 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6041) -> fun (V6042) -> fun (V6043) -> fun (V6044) -> fun (V6045) -> fun (V6046) -> fun (V6047) -> fun (V6048) -> ('dn--un--unifyD_Unify_Closure'(V6041, V6042, V6043, V6044, V6045, V6046, V6047, V6048)) end end end end end end end end, fun (V6049) -> fun (V6050) -> fun (V6051) -> fun (V6052) -> fun (V6053) -> fun (V6054) -> fun (V6055) -> fun (V6056) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6049, V6050, V6051, V6052, V6053, V6054, V6055, V6056)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6057) -> fun (V6058) -> fun (V6059) -> fun (V6060) -> fun (V6061) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6057, V6058, V6059, V6060, V6061)) end end end end end, fun (V6062) -> fun (V6063) -> fun (V6064) -> fun (V6065) -> fun (V6066) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6062, V6063, V6064, V6065, V6066)) end end end end end, fun (V6067) -> fun (V6068) -> fun (V6069) -> fun (V6070) -> fun (V6071) -> fun (V6072) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6067, V6068, V6069, V6070, V6071, V6072)) end end end end end end, fun (V6073) -> fun (V6074) -> fun (V6075) -> fun (V6076) -> fun (V6077) -> fun (V6078) -> fun (V6079) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6073, V6074, V6075, V6076, V6077, V6078, V6079)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6030, ((begin (V6085 = fun (V6081) -> fun (V6082) -> fun (V6083) -> fun (V6084) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6083, V6084)) end end end end), fun (V6086) -> fun (V6087) -> ((((V6085('erased'))('erased'))(V6086))(V6087)) end end end(fun (V6080) -> ('Idris.Idris2.Builtin':'un--snd'(V6080)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6033, ((begin (V6093 = fun (V6089) -> fun (V6090) -> fun (V6091) -> fun (V6092) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6091, V6092)) end end end end), fun (V6094) -> fun (V6095) -> ((((V6093('erased'))('erased'))(V6094))(V6095)) end end end(fun (V6088) -> ('Idris.Idris2.Builtin':'un--snd'(V6088)) end))(V11)))))); 0 -> begin (V6096 = ('nested--14746-23552--in--un--localsIn'(V2, V6030, V6029, V6028, V6033, V6032, V6031, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6030))), fun (V6097) -> begin (V6098 = (V6096(V6097))), case V6098 of {'Prelude.Types.Left', V6099} -> {'Prelude.Types.Left', V6099}; {'Prelude.Types.Right', V6100} -> (begin (V6110 = begin (V6101 = ('nested--14746-23552--in--un--localsIn'(V2, V6030, V6029, V6028, V6033, V6032, V6031, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6033))), fun (V6102) -> begin (V6103 = (V6101(V6102))), case V6103 of {'Prelude.Types.Left', V6104} -> {'Prelude.Types.Left', V6104}; {'Prelude.Types.Right', V6105} -> (begin (V6109 = begin (V6106 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V6100, V6105)) of 1 -> 1; 0 -> case case (V6100 =:= V6105) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V6106 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6107, V6108} -> V6108 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V6030, V6029, V6028, V6033, V6032, V6031, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6028)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V6028, V6029, V6030}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V6031, V6032, V6033}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V6031, V6032, V6033}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V6028, V6029, V6030}, V8})) end end), V6109 end(V6102)) end end end end), V6110 end(V6097)) end end end end end), V6111 end(V6035)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V6028, V6029, V6030}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V6112, V6113, V6114} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6115, V6116} -> V6116 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V6112, V6113, V6114}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V6112, V6113, V6114}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V6117, V6118} -> case V6118 of 3 -> case V7 of {'Core.Value.NRef', V6119, V6120} -> case V10 of {'Core.Value.NRef', V6121, V6122} -> begin (V6123 = {'Core.Unify.MkUnifyInfo', V6117, 3}), begin (V6124 = {'Core.Value.NRef', V6119, V6120}), begin (V6125 = {'Core.Value.NRef', V6121, V6122}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6120, V6122)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6126) -> fun (V6127) -> fun (V6128) -> fun (V6129) -> fun (V6130) -> fun (V6131) -> fun (V6132) -> fun (V6133) -> ('dn--un--unifyD_Unify_Closure'(V6126, V6127, V6128, V6129, V6130, V6131, V6132, V6133)) end end end end end end end end, fun (V6134) -> fun (V6135) -> fun (V6136) -> fun (V6137) -> fun (V6138) -> fun (V6139) -> fun (V6140) -> fun (V6141) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6134, V6135, V6136, V6137, V6138, V6139, V6140, V6141)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6142) -> fun (V6143) -> fun (V6144) -> fun (V6145) -> fun (V6146) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6142, V6143, V6144, V6145, V6146)) end end end end end, fun (V6147) -> fun (V6148) -> fun (V6149) -> fun (V6150) -> fun (V6151) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6147, V6148, V6149, V6150, V6151)) end end end end end, fun (V6152) -> fun (V6153) -> fun (V6154) -> fun (V6155) -> fun (V6156) -> fun (V6157) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6152, V6153, V6154, V6155, V6156, V6157)) end end end end end end, fun (V6158) -> fun (V6159) -> fun (V6160) -> fun (V6161) -> fun (V6162) -> fun (V6163) -> fun (V6164) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6158, V6159, V6160, V6161, V6162, V6163, V6164)) end end end end end end end}}, V2, V0, V1, V6123, V4, V5, ((begin (V6170 = fun (V6166) -> fun (V6167) -> fun (V6168) -> fun (V6169) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6168, V6169)) end end end end), fun (V6171) -> fun (V6172) -> ((((V6170('erased'))('erased'))(V6171))(V6172)) end end end(fun (V6165) -> ('Idris.Idris2.Builtin':'un--snd'(V6165)) end))(V8)), ((begin (V6178 = fun (V6174) -> fun (V6175) -> fun (V6176) -> fun (V6177) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6176, V6177)) end end end end), fun (V6179) -> fun (V6180) -> ((((V6178('erased'))('erased'))(V6179))(V6180)) end end end(fun (V6173) -> ('Idris.Idris2.Builtin':'un--snd'(V6173)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6123, V4, V5, V6, V6124, V8, {'Core.Value.NApp', V9, V6125, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V6181, V6182} -> case V10 of {'Core.Value.NRef', V6183, V6184} -> begin (V6185 = {'Core.Unify.MkUnifyInfo', V6117, 2}), begin (V6186 = {'Core.Value.NRef', V6181, V6182}), begin (V6187 = {'Core.Value.NRef', V6183, V6184}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6182, V6184)) of 1 -> begin (V6236 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V6193 = begin (V6188 = V0), fun (V6189) -> begin (V6192 = (begin (V6190 = V6188), fun (V6191) -> ('erlang':'get'(V6190)) end end(V6189))), {'Prelude.Types.Right', V6192} end end end), fun (V6194) -> begin (V6195 = (V6193(V6194))), case V6195 of {'Prelude.Types.Left', V6196} -> {'Prelude.Types.Left', V6196}; {'Prelude.Types.Right', V6197} -> (begin (V6235 = begin (V6207 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6198) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6197, V5, V6198)) end, ((begin (V6204 = fun (V6200) -> fun (V6201) -> fun (V6202) -> fun (V6203) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6202, V6203)) end end end end), fun (V6205) -> fun (V6206) -> ((((V6204('erased'))('erased'))(V6205))(V6206)) end end end(fun (V6199) -> ('Idris.Idris2.Builtin':'un--snd'(V6199)) end))(V8)), []))), fun (V6208) -> begin (V6209 = (V6207(V6208))), case V6209 of {'Prelude.Types.Left', V6210} -> {'Prelude.Types.Left', V6210}; {'Prelude.Types.Right', V6211} -> (begin (V6234 = begin (V6221 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6212) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6197, V5, V6212)) end, ((begin (V6218 = fun (V6214) -> fun (V6215) -> fun (V6216) -> fun (V6217) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6216, V6217)) end end end end), fun (V6219) -> fun (V6220) -> ((((V6218('erased'))('erased'))(V6219))(V6220)) end end end(fun (V6213) -> ('Idris.Idris2.Builtin':'un--snd'(V6213)) end))(V11)), []))), fun (V6222) -> begin (V6223 = (V6221(V6222))), case V6223 of {'Prelude.Types.Left', V6224} -> {'Prelude.Types.Left', V6224}; {'Prelude.Types.Right', V6225} -> (begin (V6233 = fun (V6226) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6227) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6227)) end, fun (V6228) -> fun (V6229) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6228, V6229)) end end}, V6211))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6230) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6230)) end, fun (V6231) -> fun (V6232) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6231, V6232)) end end}, V6225))/binary>>/binary>>/binary>>} end), V6233 end(V6222)) end end end end), V6234 end(V6208)) end end end end), V6235 end(V6194)) end end end end))), fun (V6237) -> begin (V6238 = (V6236(V6237))), case V6238 of {'Prelude.Types.Left', V6239} -> {'Prelude.Types.Left', V6239}; {'Prelude.Types.Right', V6240} -> (begin (V6296 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6241) -> fun (V6242) -> fun (V6243) -> fun (V6244) -> fun (V6245) -> fun (V6246) -> fun (V6247) -> fun (V6248) -> ('dn--un--unifyD_Unify_Closure'(V6241, V6242, V6243, V6244, V6245, V6246, V6247, V6248)) end end end end end end end end, fun (V6249) -> fun (V6250) -> fun (V6251) -> fun (V6252) -> fun (V6253) -> fun (V6254) -> fun (V6255) -> fun (V6256) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6249, V6250, V6251, V6252, V6253, V6254, V6255, V6256)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6257) -> fun (V6258) -> fun (V6259) -> fun (V6260) -> fun (V6261) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6257, V6258, V6259, V6260, V6261)) end end end end end, fun (V6262) -> fun (V6263) -> fun (V6264) -> fun (V6265) -> fun (V6266) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6262, V6263, V6264, V6265, V6266)) end end end end end, fun (V6267) -> fun (V6268) -> fun (V6269) -> fun (V6270) -> fun (V6271) -> fun (V6272) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6267, V6268, V6269, V6270, V6271, V6272)) end end end end end end, fun (V6273) -> fun (V6274) -> fun (V6275) -> fun (V6276) -> fun (V6277) -> fun (V6278) -> fun (V6279) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6273, V6274, V6275, V6276, V6277, V6278, V6279)) end end end end end end end}}, V2, V0, V1, V6185, V4, V5, ((begin (V6285 = fun (V6281) -> fun (V6282) -> fun (V6283) -> fun (V6284) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6283, V6284)) end end end end), fun (V6286) -> fun (V6287) -> ((((V6285('erased'))('erased'))(V6286))(V6287)) end end end(fun (V6280) -> ('Idris.Idris2.Builtin':'un--snd'(V6280)) end))(V8)), ((begin (V6293 = fun (V6289) -> fun (V6290) -> fun (V6291) -> fun (V6292) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6291, V6292)) end end end end), fun (V6294) -> fun (V6295) -> ((((V6293('erased'))('erased'))(V6294))(V6295)) end end end(fun (V6288) -> ('Idris.Idris2.Builtin':'un--snd'(V6288)) end))(V11))))), V6296 end(V6237)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6185, V4, V5, V6, V6186, V8, {'Core.Value.NApp', V9, V6187, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V6297, V6298} -> case V10 of {'Core.Value.NLocal', V6299, V6300} -> begin (V6301 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V6302) -> begin (V6303 = (V6301(V6302))), case V6303 of {'Prelude.Types.Left', V6304} -> {'Prelude.Types.Left', V6304}; {'Prelude.Types.Right', V6305} -> (begin (V6306 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V6297, V6298}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V6299, V6300}, V11}))), V6306 end(V6302)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V6307, V6308, V6309} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6310, V6311} -> V6311 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V6307, V6308, V6309}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V6307, V6308, V6309}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V6312, V6313} -> case V6313 of 3 -> case V7 of {'Core.Value.NRef', V6314, V6315} -> case V10 of {'Core.Value.NRef', V6316, V6317} -> begin (V6318 = {'Core.Unify.MkUnifyInfo', V6312, 3}), begin (V6319 = {'Core.Value.NRef', V6314, V6315}), begin (V6320 = {'Core.Value.NRef', V6316, V6317}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6315, V6317)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6321) -> fun (V6322) -> fun (V6323) -> fun (V6324) -> fun (V6325) -> fun (V6326) -> fun (V6327) -> fun (V6328) -> ('dn--un--unifyD_Unify_Closure'(V6321, V6322, V6323, V6324, V6325, V6326, V6327, V6328)) end end end end end end end end, fun (V6329) -> fun (V6330) -> fun (V6331) -> fun (V6332) -> fun (V6333) -> fun (V6334) -> fun (V6335) -> fun (V6336) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6329, V6330, V6331, V6332, V6333, V6334, V6335, V6336)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6337) -> fun (V6338) -> fun (V6339) -> fun (V6340) -> fun (V6341) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6337, V6338, V6339, V6340, V6341)) end end end end end, fun (V6342) -> fun (V6343) -> fun (V6344) -> fun (V6345) -> fun (V6346) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6342, V6343, V6344, V6345, V6346)) end end end end end, fun (V6347) -> fun (V6348) -> fun (V6349) -> fun (V6350) -> fun (V6351) -> fun (V6352) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6347, V6348, V6349, V6350, V6351, V6352)) end end end end end end, fun (V6353) -> fun (V6354) -> fun (V6355) -> fun (V6356) -> fun (V6357) -> fun (V6358) -> fun (V6359) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6353, V6354, V6355, V6356, V6357, V6358, V6359)) end end end end end end end}}, V2, V0, V1, V6318, V4, V5, ((begin (V6365 = fun (V6361) -> fun (V6362) -> fun (V6363) -> fun (V6364) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6363, V6364)) end end end end), fun (V6366) -> fun (V6367) -> ((((V6365('erased'))('erased'))(V6366))(V6367)) end end end(fun (V6360) -> ('Idris.Idris2.Builtin':'un--snd'(V6360)) end))(V8)), ((begin (V6373 = fun (V6369) -> fun (V6370) -> fun (V6371) -> fun (V6372) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6371, V6372)) end end end end), fun (V6374) -> fun (V6375) -> ((((V6373('erased'))('erased'))(V6374))(V6375)) end end end(fun (V6368) -> ('Idris.Idris2.Builtin':'un--snd'(V6368)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6318, V4, V5, V6, V6319, V8, {'Core.Value.NApp', V9, V6320, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V6376, V6377} -> case V10 of {'Core.Value.NRef', V6378, V6379} -> begin (V6380 = {'Core.Unify.MkUnifyInfo', V6312, 2}), begin (V6381 = {'Core.Value.NRef', V6376, V6377}), begin (V6382 = {'Core.Value.NRef', V6378, V6379}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6377, V6379)) of 1 -> begin (V6431 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V6388 = begin (V6383 = V0), fun (V6384) -> begin (V6387 = (begin (V6385 = V6383), fun (V6386) -> ('erlang':'get'(V6385)) end end(V6384))), {'Prelude.Types.Right', V6387} end end end), fun (V6389) -> begin (V6390 = (V6388(V6389))), case V6390 of {'Prelude.Types.Left', V6391} -> {'Prelude.Types.Left', V6391}; {'Prelude.Types.Right', V6392} -> (begin (V6430 = begin (V6402 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6393) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6392, V5, V6393)) end, ((begin (V6399 = fun (V6395) -> fun (V6396) -> fun (V6397) -> fun (V6398) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6397, V6398)) end end end end), fun (V6400) -> fun (V6401) -> ((((V6399('erased'))('erased'))(V6400))(V6401)) end end end(fun (V6394) -> ('Idris.Idris2.Builtin':'un--snd'(V6394)) end))(V8)), []))), fun (V6403) -> begin (V6404 = (V6402(V6403))), case V6404 of {'Prelude.Types.Left', V6405} -> {'Prelude.Types.Left', V6405}; {'Prelude.Types.Right', V6406} -> (begin (V6429 = begin (V6416 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6407) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6392, V5, V6407)) end, ((begin (V6413 = fun (V6409) -> fun (V6410) -> fun (V6411) -> fun (V6412) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6411, V6412)) end end end end), fun (V6414) -> fun (V6415) -> ((((V6413('erased'))('erased'))(V6414))(V6415)) end end end(fun (V6408) -> ('Idris.Idris2.Builtin':'un--snd'(V6408)) end))(V11)), []))), fun (V6417) -> begin (V6418 = (V6416(V6417))), case V6418 of {'Prelude.Types.Left', V6419} -> {'Prelude.Types.Left', V6419}; {'Prelude.Types.Right', V6420} -> (begin (V6428 = fun (V6421) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6422) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6422)) end, fun (V6423) -> fun (V6424) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6423, V6424)) end end}, V6406))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6425) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6425)) end, fun (V6426) -> fun (V6427) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6426, V6427)) end end}, V6420))/binary>>/binary>>/binary>>} end), V6428 end(V6417)) end end end end), V6429 end(V6403)) end end end end), V6430 end(V6389)) end end end end))), fun (V6432) -> begin (V6433 = (V6431(V6432))), case V6433 of {'Prelude.Types.Left', V6434} -> {'Prelude.Types.Left', V6434}; {'Prelude.Types.Right', V6435} -> (begin (V6491 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6436) -> fun (V6437) -> fun (V6438) -> fun (V6439) -> fun (V6440) -> fun (V6441) -> fun (V6442) -> fun (V6443) -> ('dn--un--unifyD_Unify_Closure'(V6436, V6437, V6438, V6439, V6440, V6441, V6442, V6443)) end end end end end end end end, fun (V6444) -> fun (V6445) -> fun (V6446) -> fun (V6447) -> fun (V6448) -> fun (V6449) -> fun (V6450) -> fun (V6451) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6444, V6445, V6446, V6447, V6448, V6449, V6450, V6451)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6452) -> fun (V6453) -> fun (V6454) -> fun (V6455) -> fun (V6456) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6452, V6453, V6454, V6455, V6456)) end end end end end, fun (V6457) -> fun (V6458) -> fun (V6459) -> fun (V6460) -> fun (V6461) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6457, V6458, V6459, V6460, V6461)) end end end end end, fun (V6462) -> fun (V6463) -> fun (V6464) -> fun (V6465) -> fun (V6466) -> fun (V6467) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6462, V6463, V6464, V6465, V6466, V6467)) end end end end end end, fun (V6468) -> fun (V6469) -> fun (V6470) -> fun (V6471) -> fun (V6472) -> fun (V6473) -> fun (V6474) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6468, V6469, V6470, V6471, V6472, V6473, V6474)) end end end end end end end}}, V2, V0, V1, V6380, V4, V5, ((begin (V6480 = fun (V6476) -> fun (V6477) -> fun (V6478) -> fun (V6479) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6478, V6479)) end end end end), fun (V6481) -> fun (V6482) -> ((((V6480('erased'))('erased'))(V6481))(V6482)) end end end(fun (V6475) -> ('Idris.Idris2.Builtin':'un--snd'(V6475)) end))(V8)), ((begin (V6488 = fun (V6484) -> fun (V6485) -> fun (V6486) -> fun (V6487) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6486, V6487)) end end end end), fun (V6489) -> fun (V6490) -> ((((V6488('erased'))('erased'))(V6489))(V6490)) end end end(fun (V6483) -> ('Idris.Idris2.Builtin':'un--snd'(V6483)) end))(V11))))), V6491 end(V6432)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6380, V4, V5, V6, V6381, V8, {'Core.Value.NApp', V9, V6382, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V6492, V6493, V6494} -> case V10 of {'Core.Value.NMeta', V6495, V6496, V6497} -> begin (V6498 = ('un--isDefInvertible'(V0, V4, V6493))), fun (V6499) -> begin (V6500 = (V6498(V6499))), case V6500 of {'Prelude.Types.Left', V6501} -> {'Prelude.Types.Left', V6501}; {'Prelude.Types.Right', V6502} -> (begin (V6575 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V6493, V6496)) of 1 -> case V6502 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6503, V6504} -> V6504 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6505) -> fun (V6506) -> fun (V6507) -> fun (V6508) -> fun (V6509) -> fun (V6510) -> fun (V6511) -> fun (V6512) -> ('dn--un--unifyD_Unify_Closure'(V6505, V6506, V6507, V6508, V6509, V6510, V6511, V6512)) end end end end end end end end, fun (V6513) -> fun (V6514) -> fun (V6515) -> fun (V6516) -> fun (V6517) -> fun (V6518) -> fun (V6519) -> fun (V6520) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6513, V6514, V6515, V6516, V6517, V6518, V6519, V6520)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6521) -> fun (V6522) -> fun (V6523) -> fun (V6524) -> fun (V6525) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6521, V6522, V6523, V6524, V6525)) end end end end end, fun (V6526) -> fun (V6527) -> fun (V6528) -> fun (V6529) -> fun (V6530) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6526, V6527, V6528, V6529, V6530)) end end end end end, fun (V6531) -> fun (V6532) -> fun (V6533) -> fun (V6534) -> fun (V6535) -> fun (V6536) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6531, V6532, V6533, V6534, V6535, V6536)) end end end end end end, fun (V6537) -> fun (V6538) -> fun (V6539) -> fun (V6540) -> fun (V6541) -> fun (V6542) -> fun (V6543) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6537, V6538, V6539, V6540, V6541, V6542, V6543)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6494, ((begin (V6549 = fun (V6545) -> fun (V6546) -> fun (V6547) -> fun (V6548) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6547, V6548)) end end end end), fun (V6550) -> fun (V6551) -> ((((V6549('erased'))('erased'))(V6550))(V6551)) end end end(fun (V6544) -> ('Idris.Idris2.Builtin':'un--snd'(V6544)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6497, ((begin (V6557 = fun (V6553) -> fun (V6554) -> fun (V6555) -> fun (V6556) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6555, V6556)) end end end end), fun (V6558) -> fun (V6559) -> ((((V6557('erased'))('erased'))(V6558))(V6559)) end end end(fun (V6552) -> ('Idris.Idris2.Builtin':'un--snd'(V6552)) end))(V11)))))); 0 -> begin (V6560 = ('nested--14746-23552--in--un--localsIn'(V2, V6494, V6493, V6492, V6497, V6496, V6495, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6494))), fun (V6561) -> begin (V6562 = (V6560(V6561))), case V6562 of {'Prelude.Types.Left', V6563} -> {'Prelude.Types.Left', V6563}; {'Prelude.Types.Right', V6564} -> (begin (V6574 = begin (V6565 = ('nested--14746-23552--in--un--localsIn'(V2, V6494, V6493, V6492, V6497, V6496, V6495, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6497))), fun (V6566) -> begin (V6567 = (V6565(V6566))), case V6567 of {'Prelude.Types.Left', V6568} -> {'Prelude.Types.Left', V6568}; {'Prelude.Types.Right', V6569} -> (begin (V6573 = begin (V6570 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V6564, V6569)) of 1 -> 1; 0 -> case case (V6564 =:= V6569) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V6570 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6571, V6572} -> V6572 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V6494, V6493, V6492, V6497, V6496, V6495, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6492)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V6492, V6493, V6494}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V6495, V6496, V6497}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V6495, V6496, V6497}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V6492, V6493, V6494}, V8})) end end), V6573 end(V6566)) end end end end), V6574 end(V6561)) end end end end end), V6575 end(V6499)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V6492, V6493, V6494}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V6576, V6577, V6578} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6579, V6580} -> V6580 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V6576, V6577, V6578}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V6576, V6577, V6578}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V6581, V6582} -> case V6582 of 3 -> case V7 of {'Core.Value.NRef', V6583, V6584} -> case V10 of {'Core.Value.NRef', V6585, V6586} -> begin (V6587 = {'Core.Unify.MkUnifyInfo', V6581, 3}), begin (V6588 = {'Core.Value.NRef', V6583, V6584}), begin (V6589 = {'Core.Value.NRef', V6585, V6586}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6584, V6586)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6590) -> fun (V6591) -> fun (V6592) -> fun (V6593) -> fun (V6594) -> fun (V6595) -> fun (V6596) -> fun (V6597) -> ('dn--un--unifyD_Unify_Closure'(V6590, V6591, V6592, V6593, V6594, V6595, V6596, V6597)) end end end end end end end end, fun (V6598) -> fun (V6599) -> fun (V6600) -> fun (V6601) -> fun (V6602) -> fun (V6603) -> fun (V6604) -> fun (V6605) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6598, V6599, V6600, V6601, V6602, V6603, V6604, V6605)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6606) -> fun (V6607) -> fun (V6608) -> fun (V6609) -> fun (V6610) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6606, V6607, V6608, V6609, V6610)) end end end end end, fun (V6611) -> fun (V6612) -> fun (V6613) -> fun (V6614) -> fun (V6615) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6611, V6612, V6613, V6614, V6615)) end end end end end, fun (V6616) -> fun (V6617) -> fun (V6618) -> fun (V6619) -> fun (V6620) -> fun (V6621) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6616, V6617, V6618, V6619, V6620, V6621)) end end end end end end, fun (V6622) -> fun (V6623) -> fun (V6624) -> fun (V6625) -> fun (V6626) -> fun (V6627) -> fun (V6628) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6622, V6623, V6624, V6625, V6626, V6627, V6628)) end end end end end end end}}, V2, V0, V1, V6587, V4, V5, ((begin (V6634 = fun (V6630) -> fun (V6631) -> fun (V6632) -> fun (V6633) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6632, V6633)) end end end end), fun (V6635) -> fun (V6636) -> ((((V6634('erased'))('erased'))(V6635))(V6636)) end end end(fun (V6629) -> ('Idris.Idris2.Builtin':'un--snd'(V6629)) end))(V8)), ((begin (V6642 = fun (V6638) -> fun (V6639) -> fun (V6640) -> fun (V6641) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6640, V6641)) end end end end), fun (V6643) -> fun (V6644) -> ((((V6642('erased'))('erased'))(V6643))(V6644)) end end end(fun (V6637) -> ('Idris.Idris2.Builtin':'un--snd'(V6637)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6587, V4, V5, V6, V6588, V8, {'Core.Value.NApp', V9, V6589, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V6645, V6646} -> case V10 of {'Core.Value.NRef', V6647, V6648} -> begin (V6649 = {'Core.Unify.MkUnifyInfo', V6581, 2}), begin (V6650 = {'Core.Value.NRef', V6645, V6646}), begin (V6651 = {'Core.Value.NRef', V6647, V6648}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6646, V6648)) of 1 -> begin (V6700 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V6657 = begin (V6652 = V0), fun (V6653) -> begin (V6656 = (begin (V6654 = V6652), fun (V6655) -> ('erlang':'get'(V6654)) end end(V6653))), {'Prelude.Types.Right', V6656} end end end), fun (V6658) -> begin (V6659 = (V6657(V6658))), case V6659 of {'Prelude.Types.Left', V6660} -> {'Prelude.Types.Left', V6660}; {'Prelude.Types.Right', V6661} -> (begin (V6699 = begin (V6671 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6662) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6661, V5, V6662)) end, ((begin (V6668 = fun (V6664) -> fun (V6665) -> fun (V6666) -> fun (V6667) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6666, V6667)) end end end end), fun (V6669) -> fun (V6670) -> ((((V6668('erased'))('erased'))(V6669))(V6670)) end end end(fun (V6663) -> ('Idris.Idris2.Builtin':'un--snd'(V6663)) end))(V8)), []))), fun (V6672) -> begin (V6673 = (V6671(V6672))), case V6673 of {'Prelude.Types.Left', V6674} -> {'Prelude.Types.Left', V6674}; {'Prelude.Types.Right', V6675} -> (begin (V6698 = begin (V6685 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6676) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6661, V5, V6676)) end, ((begin (V6682 = fun (V6678) -> fun (V6679) -> fun (V6680) -> fun (V6681) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6680, V6681)) end end end end), fun (V6683) -> fun (V6684) -> ((((V6682('erased'))('erased'))(V6683))(V6684)) end end end(fun (V6677) -> ('Idris.Idris2.Builtin':'un--snd'(V6677)) end))(V11)), []))), fun (V6686) -> begin (V6687 = (V6685(V6686))), case V6687 of {'Prelude.Types.Left', V6688} -> {'Prelude.Types.Left', V6688}; {'Prelude.Types.Right', V6689} -> (begin (V6697 = fun (V6690) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6691) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6691)) end, fun (V6692) -> fun (V6693) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6692, V6693)) end end}, V6675))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6694) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6694)) end, fun (V6695) -> fun (V6696) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6695, V6696)) end end}, V6689))/binary>>/binary>>/binary>>} end), V6697 end(V6686)) end end end end), V6698 end(V6672)) end end end end), V6699 end(V6658)) end end end end))), fun (V6701) -> begin (V6702 = (V6700(V6701))), case V6702 of {'Prelude.Types.Left', V6703} -> {'Prelude.Types.Left', V6703}; {'Prelude.Types.Right', V6704} -> (begin (V6760 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6705) -> fun (V6706) -> fun (V6707) -> fun (V6708) -> fun (V6709) -> fun (V6710) -> fun (V6711) -> fun (V6712) -> ('dn--un--unifyD_Unify_Closure'(V6705, V6706, V6707, V6708, V6709, V6710, V6711, V6712)) end end end end end end end end, fun (V6713) -> fun (V6714) -> fun (V6715) -> fun (V6716) -> fun (V6717) -> fun (V6718) -> fun (V6719) -> fun (V6720) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6713, V6714, V6715, V6716, V6717, V6718, V6719, V6720)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6721) -> fun (V6722) -> fun (V6723) -> fun (V6724) -> fun (V6725) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6721, V6722, V6723, V6724, V6725)) end end end end end, fun (V6726) -> fun (V6727) -> fun (V6728) -> fun (V6729) -> fun (V6730) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6726, V6727, V6728, V6729, V6730)) end end end end end, fun (V6731) -> fun (V6732) -> fun (V6733) -> fun (V6734) -> fun (V6735) -> fun (V6736) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6731, V6732, V6733, V6734, V6735, V6736)) end end end end end end, fun (V6737) -> fun (V6738) -> fun (V6739) -> fun (V6740) -> fun (V6741) -> fun (V6742) -> fun (V6743) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6737, V6738, V6739, V6740, V6741, V6742, V6743)) end end end end end end end}}, V2, V0, V1, V6649, V4, V5, ((begin (V6749 = fun (V6745) -> fun (V6746) -> fun (V6747) -> fun (V6748) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6747, V6748)) end end end end), fun (V6750) -> fun (V6751) -> ((((V6749('erased'))('erased'))(V6750))(V6751)) end end end(fun (V6744) -> ('Idris.Idris2.Builtin':'un--snd'(V6744)) end))(V8)), ((begin (V6757 = fun (V6753) -> fun (V6754) -> fun (V6755) -> fun (V6756) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6755, V6756)) end end end end), fun (V6758) -> fun (V6759) -> ((((V6757('erased'))('erased'))(V6758))(V6759)) end end end(fun (V6752) -> ('Idris.Idris2.Builtin':'un--snd'(V6752)) end))(V11))))), V6760 end(V6701)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6649, V4, V5, V6, V6650, V8, {'Core.Value.NApp', V9, V6651, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V6761, V6762} -> case V10 of {'Core.Value.NLocal', V6763, V6764} -> begin (V6765 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V6766) -> begin (V6767 = (V6765(V6766))), case V6767 of {'Prelude.Types.Left', V6768} -> {'Prelude.Types.Left', V6768}; {'Prelude.Types.Right', V6769} -> (begin (V6770 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V6761, V6762}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V6763, V6764}, V11}))), V6770 end(V6766)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V6771, V6772, V6773} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6774, V6775} -> V6775 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V6771, V6772, V6773}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V6771, V6772, V6773}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V6776, V6777} -> case V6777 of 3 -> case V7 of {'Core.Value.NRef', V6778, V6779} -> case V10 of {'Core.Value.NRef', V6780, V6781} -> begin (V6782 = {'Core.Unify.MkUnifyInfo', V6776, 3}), begin (V6783 = {'Core.Value.NRef', V6778, V6779}), begin (V6784 = {'Core.Value.NRef', V6780, V6781}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6779, V6781)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6785) -> fun (V6786) -> fun (V6787) -> fun (V6788) -> fun (V6789) -> fun (V6790) -> fun (V6791) -> fun (V6792) -> ('dn--un--unifyD_Unify_Closure'(V6785, V6786, V6787, V6788, V6789, V6790, V6791, V6792)) end end end end end end end end, fun (V6793) -> fun (V6794) -> fun (V6795) -> fun (V6796) -> fun (V6797) -> fun (V6798) -> fun (V6799) -> fun (V6800) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6793, V6794, V6795, V6796, V6797, V6798, V6799, V6800)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6801) -> fun (V6802) -> fun (V6803) -> fun (V6804) -> fun (V6805) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6801, V6802, V6803, V6804, V6805)) end end end end end, fun (V6806) -> fun (V6807) -> fun (V6808) -> fun (V6809) -> fun (V6810) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6806, V6807, V6808, V6809, V6810)) end end end end end, fun (V6811) -> fun (V6812) -> fun (V6813) -> fun (V6814) -> fun (V6815) -> fun (V6816) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6811, V6812, V6813, V6814, V6815, V6816)) end end end end end end, fun (V6817) -> fun (V6818) -> fun (V6819) -> fun (V6820) -> fun (V6821) -> fun (V6822) -> fun (V6823) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6817, V6818, V6819, V6820, V6821, V6822, V6823)) end end end end end end end}}, V2, V0, V1, V6782, V4, V5, ((begin (V6829 = fun (V6825) -> fun (V6826) -> fun (V6827) -> fun (V6828) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6827, V6828)) end end end end), fun (V6830) -> fun (V6831) -> ((((V6829('erased'))('erased'))(V6830))(V6831)) end end end(fun (V6824) -> ('Idris.Idris2.Builtin':'un--snd'(V6824)) end))(V8)), ((begin (V6837 = fun (V6833) -> fun (V6834) -> fun (V6835) -> fun (V6836) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6835, V6836)) end end end end), fun (V6838) -> fun (V6839) -> ((((V6837('erased'))('erased'))(V6838))(V6839)) end end end(fun (V6832) -> ('Idris.Idris2.Builtin':'un--snd'(V6832)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6782, V4, V5, V6, V6783, V8, {'Core.Value.NApp', V9, V6784, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V6840, V6841} -> case V10 of {'Core.Value.NRef', V6842, V6843} -> begin (V6844 = {'Core.Unify.MkUnifyInfo', V6776, 2}), begin (V6845 = {'Core.Value.NRef', V6840, V6841}), begin (V6846 = {'Core.Value.NRef', V6842, V6843}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V6841, V6843)) of 1 -> begin (V6895 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V6852 = begin (V6847 = V0), fun (V6848) -> begin (V6851 = (begin (V6849 = V6847), fun (V6850) -> ('erlang':'get'(V6849)) end end(V6848))), {'Prelude.Types.Right', V6851} end end end), fun (V6853) -> begin (V6854 = (V6852(V6853))), case V6854 of {'Prelude.Types.Left', V6855} -> {'Prelude.Types.Left', V6855}; {'Prelude.Types.Right', V6856} -> (begin (V6894 = begin (V6866 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6857) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6856, V5, V6857)) end, ((begin (V6863 = fun (V6859) -> fun (V6860) -> fun (V6861) -> fun (V6862) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6861, V6862)) end end end end), fun (V6864) -> fun (V6865) -> ((((V6863('erased'))('erased'))(V6864))(V6865)) end end end(fun (V6858) -> ('Idris.Idris2.Builtin':'un--snd'(V6858)) end))(V8)), []))), fun (V6867) -> begin (V6868 = (V6866(V6867))), case V6868 of {'Prelude.Types.Left', V6869} -> {'Prelude.Types.Left', V6869}; {'Prelude.Types.Right', V6870} -> (begin (V6893 = begin (V6880 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6871) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V6856, V5, V6871)) end, ((begin (V6877 = fun (V6873) -> fun (V6874) -> fun (V6875) -> fun (V6876) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6875, V6876)) end end end end), fun (V6878) -> fun (V6879) -> ((((V6877('erased'))('erased'))(V6878))(V6879)) end end end(fun (V6872) -> ('Idris.Idris2.Builtin':'un--snd'(V6872)) end))(V11)), []))), fun (V6881) -> begin (V6882 = (V6880(V6881))), case V6882 of {'Prelude.Types.Left', V6883} -> {'Prelude.Types.Left', V6883}; {'Prelude.Types.Right', V6884} -> (begin (V6892 = fun (V6885) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6886) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6886)) end, fun (V6887) -> fun (V6888) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6887, V6888)) end end}, V6870))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V6889) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V6889)) end, fun (V6890) -> fun (V6891) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V6890, V6891)) end end}, V6884))/binary>>/binary>>/binary>>} end), V6892 end(V6881)) end end end end), V6893 end(V6867)) end end end end), V6894 end(V6853)) end end end end))), fun (V6896) -> begin (V6897 = (V6895(V6896))), case V6897 of {'Prelude.Types.Left', V6898} -> {'Prelude.Types.Left', V6898}; {'Prelude.Types.Right', V6899} -> (begin (V6955 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6900) -> fun (V6901) -> fun (V6902) -> fun (V6903) -> fun (V6904) -> fun (V6905) -> fun (V6906) -> fun (V6907) -> ('dn--un--unifyD_Unify_Closure'(V6900, V6901, V6902, V6903, V6904, V6905, V6906, V6907)) end end end end end end end end, fun (V6908) -> fun (V6909) -> fun (V6910) -> fun (V6911) -> fun (V6912) -> fun (V6913) -> fun (V6914) -> fun (V6915) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6908, V6909, V6910, V6911, V6912, V6913, V6914, V6915)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6916) -> fun (V6917) -> fun (V6918) -> fun (V6919) -> fun (V6920) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6916, V6917, V6918, V6919, V6920)) end end end end end, fun (V6921) -> fun (V6922) -> fun (V6923) -> fun (V6924) -> fun (V6925) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6921, V6922, V6923, V6924, V6925)) end end end end end, fun (V6926) -> fun (V6927) -> fun (V6928) -> fun (V6929) -> fun (V6930) -> fun (V6931) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6926, V6927, V6928, V6929, V6930, V6931)) end end end end end end, fun (V6932) -> fun (V6933) -> fun (V6934) -> fun (V6935) -> fun (V6936) -> fun (V6937) -> fun (V6938) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V6932, V6933, V6934, V6935, V6936, V6937, V6938)) end end end end end end end}}, V2, V0, V1, V6844, V4, V5, ((begin (V6944 = fun (V6940) -> fun (V6941) -> fun (V6942) -> fun (V6943) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6942, V6943)) end end end end), fun (V6945) -> fun (V6946) -> ((((V6944('erased'))('erased'))(V6945))(V6946)) end end end(fun (V6939) -> ('Idris.Idris2.Builtin':'un--snd'(V6939)) end))(V8)), ((begin (V6952 = fun (V6948) -> fun (V6949) -> fun (V6950) -> fun (V6951) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V6950, V6951)) end end end end), fun (V6953) -> fun (V6954) -> ((((V6952('erased'))('erased'))(V6953))(V6954)) end end end(fun (V6947) -> ('Idris.Idris2.Builtin':'un--snd'(V6947)) end))(V11))))), V6955 end(V6896)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V6844, V4, V5, V6, V6845, V8, {'Core.Value.NApp', V9, V6846, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V6956, V6957, V6958} -> case V10 of {'Core.Value.NMeta', V6959, V6960, V6961} -> begin (V6962 = ('un--isDefInvertible'(V0, V4, V6957))), fun (V6963) -> begin (V6964 = (V6962(V6963))), case V6964 of {'Prelude.Types.Left', V6965} -> {'Prelude.Types.Left', V6965}; {'Prelude.Types.Right', V6966} -> (begin (V7039 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V6957, V6960)) of 1 -> case V6966 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V6967, V6968} -> V6968 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V6969) -> fun (V6970) -> fun (V6971) -> fun (V6972) -> fun (V6973) -> fun (V6974) -> fun (V6975) -> fun (V6976) -> ('dn--un--unifyD_Unify_Closure'(V6969, V6970, V6971, V6972, V6973, V6974, V6975, V6976)) end end end end end end end end, fun (V6977) -> fun (V6978) -> fun (V6979) -> fun (V6980) -> fun (V6981) -> fun (V6982) -> fun (V6983) -> fun (V6984) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V6977, V6978, V6979, V6980, V6981, V6982, V6983, V6984)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V6985) -> fun (V6986) -> fun (V6987) -> fun (V6988) -> fun (V6989) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V6985, V6986, V6987, V6988, V6989)) end end end end end, fun (V6990) -> fun (V6991) -> fun (V6992) -> fun (V6993) -> fun (V6994) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V6990, V6991, V6992, V6993, V6994)) end end end end end, fun (V6995) -> fun (V6996) -> fun (V6997) -> fun (V6998) -> fun (V6999) -> fun (V7000) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V6995, V6996, V6997, V6998, V6999, V7000)) end end end end end end, fun (V7001) -> fun (V7002) -> fun (V7003) -> fun (V7004) -> fun (V7005) -> fun (V7006) -> fun (V7007) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7001, V7002, V7003, V7004, V7005, V7006, V7007)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6958, ((begin (V7013 = fun (V7009) -> fun (V7010) -> fun (V7011) -> fun (V7012) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7011, V7012)) end end end end), fun (V7014) -> fun (V7015) -> ((((V7013('erased'))('erased'))(V7014))(V7015)) end end end(fun (V7008) -> ('Idris.Idris2.Builtin':'un--snd'(V7008)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6961, ((begin (V7021 = fun (V7017) -> fun (V7018) -> fun (V7019) -> fun (V7020) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7019, V7020)) end end end end), fun (V7022) -> fun (V7023) -> ((((V7021('erased'))('erased'))(V7022))(V7023)) end end end(fun (V7016) -> ('Idris.Idris2.Builtin':'un--snd'(V7016)) end))(V11)))))); 0 -> begin (V7024 = ('nested--14746-23552--in--un--localsIn'(V2, V6958, V6957, V6956, V6961, V6960, V6959, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6958))), fun (V7025) -> begin (V7026 = (V7024(V7025))), case V7026 of {'Prelude.Types.Left', V7027} -> {'Prelude.Types.Left', V7027}; {'Prelude.Types.Right', V7028} -> (begin (V7038 = begin (V7029 = ('nested--14746-23552--in--un--localsIn'(V2, V6958, V6957, V6956, V6961, V6960, V6959, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6961))), fun (V7030) -> begin (V7031 = (V7029(V7030))), case V7031 of {'Prelude.Types.Left', V7032} -> {'Prelude.Types.Left', V7032}; {'Prelude.Types.Right', V7033} -> (begin (V7037 = begin (V7034 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V7028, V7033)) of 1 -> 1; 0 -> case case (V7028 =:= V7033) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V7034 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V7035, V7036} -> V7036 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V6958, V6957, V6956, V6961, V6960, V6959, V11, V9, V8, V6, V5, V4, V3, V1, V0, V6956)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V6956, V6957, V6958}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V6959, V6960, V6961}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V6959, V6960, V6961}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V6956, V6957, V6958}, V8})) end end), V7037 end(V7030)) end end end end), V7038 end(V7025)) end end end end end), V7039 end(V6963)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V6956, V6957, V6958}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V7040, V7041, V7042} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V7043, V7044} -> V7044 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V7040, V7041, V7042}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V7040, V7041, V7042}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V7045, V7046} -> case V7046 of 3 -> case V7 of {'Core.Value.NRef', V7047, V7048} -> case V10 of {'Core.Value.NRef', V7049, V7050} -> begin (V7051 = {'Core.Unify.MkUnifyInfo', V7045, 3}), begin (V7052 = {'Core.Value.NRef', V7047, V7048}), begin (V7053 = {'Core.Value.NRef', V7049, V7050}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V7048, V7050)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V7054) -> fun (V7055) -> fun (V7056) -> fun (V7057) -> fun (V7058) -> fun (V7059) -> fun (V7060) -> fun (V7061) -> ('dn--un--unifyD_Unify_Closure'(V7054, V7055, V7056, V7057, V7058, V7059, V7060, V7061)) end end end end end end end end, fun (V7062) -> fun (V7063) -> fun (V7064) -> fun (V7065) -> fun (V7066) -> fun (V7067) -> fun (V7068) -> fun (V7069) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V7062, V7063, V7064, V7065, V7066, V7067, V7068, V7069)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V7070) -> fun (V7071) -> fun (V7072) -> fun (V7073) -> fun (V7074) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V7070, V7071, V7072, V7073, V7074)) end end end end end, fun (V7075) -> fun (V7076) -> fun (V7077) -> fun (V7078) -> fun (V7079) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V7075, V7076, V7077, V7078, V7079)) end end end end end, fun (V7080) -> fun (V7081) -> fun (V7082) -> fun (V7083) -> fun (V7084) -> fun (V7085) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V7080, V7081, V7082, V7083, V7084, V7085)) end end end end end end, fun (V7086) -> fun (V7087) -> fun (V7088) -> fun (V7089) -> fun (V7090) -> fun (V7091) -> fun (V7092) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7086, V7087, V7088, V7089, V7090, V7091, V7092)) end end end end end end end}}, V2, V0, V1, V7051, V4, V5, ((begin (V7098 = fun (V7094) -> fun (V7095) -> fun (V7096) -> fun (V7097) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7096, V7097)) end end end end), fun (V7099) -> fun (V7100) -> ((((V7098('erased'))('erased'))(V7099))(V7100)) end end end(fun (V7093) -> ('Idris.Idris2.Builtin':'un--snd'(V7093)) end))(V8)), ((begin (V7106 = fun (V7102) -> fun (V7103) -> fun (V7104) -> fun (V7105) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7104, V7105)) end end end end), fun (V7107) -> fun (V7108) -> ((((V7106('erased'))('erased'))(V7107))(V7108)) end end end(fun (V7101) -> ('Idris.Idris2.Builtin':'un--snd'(V7101)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V7051, V4, V5, V6, V7052, V8, {'Core.Value.NApp', V9, V7053, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V7109, V7110} -> case V10 of {'Core.Value.NRef', V7111, V7112} -> begin (V7113 = {'Core.Unify.MkUnifyInfo', V7045, 2}), begin (V7114 = {'Core.Value.NRef', V7109, V7110}), begin (V7115 = {'Core.Value.NRef', V7111, V7112}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V7110, V7112)) of 1 -> begin (V7164 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V7121 = begin (V7116 = V0), fun (V7117) -> begin (V7120 = (begin (V7118 = V7116), fun (V7119) -> ('erlang':'get'(V7118)) end end(V7117))), {'Prelude.Types.Right', V7120} end end end), fun (V7122) -> begin (V7123 = (V7121(V7122))), case V7123 of {'Prelude.Types.Left', V7124} -> {'Prelude.Types.Left', V7124}; {'Prelude.Types.Right', V7125} -> (begin (V7163 = begin (V7135 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V7126) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V7125, V5, V7126)) end, ((begin (V7132 = fun (V7128) -> fun (V7129) -> fun (V7130) -> fun (V7131) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7130, V7131)) end end end end), fun (V7133) -> fun (V7134) -> ((((V7132('erased'))('erased'))(V7133))(V7134)) end end end(fun (V7127) -> ('Idris.Idris2.Builtin':'un--snd'(V7127)) end))(V8)), []))), fun (V7136) -> begin (V7137 = (V7135(V7136))), case V7137 of {'Prelude.Types.Left', V7138} -> {'Prelude.Types.Left', V7138}; {'Prelude.Types.Right', V7139} -> (begin (V7162 = begin (V7149 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V7140) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V7125, V5, V7140)) end, ((begin (V7146 = fun (V7142) -> fun (V7143) -> fun (V7144) -> fun (V7145) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7144, V7145)) end end end end), fun (V7147) -> fun (V7148) -> ((((V7146('erased'))('erased'))(V7147))(V7148)) end end end(fun (V7141) -> ('Idris.Idris2.Builtin':'un--snd'(V7141)) end))(V11)), []))), fun (V7150) -> begin (V7151 = (V7149(V7150))), case V7151 of {'Prelude.Types.Left', V7152} -> {'Prelude.Types.Left', V7152}; {'Prelude.Types.Right', V7153} -> (begin (V7161 = fun (V7154) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V7155) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V7155)) end, fun (V7156) -> fun (V7157) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V7156, V7157)) end end}, V7139))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V7158) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V7158)) end, fun (V7159) -> fun (V7160) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V7159, V7160)) end end}, V7153))/binary>>/binary>>/binary>>} end), V7161 end(V7150)) end end end end), V7162 end(V7136)) end end end end), V7163 end(V7122)) end end end end))), fun (V7165) -> begin (V7166 = (V7164(V7165))), case V7166 of {'Prelude.Types.Left', V7167} -> {'Prelude.Types.Left', V7167}; {'Prelude.Types.Right', V7168} -> (begin (V7224 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V7169) -> fun (V7170) -> fun (V7171) -> fun (V7172) -> fun (V7173) -> fun (V7174) -> fun (V7175) -> fun (V7176) -> ('dn--un--unifyD_Unify_Closure'(V7169, V7170, V7171, V7172, V7173, V7174, V7175, V7176)) end end end end end end end end, fun (V7177) -> fun (V7178) -> fun (V7179) -> fun (V7180) -> fun (V7181) -> fun (V7182) -> fun (V7183) -> fun (V7184) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V7177, V7178, V7179, V7180, V7181, V7182, V7183, V7184)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V7185) -> fun (V7186) -> fun (V7187) -> fun (V7188) -> fun (V7189) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V7185, V7186, V7187, V7188, V7189)) end end end end end, fun (V7190) -> fun (V7191) -> fun (V7192) -> fun (V7193) -> fun (V7194) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V7190, V7191, V7192, V7193, V7194)) end end end end end, fun (V7195) -> fun (V7196) -> fun (V7197) -> fun (V7198) -> fun (V7199) -> fun (V7200) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V7195, V7196, V7197, V7198, V7199, V7200)) end end end end end end, fun (V7201) -> fun (V7202) -> fun (V7203) -> fun (V7204) -> fun (V7205) -> fun (V7206) -> fun (V7207) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7201, V7202, V7203, V7204, V7205, V7206, V7207)) end end end end end end end}}, V2, V0, V1, V7113, V4, V5, ((begin (V7213 = fun (V7209) -> fun (V7210) -> fun (V7211) -> fun (V7212) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7211, V7212)) end end end end), fun (V7214) -> fun (V7215) -> ((((V7213('erased'))('erased'))(V7214))(V7215)) end end end(fun (V7208) -> ('Idris.Idris2.Builtin':'un--snd'(V7208)) end))(V8)), ((begin (V7221 = fun (V7217) -> fun (V7218) -> fun (V7219) -> fun (V7220) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7219, V7220)) end end end end), fun (V7222) -> fun (V7223) -> ((((V7221('erased'))('erased'))(V7222))(V7223)) end end end(fun (V7216) -> ('Idris.Idris2.Builtin':'un--snd'(V7216)) end))(V11))))), V7224 end(V7165)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V7113, V4, V5, V6, V7114, V8, {'Core.Value.NApp', V9, V7115, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Core.Value.NLocal', V7225, V7226} -> case V10 of {'Core.Value.NLocal', V7227, V7228} -> begin (V7229 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Both local apps, unifyIfEq"/utf8>> end))), fun (V7230) -> begin (V7231 = (V7229(V7230))), case V7231 of {'Prelude.Types.Left', V7232} -> {'Prelude.Types.Left', V7232}; {'Prelude.Types.Right', V7233} -> (begin (V7234 = ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Core.Value.NApp', V6, {'Core.Value.NLocal', V7225, V7226}, V8}, {'Core.Value.NApp', V9, {'Core.Value.NLocal', V7227, V7228}, V11}))), V7234 end(V7230)) end end end end; _ -> case V10 of {'Core.Value.NMeta', V7235, V7236, V7237} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V7238, V7239} -> V7239 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V7235, V7236, V7237}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V7235, V7236, V7237}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V7240, V7241} -> case V7241 of 3 -> case V7 of {'Core.Value.NRef', V7242, V7243} -> case V10 of {'Core.Value.NRef', V7244, V7245} -> begin (V7246 = {'Core.Unify.MkUnifyInfo', V7240, 3}), begin (V7247 = {'Core.Value.NRef', V7242, V7243}), begin (V7248 = {'Core.Value.NRef', V7244, V7245}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V7243, V7245)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V7249) -> fun (V7250) -> fun (V7251) -> fun (V7252) -> fun (V7253) -> fun (V7254) -> fun (V7255) -> fun (V7256) -> ('dn--un--unifyD_Unify_Closure'(V7249, V7250, V7251, V7252, V7253, V7254, V7255, V7256)) end end end end end end end end, fun (V7257) -> fun (V7258) -> fun (V7259) -> fun (V7260) -> fun (V7261) -> fun (V7262) -> fun (V7263) -> fun (V7264) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V7257, V7258, V7259, V7260, V7261, V7262, V7263, V7264)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V7265) -> fun (V7266) -> fun (V7267) -> fun (V7268) -> fun (V7269) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V7265, V7266, V7267, V7268, V7269)) end end end end end, fun (V7270) -> fun (V7271) -> fun (V7272) -> fun (V7273) -> fun (V7274) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V7270, V7271, V7272, V7273, V7274)) end end end end end, fun (V7275) -> fun (V7276) -> fun (V7277) -> fun (V7278) -> fun (V7279) -> fun (V7280) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V7275, V7276, V7277, V7278, V7279, V7280)) end end end end end end, fun (V7281) -> fun (V7282) -> fun (V7283) -> fun (V7284) -> fun (V7285) -> fun (V7286) -> fun (V7287) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7281, V7282, V7283, V7284, V7285, V7286, V7287)) end end end end end end end}}, V2, V0, V1, V7246, V4, V5, ((begin (V7293 = fun (V7289) -> fun (V7290) -> fun (V7291) -> fun (V7292) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7291, V7292)) end end end end), fun (V7294) -> fun (V7295) -> ((((V7293('erased'))('erased'))(V7294))(V7295)) end end end(fun (V7288) -> ('Idris.Idris2.Builtin':'un--snd'(V7288)) end))(V8)), ((begin (V7301 = fun (V7297) -> fun (V7298) -> fun (V7299) -> fun (V7300) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7299, V7300)) end end end end), fun (V7302) -> fun (V7303) -> ((((V7301('erased'))('erased'))(V7302))(V7303)) end end end(fun (V7296) -> ('Idris.Idris2.Builtin':'un--snd'(V7296)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V7246, V4, V5, V6, V7247, V8, {'Core.Value.NApp', V9, V7248, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V7304, V7305} -> case V10 of {'Core.Value.NRef', V7306, V7307} -> begin (V7308 = {'Core.Unify.MkUnifyInfo', V7240, 2}), begin (V7309 = {'Core.Value.NRef', V7304, V7305}), begin (V7310 = {'Core.Value.NRef', V7306, V7307}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V7305, V7307)) of 1 -> begin (V7359 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V7316 = begin (V7311 = V0), fun (V7312) -> begin (V7315 = (begin (V7313 = V7311), fun (V7314) -> ('erlang':'get'(V7313)) end end(V7312))), {'Prelude.Types.Right', V7315} end end end), fun (V7317) -> begin (V7318 = (V7316(V7317))), case V7318 of {'Prelude.Types.Left', V7319} -> {'Prelude.Types.Left', V7319}; {'Prelude.Types.Right', V7320} -> (begin (V7358 = begin (V7330 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V7321) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V7320, V5, V7321)) end, ((begin (V7327 = fun (V7323) -> fun (V7324) -> fun (V7325) -> fun (V7326) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7325, V7326)) end end end end), fun (V7328) -> fun (V7329) -> ((((V7327('erased'))('erased'))(V7328))(V7329)) end end end(fun (V7322) -> ('Idris.Idris2.Builtin':'un--snd'(V7322)) end))(V8)), []))), fun (V7331) -> begin (V7332 = (V7330(V7331))), case V7332 of {'Prelude.Types.Left', V7333} -> {'Prelude.Types.Left', V7333}; {'Prelude.Types.Right', V7334} -> (begin (V7357 = begin (V7344 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V7335) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V7320, V5, V7335)) end, ((begin (V7341 = fun (V7337) -> fun (V7338) -> fun (V7339) -> fun (V7340) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7339, V7340)) end end end end), fun (V7342) -> fun (V7343) -> ((((V7341('erased'))('erased'))(V7342))(V7343)) end end end(fun (V7336) -> ('Idris.Idris2.Builtin':'un--snd'(V7336)) end))(V11)), []))), fun (V7345) -> begin (V7346 = (V7344(V7345))), case V7346 of {'Prelude.Types.Left', V7347} -> {'Prelude.Types.Left', V7347}; {'Prelude.Types.Right', V7348} -> (begin (V7356 = fun (V7349) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V7350) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V7350)) end, fun (V7351) -> fun (V7352) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V7351, V7352)) end end}, V7334))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V7353) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V7353)) end, fun (V7354) -> fun (V7355) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V7354, V7355)) end end}, V7348))/binary>>/binary>>/binary>>} end), V7356 end(V7345)) end end end end), V7357 end(V7331)) end end end end), V7358 end(V7317)) end end end end))), fun (V7360) -> begin (V7361 = (V7359(V7360))), case V7361 of {'Prelude.Types.Left', V7362} -> {'Prelude.Types.Left', V7362}; {'Prelude.Types.Right', V7363} -> (begin (V7419 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V7364) -> fun (V7365) -> fun (V7366) -> fun (V7367) -> fun (V7368) -> fun (V7369) -> fun (V7370) -> fun (V7371) -> ('dn--un--unifyD_Unify_Closure'(V7364, V7365, V7366, V7367, V7368, V7369, V7370, V7371)) end end end end end end end end, fun (V7372) -> fun (V7373) -> fun (V7374) -> fun (V7375) -> fun (V7376) -> fun (V7377) -> fun (V7378) -> fun (V7379) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V7372, V7373, V7374, V7375, V7376, V7377, V7378, V7379)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V7380) -> fun (V7381) -> fun (V7382) -> fun (V7383) -> fun (V7384) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V7380, V7381, V7382, V7383, V7384)) end end end end end, fun (V7385) -> fun (V7386) -> fun (V7387) -> fun (V7388) -> fun (V7389) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V7385, V7386, V7387, V7388, V7389)) end end end end end, fun (V7390) -> fun (V7391) -> fun (V7392) -> fun (V7393) -> fun (V7394) -> fun (V7395) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V7390, V7391, V7392, V7393, V7394, V7395)) end end end end end end, fun (V7396) -> fun (V7397) -> fun (V7398) -> fun (V7399) -> fun (V7400) -> fun (V7401) -> fun (V7402) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7396, V7397, V7398, V7399, V7400, V7401, V7402)) end end end end end end end}}, V2, V0, V1, V7308, V4, V5, ((begin (V7408 = fun (V7404) -> fun (V7405) -> fun (V7406) -> fun (V7407) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7406, V7407)) end end end end), fun (V7409) -> fun (V7410) -> ((((V7408('erased'))('erased'))(V7409))(V7410)) end end end(fun (V7403) -> ('Idris.Idris2.Builtin':'un--snd'(V7403)) end))(V8)), ((begin (V7416 = fun (V7412) -> fun (V7413) -> fun (V7414) -> fun (V7415) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7414, V7415)) end end end end), fun (V7417) -> fun (V7418) -> ((((V7416('erased'))('erased'))(V7417))(V7418)) end end end(fun (V7411) -> ('Idris.Idris2.Builtin':'un--snd'(V7411)) end))(V11))))), V7419 end(V7360)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V7308, V4, V5, V6, V7309, V8, {'Core.Value.NApp', V9, V7310, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end; {'Core.Value.NMeta', V7420, V7421, V7422} -> case V10 of {'Core.Value.NMeta', V7423, V7424, V7425} -> begin (V7426 = ('un--isDefInvertible'(V0, V4, V7421))), fun (V7427) -> begin (V7428 = (V7426(V7427))), case V7428 of {'Prelude.Types.Left', V7429} -> {'Prelude.Types.Left', V7429}; {'Prelude.Types.Right', V7430} -> (begin (V7503 = case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V7421, V7424)) of 1 -> case V7430 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V7431, V7432} -> V7432 end, 3)) end; 0 -> 0 end of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V7433) -> fun (V7434) -> fun (V7435) -> fun (V7436) -> fun (V7437) -> fun (V7438) -> fun (V7439) -> fun (V7440) -> ('dn--un--unifyD_Unify_Closure'(V7433, V7434, V7435, V7436, V7437, V7438, V7439, V7440)) end end end end end end end end, fun (V7441) -> fun (V7442) -> fun (V7443) -> fun (V7444) -> fun (V7445) -> fun (V7446) -> fun (V7447) -> fun (V7448) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V7441, V7442, V7443, V7444, V7445, V7446, V7447, V7448)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V7449) -> fun (V7450) -> fun (V7451) -> fun (V7452) -> fun (V7453) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V7449, V7450, V7451, V7452, V7453)) end end end end end, fun (V7454) -> fun (V7455) -> fun (V7456) -> fun (V7457) -> fun (V7458) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V7454, V7455, V7456, V7457, V7458)) end end end end end, fun (V7459) -> fun (V7460) -> fun (V7461) -> fun (V7462) -> fun (V7463) -> fun (V7464) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V7459, V7460, V7461, V7462, V7463, V7464)) end end end end end end, fun (V7465) -> fun (V7466) -> fun (V7467) -> fun (V7468) -> fun (V7469) -> fun (V7470) -> fun (V7471) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7465, V7466, V7467, V7468, V7469, V7470, V7471)) end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V7422, ((begin (V7477 = fun (V7473) -> fun (V7474) -> fun (V7475) -> fun (V7476) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7475, V7476)) end end end end), fun (V7478) -> fun (V7479) -> ((((V7477('erased'))('erased'))(V7478))(V7479)) end end end(fun (V7472) -> ('Idris.Idris2.Builtin':'un--snd'(V7472)) end))(V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V7425, ((begin (V7485 = fun (V7481) -> fun (V7482) -> fun (V7483) -> fun (V7484) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7483, V7484)) end end end end), fun (V7486) -> fun (V7487) -> ((((V7485('erased'))('erased'))(V7486))(V7487)) end end end(fun (V7480) -> ('Idris.Idris2.Builtin':'un--snd'(V7480)) end))(V11)))))); 0 -> begin (V7488 = ('nested--14746-23552--in--un--localsIn'(V2, V7422, V7421, V7420, V7425, V7424, V7423, V11, V9, V8, V6, V5, V4, V3, V1, V0, V7422))), fun (V7489) -> begin (V7490 = (V7488(V7489))), case V7490 of {'Prelude.Types.Left', V7491} -> {'Prelude.Types.Left', V7491}; {'Prelude.Types.Right', V7492} -> (begin (V7502 = begin (V7493 = ('nested--14746-23552--in--un--localsIn'(V2, V7422, V7421, V7420, V7425, V7424, V7423, V11, V9, V8, V6, V5, V4, V3, V1, V0, V7425))), fun (V7494) -> begin (V7495 = (V7493(V7494))), case V7495 of {'Prelude.Types.Left', V7496} -> {'Prelude.Types.Left', V7496}; {'Prelude.Types.Right', V7497} -> (begin (V7501 = begin (V7498 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V7492, V7497)) of 1 -> 1; 0 -> case case (V7492 =:= V7497) of 'false' -> 0; _ -> 1 end of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V11)))); 0 -> 0 end end), case case case V7498 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V7499, V7500} -> V7500 end, 2)) end of 1 -> case ('nested--14746-23551--in--un--pv'(V2, V7422, V7421, V7420, V7425, V7424, V7423, V11, V9, V8, V6, V5, V4, V3, V1, V0, V7420)) of 1 -> 0; 0 -> 1 end; 0 -> 0 end of 1 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V7420, V7421, V7422}, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V7423, V7424, V7425}, V11})); 0 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Core.Value.NMeta', V7423, V7424, V7425}, V11, {'Core.Value.NApp', V6, {'Core.Value.NMeta', V7420, V7421, V7422}, V8})) end end), V7501 end(V7494)) end end end end), V7502 end(V7489)) end end end end end), V7503 end(V7427)) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Core.Value.NMeta', V7420, V7421, V7422}, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> case V10 of {'Core.Value.NMeta', V7504, V7505, V7506} -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Core.Unify.MkUnifyInfo', V7507, V7508} -> V7508 end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Core.Value.NMeta', V7504, V7505, V7506}, V11, {'Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, {'Core.Value.NMeta', V7504, V7505, V7506}, V11})) end; _ -> case V3 of {'Core.Unify.MkUnifyInfo', V7509, V7510} -> case V7510 of 3 -> case V7 of {'Core.Value.NRef', V7511, V7512} -> case V10 of {'Core.Value.NRef', V7513, V7514} -> begin (V7515 = {'Core.Unify.MkUnifyInfo', V7509, 3}), begin (V7516 = {'Core.Value.NRef', V7511, V7512}), begin (V7517 = {'Core.Value.NRef', V7513, V7514}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V7512, V7514)) of 1 -> ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V7518) -> fun (V7519) -> fun (V7520) -> fun (V7521) -> fun (V7522) -> fun (V7523) -> fun (V7524) -> fun (V7525) -> ('dn--un--unifyD_Unify_Closure'(V7518, V7519, V7520, V7521, V7522, V7523, V7524, V7525)) end end end end end end end end, fun (V7526) -> fun (V7527) -> fun (V7528) -> fun (V7529) -> fun (V7530) -> fun (V7531) -> fun (V7532) -> fun (V7533) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V7526, V7527, V7528, V7529, V7530, V7531, V7532, V7533)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V7534) -> fun (V7535) -> fun (V7536) -> fun (V7537) -> fun (V7538) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V7534, V7535, V7536, V7537, V7538)) end end end end end, fun (V7539) -> fun (V7540) -> fun (V7541) -> fun (V7542) -> fun (V7543) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V7539, V7540, V7541, V7542, V7543)) end end end end end, fun (V7544) -> fun (V7545) -> fun (V7546) -> fun (V7547) -> fun (V7548) -> fun (V7549) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V7544, V7545, V7546, V7547, V7548, V7549)) end end end end end end, fun (V7550) -> fun (V7551) -> fun (V7552) -> fun (V7553) -> fun (V7554) -> fun (V7555) -> fun (V7556) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7550, V7551, V7552, V7553, V7554, V7555, V7556)) end end end end end end end}}, V2, V0, V1, V7515, V4, V5, ((begin (V7562 = fun (V7558) -> fun (V7559) -> fun (V7560) -> fun (V7561) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7560, V7561)) end end end end), fun (V7563) -> fun (V7564) -> ((((V7562('erased'))('erased'))(V7563))(V7564)) end end end(fun (V7557) -> ('Idris.Idris2.Builtin':'un--snd'(V7557)) end))(V8)), ((begin (V7570 = fun (V7566) -> fun (V7567) -> fun (V7568) -> fun (V7569) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7568, V7569)) end end end end), fun (V7571) -> fun (V7572) -> ((((V7570('erased'))('erased'))(V7571))(V7572)) end end end(fun (V7565) -> ('Idris.Idris2.Builtin':'un--snd'(V7565)) end))(V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V7515, V4, V5, V6, V7516, V8, {'Core.Value.NApp', V9, V7517, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Core.Value.NRef', V7573, V7574} -> case V10 of {'Core.Value.NRef', V7575, V7576} -> begin (V7577 = {'Core.Unify.MkUnifyInfo', V7509, 2}), begin (V7578 = {'Core.Value.NRef', V7573, V7574}), begin (V7579 = {'Core.Value.NRef', V7575, V7576}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V7574, V7576)) of 1 -> begin (V7628 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, 5, begin (V7585 = begin (V7580 = V0), fun (V7581) -> begin (V7584 = (begin (V7582 = V7580), fun (V7583) -> ('erlang':'get'(V7582)) end end(V7581))), {'Prelude.Types.Right', V7584} end end end), fun (V7586) -> begin (V7587 = (V7585(V7586))), case V7587 of {'Prelude.Types.Left', V7588} -> {'Prelude.Types.Left', V7588}; {'Prelude.Types.Right', V7589} -> (begin (V7627 = begin (V7599 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V7590) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V7589, V5, V7590)) end, ((begin (V7596 = fun (V7592) -> fun (V7593) -> fun (V7594) -> fun (V7595) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7594, V7595)) end end end end), fun (V7597) -> fun (V7598) -> ((((V7596('erased'))('erased'))(V7597))(V7598)) end end end(fun (V7591) -> ('Idris.Idris2.Builtin':'un--snd'(V7591)) end))(V8)), []))), fun (V7600) -> begin (V7601 = (V7599(V7600))), case V7601 of {'Prelude.Types.Left', V7602} -> {'Prelude.Types.Left', V7602}; {'Prelude.Types.Right', V7603} -> (begin (V7626 = begin (V7613 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V7604) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V7589, V5, V7604)) end, ((begin (V7610 = fun (V7606) -> fun (V7607) -> fun (V7608) -> fun (V7609) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7608, V7609)) end end end end), fun (V7611) -> fun (V7612) -> ((((V7610('erased'))('erased'))(V7611))(V7612)) end end end(fun (V7605) -> ('Idris.Idris2.Builtin':'un--snd'(V7605)) end))(V11)), []))), fun (V7614) -> begin (V7615 = (V7613(V7614))), case V7615 of {'Prelude.Types.Left', V7616} -> {'Prelude.Types.Left', V7616}; {'Prelude.Types.Right', V7617} -> (begin (V7625 = fun (V7618) -> {'Prelude.Types.Right', <<<<"Matching args "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V7619) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V7619)) end, fun (V7620) -> fun (V7621) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V7620, V7621)) end end}, V7603))/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V7622) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V7622)) end, fun (V7623) -> fun (V7624) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V7623, V7624)) end end}, V7617))/binary>>/binary>>/binary>>} end), V7625 end(V7614)) end end end end), V7626 end(V7600)) end end end end), V7627 end(V7586)) end end end end))), fun (V7629) -> begin (V7630 = (V7628(V7629))), case V7630 of {'Prelude.Types.Left', V7631} -> {'Prelude.Types.Left', V7631}; {'Prelude.Types.Right', V7632} -> (begin (V7688 = ('un--unifyArgs'({'Builtin.MkPair', {'Core.Unify.dn--un--__mkUnify', fun (V7633) -> fun (V7634) -> fun (V7635) -> fun (V7636) -> fun (V7637) -> fun (V7638) -> fun (V7639) -> fun (V7640) -> ('dn--un--unifyD_Unify_Closure'(V7633, V7634, V7635, V7636, V7637, V7638, V7639, V7640)) end end end end end end end end, fun (V7641) -> fun (V7642) -> fun (V7643) -> fun (V7644) -> fun (V7645) -> fun (V7646) -> fun (V7647) -> fun (V7648) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V7641, V7642, V7643, V7644, V7645, V7646, V7647, V7648)) end end end end end end end end}, {'Core.Normalise.Quote.dn--un--__mkQuote', fun (V7649) -> fun (V7650) -> fun (V7651) -> fun (V7652) -> fun (V7653) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V7649, V7650, V7651, V7652, V7653)) end end end end end, fun (V7654) -> fun (V7655) -> fun (V7656) -> fun (V7657) -> fun (V7658) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V7654, V7655, V7656, V7657, V7658)) end end end end end, fun (V7659) -> fun (V7660) -> fun (V7661) -> fun (V7662) -> fun (V7663) -> fun (V7664) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V7659, V7660, V7661, V7662, V7663, V7664)) end end end end end end, fun (V7665) -> fun (V7666) -> fun (V7667) -> fun (V7668) -> fun (V7669) -> fun (V7670) -> fun (V7671) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V7665, V7666, V7667, V7668, V7669, V7670, V7671)) end end end end end end end}}, V2, V0, V1, V7577, V4, V5, ((begin (V7677 = fun (V7673) -> fun (V7674) -> fun (V7675) -> fun (V7676) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7675, V7676)) end end end end), fun (V7678) -> fun (V7679) -> ((((V7677('erased'))('erased'))(V7678))(V7679)) end end end(fun (V7672) -> ('Idris.Idris2.Builtin':'un--snd'(V7672)) end))(V8)), ((begin (V7685 = fun (V7681) -> fun (V7682) -> fun (V7683) -> fun (V7684) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V7683, V7684)) end end end end), fun (V7686) -> fun (V7687) -> ((((V7685('erased'))('erased'))(V7686))(V7687)) end end end(fun (V7680) -> ('Idris.Idris2.Builtin':'un--snd'(V7680)) end))(V11))))), V7688 end(V7629)) end end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V7577, V4, V5, V6, V7578, V8, {'Core.Value.NApp', V9, V7579, V11})) end end end end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Core.Value.NApp', V9, V10, V11})) end end end end end.
'un--unifyArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of [] -> fun (V9) -> case V8 of [] -> {'Prelude.Types.Right', ('un--success'())}; _ -> ('un--ufail'(V5, <<""/utf8>>, V9)) end end; [E0 | E1] -> (fun (V10, V11) -> case V8 of [E2 | E3] -> (fun (V12, V13) -> begin (V14 = ('un--unifyArgs'(V0, V1, V2, V3, V4, V5, V6, V11, V13))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V26 = begin (V19 = ((('un--unify'(('Idris.Idris2.Builtin':'un--fst'(V0)), V1, V2, V3, ('un--lower'(V4)), V5, V6))(V10))(V12))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V25 = fun (V24) -> {'Prelude.Types.Right', ('un--union'(V23, V18))} end), V25 end(V20)) end end end end), V26 end(V15)) end end end end end(E2, E3)); _ -> fun (V27) -> ('un--ufail'(V5, <<""/utf8>>, V27)) end end end(E0, E1)); _ -> fun (V28) -> ('un--ufail'(V5, <<""/utf8>>, V28)) end end.
'un--unifyApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V8 of {'Core.Value.NMeta', V11, V12, V13} -> ('un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V7, V11, V12, V13, ((begin (V19 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V17, V18)) end end end end), fun (V20) -> fun (V21) -> ((((V19('erased'))('erased'))(V20))(V21)) end end end(fun (V14) -> ('Idris.Idris2.Builtin':'un--snd'(V14)) end))(V9)), V10)); _ -> case V10 of {'Core.Value.NApp', V22, V23, V24} -> case V23 of {'Core.Value.NMeta', V25, V26, V27} -> ('un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V22, V25, V26, V27, ((begin (V33 = fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V31, V32)) end end end end), fun (V34) -> fun (V35) -> ((((V33('erased'))('erased'))(V34))(V35)) end end end(fun (V28) -> ('Idris.Idris2.Builtin':'un--snd'(V28)) end))(V24)), {'Core.Value.NApp', V7, V8, V9})); _ -> case V8 of {'Core.Value.NRef', V36, V37} -> begin (V38 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Name against app, unifyIfEq"/utf8>> end))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V43 = case V3 of 1 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, V10, {'Core.Value.NApp', V7, {'Core.Value.NRef', V36, V37}, V9})); 0 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, {'Core.Value.NApp', V7, {'Core.Value.NRef', V36, V37}, V9}, V10)) end), V43 end(V39)) end end end end; {'Core.Value.NLocal', V44, V45} -> case V9 of [] -> case V10 of {'Core.Value.NApp', V46, V47, V48} -> case V47 of {'Core.Value.NLocal', V49, V50} -> case V48 of [] -> begin (V56 = begin (V51 = V0), fun (V52) -> begin (V55 = (begin (V53 = V51), fun (V54) -> ('erlang':'get'(V53)) end end(V52))), {'Prelude.Types.Right', V55} end end end), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V62 = case case (V45 =:= V50) of 'false' -> 0; _ -> 1 end of 1 -> fun (V61) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing var"/utf8>>, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, []}, {'Core.Value.NApp', V46, {'Core.Value.NLocal', V49, V50}, []})) end), V62 end(V57)) end end end end; _ -> case V10 of {'Core.Value.NBind', V63, V64, V65, V66} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NDCon', V67, V68, V69, V70, V71} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NTCon', V72, V73, V74, V75, V76} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NPrimVal', V77, V78} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NType', V79, V80} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); _ -> case V3 of 0 -> begin (V86 = begin (V81 = V0), fun (V82) -> begin (V85 = (begin (V83 = V81), fun (V84) -> ('erlang':'get'(V83)) end end(V82))), {'Prelude.Types.Right', V85} end end end), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V101 = begin (V91 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V90, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V100 = case V95 of 1 -> fun (V96) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V98 = fun (V97) -> V97 end), fun (V99) -> (V98(V99)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V100 end(V92)) end end end end), V101 end(V87)) end end end end; 1 -> begin (V107 = begin (V102 = V0), fun (V103) -> begin (V106 = (begin (V104 = V102), fun (V105) -> ('erlang':'get'(V104)) end end(V103))), {'Prelude.Types.Right', V106} end end end), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V122 = begin (V112 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V111, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V113) -> begin (V114 = (V112(V113))), case V114 of {'Prelude.Types.Left', V115} -> {'Prelude.Types.Left', V115}; {'Prelude.Types.Right', V116} -> (begin (V121 = case V116 of 1 -> fun (V117) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V119 = fun (V118) -> V118 end), fun (V120) -> (V119(V120)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V121 end(V113)) end end end end), V122 end(V108)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V123, V124, V125, V126} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NDCon', V127, V128, V129, V130, V131} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NTCon', V132, V133, V134, V135, V136} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NPrimVal', V137, V138} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NType', V139, V140} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); _ -> case V3 of 0 -> begin (V146 = begin (V141 = V0), fun (V142) -> begin (V145 = (begin (V143 = V141), fun (V144) -> ('erlang':'get'(V143)) end end(V142))), {'Prelude.Types.Right', V145} end end end), fun (V147) -> begin (V148 = (V146(V147))), case V148 of {'Prelude.Types.Left', V149} -> {'Prelude.Types.Left', V149}; {'Prelude.Types.Right', V150} -> (begin (V161 = begin (V151 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V150, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V152) -> begin (V153 = (V151(V152))), case V153 of {'Prelude.Types.Left', V154} -> {'Prelude.Types.Left', V154}; {'Prelude.Types.Right', V155} -> (begin (V160 = case V155 of 1 -> fun (V156) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V158 = fun (V157) -> V157 end), fun (V159) -> (V158(V159)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V160 end(V152)) end end end end), V161 end(V147)) end end end end; 1 -> begin (V167 = begin (V162 = V0), fun (V163) -> begin (V166 = (begin (V164 = V162), fun (V165) -> ('erlang':'get'(V164)) end end(V163))), {'Prelude.Types.Right', V166} end end end), fun (V168) -> begin (V169 = (V167(V168))), case V169 of {'Prelude.Types.Left', V170} -> {'Prelude.Types.Left', V170}; {'Prelude.Types.Right', V171} -> (begin (V182 = begin (V172 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V171, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V173) -> begin (V174 = (V172(V173))), case V174 of {'Prelude.Types.Left', V175} -> {'Prelude.Types.Left', V175}; {'Prelude.Types.Right', V176} -> (begin (V181 = case V176 of 1 -> fun (V177) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V179 = fun (V178) -> V178 end), fun (V180) -> (V179(V180)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V181 end(V173)) end end end end), V182 end(V168)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V183, V184, V185, V186} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NDCon', V187, V188, V189, V190, V191} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NTCon', V192, V193, V194, V195, V196} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NPrimVal', V197, V198} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NType', V199, V200} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); _ -> case V3 of 0 -> begin (V206 = begin (V201 = V0), fun (V202) -> begin (V205 = (begin (V203 = V201), fun (V204) -> ('erlang':'get'(V203)) end end(V202))), {'Prelude.Types.Right', V205} end end end), fun (V207) -> begin (V208 = (V206(V207))), case V208 of {'Prelude.Types.Left', V209} -> {'Prelude.Types.Left', V209}; {'Prelude.Types.Right', V210} -> (begin (V221 = begin (V211 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V210, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V212) -> begin (V213 = (V211(V212))), case V213 of {'Prelude.Types.Left', V214} -> {'Prelude.Types.Left', V214}; {'Prelude.Types.Right', V215} -> (begin (V220 = case V215 of 1 -> fun (V216) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V218 = fun (V217) -> V217 end), fun (V219) -> (V218(V219)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V220 end(V212)) end end end end), V221 end(V207)) end end end end; 1 -> begin (V227 = begin (V222 = V0), fun (V223) -> begin (V226 = (begin (V224 = V222), fun (V225) -> ('erlang':'get'(V224)) end end(V223))), {'Prelude.Types.Right', V226} end end end), fun (V228) -> begin (V229 = (V227(V228))), case V229 of {'Prelude.Types.Left', V230} -> {'Prelude.Types.Left', V230}; {'Prelude.Types.Right', V231} -> (begin (V242 = begin (V232 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V231, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V233) -> begin (V234 = (V232(V233))), case V234 of {'Prelude.Types.Left', V235} -> {'Prelude.Types.Left', V235}; {'Prelude.Types.Right', V236} -> (begin (V241 = case V236 of 1 -> fun (V237) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V239 = fun (V238) -> V238 end), fun (V240) -> (V239(V240)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V241 end(V233)) end end end end), V242 end(V228)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V243, V244, V245, V246} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NDCon', V247, V248, V249, V250, V251} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NTCon', V252, V253, V254, V255, V256} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NPrimVal', V257, V258} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); {'Core.Value.NType', V259, V260} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V44, V45}, V9}, V10)); _ -> case V3 of 0 -> begin (V266 = begin (V261 = V0), fun (V262) -> begin (V265 = (begin (V263 = V261), fun (V264) -> ('erlang':'get'(V263)) end end(V262))), {'Prelude.Types.Right', V265} end end end), fun (V267) -> begin (V268 = (V266(V267))), case V268 of {'Prelude.Types.Left', V269} -> {'Prelude.Types.Left', V269}; {'Prelude.Types.Right', V270} -> (begin (V281 = begin (V271 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V270, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V272) -> begin (V273 = (V271(V272))), case V273 of {'Prelude.Types.Left', V274} -> {'Prelude.Types.Left', V274}; {'Prelude.Types.Right', V275} -> (begin (V280 = case V275 of 1 -> fun (V276) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V278 = fun (V277) -> V277 end), fun (V279) -> (V278(V279)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V280 end(V272)) end end end end), V281 end(V267)) end end end end; 1 -> begin (V287 = begin (V282 = V0), fun (V283) -> begin (V286 = (begin (V284 = V282), fun (V285) -> ('erlang':'get'(V284)) end end(V283))), {'Prelude.Types.Right', V286} end end end), fun (V288) -> begin (V289 = (V287(V288))), case V289 of {'Prelude.Types.Left', V290} -> {'Prelude.Types.Left', V290}; {'Prelude.Types.Right', V291} -> (begin (V302 = begin (V292 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V291, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V293) -> begin (V294 = (V292(V293))), case V294 of {'Prelude.Types.Left', V295} -> {'Prelude.Types.Left', V295}; {'Prelude.Types.Right', V296} -> (begin (V301 = case V296 of 1 -> fun (V297) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V299 = fun (V298) -> V298 end), fun (V300) -> (V299(V300)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V301 end(V293)) end end end end), V302 end(V288)) end end end end end end end; _ -> case V3 of 0 -> begin (V308 = begin (V303 = V0), fun (V304) -> begin (V307 = (begin (V305 = V303), fun (V306) -> ('erlang':'get'(V305)) end end(V304))), {'Prelude.Types.Right', V307} end end end), fun (V309) -> begin (V310 = (V308(V309))), case V310 of {'Prelude.Types.Left', V311} -> {'Prelude.Types.Left', V311}; {'Prelude.Types.Right', V312} -> (begin (V323 = begin (V313 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V312, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V314) -> begin (V315 = (V313(V314))), case V315 of {'Prelude.Types.Left', V316} -> {'Prelude.Types.Left', V316}; {'Prelude.Types.Right', V317} -> (begin (V322 = case V317 of 1 -> fun (V318) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V320 = fun (V319) -> V319 end), fun (V321) -> (V320(V321)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V322 end(V314)) end end end end), V323 end(V309)) end end end end; 1 -> begin (V329 = begin (V324 = V0), fun (V325) -> begin (V328 = (begin (V326 = V324), fun (V327) -> ('erlang':'get'(V326)) end end(V325))), {'Prelude.Types.Right', V328} end end end), fun (V330) -> begin (V331 = (V329(V330))), case V331 of {'Prelude.Types.Left', V332} -> {'Prelude.Types.Left', V332}; {'Prelude.Types.Right', V333} -> (begin (V344 = begin (V334 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V333, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V335) -> begin (V336 = (V334(V335))), case V336 of {'Prelude.Types.Left', V337} -> {'Prelude.Types.Left', V337}; {'Prelude.Types.Right', V338} -> (begin (V343 = case V338 of 1 -> fun (V339) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V341 = fun (V340) -> V340 end), fun (V342) -> (V341(V342)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V343 end(V335)) end end end end), V344 end(V330)) end end end end end end end; {'Core.Value.NErased', V345, V346} -> case V346 of {'Core.TT.Dotted', V347} -> ('un--unifyApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V347)); _ -> case V8 of {'Core.Value.NRef', V348, V349} -> begin (V350 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Name against app, unifyIfEq"/utf8>> end))), fun (V351) -> begin (V352 = (V350(V351))), case V352 of {'Prelude.Types.Left', V353} -> {'Prelude.Types.Left', V353}; {'Prelude.Types.Right', V354} -> (begin (V355 = case V3 of 1 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, V10, {'Core.Value.NApp', V7, {'Core.Value.NRef', V348, V349}, V9})); 0 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, {'Core.Value.NApp', V7, {'Core.Value.NRef', V348, V349}, V9}, V10)) end), V355 end(V351)) end end end end; {'Core.Value.NLocal', V356, V357} -> case V9 of [] -> case V10 of {'Core.Value.NApp', V358, V359, V360} -> case V359 of {'Core.Value.NLocal', V361, V362} -> case V360 of [] -> begin (V368 = begin (V363 = V0), fun (V364) -> begin (V367 = (begin (V365 = V363), fun (V366) -> ('erlang':'get'(V365)) end end(V364))), {'Prelude.Types.Right', V367} end end end), fun (V369) -> begin (V370 = (V368(V369))), case V370 of {'Prelude.Types.Left', V371} -> {'Prelude.Types.Left', V371}; {'Prelude.Types.Right', V372} -> (begin (V374 = case case (V357 =:= V362) of 'false' -> 0; _ -> 1 end of 1 -> fun (V373) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing var"/utf8>>, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, []}, {'Core.Value.NApp', V358, {'Core.Value.NLocal', V361, V362}, []})) end), V374 end(V369)) end end end end; _ -> case V10 of {'Core.Value.NBind', V375, V376, V377, V378} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NDCon', V379, V380, V381, V382, V383} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NTCon', V384, V385, V386, V387, V388} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NPrimVal', V389, V390} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NType', V391, V392} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); _ -> case V3 of 0 -> begin (V398 = begin (V393 = V0), fun (V394) -> begin (V397 = (begin (V395 = V393), fun (V396) -> ('erlang':'get'(V395)) end end(V394))), {'Prelude.Types.Right', V397} end end end), fun (V399) -> begin (V400 = (V398(V399))), case V400 of {'Prelude.Types.Left', V401} -> {'Prelude.Types.Left', V401}; {'Prelude.Types.Right', V402} -> (begin (V413 = begin (V403 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V402, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V404) -> begin (V405 = (V403(V404))), case V405 of {'Prelude.Types.Left', V406} -> {'Prelude.Types.Left', V406}; {'Prelude.Types.Right', V407} -> (begin (V412 = case V407 of 1 -> fun (V408) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V410 = fun (V409) -> V409 end), fun (V411) -> (V410(V411)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V412 end(V404)) end end end end), V413 end(V399)) end end end end; 1 -> begin (V419 = begin (V414 = V0), fun (V415) -> begin (V418 = (begin (V416 = V414), fun (V417) -> ('erlang':'get'(V416)) end end(V415))), {'Prelude.Types.Right', V418} end end end), fun (V420) -> begin (V421 = (V419(V420))), case V421 of {'Prelude.Types.Left', V422} -> {'Prelude.Types.Left', V422}; {'Prelude.Types.Right', V423} -> (begin (V434 = begin (V424 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V423, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V425) -> begin (V426 = (V424(V425))), case V426 of {'Prelude.Types.Left', V427} -> {'Prelude.Types.Left', V427}; {'Prelude.Types.Right', V428} -> (begin (V433 = case V428 of 1 -> fun (V429) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V431 = fun (V430) -> V430 end), fun (V432) -> (V431(V432)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V433 end(V425)) end end end end), V434 end(V420)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V435, V436, V437, V438} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NDCon', V439, V440, V441, V442, V443} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NTCon', V444, V445, V446, V447, V448} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NPrimVal', V449, V450} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NType', V451, V452} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); _ -> case V3 of 0 -> begin (V458 = begin (V453 = V0), fun (V454) -> begin (V457 = (begin (V455 = V453), fun (V456) -> ('erlang':'get'(V455)) end end(V454))), {'Prelude.Types.Right', V457} end end end), fun (V459) -> begin (V460 = (V458(V459))), case V460 of {'Prelude.Types.Left', V461} -> {'Prelude.Types.Left', V461}; {'Prelude.Types.Right', V462} -> (begin (V473 = begin (V463 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V462, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V464) -> begin (V465 = (V463(V464))), case V465 of {'Prelude.Types.Left', V466} -> {'Prelude.Types.Left', V466}; {'Prelude.Types.Right', V467} -> (begin (V472 = case V467 of 1 -> fun (V468) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V470 = fun (V469) -> V469 end), fun (V471) -> (V470(V471)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V472 end(V464)) end end end end), V473 end(V459)) end end end end; 1 -> begin (V479 = begin (V474 = V0), fun (V475) -> begin (V478 = (begin (V476 = V474), fun (V477) -> ('erlang':'get'(V476)) end end(V475))), {'Prelude.Types.Right', V478} end end end), fun (V480) -> begin (V481 = (V479(V480))), case V481 of {'Prelude.Types.Left', V482} -> {'Prelude.Types.Left', V482}; {'Prelude.Types.Right', V483} -> (begin (V494 = begin (V484 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V483, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V485) -> begin (V486 = (V484(V485))), case V486 of {'Prelude.Types.Left', V487} -> {'Prelude.Types.Left', V487}; {'Prelude.Types.Right', V488} -> (begin (V493 = case V488 of 1 -> fun (V489) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V491 = fun (V490) -> V490 end), fun (V492) -> (V491(V492)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V493 end(V485)) end end end end), V494 end(V480)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V495, V496, V497, V498} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NDCon', V499, V500, V501, V502, V503} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NTCon', V504, V505, V506, V507, V508} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NPrimVal', V509, V510} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NType', V511, V512} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); _ -> case V3 of 0 -> begin (V518 = begin (V513 = V0), fun (V514) -> begin (V517 = (begin (V515 = V513), fun (V516) -> ('erlang':'get'(V515)) end end(V514))), {'Prelude.Types.Right', V517} end end end), fun (V519) -> begin (V520 = (V518(V519))), case V520 of {'Prelude.Types.Left', V521} -> {'Prelude.Types.Left', V521}; {'Prelude.Types.Right', V522} -> (begin (V533 = begin (V523 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V522, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V524) -> begin (V525 = (V523(V524))), case V525 of {'Prelude.Types.Left', V526} -> {'Prelude.Types.Left', V526}; {'Prelude.Types.Right', V527} -> (begin (V532 = case V527 of 1 -> fun (V528) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V530 = fun (V529) -> V529 end), fun (V531) -> (V530(V531)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V532 end(V524)) end end end end), V533 end(V519)) end end end end; 1 -> begin (V539 = begin (V534 = V0), fun (V535) -> begin (V538 = (begin (V536 = V534), fun (V537) -> ('erlang':'get'(V536)) end end(V535))), {'Prelude.Types.Right', V538} end end end), fun (V540) -> begin (V541 = (V539(V540))), case V541 of {'Prelude.Types.Left', V542} -> {'Prelude.Types.Left', V542}; {'Prelude.Types.Right', V543} -> (begin (V554 = begin (V544 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V543, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V545) -> begin (V546 = (V544(V545))), case V546 of {'Prelude.Types.Left', V547} -> {'Prelude.Types.Left', V547}; {'Prelude.Types.Right', V548} -> (begin (V553 = case V548 of 1 -> fun (V549) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V551 = fun (V550) -> V550 end), fun (V552) -> (V551(V552)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V553 end(V545)) end end end end), V554 end(V540)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V555, V556, V557, V558} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NDCon', V559, V560, V561, V562, V563} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NTCon', V564, V565, V566, V567, V568} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NPrimVal', V569, V570} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); {'Core.Value.NType', V571, V572} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V356, V357}, V9}, V10)); _ -> case V3 of 0 -> begin (V578 = begin (V573 = V0), fun (V574) -> begin (V577 = (begin (V575 = V573), fun (V576) -> ('erlang':'get'(V575)) end end(V574))), {'Prelude.Types.Right', V577} end end end), fun (V579) -> begin (V580 = (V578(V579))), case V580 of {'Prelude.Types.Left', V581} -> {'Prelude.Types.Left', V581}; {'Prelude.Types.Right', V582} -> (begin (V593 = begin (V583 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V582, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V584) -> begin (V585 = (V583(V584))), case V585 of {'Prelude.Types.Left', V586} -> {'Prelude.Types.Left', V586}; {'Prelude.Types.Right', V587} -> (begin (V592 = case V587 of 1 -> fun (V588) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V590 = fun (V589) -> V589 end), fun (V591) -> (V590(V591)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V592 end(V584)) end end end end), V593 end(V579)) end end end end; 1 -> begin (V599 = begin (V594 = V0), fun (V595) -> begin (V598 = (begin (V596 = V594), fun (V597) -> ('erlang':'get'(V596)) end end(V595))), {'Prelude.Types.Right', V598} end end end), fun (V600) -> begin (V601 = (V599(V600))), case V601 of {'Prelude.Types.Left', V602} -> {'Prelude.Types.Left', V602}; {'Prelude.Types.Right', V603} -> (begin (V614 = begin (V604 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V603, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V605) -> begin (V606 = (V604(V605))), case V606 of {'Prelude.Types.Left', V607} -> {'Prelude.Types.Left', V607}; {'Prelude.Types.Right', V608} -> (begin (V613 = case V608 of 1 -> fun (V609) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V611 = fun (V610) -> V610 end), fun (V612) -> (V611(V612)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V613 end(V605)) end end end end), V614 end(V600)) end end end end end end end; _ -> case V3 of 0 -> begin (V620 = begin (V615 = V0), fun (V616) -> begin (V619 = (begin (V617 = V615), fun (V618) -> ('erlang':'get'(V617)) end end(V616))), {'Prelude.Types.Right', V619} end end end), fun (V621) -> begin (V622 = (V620(V621))), case V622 of {'Prelude.Types.Left', V623} -> {'Prelude.Types.Left', V623}; {'Prelude.Types.Right', V624} -> (begin (V635 = begin (V625 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V624, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V626) -> begin (V627 = (V625(V626))), case V627 of {'Prelude.Types.Left', V628} -> {'Prelude.Types.Left', V628}; {'Prelude.Types.Right', V629} -> (begin (V634 = case V629 of 1 -> fun (V630) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V632 = fun (V631) -> V631 end), fun (V633) -> (V632(V633)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V634 end(V626)) end end end end), V635 end(V621)) end end end end; 1 -> begin (V641 = begin (V636 = V0), fun (V637) -> begin (V640 = (begin (V638 = V636), fun (V639) -> ('erlang':'get'(V638)) end end(V637))), {'Prelude.Types.Right', V640} end end end), fun (V642) -> begin (V643 = (V641(V642))), case V643 of {'Prelude.Types.Left', V644} -> {'Prelude.Types.Left', V644}; {'Prelude.Types.Right', V645} -> (begin (V656 = begin (V646 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V645, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V647) -> begin (V648 = (V646(V647))), case V648 of {'Prelude.Types.Left', V649} -> {'Prelude.Types.Left', V649}; {'Prelude.Types.Right', V650} -> (begin (V655 = case V650 of 1 -> fun (V651) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V653 = fun (V652) -> V652 end), fun (V654) -> (V653(V654)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V655 end(V647)) end end end end), V656 end(V642)) end end end end end end end; _ -> case V8 of {'Core.Value.NRef', V657, V658} -> begin (V659 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, 10, fun () -> <<"Name against app, unifyIfEq"/utf8>> end))), fun (V660) -> begin (V661 = (V659(V660))), case V661 of {'Prelude.Types.Left', V662} -> {'Prelude.Types.Left', V662}; {'Prelude.Types.Right', V663} -> (begin (V664 = case V3 of 1 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, V10, {'Core.Value.NApp', V7, {'Core.Value.NRef', V657, V658}, V9})); 0 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, {'Core.Value.NApp', V7, {'Core.Value.NRef', V657, V658}, V9}, V10)) end), V664 end(V660)) end end end end; {'Core.Value.NLocal', V665, V666} -> case V9 of [] -> case V10 of {'Core.Value.NApp', V667, V668, V669} -> case V668 of {'Core.Value.NLocal', V670, V671} -> case V669 of [] -> begin (V677 = begin (V672 = V0), fun (V673) -> begin (V676 = (begin (V674 = V672), fun (V675) -> ('erlang':'get'(V674)) end end(V673))), {'Prelude.Types.Right', V676} end end end), fun (V678) -> begin (V679 = (V677(V678))), case V679 of {'Prelude.Types.Left', V680} -> {'Prelude.Types.Left', V680}; {'Prelude.Types.Right', V681} -> (begin (V683 = case case (V666 =:= V671) of 'false' -> 0; _ -> 1 end of 1 -> fun (V682) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing var"/utf8>>, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, []}, {'Core.Value.NApp', V667, {'Core.Value.NLocal', V670, V671}, []})) end), V683 end(V678)) end end end end; _ -> case V10 of {'Core.Value.NBind', V684, V685, V686, V687} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NDCon', V688, V689, V690, V691, V692} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NTCon', V693, V694, V695, V696, V697} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NPrimVal', V698, V699} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NType', V700, V701} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); _ -> case V3 of 0 -> begin (V707 = begin (V702 = V0), fun (V703) -> begin (V706 = (begin (V704 = V702), fun (V705) -> ('erlang':'get'(V704)) end end(V703))), {'Prelude.Types.Right', V706} end end end), fun (V708) -> begin (V709 = (V707(V708))), case V709 of {'Prelude.Types.Left', V710} -> {'Prelude.Types.Left', V710}; {'Prelude.Types.Right', V711} -> (begin (V722 = begin (V712 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V711, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V713) -> begin (V714 = (V712(V713))), case V714 of {'Prelude.Types.Left', V715} -> {'Prelude.Types.Left', V715}; {'Prelude.Types.Right', V716} -> (begin (V721 = case V716 of 1 -> fun (V717) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V719 = fun (V718) -> V718 end), fun (V720) -> (V719(V720)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V721 end(V713)) end end end end), V722 end(V708)) end end end end; 1 -> begin (V728 = begin (V723 = V0), fun (V724) -> begin (V727 = (begin (V725 = V723), fun (V726) -> ('erlang':'get'(V725)) end end(V724))), {'Prelude.Types.Right', V727} end end end), fun (V729) -> begin (V730 = (V728(V729))), case V730 of {'Prelude.Types.Left', V731} -> {'Prelude.Types.Left', V731}; {'Prelude.Types.Right', V732} -> (begin (V743 = begin (V733 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V732, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V734) -> begin (V735 = (V733(V734))), case V735 of {'Prelude.Types.Left', V736} -> {'Prelude.Types.Left', V736}; {'Prelude.Types.Right', V737} -> (begin (V742 = case V737 of 1 -> fun (V738) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V740 = fun (V739) -> V739 end), fun (V741) -> (V740(V741)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V742 end(V734)) end end end end), V743 end(V729)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V744, V745, V746, V747} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NDCon', V748, V749, V750, V751, V752} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NTCon', V753, V754, V755, V756, V757} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NPrimVal', V758, V759} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NType', V760, V761} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); _ -> case V3 of 0 -> begin (V767 = begin (V762 = V0), fun (V763) -> begin (V766 = (begin (V764 = V762), fun (V765) -> ('erlang':'get'(V764)) end end(V763))), {'Prelude.Types.Right', V766} end end end), fun (V768) -> begin (V769 = (V767(V768))), case V769 of {'Prelude.Types.Left', V770} -> {'Prelude.Types.Left', V770}; {'Prelude.Types.Right', V771} -> (begin (V782 = begin (V772 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V771, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V773) -> begin (V774 = (V772(V773))), case V774 of {'Prelude.Types.Left', V775} -> {'Prelude.Types.Left', V775}; {'Prelude.Types.Right', V776} -> (begin (V781 = case V776 of 1 -> fun (V777) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V779 = fun (V778) -> V778 end), fun (V780) -> (V779(V780)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V781 end(V773)) end end end end), V782 end(V768)) end end end end; 1 -> begin (V788 = begin (V783 = V0), fun (V784) -> begin (V787 = (begin (V785 = V783), fun (V786) -> ('erlang':'get'(V785)) end end(V784))), {'Prelude.Types.Right', V787} end end end), fun (V789) -> begin (V790 = (V788(V789))), case V790 of {'Prelude.Types.Left', V791} -> {'Prelude.Types.Left', V791}; {'Prelude.Types.Right', V792} -> (begin (V803 = begin (V793 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V792, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V794) -> begin (V795 = (V793(V794))), case V795 of {'Prelude.Types.Left', V796} -> {'Prelude.Types.Left', V796}; {'Prelude.Types.Right', V797} -> (begin (V802 = case V797 of 1 -> fun (V798) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V800 = fun (V799) -> V799 end), fun (V801) -> (V800(V801)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V802 end(V794)) end end end end), V803 end(V789)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V804, V805, V806, V807} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NDCon', V808, V809, V810, V811, V812} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NTCon', V813, V814, V815, V816, V817} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NPrimVal', V818, V819} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NType', V820, V821} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); _ -> case V3 of 0 -> begin (V827 = begin (V822 = V0), fun (V823) -> begin (V826 = (begin (V824 = V822), fun (V825) -> ('erlang':'get'(V824)) end end(V823))), {'Prelude.Types.Right', V826} end end end), fun (V828) -> begin (V829 = (V827(V828))), case V829 of {'Prelude.Types.Left', V830} -> {'Prelude.Types.Left', V830}; {'Prelude.Types.Right', V831} -> (begin (V842 = begin (V832 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V831, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V833) -> begin (V834 = (V832(V833))), case V834 of {'Prelude.Types.Left', V835} -> {'Prelude.Types.Left', V835}; {'Prelude.Types.Right', V836} -> (begin (V841 = case V836 of 1 -> fun (V837) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V839 = fun (V838) -> V838 end), fun (V840) -> (V839(V840)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V841 end(V833)) end end end end), V842 end(V828)) end end end end; 1 -> begin (V848 = begin (V843 = V0), fun (V844) -> begin (V847 = (begin (V845 = V843), fun (V846) -> ('erlang':'get'(V845)) end end(V844))), {'Prelude.Types.Right', V847} end end end), fun (V849) -> begin (V850 = (V848(V849))), case V850 of {'Prelude.Types.Left', V851} -> {'Prelude.Types.Left', V851}; {'Prelude.Types.Right', V852} -> (begin (V863 = begin (V853 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V852, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V854) -> begin (V855 = (V853(V854))), case V855 of {'Prelude.Types.Left', V856} -> {'Prelude.Types.Left', V856}; {'Prelude.Types.Right', V857} -> (begin (V862 = case V857 of 1 -> fun (V858) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V860 = fun (V859) -> V859 end), fun (V861) -> (V860(V861)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V862 end(V854)) end end end end), V863 end(V849)) end end end end end end end; _ -> case V10 of {'Core.Value.NBind', V864, V865, V866, V867} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NDCon', V868, V869, V870, V871, V872} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NTCon', V873, V874, V875, V876, V877} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NPrimVal', V878, V879} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); {'Core.Value.NType', V880, V881} -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Core.Value.NApp', V7, {'Core.Value.NLocal', V665, V666}, V9}, V10)); _ -> case V3 of 0 -> begin (V887 = begin (V882 = V0), fun (V883) -> begin (V886 = (begin (V884 = V882), fun (V885) -> ('erlang':'get'(V884)) end end(V883))), {'Prelude.Types.Right', V886} end end end), fun (V888) -> begin (V889 = (V887(V888))), case V889 of {'Prelude.Types.Left', V890} -> {'Prelude.Types.Left', V890}; {'Prelude.Types.Right', V891} -> (begin (V902 = begin (V892 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V891, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V893) -> begin (V894 = (V892(V893))), case V894 of {'Prelude.Types.Left', V895} -> {'Prelude.Types.Left', V895}; {'Prelude.Types.Right', V896} -> (begin (V901 = case V896 of 1 -> fun (V897) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V899 = fun (V898) -> V898 end), fun (V900) -> (V899(V900)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V901 end(V893)) end end end end), V902 end(V888)) end end end end; 1 -> begin (V908 = begin (V903 = V0), fun (V904) -> begin (V907 = (begin (V905 = V903), fun (V906) -> ('erlang':'get'(V905)) end end(V904))), {'Prelude.Types.Right', V907} end end end), fun (V909) -> begin (V910 = (V908(V909))), case V910 of {'Prelude.Types.Left', V911} -> {'Prelude.Types.Left', V911}; {'Prelude.Types.Right', V912} -> (begin (V923 = begin (V913 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V912, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V914) -> begin (V915 = (V913(V914))), case V915 of {'Prelude.Types.Left', V916} -> {'Prelude.Types.Left', V916}; {'Prelude.Types.Right', V917} -> (begin (V922 = case V917 of 1 -> fun (V918) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V920 = fun (V919) -> V919 end), fun (V921) -> (V920(V921)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V922 end(V914)) end end end end), V923 end(V909)) end end end end end end end; _ -> case V3 of 0 -> begin (V929 = begin (V924 = V0), fun (V925) -> begin (V928 = (begin (V926 = V924), fun (V927) -> ('erlang':'get'(V926)) end end(V925))), {'Prelude.Types.Right', V928} end end end), fun (V930) -> begin (V931 = (V929(V930))), case V931 of {'Prelude.Types.Left', V932} -> {'Prelude.Types.Left', V932}; {'Prelude.Types.Right', V933} -> (begin (V944 = begin (V934 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V933, V6, {'Core.Value.NApp', V7, V8, V9}, V10))), fun (V935) -> begin (V936 = (V934(V935))), case V936 of {'Prelude.Types.Left', V937} -> {'Prelude.Types.Left', V937}; {'Prelude.Types.Right', V938} -> (begin (V943 = case V938 of 1 -> fun (V939) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, (begin (V941 = fun (V940) -> V940 end), fun (V942) -> (V941(V942)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V943 end(V935)) end end end end), V944 end(V930)) end end end end; 1 -> begin (V950 = begin (V945 = V0), fun (V946) -> begin (V949 = (begin (V947 = V945), fun (V948) -> ('erlang':'get'(V947)) end end(V946))), {'Prelude.Types.Right', V949} end end end), fun (V951) -> begin (V952 = (V950(V951))), case V952 of {'Prelude.Types.Left', V953} -> {'Prelude.Types.Left', V953}; {'Prelude.Types.Right', V954} -> (begin (V965 = begin (V955 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V954, V6, V10, {'Core.Value.NApp', V7, V8, V9}))), fun (V956) -> begin (V957 = (V955(V956))), case V957 of {'Prelude.Types.Left', V958} -> {'Prelude.Types.Left', V958}; {'Prelude.Types.Right', V959} -> (begin (V964 = case V959 of 1 -> fun (V960) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, (begin (V962 = fun (V961) -> V961 end), fun (V963) -> (V962(V963)) end end(<<"Postponing constraint"/utf8>>)), V6, {'Core.Value.NApp', V7, V8, V9}, V10)) end), V964 end(V956)) end end end end), V965 end(V951)) end end end end end end end end.
'un--unify'(V0, V1, V2, V3, V4, V5, V6) -> case V0 of {'Core.Unify.dn--un--__mkUnify', V7, V8} -> fun (V9) -> fun (V10) -> ((((((((V7(V1))(V2))(V3))(V4))(V5))(V6))(V9))(V10)) end end end.
'un--ufail'(V0, V1, V2) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V0, V1}, V2)).
'un--tryInstantiate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> begin (V17 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(V3, V0, <<"unify.instantiate"/utf8>>, 5, fun () -> <<<<"Instantiating in "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V14)) end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V15, V16)) end end}, V3))/binary>> end, V13))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V237 = begin (V47 = fun (V22) -> case V10 of {'Core.Context.Context.MkGlobalDef', V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44} -> case V24 of {'Core.Name.PV', V45, V46} -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.PatternVariableUnifies', V2, V4, ('Idris.Idris2.Core.TT':'un--getLoc'(V12)), V6, {'Core.Name.PV', V45, V46}, V12}, V22)); _ -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end end), fun (V48) -> begin (V49 = (V47(V48))), case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> (begin (V236 = begin (V57 = begin (V52 = V0), fun (V53) -> begin (V56 = (begin (V54 = V52), fun (V55) -> ('erlang':'get'(V54)) end end(V53))), {'Prelude.Types.Right', V56} end end end), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V235 = begin (V84 = ('Idris.Idris2.Core.Normalise':'un--normalisePis'(V0, [], V61, {'Core.Env.Nil'}, case V10 of {'Core.Context.Context.MkGlobalDef', V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83} -> V64 end))), fun (V85) -> begin (V86 = (V84(V85))), case V86 of {'Prelude.Types.Left', V87} -> {'Prelude.Types.Left', V87}; {'Prelude.Types.Right', V88} -> (begin (V234 = begin (V111 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"unify.instantiate"/utf8>>, 5, fun () -> <<<<"Type: "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))/binary>> end, case V10 of {'Core.Context.Context.MkGlobalDef', V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110} -> V91 end))), fun (V112) -> begin (V113 = (V111(V112))), case V113 of {'Prelude.Types.Left', V114} -> {'Prelude.Types.Left', V114}; {'Prelude.Types.Right', V115} -> (begin (V233 = begin (V116 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"unify.instantiate"/utf8>>, 5, fun () -> <<<<"Type: "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))/binary>> end, V88))), fun (V117) -> begin (V118 = (V116(V117))), case V118 of {'Prelude.Types.Left', V119} -> {'Prelude.Types.Left', V119}; {'Prelude.Types.Right', V120} -> (begin (V232 = begin (V124 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, 5, fun () -> <<<<"With locs: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V121) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V121)) end, fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V122, V123)) end end}, V11))/binary>> end))), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V231 = begin (V132 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, 5, fun () -> <<<<"From vars: "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V129) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V129)) end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V130, V131)) end end}, V3))/binary>> end))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V230 = begin (V142 = begin (V137 = V0), fun (V138) -> begin (V141 = (begin (V139 = V137), fun (V140) -> ('erlang':'get'(V139)) end end(V138))), {'Prelude.Types.Right', V141} end end end), fun (V143) -> begin (V144 = (V142(V143))), case V144 of {'Prelude.Types.Left', V145} -> {'Prelude.Types.Left', V145}; {'Prelude.Types.Right', V146} -> (begin (V229 = begin (V147 = ('nested--11525-16581--in--un--mkDef'(V2, V3, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, [], V3, V11, {'Core.Unify.INil'}, V13, V88))), fun (V148) -> begin (V149 = (V147(V148))), case V149 of {'Prelude.Types.Left', V150} -> {'Prelude.Types.Left', V150}; {'Prelude.Types.Right', V151} -> (begin (V228 = case V151 of {'Prelude.Types.Just', V152} -> begin (V159 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, (begin (V154 = fun (V153) -> V153 end), fun (V155) -> (V154(V155)) end end(<<"unify.instantiate"/utf8>>)), 5, fun () -> (begin (V157 = fun (V156) -> V156 end), fun (V158) -> (V157(V158)) end end(<<"Definition"/utf8>>)) end, V152))), fun (V160) -> begin (V161 = (V159(V160))), case V161 of {'Prelude.Types.Left', V162} -> {'Prelude.Types.Left', V162}; {'Prelude.Types.Right', V163} -> (begin (V220 = begin (V164 = {'Core.Context.Context.MkPMDefInfo', {'Core.Context.Context.SolvedHole', V9}, case ('Idris.Idris2.Core.Name':'un--isUserName'(V7)) of 1 -> 0; 0 -> ('nested--11525-16578--in--un--isSimple'(V2, V3, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V152)) end, 0}), begin (V187 = case V10 of {'Core.Context.Context.MkGlobalDef', V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186} -> {'Core.Context.Context.MkGlobalDef', V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, {'Core.Context.Context.PMDef', V164, [], {'Core.Case.CaseTree.STerm', 0, V152}, {'Core.Case.CaseTree.STerm', 0, V152}, []}, V183, V184, V185, V186} end), begin (V207 = begin (V188 = ('Idris.Idris2.Core.Context':'un--addDef'(V0, {'Core.Name.Resolved', V8}, V187))), ((begin (V204 = fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V201, V202, V203)) end end end end end), fun (V205) -> fun (V206) -> ((((V204('erased'))('erased'))(V205))(V206)) end end end((begin (V196 = fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> case V193 of {'Prelude.Types.Left', V194} -> {'Prelude.Types.Left', V194}; {'Prelude.Types.Right', V195} -> {'Prelude.Types.Right', (V192(V195))} end end end end end), fun (V197) -> fun (V198) -> ((((V196('erased'))('erased'))(V197))(V198)) end end end(fun (V189) -> {'Builtin.MkUnit'} end))))(V188)) end), fun (V208) -> begin (V209 = (V207(V208))), case V209 of {'Prelude.Types.Left', V210} -> {'Prelude.Types.Left', V210}; {'Prelude.Types.Right', V211} -> (begin (V219 = begin (V212 = ('Idris.Idris2.Core.UnifyState':'un--removeHole'(V1, V8))), fun (V213) -> begin (V214 = (V212(V213))), case V214 of {'Prelude.Types.Left', V215} -> {'Prelude.Types.Left', V215}; {'Prelude.Types.Right', V216} -> (begin (V218 = fun (V217) -> {'Prelude.Types.Right', 1} end), V218 end(V213)) end end end end), V219 end(V208)) end end end end end end), V220 end(V160)) end end end end; _ -> begin (V221 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, 5, fun () -> <<"Postponed"/utf8>> end))), fun (V222) -> begin (V223 = (V221(V222))), case V223 of {'Prelude.Types.Left', V224} -> {'Prelude.Types.Left', V224}; {'Prelude.Types.Right', V225} -> (begin (V227 = fun (V226) -> {'Prelude.Types.Right', 0} end), V227 end(V222)) end end end end end), V228 end(V148)) end end end end), V229 end(V143)) end end end end), V230 end(V133)) end end end end), V231 end(V125)) end end end end), V232 end(V117)) end end end end), V233 end(V112)) end end end end), V234 end(V85)) end end end end), V235 end(V58)) end end end end), V236 end(V48)) end end end end), V237 end(V18)) end end end end.
'un--toSubVars'(V0, V1) -> case V0 of [] -> {'Builtin.DPair.MkDPair', [], {'Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V2, V3) -> case ('un--toSubVars'(V3, ('Idris.Idris2.Core.TT':'un--dropFirst'(V1)))) of {'Builtin.DPair.MkDPair', V4, V5} -> case ('nested--10059-15226--in--un--anyFirst'(V2, V3, V1, V1)) of 1 -> {'Builtin.DPair.MkDPair', [V2 | V4], {'Core.TT.KeepCons', V5}}; 0 -> {'Builtin.DPair.MkDPair', V4, {'Core.TT.DropCons', V5}} end end end(E0, E1)) end.
'un--success'() -> {'Core.Unify.MkUnifyResult', [], 0, [], {'Core.Unify.NoLazy'}}.
'un--solvedHole'(V0) -> {'Core.Unify.MkUnifyResult', [], 1, [V0 | []], {'Core.Unify.NoLazy'}}.
'un--solveIfUndefined'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Core.TT.Meta', V6, V7, V8, V9} -> begin (V15 = begin (V10 = V1), fun (V11) -> begin (V14 = (begin (V12 = V10), fun (V13) -> ('erlang':'get'(V12)) end end(V11))), {'Prelude.Types.Right', V14} end end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V64 = begin (V52 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Core.Name.Resolved', V8}, case V19 of {'Core.Context.MkDefs', V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51} -> V20 end))), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V63 = begin (V57 = {'Core.TT.Meta', V6, V7, V8, V9}), case V56 of {'Prelude.Types.Just', V58} -> case V58 of {'Core.Context.Context.Hole', V59, V60} -> ('un--updateSolution'(V0, V1, V2, V3, V57, V5)); _ -> fun (V61) -> {'Prelude.Types.Right', 0} end end; _ -> fun (V62) -> {'Prelude.Types.Right', 0} end end end), V63 end(V53)) end end end end), V64 end(V16)) end end end end; {'Core.TT.Erased', V65, V66} -> case V66 of {'Core.TT.Dotted', V67} -> ('un--solveIfUndefined'(V0, V1, V2, V3, V67, V5)); _ -> fun (V68) -> {'Prelude.Types.Right', 0} end end; _ -> fun (V69) -> {'Prelude.Types.Right', 0} end end.
'un--solveHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> begin (V21 = begin (V16 = V0), fun (V17) -> begin (V20 = (begin (V18 = V16), fun (V19) -> ('erlang':'get'(V18)) end end(V17))), {'Prelude.Types.Right', V20} end end end), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V107 = begin (V31 = begin (V26 = V1), fun (V27) -> begin (V30 = (begin (V28 = V26), fun (V29) -> ('erlang':'get'(V28)) end end(V27))), {'Prelude.Types.Right', V30} end end end), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V106 = begin (V37 = fun (V36) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V25, V36)) end), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V105 = case case ('nested--14603-21145--in--un--solutionHeadSame'(V2, V3, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V15)) of 1 -> 1; 0 -> ('nested--14603-21144--in--un--inNoSolve'(V2, V3, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V8, case V35 of {'Core.UnifyState.MkUState', V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53} -> V47 end)) end of 1 -> fun (V54) -> {'Prelude.Types.Right', {'Prelude.Types.Just', ('un--success'())}} end; 0 -> begin (V87 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Core.Name.Resolved', V8}, case V25 of {'Core.Context.MkDefs', V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86} -> V55 end))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V104 = case V91 of {'Prelude.Types.Just', V92} -> begin (V93 = ('un--tryInstantiate'(V0, V1, V3, V2, V4, V5, V6, V7, V8, ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V9)), V92, V11, V13, V14))), fun (V94) -> begin (V95 = (V93(V94))), case V95 of {'Prelude.Types.Left', V96} -> {'Prelude.Types.Left', V96}; {'Prelude.Types.Right', V97} -> (begin (V99 = fun (V98) -> {'Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--toMaybe'(V97, fun () -> ('un--solvedHole'(V8)) end))} end), V99 end(V94)) end end end end; {'Prelude.Types.Nothing'} -> fun (V100) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<(begin (V102 = fun (V101) -> V101 end), fun (V103) -> (V102(V103)) end end(<<"Can\x{27}t happen: Lost hole "/utf8>>))/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))/binary>>}, V100)) end end), V104 end(V88)) end end end end end), V105 end(V38)) end end end end), V106 end(V32)) end end end end), V107 end(V22)) end end end end.
'un--solveConstraintsAfter'(V0, V1, V2, V3, V4) -> begin (V10 = begin (V5 = V1), fun (V6) -> begin (V9 = (begin (V7 = V5), fun (V8) -> ('erlang':'get'(V7)) end end(V6))), {'Prelude.Types.Right', V9} end end end), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V39 = begin (V29 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V15) -> ('un--retryGuess'(V0, V1, V3, V4, V15)) end, ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V16) -> ('nested--27313-30703--in--un--afterStart'(V4, V3, V2, V1, V0, V16)) end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V14 of {'Core.UnifyState.MkUState', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28} -> V18 end)))), []))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V38 = case ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Interfaces.Bool.Semigroup':'dn--un--<+>_Semigroup_AnyBool'(V34, V35)) end end, 0}, fun (V36) -> V36 end, V33)) of 1 -> ('un--solveConstraintsAfter'(V0, V1, V2, V3, 0)); 0 -> fun (V37) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V38 end(V30)) end end end end), V39 end(V11)) end end end end.
'un--solveConstraints'(V0, V1, V2, V3) -> begin (V9 = begin (V4 = V1), fun (V5) -> begin (V8 = (begin (V6 = V4), fun (V7) -> ('erlang':'get'(V6)) end end(V5))), {'Prelude.Types.Right', V8} end end end), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V37 = begin (V27 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V14) -> ('un--retryGuess'(V0, V1, V2, V3, V14)) end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V13 of {'Core.UnifyState.MkUState', V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26} -> V16 end)), []))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V36 = case ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.Interfaces.Bool.Semigroup':'dn--un--<+>_Semigroup_AnyBool'(V32, V33)) end end, 0}, fun (V34) -> V34 end, V31)) of 1 -> ('un--solveConstraints'(V0, V1, V2, 0)); 0 -> fun (V35) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V36 end(V28)) end end end end), V37 end(V10)) end end end end.
'un--setInvertible'(V0, V1, V2) -> begin (V8 = begin (V3 = V0), fun (V4) -> begin (V7 = (begin (V5 = V3), fun (V6) -> ('erlang':'get'(V5)) end end(V4))), {'Prelude.Types.Right', V7} end end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V93 = begin (V45 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V12 of {'Core.Context.MkDefs', V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44} -> V13 end))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V92 = case V49 of {'Prelude.Types.Just', V50} -> begin (V73 = ('Idris.Idris2.Core.Context':'un--addDef'(V0, V2, case V50 of {'Core.Context.Context.MkGlobalDef', V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72} -> {'Core.Context.Context.MkGlobalDef', V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, 1, V66, V67, V68, V69, V70, V71, V72} end))), ((begin (V89 = fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V86, V87, V88)) end end end end end), fun (V90) -> fun (V91) -> ((((V89('erased'))('erased'))(V90))(V91)) end end end((begin (V81 = fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> {'Prelude.Types.Right', (V77(V80))} end end end end end), fun (V82) -> fun (V83) -> ((((V81('erased'))('erased'))(V82))(V83)) end end end(fun (V74) -> {'Builtin.MkUnit'} end))))(V73)) end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V1, V2)) end), V92 end(V46)) end end end end), V93 end(V9)) end end end end.
'un--retryGuess'(V0, V1, V2, V3, V4) -> case V4 of {'Builtin.MkPair', V5, V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> begin (V14 = begin (V9 = V0), fun (V10) -> begin (V13 = (begin (V11 = V9), fun (V12) -> ('erlang':'get'(V11)) end end(V10))), {'Prelude.Types.Right', V13} end end end), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V82 = begin (V51 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Core.Name.Resolved', V5}, case V18 of {'Core.Context.MkDefs', V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50} -> V19 end))), fun (V52) -> begin (V53 = (V51(V52))), case V53 of {'Prelude.Types.Left', V54} -> {'Prelude.Types.Left', V54}; {'Prelude.Types.Right', V55} -> (begin (V81 = case V55 of {'Prelude.Types.Nothing'} -> fun (V56) -> {'Prelude.Types.Right', 0} end; {'Prelude.Types.Just', V57} -> begin (V58 = {'Prelude.Types.Just', V57}), ('case--case block in retryGuess-29226'(V5, V7, V8, V3, V2, V1, V0, V18, V57, V58, case V57 of {'Core.Context.Context.MkGlobalDef', V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80} -> V76 end)) end end), V81 end(V52)) end end end end), V82 end(V15)) end end end end end end.
'un--retry'(V0, V1, V2, V3) -> begin (V9 = begin (V4 = V1), fun (V5) -> begin (V8 = (begin (V6 = V4), fun (V7) -> ('erlang':'get'(V6)) end end(V5))), {'Prelude.Types.Right', V8} end end end), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V26 = ('case--retry-28524'(V0, V3, V2, V1, V13, ('Idris.Idris2.Libraries.Data.IntMap':'un--lookup'(V3, case V13 of {'Core.UnifyState.MkUState', V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25} -> V18 end))))), V26 end(V10)) end end end end.
'un--recoverable'(V0) -> case V0 of {'Core.Core.UndefinedName', V1, V2} -> 0; {'Core.Core.InType', V3, V4, V5} -> ('un--recoverable'(V5)); {'Core.Core.InCon', V6, V7, V8} -> ('un--recoverable'(V8)); {'Core.Core.InLHS', V9, V10, V11} -> ('un--recoverable'(V11)); {'Core.Core.InRHS', V12, V13, V14} -> ('un--recoverable'(V14)); {'Core.Core.WhenUnifying', V15, V16, V17, V18, V19, V20, V21} -> ('un--recoverable'(V21)); {'Core.Core.MaybeMisspelling', V22, V23} -> ('un--recoverable'(V22)); _ -> 1 end.
'un--postponeS'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V3 of 1 -> ('un--postpone'(V0, V1, V2, V4, ('un--lower'(V5)), V6, V7, V9, V8)); 0 -> ('un--postpone'(V0, V1, V2, V4, V5, V6, V7, V8, V9)) end.
'un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> begin (V20 = {'Core.Value.NApp', V5, {'Core.Value.NMeta', V7, V8, V9}, ((begin (V17 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V15, V16)) end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V12) -> {'Builtin.MkPair', {'Core.FC.EmptyFC'}, V12} end))(V10))}), begin (V26 = begin (V21 = V0), fun (V22) -> begin (V25 = (begin (V23 = V21), fun (V24) -> ('erlang':'get'(V23)) end end(V22))), {'Prelude.Types.Right', V25} end end end), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V41 = begin (V31 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V30, V6, V20, V11))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V40 = case V35 of 1 -> fun (V36) -> {'Prelude.Types.Right', ('un--success'())} end; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, (begin (V38 = fun (V37) -> V37 end), fun (V39) -> (V38(V39)) end end(<<"Not in pattern fragment"/utf8>>)), V6, V20, V11)) end), V40 end(V32)) end end end end), V41 end(V27)) end end end end end.
'un--postpone'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V14 = begin (V9 = V1), fun (V10) -> begin (V13 = (begin (V11 = V9), fun (V12) -> ('erlang':'get'(V11)) end end(V10))), {'Prelude.Types.Right', V13} end end end), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V104 = begin (V20 = fun (V19) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V18, V19)) end), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V103 = begin (V58 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V1, <<"unify.postpone"/utf8>>, 10, begin (V25 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V18, V6, V7))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V57 = begin (V30 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V18, V6, V8))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V56 = begin (V39 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Core.Context.dn--un--__mkHasNames', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V37, V38)) end end}, V29))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V55 = begin (V48 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Core.Context.dn--un--__mkHasNames', fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V44, V45)) end end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V46, V47)) end end}, V34))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V54 = fun (V53) -> {'Prelude.Types.Right', <<V5/binary, <<<<": "/utf8>>/binary, <<('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V43))/binary, <<<<" =?= "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V52))/binary>>/binary>>/binary>>/binary>>} end), V54 end(V49)) end end end end), V55 end(V40)) end end end end), V56 end(V31)) end end end end), V57 end(V26)) end end end end))), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V102 = begin (V63 = ('nested--9220-14462--in--un--checkDefined'(V0, V8, V7, V6, V5, V4, V3, V2, V1, V18, V7))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V101 = begin (V68 = ('nested--9220-14462--in--un--checkDefined'(V0, V8, V7, V6, V5, V4, V3, V2, V1, V18, V8))), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V100 = begin (V75 = ('Idris.Idris2.Core.UnifyState':'un--addConstraint'(V2, V1, {'Core.UnifyState.MkConstraint', V0, V3, case V4 of {'Core.Unify.MkUnifyInfo', V73, V74} -> V73 end, V6, V7, V8}))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V99 = begin (V80 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.postpone"/utf8>>, 10, fun () -> <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V79))/binary, <<<<" NEW CONSTRAINT "/utf8>>/binary, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3))/binary>>/binary>> end))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V98 = begin (V85 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify.postpone"/utf8>>, 10, fun () -> <<"X"/utf8>> end, V6, V7))), fun (V86) -> begin (V87 = (V85(V86))), case V87 of {'Prelude.Types.Left', V88} -> {'Prelude.Types.Left', V88}; {'Prelude.Types.Right', V89} -> (begin (V97 = begin (V90 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify.postpone"/utf8>>, 10, fun () -> <<"Y"/utf8>> end, V6, V8))), fun (V91) -> begin (V92 = (V90(V91))), case V92 of {'Prelude.Types.Left', V93} -> {'Prelude.Types.Left', V93}; {'Prelude.Types.Right', V94} -> (begin (V96 = fun (V95) -> {'Prelude.Types.Right', ('un--constrain'(V79))} end), V96 end(V91)) end end end end), V97 end(V86)) end end end end), V98 end(V81)) end end end end), V99 end(V76)) end end end end), V100 end(V69)) end end end end), V101 end(V64)) end end end end), V102 end(V59)) end end end end), V103 end(V21)) end end end end), V104 end(V15)) end end end end.
'un--patternEnvTm'(V0, V1, V2, V3, V4) -> begin (V10 = begin (V5 = V0), fun (V6) -> begin (V9 = (begin (V7 = V5), fun (V8) -> ('erlang':'get'(V7)) end end(V6))), {'Prelude.Types.Right', V9} end end end), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V23 = begin (V16 = fun (V15) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V14, V15)) end), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V22 = fun (V21) -> {'Prelude.Types.Right', ('case--patternEnvTm-15797'(V2, V4, V3, V1, V0, V14, V20, ('un--getVarsTm'([], V4))))} end), V22 end(V17)) end end end end), V23 end(V11)) end end end end.
'un--patternEnv'(V0, V1, V2, V3, V4) -> begin (V10 = begin (V5 = V0), fun (V6) -> begin (V9 = (begin (V7 = V5), fun (V8) -> ('erlang':'get'(V7)) end end(V6))), {'Prelude.Types.Right', V9} end end end), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V30 = begin (V16 = fun (V15) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V14, V15)) end), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V29 = begin (V22 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V21) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalArg'(V0, V2, V20, V21)) end, V4, []))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V28 = fun (V27) -> {'Prelude.Types.Right', ('case--patternEnv-15476'(V2, V4, V3, V1, V0, V14, V20, V26, ('un--getVars'(V2, [], V26))))} end), V28 end(V23)) end end end end), V29 end(V17)) end end end end), V30 end(V11)) end end end end.
'un--occursCheck'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('un--getMetaNames'(V1, V6))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V42 = ('case--occursCheck-16144'(V0, V6, V5, V4, V3, V2, V1, V11, ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V23)) end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V27, V28, V29, V30)) end end end end end end end, fun (V31) -> fun (V32) -> V32 end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V35, V36, V37)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V38, V39)) end end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V40, V41)) end end}, V5, V11))))), V42 end(V8)) end end end end.
'un--lower'(V0) -> case V0 of {'Core.Unify.MkUnifyInfo', V1, V2} -> {'Core.Unify.MkUnifyInfo', 0, V2} end.
'un--isHoleApp'(V0) -> case V0 of {'Core.Value.NApp', V1, V2, V3} -> case V2 of {'Core.Value.NMeta', V4, V5, V6} -> 1; _ -> 0 end; _ -> 0 end.
'un--isDefInvertible'(V0, V1, V2) -> begin (V8 = begin (V3 = V0), fun (V4) -> begin (V7 = (begin (V5 = V3), fun (V6) -> ('erlang':'get'(V5)) end end(V4))), {'Prelude.Types.Right', V7} end end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V75 = begin (V45 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Core.Name.Resolved', V2}, case V12 of {'Core.Context.MkDefs', V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44} -> V13 end))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V74 = fun (V50) -> case V49 of {'Prelude.Types.Just', V51} -> {'Prelude.Types.Right', case V51 of {'Core.Context.Context.MkGlobalDef', V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73} -> V66 end}; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.UndefinedName', V1, {'Core.Name.Resolved', V2}}, V50)) end end), V74 end(V46)) end end end end), V75 end(V9)) end end end end.
'un--inTerm'() -> {'Core.Unify.MkUnifyInfo', 1, 1}.
'un--inSearch'() -> {'Core.Unify.MkUnifyInfo', 1, 3}.
'un--inMatch'() -> {'Core.Unify.MkUnifyInfo', 1, 2}.
'un--inLHS'() -> {'Core.Unify.MkUnifyInfo', 1, 0}.
'un--headsConvert'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Prelude.Types.Just', V8} -> case V7 of {'Prelude.Types.Just', V9} -> ('case--headsConvert-19925'(V0, V8, V9, V5, V4, V3, V2, V1, {'Builtin.MkPair', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V9))})); _ -> begin (V10 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.head"/utf8>>, 10, fun () -> <<"Nothing to convert"/utf8>> end))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', 1} end), V16 end(V11)) end end end end end; _ -> begin (V17 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.head"/utf8>>, 10, fun () -> <<"Nothing to convert"/utf8>> end))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V23 = fun (V22) -> {'Prelude.Types.Right', 1} end), V23 end(V18)) end end end end end.
'un--giveUpConstraints'(V0, V1) -> begin (V7 = begin (V2 = V1), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V25 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V12) -> ('nested--27393-30770--in--un--constraintToHole'(V1, V0, V12)) end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V11 of {'Core.UnifyState.MkUState', V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24} -> V14 end))))), V25 end(V8)) end end end end.
'un--getVarsTm'(V0, V1) -> case V1 of [] -> {'Prelude.Types.Just', []}; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Core.TT.Local', V4, V5, V6} -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V18)) end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V22, V23, V24, V25)) end end end end end end end, fun (V26) -> fun (V27) -> V27 end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V30, V31, V32)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V33) -> fun (V34) -> case (V33 =:= V34) of 'false' -> 0; _ -> 1 end end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V35, V36)) end end}, V6, V0)) of 1 -> {'Prelude.Types.Nothing'}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('un--getVarsTm'([V6 | V0], V3)), fun (V37) -> {'Prelude.Types.Just', [V6 | V37]} end)) end; _ -> {'Prelude.Types.Nothing'} end end(E0, E1)) end.
'un--getVars'(V0, V1, V2) -> case V2 of [] -> {'Prelude.Types.Just', []}; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Core.Value.NErased', V5, V6} -> case V6 of {'Core.TT.Dotted', V7} -> ('un--getVars'(V0, V1, [V7 | V4])); _ -> {'Prelude.Types.Nothing'} end; {'Core.Value.NApp', V8, V9, V10} -> case V9 of {'Core.Value.NLocal', V11, V12} -> case V10 of [] -> case ('nested--9894-15099--in--un--inArgs'(V0, V12, V11, V8, V4, V1, V12, V1)) of 1 -> {'Prelude.Types.Nothing'}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('un--getVars'(V0, [V12 | V1], V4)), fun (V13) -> {'Prelude.Types.Just', [V12 | V13]} end)) end; _ -> {'Prelude.Types.Nothing'} end; _ -> {'Prelude.Types.Nothing'} end; {'Core.Value.NAs', V14, V15, V16, V17} -> ('un--getVars'(V0, V1, [V17 | V4])); _ -> {'Prelude.Types.Nothing'} end end(E0, E1)) end.
'un--getMetaNames'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.TT':'un--getMetas'(V1))), ('un--chaseMetas'(V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V2)), ('Idris.Idris2.Libraries.Data.NameMap':'un--empty'()))) end.
'un--getIVars'(V0) -> case V0 of {'Core.Unify.INil'} -> []; {'Core.Unify.ICons', V1, V2} -> [V1 | ('un--getIVars'(V2))] end.
'un--getArgTypes'(V0, V1, V2, V3, V4) -> case V3 of {'Core.Value.NBind', V5, V6, V7, V8} -> case V7 of {'Core.TT.Pi', V9, V10, V11, V12} -> case V4 of [E0 | E1] -> (fun (V13, V14) -> begin (V21 = begin (V15 = ((V8(V2))(V13))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V20 = ('un--getArgTypes'(V0, V1, V2, V19, V14))), V20 end(V16)) end end end end), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V35 = case V25 of {'Prelude.Types.Just', V26} -> begin (V27 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V2, V12))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V33 = fun (V32) -> {'Prelude.Types.Right', {'Prelude.Types.Just', [V31 | V26]}} end), V33 end(V28)) end end end end; {'Prelude.Types.Nothing'} -> fun (V34) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end), V35 end(V22)) end end end end end(E0, E1)); _ -> fun (V36) -> case V4 of [] -> {'Prelude.Types.Right', {'Prelude.Types.Just', []}}; _ -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end; _ -> fun (V37) -> case V4 of [] -> {'Prelude.Types.Right', {'Prelude.Types.Just', []}}; _ -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end; _ -> fun (V38) -> case V4 of [] -> {'Prelude.Types.Right', {'Prelude.Types.Just', []}}; _ -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end.
'un--forceMeta'(V0, V1, V2) -> case V1 of 0 -> {'Core.TT.TForce', ('Idris.Idris2.Core.TT':'un--getLoc'(V2)), V0, V2}; _ -> begin (V3 = (V1 - 1)), case V2 of {'Core.TT.Bind', V4, V5, V6, V7} -> {'Core.TT.Bind', V4, V5, V6, ('un--forceMeta'(V0, V3, V7))}; _ -> {'Core.TT.TForce', ('Idris.Idris2.Core.TT':'un--getLoc'(V2)), V0, V2} end end end.
'un--dumpArg'(V0, V1, V2, V3) -> case V3 of {'Core.Value.MkClosure', V4, V5, V6, V7, V8} -> begin (V14 = begin (V9 = V1), fun (V10) -> begin (V13 = (begin (V11 = V9), fun (V12) -> ('erlang':'get'(V11)) end end(V10))), {'Prelude.Types.Right', V13} end end end), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V38 = begin (V20 = fun (V19) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V18, V19)) end), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V37 = begin (V25 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, V0)), V1, <<"unify"/utf8>>, 20, fun () -> <<"Term: "/utf8>> end, V8))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V36 = begin (V30 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V24, {'Core.Value.MkClosure', V4, V5, V6, V7, V8}))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V35 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 20, fun () -> <<"  "/utf8>> end, V2, V34))), V35 end(V31)) end end end end), V36 end(V26)) end end end end), V37 end(V21)) end end end end), V38 end(V15)) end end end end; _ -> begin (V44 = begin (V39 = V1), fun (V40) -> begin (V43 = (begin (V41 = V39), fun (V42) -> ('erlang':'get'(V41)) end end(V40))), {'Prelude.Types.Right', V43} end end end), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V62 = begin (V50 = fun (V49) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V48, V49)) end), fun (V51) -> begin (V52 = (V50(V51))), case V52 of {'Prelude.Types.Left', V53} -> {'Prelude.Types.Left', V53}; {'Prelude.Types.Right', V54} -> (begin (V61 = begin (V55 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V54, V3))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V60 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, 20, fun () -> <<"  "/utf8>> end, V2, V59))), V60 end(V56)) end end end end), V61 end(V51)) end end end end), V62 end(V45)) end end end end end.
'un--delayMeta'(V0, V1, V2, V3, V4) -> case V2 of 0 -> {'Core.TT.TDelay', ('Idris.Idris2.Core.TT':'un--getLoc'(V4)), V1, V3, V4}; _ -> begin (V5 = (V2 - 1)), case V4 of {'Core.TT.Bind', V6, V7, V8, V9} -> {'Core.TT.Bind', V6, V7, V8, ('un--delayMeta'([V7 | V0], V1, V5, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V3)), V9))}; _ -> {'Core.TT.TDelay', ('Idris.Idris2.Core.TT':'un--getLoc'(V4)), V1, V3, V4} end end end.
'un--convertErrorS'(V0, V1, V2, V3, V4, V5, V6) -> case V2 of 1 -> ('un--convertError'(V0, V1, V3, V4, V6, V5)); 0 -> ('un--convertError'(V0, V1, V3, V4, V5, V6)) end.
'un--convertError'(V0, V1, V2, V3, V4, V5) -> begin (V11 = begin (V6 = V1), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V68 = begin (V17 = fun (V16) -> ('Idris.Idris2.Core.Context':'un--clearDefs'(V15, V16)) end), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V67 = begin (V22 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V21, V3, V4))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V66 = begin (V27 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V21, V3, V5))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V65 = fun (V32) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.CantConvert', V0, V2, case V15 of {'Core.Context.MkDefs', V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64} -> V33 end, V3, V26, V31}, V32)) end), V65 end(V28)) end end end end), V66 end(V23)) end end end end), V67 end(V18)) end end end end), V68 end(V12)) end end end end.
'un--constrain'(V0) -> {'Core.Unify.MkUnifyResult', [V0 | []], 0, [], {'Core.Unify.NoLazy'}}.
'un--checkDots'(V0, V1) -> begin (V7 = begin (V2 = V0), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V71 = begin (V12 = ('Idris.Idris2.Core.UnifyState':'un--getCurrentHoles'(V0))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V70 = begin (V30 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V17) -> ('nested--27890-31219--in--un--checkConstraint'(V1, V0, V17)) end, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(case V11 of {'Core.UnifyState.MkUState', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} -> V25 end))))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V69 = begin (V35 = ('Idris.Idris2.Core.UnifyState':'un--getCurrentHoles'(V0))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V68 = begin (V45 = begin (V40 = V0), fun (V41) -> begin (V44 = (begin (V42 = V40), fun (V43) -> ('erlang':'get'(V42)) end end(V41))), {'Prelude.Types.Right', V44} end end end), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V67 = begin (V50 = V0), fun (V51) -> begin (V66 = (begin (V52 = V50), fun (V53) -> ('erlang':'put'(V52, case V49 of {'Core.UnifyState.MkUState', V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65} -> {'Core.UnifyState.MkUState', V54, V55, V56, V57, V58, V59, V60, [], V62, V63, V64, V65} end)) end end(V51))), {'Prelude.Types.Right', V66} end end end), V67 end(V46)) end end end end), V68 end(V36)) end end end end), V69 end(V31)) end end end end), V70 end(V13)) end end end end), V71 end(V8)) end end end end.
'un--checkArgsSame'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> {'Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V4, V5) -> begin (V11 = begin (V6 = V1), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V69 = begin (V48 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Core.Name.Resolved', V4}, case V15 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> V16 end))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V68 = case V52 of {'Prelude.Types.Just', V53} -> case V53 of {'Core.Context.Context.PMDef', V54, V55, V56, V57, V58} -> case V55 of [] -> case V56 of {'Core.Case.CaseTree.STerm', V59, V60} -> case V59 of 0 -> begin (V61 = ('nested--27544-30925--in--un--anySame'(V4, V5, V1, V0, V60, V5))), fun (V62) -> begin (V63 = (V61(V62))), case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> (begin (V67 = case V65 of 1 -> fun (V66) -> {'Prelude.Types.Right', 1} end; 0 -> ('un--checkArgsSame'(V0, V1, V5)) end), V67 end(V62)) end end end end; _ -> ('un--checkArgsSame'(V0, V1, V5)) end; _ -> ('un--checkArgsSame'(V0, V1, V5)) end; _ -> ('un--checkArgsSame'(V0, V1, V5)) end; _ -> ('un--checkArgsSame'(V0, V1, V5)) end; _ -> ('un--checkArgsSame'(V0, V1, V5)) end), V68 end(V49)) end end end end), V69 end(V12)) end end end end end(E0, E1)) end.
'un--chaseMetas'(V0, V1, V2) -> case V1 of [] -> fun (V3) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V2))} end; [E0 | E1] -> (fun (V4, V5) -> ('case--chaseMetas-14298'(V4, V5, V2, V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V4, V2)))) end(E0, E1)) end.
