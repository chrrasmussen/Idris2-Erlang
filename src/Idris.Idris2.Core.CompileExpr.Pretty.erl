-module('Idris.Idris2.Core.CompileExpr.Pretty').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--pretty_Pretty_IdrisDocAnn_CDef'/1,
  'dn--un--prettyPrec_Pretty_IdrisDocAnn_CDef'/2,
  'dn--un--__Impl_Pretty_IdrisDocAnn_CDef'/0,
  'un--prettyPrecNamedCExp'/2,
  'un--prettyNamedConstAlt'/1,
  'un--prettyNamedConAlt'/1,
  'un--prettyNamedCExp'/1,
  'un--prettyName'/1,
  'un--prettyFlag'/1,
  'un--prettyCon'/3,
  'un--prettyCExp'/2,
  'un--prettyCDef'/1,
  'un--prettyAlts'/3
]).
'dn--un--pretty_Pretty_IdrisDocAnn_CDef'(V0) -> ('un--prettyCDef'(V0)).
'dn--un--prettyPrec_Pretty_IdrisDocAnn_CDef'(V0, V1) -> ('dn--un--pretty_Pretty_IdrisDocAnn_CDef'(V1)).
'dn--un--__Impl_Pretty_IdrisDocAnn_CDef'() -> {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('dn--un--pretty_Pretty_IdrisDocAnn_CDef'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--prettyPrec_Pretty_IdrisDocAnn_CDef'(V1, V2)) end end}.
'un--prettyPrecNamedCExp'(V0, V1) -> case V1 of {'Core.CompileExpr.NmLocal', V2, V3} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Pretty.Annotations.Bound'}, ('un--prettyName'(V3)))); {'Core.CompileExpr.NmRef', V4, V5} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Pretty.Annotations.Fun', V5}, ('un--prettyName'(V5)))); {'Core.CompileExpr.NmLam', V6, V7, V8} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V9) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V10) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V10)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V11) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V11)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V12) -> fun (V13) -> case case (V12 =:= V13) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V9)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V14} -> case V14 of {'Builtin.MkPair', V15, V16} -> [V15 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V16))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V9)); 0 -> V9 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V17} -> case V17 of {'Builtin.MkPair', V18, V19} -> [V18 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V19))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V20) -> fun (V21) -> case case (V20 =:= V21) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V9)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V22} -> case V22 of {'Builtin.MkPair', V23, V24} -> [V23 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V24))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V9)); 0 -> V9 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))))))) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V30) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V30)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V31) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V31)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V32) -> fun (V33) -> case case (V32 =:= V33) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V29)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V34} -> case V34 of {'Builtin.MkPair', V35, V36} -> [V35 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V36))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V29)); 0 -> V29 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V37} -> case V37 of {'Builtin.MkPair', V38, V39} -> [V38 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V39))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V40) -> fun (V41) -> case case (V40 =:= V41) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V29)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V42} -> case V42 of {'Builtin.MkPair', V43, V44} -> [V43 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V44))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V29)); 0 -> V29 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V45} -> case V45 of {'Builtin.MkPair', V46, V47} -> [V46 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V47))] end end)))))))) end end}, <<"\x{5c}"/utf8>>)))), ('un--prettyName'(V7)))), ('Idris.Idris2.Idris.Pretty.Annotations':'un--fatArrow'()))), ('un--prettyNamedCExp'(V8)))))); {'Core.CompileExpr.NmLet', V48, V49, V50, V51} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty.Annotations':'un--let_'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyName'(V49)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty.Annotations':'un--equals'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyNamedCExp'(V50)), ('Idris.Idris2.Idris.Pretty.Annotations':'un--in_'()))))))))) | [('un--prettyNamedCExp'(V51)) | []]])))); {'Core.CompileExpr.NmApp', V52, V53, V54} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--sep'([('un--prettyNamedCExp'(V53)) | ((begin (V60 = fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V58, V59)) end end end end), fun (V61) -> fun (V62) -> ((((V60('erased'))('erased'))(V61))(V62)) end end end(fun (V55) -> ('un--prettyPrecNamedCExp'({'Prelude.Show.App'}, V55)) end))(V54))])))); {'Core.CompileExpr.NmCon', V63, V64, V65, V66, V67} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--sep'([('un--prettyCon'(V64, V65, V66)) | ((begin (V73 = fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V71, V72)) end end end end), fun (V74) -> fun (V75) -> ((((V73('erased'))('erased'))(V74))(V75)) end end end(fun (V68) -> ('un--prettyPrecNamedCExp'({'Prelude.Show.App'}, V68)) end))(V67))])))); {'Core.CompileExpr.NmOp', V76, V77, V78, V79} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Core.TT':'un--prettyOp'(V78, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'(fun (V80) -> ('un--prettyPrecNamedCExp'({'Prelude.Show.App'}, V80)) end, V79)))))); {'Core.CompileExpr.NmExtPrim', V81, V82, V83} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--sep'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Pretty.Annotations.Fun', V82}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V84) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V84)) end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V85, V86)) end end}, V82)))) | ((begin (V92 = fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V90, V91)) end end end end), fun (V93) -> fun (V94) -> ((((V92('erased'))('erased'))(V93))(V94)) end end end(fun (V87) -> ('un--prettyPrecNamedCExp'({'Prelude.Show.App'}, V87)) end))(V83))])))); {'Core.CompileExpr.NmForce', V95, V96, V97} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--sep'([('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V98) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V99) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V99)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V100) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V100)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V101) -> fun (V102) -> case case (V101 =:= V102) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V98)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V103} -> case V103 of {'Builtin.MkPair', V104, V105} -> [V104 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V105))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V98)); 0 -> V98 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V106} -> case V106 of {'Builtin.MkPair', V107, V108} -> [V107 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V108))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V109) -> fun (V110) -> case case (V109 =:= V110) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V98)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V111} -> case V111 of {'Builtin.MkPair', V112, V113} -> [V112 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V113))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V98)); 0 -> V98 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V114} -> case V114 of {'Builtin.MkPair', V115, V116} -> [V115 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V116))] end end)))))))) end, fun (V117) -> fun (V118) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V119) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V119)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V120) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V120)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V121) -> fun (V122) -> case case (V121 =:= V122) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V118)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V123} -> case V123 of {'Builtin.MkPair', V124, V125} -> [V124 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V125))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V118)); 0 -> V118 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V126} -> case V126 of {'Builtin.MkPair', V127, V128} -> [V127 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V128))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V129) -> fun (V130) -> case case (V129 =:= V130) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V118)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V131} -> case V131 of {'Builtin.MkPair', V132, V133} -> [V132 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V133))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V118)); 0 -> V118 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V134} -> case V134 of {'Builtin.MkPair', V135, V136} -> [V135 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V136))] end end)))))))) end end}, <<"Force"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V137) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_LazyReason'(V137)) end, fun (V138) -> fun (V139) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_LazyReason'(V138, V139)) end end}, V96)) | [('un--prettyPrecNamedCExp'({'Prelude.Show.App'}, V97)) | []]]])))); {'Core.CompileExpr.NmDelay', V140, V141, V142} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--sep'([('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V143) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V144) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V144)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V145) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V145)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V146) -> fun (V147) -> case case (V146 =:= V147) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V143)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V148} -> case V148 of {'Builtin.MkPair', V149, V150} -> [V149 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V150))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V143)); 0 -> V143 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V151} -> case V151 of {'Builtin.MkPair', V152, V153} -> [V152 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V153))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V154) -> fun (V155) -> case case (V154 =:= V155) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V143)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V156} -> case V156 of {'Builtin.MkPair', V157, V158} -> [V157 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V158))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V143)); 0 -> V143 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V159} -> case V159 of {'Builtin.MkPair', V160, V161} -> [V160 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V161))] end end)))))))) end, fun (V162) -> fun (V163) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V164) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V164)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V165) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V165)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V166) -> fun (V167) -> case case (V166 =:= V167) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V163)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V168} -> case V168 of {'Builtin.MkPair', V169, V170} -> [V169 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V170))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V163)); 0 -> V163 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V171} -> case V171 of {'Builtin.MkPair', V172, V173} -> [V172 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V173))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V174) -> fun (V175) -> case case (V174 =:= V175) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V163)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V176} -> case V176 of {'Builtin.MkPair', V177, V178} -> [V177 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V178))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V163)); 0 -> V163 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V179} -> case V179 of {'Builtin.MkPair', V180, V181} -> [V180 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V181))] end end)))))))) end end}, <<"Delay"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V182) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_LazyReason'(V182)) end, fun (V183) -> fun (V184) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_LazyReason'(V183, V184)) end end}, V141)) | [('un--prettyPrecNamedCExp'({'Prelude.Show.App'}, V142)) | []]]])))); {'Core.CompileExpr.NmConCase', V185, V186, V187, V188} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty.Annotations':'un--case_'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyNamedCExp'(V186)), ('Idris.Idris2.Idris.Pretty.Annotations':'un--of_'()))))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, ('un--prettyAlts'(fun (V189) -> ('un--prettyNamedConAlt'(V189)) end, V187, V188)))) | []]])))); {'Core.CompileExpr.NmConstCase', V190, V191, V192, V193} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty.Annotations':'un--case_'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyNamedCExp'(V191)), ('Idris.Idris2.Idris.Pretty.Annotations':'un--of_'()))))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, ('un--prettyAlts'(fun (V194) -> ('un--prettyNamedConstAlt'(V194)) end, V192, V193)))) | []]])))); {'Core.CompileExpr.NmPrimVal', V195, V196} -> ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_IdrisSyntax_Constant'(V196)); {'Core.CompileExpr.NmErased', V197} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V198) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V199) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V199)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V200) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V200)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V201) -> fun (V202) -> case case (V201 =:= V202) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V198)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V203} -> case V203 of {'Builtin.MkPair', V204, V205} -> [V204 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V205))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V198)); 0 -> V198 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V206} -> case V206 of {'Builtin.MkPair', V207, V208} -> [V207 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V208))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V209) -> fun (V210) -> case case (V209 =:= V210) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V198)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V211} -> case V211 of {'Builtin.MkPair', V212, V213} -> [V212 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V213))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V198)); 0 -> V198 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V214} -> case V214 of {'Builtin.MkPair', V215, V216} -> [V215 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V216))] end end)))))))) end, fun (V217) -> fun (V218) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V219) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V219)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V220) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V220)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V221) -> fun (V222) -> case case (V221 =:= V222) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V218)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V223} -> case V223 of {'Builtin.MkPair', V224, V225} -> [V224 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V225))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V218)); 0 -> V218 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V226} -> case V226 of {'Builtin.MkPair', V227, V228} -> [V227 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V228))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V229) -> fun (V230) -> case case (V229 =:= V230) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V218)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V231} -> case V231 of {'Builtin.MkPair', V232, V233} -> [V232 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V233))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V218)); 0 -> V218 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V234} -> case V234 of {'Builtin.MkPair', V235, V236} -> [V235 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V236))] end end)))))))) end end}, <<"___"/utf8>>)); {'Core.CompileExpr.NmCrash', V237, V238} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parenthesise'(('Idris.Idris2.Prelude.Show':'dn--un-->_Ord_Prec'(V0, {'Prelude.Show.Open'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--sep'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Pretty.Annotations.Keyword'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"crash"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V239) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V239)) end, fun (V240) -> fun (V241) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V240, V241)) end end}, V238)) | []]])))) end.
'un--prettyNamedConstAlt'(V0) -> case V0 of {'Core.CompileExpr.MkNConstAlt', V1, V2} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_IdrisSyntax_Constant'(V1)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Pretty.Annotations':'un--fatArrow'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--softline'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--align'(('un--prettyNamedCExp'(V2)))))))) end.
'un--prettyNamedConAlt'(V0) -> case V0 of {'Core.CompileExpr.MkNConAlt', V1, V2, V3, V4, V5} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--sep'([('un--prettyCon'(V1, V2, V3)) | ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(((begin (V11 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V9, V10)) end end end end), fun (V12) -> fun (V13) -> ((((V11('erased'))('erased'))(V12))(V13)) end end end(fun (V6) -> ('un--prettyName'(V6)) end))(V4)), [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Pretty.Annotations':'un--fatArrow'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--softline'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--align'(('un--prettyNamedCExp'(V5)))))) | []]))])) end.
'un--prettyNamedCExp'(V0) -> ('un--prettyPrecNamedCExp'({'Prelude.Show.Open'}, V0)).
'un--prettyName'(V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V1) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V1)) end, fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V2, V3)) end end}, V0)).
'un--prettyFlag'(V0) -> case V0 of {'Core.CompileExpr.DATACON'} -> {'Prelude.Types.Nothing'}; _ -> {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V1) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_ConInfo'(V1)) end, fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--showPrec_Show_ConInfo'(V2, V3)) end end}, V0))} end.
'un--prettyCon'(V0, V1, V2) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'(('Idris.Idris2.Data.List':'un--catMaybes'([{'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'(case ('Idris.Idris2.Core.CompileExpr':'dn--un--==_Eq_ConInfo'(V1, {'Core.CompileExpr.TYCON'})) of 1 -> {'Idris.Pretty.Annotations.TCon', {'Prelude.Types.Just', V0}}; 0 -> {'Idris.Pretty.Annotations.DCon', {'Prelude.Types.Just', V0}} end, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V3) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V3)) end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V4, V5)) end end}, V0))))} | [((begin (V14 = fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V12, V13)) end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V6) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--braces'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"tag ="/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V7) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V7)) end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V8, V9)) end end}, V6)))))) end))(V2)) | [('un--prettyFlag'(V1)) | []]]])))).
'un--prettyCExp'(V0, V1) -> ('un--prettyNamedCExp'(('Idris.Idris2.Core.CompileExpr':'un--forget'(V0, V1)))).
'un--prettyCDef'(V0) -> case V0 of {'Core.CompileExpr.MkFun', V1, V2} -> case V1 of [] -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V3) -> {'Idris.Doc.Annotations.Syntax', V3} end, ('un--prettyCExp'([], V2)))); _ -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V4) -> {'Idris.Doc.Annotations.Syntax', V4} end, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V5) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V6) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V6)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V7) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V7)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V8) -> fun (V9) -> case case (V8 =:= V9) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V5)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V10} -> case V10 of {'Builtin.MkPair', V11, V12} -> [V11 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V12))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V5)); 0 -> V5 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V16) -> fun (V17) -> case case (V16 =:= V17) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V5)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V18} -> case V18 of {'Builtin.MkPair', V19, V20} -> [V19 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V20))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V5)); 0 -> V5 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V21} -> case V21 of {'Builtin.MkPair', V22, V23} -> [V22 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V23))] end end)))))))) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V26) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V26)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V27) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V27)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V28) -> fun (V29) -> case case (V28 =:= V29) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V25)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V30} -> case V30 of {'Builtin.MkPair', V31, V32} -> [V31 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V32))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V25)); 0 -> V25 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V36) -> fun (V37) -> case case (V36 =:= V37) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V25)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V38} -> case V38 of {'Builtin.MkPair', V39, V40} -> [V39 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V40))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V25)); 0 -> V25 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V41} -> case V41 of {'Builtin.MkPair', V42, V43} -> [V42 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V43))] end end)))))))) end end}, <<"\x{5c}"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V44) -> fun (V45) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V44, ('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V46) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V47) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V47)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V48) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V48)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V49) -> fun (V50) -> case case (V49 =:= V50) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V46)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V51} -> case V51 of {'Builtin.MkPair', V52, V53} -> [V52 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V53))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V46)); 0 -> V46 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V54} -> case V54 of {'Builtin.MkPair', V55, V56} -> [V55 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V56))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V57) -> fun (V58) -> case case (V57 =:= V58) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V46)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V59} -> case V59 of {'Builtin.MkPair', V60, V61} -> [V60 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V61))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V46)); 0 -> V46 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V62} -> case V62 of {'Builtin.MkPair', V63, V64} -> [V63 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V64))] end end)))))))) end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V67) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V67)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V68) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V68)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V69) -> fun (V70) -> case case (V69 =:= V70) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V66)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V71} -> case V71 of {'Builtin.MkPair', V72, V73} -> [V72 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V73))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V66)); 0 -> V66 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V74} -> case V74 of {'Builtin.MkPair', V75, V76} -> [V75 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V76))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V77) -> fun (V78) -> case case (V77 =:= V78) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V66)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V79} -> case V79 of {'Builtin.MkPair', V80, V81} -> [V80 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V81))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V66)); 0 -> V66 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V82} -> case V82 of {'Builtin.MkPair', V83, V84} -> [V83 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V84))] end end)))))))) end end}, <<","/utf8>>)))))), V45)) end end, ((begin (V90 = fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V88, V89)) end end end end), fun (V91) -> fun (V92) -> ((((V90('erased'))('erased'))(V91))(V92)) end end end(fun (V85) -> ('un--prettyName'(V85)) end))(V1)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty.Annotations':'un--fatArrow'()), ('un--prettyCExp'(V1, V2)))))))))) end; {'Core.CompileExpr.MkCon', V93, V94, V95} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Data"/utf8>>)) end, fun () -> fun (V96) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Type"/utf8>>)) end end, V93)), (begin (V98 = fun (V97) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V97)) end), fun (V99) -> (V98(V99)) end end(<<"Constructor"/utf8>>)))))) | ((begin (V116 = fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V114, V115)) end end end end), fun (V117) -> fun (V118) -> ((((V116('erased'))('erased'))(V117))(V118)) end end end(fun (V111) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V111)) end))(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [] end, fun () -> fun (V100) -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"tag:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V101) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V101)) end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V102, V103)) end end}, V100)))) | []] end end, V93)), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"arity:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V104)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V105, V106)) end end}, V94)))) | []], ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [] end, fun () -> fun (V107) -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"newtype by:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V108) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V108)) end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V109, V110)) end end}, V107)))) | []] end end, V95))))))))])); {'Core.CompileExpr.MkForeign', V119, V120, V121} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Foreign function"/utf8>>)))) | ((begin (V151 = fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V149, V150)) end end end end), fun (V152) -> fun (V153) -> ((((V151('erased'))('erased'))(V152))(V153)) end end end(fun (V146) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V146)) end))([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"bindings:"/utf8>>)), (begin (V126 = fun (V125) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--cast_Cast_(Doc Void)_(Doc $ann)'(V125)) end), fun (V127) -> (V126(V127)) end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyList'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V122) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V122)) end, fun (V123) -> fun (V124) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V123, V124)) end end}, V119)))))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V129 = fun (V128) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V128)) end), fun (V130) -> (V129(V130)) end end(<<"argument types:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V131) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V132) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_CFType'(V132)) end, fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--showPrec_Show_CFType'(V133, V134)) end end}, V131)) end, fun (V135) -> fun (V136) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V137) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_CFType'(V137)) end, fun (V138) -> fun (V139) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--showPrec_Show_CFType'(V138, V139)) end end}, V135, V136)) end end}, V120)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V141 = fun (V140) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V140)) end), fun (V142) -> (V141(V142)) end end(<<"return type:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V143) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_CFType'(V143)) end, fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--showPrec_Show_CFType'(V144, V145)) end end}, V121)))) | []]]]))])); {'Core.CompileExpr.MkError', V154} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Error:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V155) -> {'Idris.Doc.Annotations.Syntax', V155} end, ('un--prettyCExp'([], V154)))))) end.
'un--prettyAlts'(V0, V1, V2) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Data.List':'dn--un--zipWith_Zippable_List'(fun (V3) -> fun (V4) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(V3, (V0(V4)))) end end, [('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V5) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V6) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V6)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V7) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V7)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V8) -> fun (V9) -> case case (V8 =:= V9) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V5)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V10} -> case V10 of {'Builtin.MkPair', V11, V12} -> [V11 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V12))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V5)); 0 -> V5 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V16) -> fun (V17) -> case case (V16 =:= V17) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V5)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V18} -> case V18 of {'Builtin.MkPair', V19, V20} -> [V19 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V20))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V5)); 0 -> V5 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V21} -> case V21 of {'Builtin.MkPair', V22, V23} -> [V22 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V23))] end end)))))))) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V26) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V26)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V27) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V27)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V28) -> fun (V29) -> case case (V28 =:= V29) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V25)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V30} -> case V30 of {'Builtin.MkPair', V31, V32} -> [V31 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V32))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V25)); 0 -> V25 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V36) -> fun (V37) -> case case (V36 =:= V37) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V25)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V38} -> case V38 of {'Builtin.MkPair', V39, V40} -> [V39 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V40))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V25)); 0 -> V25 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V41} -> case V41 of {'Builtin.MkPair', V42, V43} -> [V42 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V43))] end end)))))))) end end}, <<"{"/utf8>>)))) | ((begin (V88 = fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V86, V87)) end end end end), fun (V89) -> fun (V90) -> ((((V88('erased'))('erased'))(V89))(V90)) end end end(fun (V44) -> ('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V45) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V46) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V46)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V47) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V47)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V48) -> fun (V49) -> case case (V48 =:= V49) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V45)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V50} -> case V50 of {'Builtin.MkPair', V51, V52} -> [V51 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V52))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V45)); 0 -> V45 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V53} -> case V53 of {'Builtin.MkPair', V54, V55} -> [V54 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V55))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V56) -> fun (V57) -> case case (V56 =:= V57) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V45)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V58} -> case V58 of {'Builtin.MkPair', V59, V60} -> [V59 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V60))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V45)); 0 -> V45 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V61} -> case V61 of {'Builtin.MkPair', V62, V63} -> [V62 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V63))] end end)))))))) end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V66) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V66)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V67) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V67)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V68) -> fun (V69) -> case case (V68 =:= V69) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V65)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V70} -> case V70 of {'Builtin.MkPair', V71, V72} -> [V71 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V72))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V65)); 0 -> V65 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V73} -> case V73 of {'Builtin.MkPair', V74, V75} -> [V74 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V75))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V76) -> fun (V77) -> case case (V76 =:= V77) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V65)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V78} -> case V78 of {'Builtin.MkPair', V79, V80} -> [V79 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V80))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V65)); 0 -> V65 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V81} -> case V81 of {'Builtin.MkPair', V82, V83} -> [V82 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V83))] end end)))))))) end end}, <<";"/utf8>>)))) end))(V1))], V1)), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [] end, fun () -> fun (V91) -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V92) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V93) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V93)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V94) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V94)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V95) -> fun (V96) -> case case (V95 =:= V96) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V92)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V97} -> case V97 of {'Builtin.MkPair', V98, V99} -> [V98 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V99))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V92)); 0 -> V92 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V100} -> case V100 of {'Builtin.MkPair', V101, V102} -> [V101 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V102))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V103) -> fun (V104) -> case case (V103 =:= V104) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V92)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V105} -> case V105 of {'Builtin.MkPair', V106, V107} -> [V106 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V107))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V92)); 0 -> V92 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V108} -> case V108 of {'Builtin.MkPair', V109, V110} -> [V109 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V110))] end end)))))))) end, fun (V111) -> fun (V112) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V113) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V113)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V114) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V114)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V115) -> fun (V116) -> case case (V115 =:= V116) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V112)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V117} -> case V117 of {'Builtin.MkPair', V118, V119} -> [V118 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V119))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V112)); 0 -> V112 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V120} -> case V120 of {'Builtin.MkPair', V121, V122} -> [V121 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V122))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V123) -> fun (V124) -> case case (V123 =:= V124) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V112)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V125} -> case V125 of {'Builtin.MkPair', V126, V127} -> [V126 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V127))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V112)); 0 -> V112 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V128} -> case V128 of {'Builtin.MkPair', V129, V130} -> [V129 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V130))] end end)))))))) end end}, <<"; _"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Pretty.Annotations':'un--fatArrow'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--softline'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--align'(('un--prettyNamedCExp'(V91)))))))) | []] end end, V2)), [('Idris.Idris2.Idris.Pretty.Annotations':'un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V131) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V132) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V132)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V133) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V133)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V134) -> fun (V135) -> case case (V134 =:= V135) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V131)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V136} -> case V136 of {'Builtin.MkPair', V137, V138} -> [V137 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V138))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V131)); 0 -> V131 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V139} -> case V139 of {'Builtin.MkPair', V140, V141} -> [V140 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V141))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V142) -> fun (V143) -> case case (V142 =:= V143) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V131)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V144} -> case V144 of {'Builtin.MkPair', V145, V146} -> [V145 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V146))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V131)); 0 -> V131 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V147} -> case V147 of {'Builtin.MkPair', V148, V149} -> [V148 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V149))] end end)))))))) end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V152) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V152)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V153) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V153)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V154) -> fun (V155) -> case case (V154 =:= V155) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V151)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V156} -> case V156 of {'Builtin.MkPair', V157, V158} -> [V157 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V158))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V151)); 0 -> V151 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V159} -> case V159 of {'Builtin.MkPair', V160, V161} -> [V160 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V161))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V162) -> fun (V163) -> case case (V162 =:= V163) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V151)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V164} -> case V164 of {'Builtin.MkPair', V165, V166} -> [V165 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V166))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V151)); 0 -> V151 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V167} -> case V167 of {'Builtin.MkPair', V168, V169} -> [V168 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V169))] end end)))))))) end end}, <<"}"/utf8>>)))) | []])))))).
