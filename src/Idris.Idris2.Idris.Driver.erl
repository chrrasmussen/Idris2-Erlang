-module('Idris.Idris2.Idris.Driver').
-compile('no_auto_import').
-export([
  'case--mainWithCodegens-3297'/4,
  'nested--15766-2229--in--un--renderError'/6,
  'un--updateREPLOpts'/1,
  'un--updateEnv'/2,
  'un--tryYaffle'/1,
  'un--tryTTM'/1,
  'un--stMain'/2,
  'un--splitPaths'/1,
  'un--showInfo'/3,
  'un--quitOpts'/1,
  'un--mainWithCodegens'/3,
  'un--ignoreMissingIpkg'/1,
  'un--getPrivDir'/1,
  'un--findInput'/1,
  'un--checkVerbose'/1,
  'un--banner'/0
]).
'case--mainWithCodegens-3297'(V0, V1, V2, V3) -> case V2 of {'Prelude.Types.Right', V4} -> begin (V5 = (('un--quitOpts'(V4))(V3))), (('Idris.Idris2.Prelude.Interfaces':'un--when'({'Prelude.Interfaces.MkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, V5, fun () -> fun (V21) -> begin (V22 = ('Idris.Idris2.Libraries.Utils.Term':'un--setupTerm'(V21))), (('Idris.Idris2.Core.Core':'un--coreRun'(('un--stMain'(V1, V4)), fun (V23) -> fun (V24) -> begin (V25 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<<<<<"Uncaught error: "/utf8>>/binary, ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V23))/binary>>/binary, <<"\x{a}"/utf8>>/binary>>, V24))), (('Idris.Idris2.Libraries.Utils.System':'un--softExitWith'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> V32 end end end, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V36(V38))), begin (V40 = (V37(V38))), (V39(V40)) end end end end end end end}, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> begin (V46 = (V43(V45))), ((V44(V46))(V45)) end end end end end end, fun (V47) -> fun (V48) -> fun (V49) -> begin (V50 = (V48(V49))), (V50(V49)) end end end end}, fun (V51) -> fun (V52) -> V52 end end}, {'Erlang.System.ExitFailure', 1, {'Data.So.Oh'}}))(V24)) end end end, fun (V53) -> fun (V54) -> {'Builtin.MkUnit'} end end))(V21)) end end end))(V3)) end; {'Prelude.Types.Left', V55} -> begin (V56 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<V55/binary, <<"\x{a}"/utf8>>/binary>>, V3))), ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Idris.CommandLine':'un--usage'())/binary, <<"\x{a}"/utf8>>/binary>>, V3)) end end.
'nested--15766-2229--in--un--renderError'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Idris.Error':'un--perror'(V2, V3, V4, V5))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V18 = begin (V11 = ('Idris.Idris2.Idris.Pretty':'un--render'(V4, V10))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V17 = fun (V16) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.UserError', V15}, V16)) end), V17 end(V12)) end end end end), V18 end(V7)) end end end end.
'un--updateREPLOpts'(V0) -> begin (V30 = fun (V1) -> begin (V29 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V4, V5, V6)) end end end end end, fun (V7) -> fun (V8) -> fun (V9) -> V8 end end end, fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> begin (V15 = (V12(V14))), begin (V16 = (V13(V14))), (V15(V16)) end end end end end end end}, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> begin (V22 = (V19(V21))), ((V20(V22))(V21)) end end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V24(V25))), (V26(V25)) end end end end}, fun (V27) -> fun (V28) -> V28 end end}, <<"EDITOR"/utf8>>))(V1))), {'Prelude.Types.Right', V29} end end), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V70 = case V34 of {'Prelude.Types.Just', V35} -> begin (V41 = begin (V36 = V0), fun (V37) -> begin (V40 = (begin (V38 = V36), fun (V39) -> ('erlang':'get'(V38)) end end(V37))), {'Prelude.Types.Right', V40} end end end), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V68 = begin (V46 = V0), fun (V47) -> begin (V67 = (begin (V48 = V46), fun (V49) -> ('erlang':'put'(V48, case V45 of {'Idris.REPL.Opts.MkREPLOpts', V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66} -> {'Idris.REPL.Opts.MkREPLOpts', V50, V51, V52, V53, V54, V55, V35, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66} end)) end end(V47))), {'Prelude.Types.Right', V67} end end end), V68 end(V42)) end end end end; {'Prelude.Types.Nothing'} -> fun (V69) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V70 end(V31)) end end end end.
'un--updateEnv'(V0, V1) -> begin (V7 = begin (V2 = V0), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V414 = begin (V41 = fun (V12) -> begin (V40 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V15, V16, V17)) end end end end end, fun (V18) -> fun (V19) -> fun (V20) -> V19 end end end, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), begin (V27 = (V24(V25))), (V26(V27)) end end end end end end end}, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V30(V32))), ((V31(V33))(V32)) end end end end end end, fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V35(V36))), (V37(V36)) end end end end}, fun (V38) -> fun (V39) -> V39 end end}, <<"IDRIS2_PREFIX"/utf8>>))(V12))), {'Prelude.Types.Right', V40} end end), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V413 = begin (V48 = case V45 of {'Prelude.Types.Just', V46} -> ('Idris.Idris2.Core.Context':'un--setPrefix'(V0, V46)); {'Prelude.Types.Nothing'} -> fun (V47) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V412 = begin (V82 = fun (V53) -> begin (V81 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V56, V57, V58)) end end end end end, fun (V59) -> fun (V60) -> fun (V61) -> V60 end end end, fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V64(V66))), begin (V68 = (V65(V66))), (V67(V68)) end end end end end end end}, fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> begin (V74 = (V71(V73))), ((V72(V74))(V73)) end end end end end end, fun (V75) -> fun (V76) -> fun (V77) -> begin (V78 = (V76(V77))), (V78(V77)) end end end end}, fun (V79) -> fun (V80) -> V80 end end}, <<"IDRIS2_PATH"/utf8>>))(V53))), {'Prelude.Types.Right', V81} end end), fun (V83) -> begin (V84 = (V82(V83))), case V84 of {'Prelude.Types.Left', V85} -> {'Prelude.Types.Left', V85}; {'Prelude.Types.Right', V86} -> (begin (V411 = begin (V90 = case V86 of {'Prelude.Types.Just', V87} -> ('Idris.Idris2.Core.Core':'un--traverseList1_'(fun (V88) -> ('Idris.Idris2.Core.Context':'un--addExtraDir'(V0, V88)) end, ('un--splitPaths'(V87)))); {'Prelude.Types.Nothing'} -> fun (V89) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V91) -> begin (V92 = (V90(V91))), case V92 of {'Prelude.Types.Left', V93} -> {'Prelude.Types.Left', V93}; {'Prelude.Types.Right', V94} -> (begin (V410 = begin (V124 = fun (V95) -> begin (V123 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V98, V99, V100)) end end end end end, fun (V101) -> fun (V102) -> fun (V103) -> V102 end end end, fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> begin (V109 = (V106(V108))), begin (V110 = (V107(V108))), (V109(V110)) end end end end end end end}, fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> begin (V116 = (V113(V115))), ((V114(V116))(V115)) end end end end end end, fun (V117) -> fun (V118) -> fun (V119) -> begin (V120 = (V118(V119))), (V120(V119)) end end end end}, fun (V121) -> fun (V122) -> V122 end end}, <<"IDRIS2_DATA"/utf8>>))(V95))), {'Prelude.Types.Right', V123} end end), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V409 = begin (V132 = case V128 of {'Prelude.Types.Just', V129} -> ('Idris.Idris2.Core.Core':'un--traverseList1_'(fun (V130) -> ('Idris.Idris2.Core.Context':'un--addDataDir'(V0, V130)) end, ('un--splitPaths'(V129)))); {'Prelude.Types.Nothing'} -> fun (V131) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V408 = begin (V166 = fun (V137) -> begin (V165 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V140, V141, V142)) end end end end end, fun (V143) -> fun (V144) -> fun (V145) -> V144 end end end, fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> begin (V151 = (V148(V150))), begin (V152 = (V149(V150))), (V151(V152)) end end end end end end end}, fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> begin (V158 = (V155(V157))), ((V156(V158))(V157)) end end end end end end, fun (V159) -> fun (V160) -> fun (V161) -> begin (V162 = (V160(V161))), (V162(V161)) end end end end}, fun (V163) -> fun (V164) -> V164 end end}, <<"IDRIS2_LIBS"/utf8>>))(V137))), {'Prelude.Types.Right', V165} end end), fun (V167) -> begin (V168 = (V166(V167))), case V168 of {'Prelude.Types.Left', V169} -> {'Prelude.Types.Left', V169}; {'Prelude.Types.Right', V170} -> (begin (V407 = begin (V174 = case V170 of {'Prelude.Types.Just', V171} -> ('Idris.Idris2.Core.Core':'un--traverseList1_'(fun (V172) -> ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, V172)) end, ('un--splitPaths'(V171)))); {'Prelude.Types.Nothing'} -> fun (V173) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V175) -> begin (V176 = (V174(V175))), case V176 of {'Prelude.Types.Left', V177} -> {'Prelude.Types.Left', V177}; {'Prelude.Types.Right', V178} -> (begin (V406 = begin (V208 = fun (V179) -> begin (V207 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V182, V183, V184)) end end end end end, fun (V185) -> fun (V186) -> fun (V187) -> V186 end end end, fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> begin (V193 = (V190(V192))), begin (V194 = (V191(V192))), (V193(V194)) end end end end end end end}, fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> begin (V200 = (V197(V199))), ((V198(V200))(V199)) end end end end end end, fun (V201) -> fun (V202) -> fun (V203) -> begin (V204 = (V202(V203))), (V204(V203)) end end end end}, fun (V205) -> fun (V206) -> V206 end end}, <<"IDRIS2_PACKAGE_PATH"/utf8>>))(V179))), {'Prelude.Types.Right', V207} end end), fun (V209) -> begin (V210 = (V208(V209))), case V210 of {'Prelude.Types.Left', V211} -> {'Prelude.Types.Left', V211}; {'Prelude.Types.Right', V212} -> (begin (V405 = begin (V216 = case V212 of {'Prelude.Types.Just', V213} -> ('Idris.Idris2.Core.Core':'un--traverseList1_'(fun (V214) -> ('Idris.Idris2.Core.Context':'un--addPackageDir'(V0, V214)) end, ('un--splitPaths'(V213)))); {'Prelude.Types.Nothing'} -> fun (V215) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V217) -> begin (V218 = (V216(V217))), case V218 of {'Prelude.Types.Left', V219} -> {'Prelude.Types.Left', V219}; {'Prelude.Types.Right', V220} -> (begin (V404 = begin (V250 = fun (V221) -> begin (V249 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V224, V225, V226)) end end end end end, fun (V227) -> fun (V228) -> fun (V229) -> V228 end end end, fun (V230) -> fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> begin (V235 = (V232(V234))), begin (V236 = (V233(V234))), (V235(V236)) end end end end end end end}, fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> fun (V241) -> begin (V242 = (V239(V241))), ((V240(V242))(V241)) end end end end end end, fun (V243) -> fun (V244) -> fun (V245) -> begin (V246 = (V244(V245))), (V246(V245)) end end end end}, fun (V247) -> fun (V248) -> V248 end end}, <<"IDRIS2_CG"/utf8>>))(V221))), {'Prelude.Types.Right', V249} end end), fun (V251) -> begin (V252 = (V250(V251))), case V252 of {'Prelude.Types.Left', V253} -> {'Prelude.Types.Left', V253}; {'Prelude.Types.Right', V254} -> (begin (V403 = begin (V291 = case V254 of {'Prelude.Types.Just', V255} -> case ('Idris.Idris2.Core.Options':'un--getCG'(case V11 of {'Core.Context.MkDefs', V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287} -> V260 end, V255)) of {'Prelude.Types.Just', V288} -> ('Idris.Idris2.Core.Context':'un--setCG'(V0, V288)); {'Prelude.Types.Nothing'} -> fun (V289) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<<<"Unknown code generator "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V255))/binary>>}, V289)) end end; {'Prelude.Types.Nothing'} -> fun (V290) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V292) -> begin (V293 = (V291(V292))), case V293 of {'Prelude.Types.Left', V294} -> {'Prelude.Types.Left', V294}; {'Prelude.Types.Right', V295} -> (begin (V402 = begin (V325 = fun (V296) -> begin (V324 = (('Idris.Idris2.Erlang.System':'un--getEnv'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V297) -> fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V299, V300, V301)) end end end end end, fun (V302) -> fun (V303) -> fun (V304) -> V303 end end end, fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> begin (V310 = (V307(V309))), begin (V311 = (V308(V309))), (V310(V311)) end end end end end end end}, fun (V312) -> fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> begin (V317 = (V314(V316))), ((V315(V317))(V316)) end end end end end end, fun (V318) -> fun (V319) -> fun (V320) -> begin (V321 = (V319(V320))), (V321(V320)) end end end end}, fun (V322) -> fun (V323) -> V323 end end}, <<"IDRIS2_INC_CGS"/utf8>>))(V296))), {'Prelude.Types.Right', V324} end end), fun (V326) -> begin (V327 = (V325(V326))), case V327 of {'Prelude.Types.Left', V328} -> {'Prelude.Types.Left', V328}; {'Prelude.Types.Right', V329} -> (begin (V401 = begin (V335 = case V329 of {'Prelude.Types.Just', V330} -> ('Idris.Idris2.Core.Core':'un--traverseList1_'(fun (V331) -> ('Idris.Idris2.Idris.SetOptions':'un--setIncrementalCG'(V0, V1, 0, V331)) end, ('Idris.Idris2.Data.List1':'dn--un--map_Functor_List1'(fun (V332) -> ('Idris.Idris2.Data.String':'un--trim'(V332)) end, ('Idris.Idris2.Data.String':'un--split'(fun (V333) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Char'(V333, $,)) end, V330)))))); {'Prelude.Types.Nothing'} -> fun (V334) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V336) -> begin (V337 = (V335(V336))), case V337 of {'Prelude.Types.Left', V338} -> {'Prelude.Types.Left', V338}; {'Prelude.Types.Right', V339} -> (begin (V400 = begin (V345 = begin (V340 = V0), fun (V341) -> begin (V344 = (begin (V342 = V340), fun (V343) -> ('erlang':'get'(V342)) end end(V341))), {'Prelude.Types.Right', V344} end end end), fun (V346) -> begin (V347 = (V345(V346))), case V347 of {'Prelude.Types.Left', V348} -> {'Prelude.Types.Left', V348}; {'Prelude.Types.Right', V349} -> (begin (V399 = begin (V350 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"prelude"/utf8>>))), fun (V351) -> begin (V352 = (V350(V351))), case V352 of {'Prelude.Types.Left', V353} -> {'Prelude.Types.Left', V353}; {'Prelude.Types.Right', V354} -> (begin (V398 = begin (V355 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"base"/utf8>>))), fun (V356) -> begin (V357 = (V355(V356))), case V357 of {'Prelude.Types.Left', V358} -> {'Prelude.Types.Left', V358}; {'Prelude.Types.Right', V359} -> (begin (V397 = begin (V360 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"erlang"/utf8>>))), fun (V361) -> begin (V362 = (V360(V361))), case V362 of {'Prelude.Types.Left', V363} -> {'Prelude.Types.Left', V363}; {'Prelude.Types.Right', V364} -> (begin (V396 = begin (V367 = fun (V365) -> begin (V366 = ('un--getPrivDir'(V365))), {'Prelude.Types.Right', V366} end end), fun (V368) -> begin (V369 = (V367(V368))), case V369 of {'Prelude.Types.Left', V370} -> {'Prelude.Types.Left', V370}; {'Prelude.Types.Right', V371} -> (begin (V395 = case V371 of {'Prelude.Types.Just', V372} -> begin (V373 = ('Idris.Idris2.Core.Context':'un--addPackageDir'(V0, ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(V372, <<"libs"/utf8>>))))), fun (V374) -> begin (V375 = (V373(V374))), case V375 of {'Prelude.Types.Left', V376} -> {'Prelude.Types.Left', V376}; {'Prelude.Types.Right', V377} -> (begin (V390 = begin (V378 = ('Idris.Idris2.Core.Context':'un--addDataDir'(V0, ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(V372, <<"support"/utf8>>))))), fun (V379) -> begin (V380 = (V378(V379))), case V380 of {'Prelude.Types.Left', V381} -> {'Prelude.Types.Left', V381}; {'Prelude.Types.Right', V382} -> (begin (V389 = begin (V383 = ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, <<"lib"/utf8>>))), fun (V384) -> begin (V385 = (V383(V384))), case V385 of {'Prelude.Types.Left', V386} -> {'Prelude.Types.Left', V386}; {'Prelude.Types.Right', V387} -> (begin (V388 = ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, ('Idris.Idris2.Libraries.Utils.Path':'un--</>'(V372, <<"lib"/utf8>>))))), V388 end(V384)) end end end end), V389 end(V379)) end end end end), V390 end(V374)) end end end end; {'Prelude.Types.Nothing'} -> fun (V391) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', (begin (V393 = fun (V392) -> V392 end), fun (V394) -> (V393(V394)) end end(<<"Directory idris2/priv not found"/utf8>>))}, V391)) end end), V395 end(V368)) end end end end), V396 end(V361)) end end end end), V397 end(V356)) end end end end), V398 end(V351)) end end end end), V399 end(V346)) end end end end), V400 end(V336)) end end end end), V401 end(V326)) end end end end), V402 end(V292)) end end end end), V403 end(V251)) end end end end), V404 end(V217)) end end end end), V405 end(V209)) end end end end), V406 end(V175)) end end end end), V407 end(V167)) end end end end), V408 end(V133)) end end end end), V409 end(V125)) end end end end), V410 end(V91)) end end end end), V411 end(V83)) end end end end), V412 end(V49)) end end end end), V413 end(V42)) end end end end), V414 end(V8)) end end end end.
'un--tryYaffle'(V0) -> case V0 of [] -> fun (V1) -> {'Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.CommandLine.Yaffle', V4} -> begin (V5 = ('Idris.Idris2.Yaffle.Main':'un--yaffleMain'(V4, []))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V11 = fun (V10) -> {'Prelude.Types.Right', 1} end), V11 end(V6)) end end end end; _ -> ('un--tryYaffle'(V3)) end end(E0, E1)) end.
'un--tryTTM'(V0) -> case V0 of [] -> fun (V1) -> {'Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.CommandLine.Metadata', V4} -> begin (V5 = ('Idris.Idris2.Core.Metadata':'un--dumpTTM'(V4))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V11 = fun (V10) -> {'Prelude.Types.Right', 1} end), V11 end(V6)) end end end end; _ -> ('un--tryTTM'(V3)) end end(E0, E1)) end.
'un--stMain'(V0, V1) -> begin (V2 = ('un--tryYaffle'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V479 = case V6 of 0 -> begin (V7 = ('un--tryTTM'(V1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V477 = case V11 of 0 -> begin (V12 = ('Idris.Idris2.Core.Context':'un--initDefs'())), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V475 = begin (V53 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V17) -> fun (V18) -> case V18 of {'Builtin.MkPair', V19, V20} -> ('Idris.Idris2.Core.Options':'un--addCG'({'Builtin.MkPair', V19, {'Core.Options.Other', V19}}, V17)) end end end, case V16 of {'Core.Context.MkDefs', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52} -> V25 end, V0))), begin (V86 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.Context.Ctxt'}, case V16 of {'Core.Context.MkDefs', V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85} -> {'Core.Context.MkDefs', V54, V55, V56, V57, V53, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85} end))), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V474 = begin (V91 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Syntax.Syn'}, ('Idris.Idris2.Idris.Syntax':'un--initSyntax'())))), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V473 = begin (V97 = ('Idris.Idris2.Core.Context':'un--setCG'(V90, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> {'Core.Options.Chez'} end, fun () -> fun (V96) -> {'Core.Options.Other', ('Idris.Idris2.Builtin':'un--fst'(V96))} end end, ('Idris.Idris2.Data.List':'un--head\x{27}'(V0))))))), fun (V98) -> begin (V99 = (V97(V98))), case V99 of {'Prelude.Types.Left', V100} -> {'Prelude.Types.Left', V100}; {'Prelude.Types.Right', V101} -> (begin (V472 = begin (V102 = ('Idris.Idris2.Core.InitPrimitives':'un--addPrimitives'(V90))), fun (V103) -> begin (V104 = (V102(V103))), case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> (begin (V471 = begin (V107 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V90, <<"."/utf8>>))), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V470 = begin (V145 = begin (V112 = ('Idris.Idris2.Core.Context':'un--getSession'(V90))), fun (V113) -> begin (V114 = (V112(V113))), case V114 of {'Prelude.Types.Left', V115} -> {'Prelude.Types.Left', V115}; {'Prelude.Types.Right', V116} -> (begin (V144 = case ('un--ignoreMissingIpkg'(V1)) of 1 -> ('Idris.Idris2.Core.Context':'un--setSession'(V90, case V116 of {'Core.Options.MkSessionOpts', V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142} -> {'Core.Options.MkSessionOpts', V117, V118, V119, V120, V121, V122, V123, V124, V125, 1, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142} end)); 0 -> fun (V143) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V144 end(V113)) end end end end), fun (V146) -> begin (V147 = (V145(V146))), case V147 of {'Prelude.Types.Left', V148} -> {'Prelude.Types.Left', V148}; {'Prelude.Types.Right', V149} -> (begin (V469 = begin (V150 = ('Idris.Idris2.Idris.SetOptions':'un--ideMode'(V1))), begin (V151 = case V150 of 1 -> {'Idris.REPL.Opts.IDEMode', 0, ('Idris.Idris2.Erlang.System.File':'un--stdin'()), ('Idris.Idris2.Erlang.System.File':'un--stdout'())}; 0 -> {'Idris.REPL.Opts.REPL', 2} end), begin (V152 = ('un--findInput'(V1))), begin (V153 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.REPL.Opts.ROpts'}, ('Idris.Idris2.Idris.REPL.Opts':'un--defaultOpts'(V152, V151, V0))))), fun (V154) -> begin (V155 = (V153(V154))), case V155 of {'Prelude.Types.Left', V156} -> {'Prelude.Types.Left', V156}; {'Prelude.Types.Right', V157} -> (begin (V468 = begin (V158 = ('un--updateEnv'(V90, V157))), fun (V159) -> begin (V160 = (V158(V159))), case V160 of {'Prelude.Types.Left', V161} -> {'Prelude.Types.Left', V161}; {'Prelude.Types.Right', V162} -> (begin (V467 = begin (V163 = ('un--showInfo'(V90, V157, V1))), fun (V164) -> begin (V165 = (V163(V164))), case V165 of {'Prelude.Types.Left', V166} -> {'Prelude.Types.Left', V166}; {'Prelude.Types.Right', V167} -> (begin (V466 = case V167 of 1 -> fun (V168) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> begin (V169 = ('Idris.Idris2.Idris.SetOptions':'un--preOptions'(V90, V157, V1))), fun (V170) -> begin (V171 = (V169(V170))), case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> (begin (V465 = case V173 of 1 -> begin (V174 = ('Idris.Idris2.Idris.Package':'un--processPackageOpts'(V90, V95, V157, V1))), fun (V175) -> begin (V176 = (V174(V175))), case V176 of {'Prelude.Types.Left', V177} -> {'Prelude.Types.Left', V177}; {'Prelude.Types.Right', V178} -> (begin (V463 = case V178 of 1 -> fun (V179) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V180) -> fun (V181) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(V180, V181)) end end, fun (V182) -> ('nested--15766-2229--in--un--renderError'(V1, V0, V90, V95, V157, V182)) end, begin (V184 = case ('un--checkVerbose'(V1)) of 1 -> ('Idris.Idris2.Idris.REPL.Opts':'un--setOutput'(V157, {'Idris.REPL.Opts.REPL', 2})); 0 -> fun (V183) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V462 = begin (V189 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'())))), fun (V190) -> begin (V191 = (V189(V190))), case V191 of {'Prelude.Types.Left', V192} -> {'Prelude.Types.Left', V192}; {'Prelude.Types.Right', V193} -> (begin (V461 = begin (V203 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V194) -> {'Prelude.Types.Right', {'Core.FC.Virtual', {'Core.FC.Interactive'}}} end end, fun () -> fun (V195) -> begin (V196 = ('Idris.Idris2.Core.Directory':'un--ctxtPathToNS'(V90, V195))), fun (V197) -> begin (V198 = (V196(V197))), case V198 of {'Prelude.Types.Left', V199} -> {'Prelude.Types.Left', V199}; {'Prelude.Types.Right', V200} -> (begin (V202 = fun (V201) -> {'Prelude.Types.Right', {'Core.FC.PhysicalIdrSrc', V200}} end), V202 end(V197)) end end end end end end, V152))), fun (V204) -> begin (V205 = (V203(V204))), case V205 of {'Prelude.Types.Left', V206} -> {'Prelude.Types.Left', V206}; {'Prelude.Types.Right', V207} -> (begin (V460 = begin (V208 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'(V207))))), fun (V209) -> begin (V210 = (V208(V209))), case V210 of {'Prelude.Types.Left', V211} -> {'Prelude.Types.Left', V211}; {'Prelude.Types.Right', V212} -> (begin (V459 = begin (V213 = ('un--updateREPLOpts'(V157))), fun (V214) -> begin (V215 = (V213(V214))), case V215 of {'Prelude.Types.Left', V216} -> {'Prelude.Types.Left', V216}; {'Prelude.Types.Right', V217} -> (begin (V458 = begin (V218 = ('Idris.Idris2.Core.Context':'un--getSession'(V90))), fun (V219) -> begin (V220 = (V218(V219))), case V220 of {'Prelude.Types.Left', V221} -> {'Prelude.Types.Left', V221}; {'Prelude.Types.Right', V222} -> (begin (V457 = begin (V274 = case case V222 of {'Core.Options.MkSessionOpts', V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248} -> V225 end of 1 -> fun (V249) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> begin (V253 = ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V90, V157, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V250) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V250)) end, fun (V251) -> fun (V252) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V251, V252)) end end}, ('un--banner'())))))), fun (V254) -> begin (V255 = (V253(V254))), case V255 of {'Prelude.Types.Left', V256} -> {'Prelude.Types.Left', V256}; {'Prelude.Types.Right', V257} -> (begin (V273 = case ('Idris.Idris2.Data.List':'un--isCons'(V0)) of 1 -> ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V90, V157, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'((begin (V259 = fun (V258) -> V258 end), fun (V260) -> (V259(V260)) end end(<<"With codegen for:"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'(((begin (V269 = fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V267, V268)) end end end end), fun (V270) -> fun (V271) -> ((((V269('erased'))('erased'))(V270))(V271)) end end end(fun (V261) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V262) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V262)) end, fun (V263) -> fun (V264) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V263, V264)) end end}, ('Idris.Idris2.Builtin':'un--fst'(V261)))) end))(V0)))))))); 0 -> fun (V272) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V273 end(V254)) end end end end end), fun (V275) -> begin (V276 = (V274(V275))), case V276 of {'Prelude.Types.Left', V277} -> {'Prelude.Types.Left', V277}; {'Prelude.Types.Right', V278} -> (begin (V456 = begin (V306 = case case V222 of {'Core.Options.MkSessionOpts', V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304} -> V282 end of 1 -> ('Idris.Idris2.Idris.Package':'un--findIpkg'(V90, V157, V95, V152)); 0 -> fun (V305) -> {'Prelude.Types.Right', V152} end end), fun (V307) -> begin (V308 = (V306(V307))), case V308 of {'Prelude.Types.Left', V309} -> {'Prelude.Types.Left', V309}; {'Prelude.Types.Right', V310} -> (begin (V455 = begin (V311 = ('Idris.Idris2.Idris.REPL.Opts':'un--setMainFile'(V157, V310))), fun (V312) -> begin (V313 = (V311(V312))), case V313 of {'Prelude.Types.Left', V314} -> {'Prelude.Types.Left', V314}; {'Prelude.Types.Right', V315} -> (begin (V454 = begin (V370 = case V310 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context.Log':'un--logTime'(V90, 1, fun () -> (begin (V317 = fun (V316) -> V316 end), fun (V318) -> (V317(V318)) end end(<<"Loading prelude"/utf8>>)) end, begin (V346 = case case V222 of {'Core.Options.MkSessionOpts', V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344} -> V319 end of 1 -> fun (V345) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> ('Idris.Idris2.Idris.ProcessIdr':'un--readPrelude'(V90, V193, V95, 1)) end), fun (V347) -> begin (V348 = (V346(V347))), case V348 of {'Prelude.Types.Left', V349} -> {'Prelude.Types.Left', V349}; {'Prelude.Types.Right', V350} -> (begin (V352 = fun (V351) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Done'}} end), V352 end(V347)) end end end end)); {'Prelude.Types.Just', V353} -> ('Idris.Idris2.Core.Context.Log':'un--logTime'(V90, 1, fun () -> (begin (V355 = fun (V354) -> V354 end), fun (V356) -> (V355(V356)) end end(<<"Loading main file"/utf8>>)) end, begin (V357 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V90, V193, V95, V212, V157, V353))), fun (V358) -> begin (V359 = (V357(V358))), case V359 of {'Prelude.Types.Left', V360} -> {'Prelude.Types.Left', V360}; {'Prelude.Types.Right', V361} -> (begin (V369 = begin (V362 = ('Idris.Idris2.Idris.REPL':'un--displayErrors'(V90, V193, V95, V212, V157, V361))), fun (V363) -> begin (V364 = (V362(V363))), case V364 of {'Prelude.Types.Left', V365} -> {'Prelude.Types.Left', V365}; {'Prelude.Types.Right', V366} -> (begin (V368 = fun (V367) -> {'Prelude.Types.Right', V361} end), V368 end(V363)) end end end end), V369 end(V358)) end end end end)) end), fun (V371) -> begin (V372 = (V370(V371))), case V372 of {'Prelude.Types.Left', V373} -> {'Prelude.Types.Left', V373}; {'Prelude.Types.Right', V374} -> (begin (V453 = begin (V377 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(('Idris.Idris2.Idris.SetOptions':'un--postOptions'(V90, V193, V95, V212, V157, V374, V1)), fun (V375) -> ('Idris.Idris2.Core.Core':'un--*>'(('Idris.Idris2.Idris.REPL.Common':'un--emitError'(V90, V157, V95, V375)), fun (V376) -> {'Prelude.Types.Right', 0} end)) end))), fun (V378) -> begin (V379 = (V377(V378))), case V379 of {'Prelude.Types.Left', V380} -> {'Prelude.Types.Left', V380}; {'Prelude.Types.Right', V381} -> (begin (V452 = case V381 of 1 -> begin (V382 = ('Idris.Idris2.Idris.REPL':'un--repl'(V90, V193, V95, V212, V157))), fun (V383) -> begin (V384 = (V382(V383))), case V384 of {'Prelude.Types.Left', V385} -> {'Prelude.Types.Left', V385}; {'Prelude.Types.Right', V386} -> (begin (V387 = ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V90))), V387 end(V383)) end end end end; 0 -> begin (V393 = begin (V388 = V157), fun (V389) -> begin (V392 = (begin (V390 = V388), fun (V391) -> ('erlang':'get'(V390)) end end(V389))), {'Prelude.Types.Right', V392} end end end), fun (V394) -> begin (V395 = (V393(V394))), case V395 of {'Prelude.Types.Left', V396} -> {'Prelude.Types.Left', V396}; {'Prelude.Types.Right', V397} -> (begin (V451 = begin (V398 = ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V90))), fun (V399) -> begin (V400 = (V398(V399))), case V400 of {'Prelude.Types.Left', V401} -> {'Prelude.Types.Left', V401}; {'Prelude.Types.Right', V402} -> (begin (V450 = fun (V403) -> case V397 of {'Idris.REPL.Opts.MkREPLOpts', V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420} -> case V411 of {'Prelude.Types.Just', V421} -> begin (V449 = (('Idris.Idris2.Libraries.Utils.System':'un--softExitWith'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V422) -> fun (V423) -> fun (V424) -> fun (V425) -> fun (V426) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V424, V425, V426)) end end end end end, fun (V427) -> fun (V428) -> fun (V429) -> V428 end end end, fun (V430) -> fun (V431) -> fun (V432) -> fun (V433) -> fun (V434) -> begin (V435 = (V432(V434))), begin (V436 = (V433(V434))), (V435(V436)) end end end end end end end}, fun (V437) -> fun (V438) -> fun (V439) -> fun (V440) -> fun (V441) -> begin (V442 = (V439(V441))), ((V440(V442))(V441)) end end end end end end, fun (V443) -> fun (V444) -> fun (V445) -> begin (V446 = (V444(V445))), (V446(V445)) end end end end}, fun (V447) -> fun (V448) -> V448 end end}, {'Erlang.System.ExitFailure', 1, {'Data.So.Oh'}}))(V403))), {'Prelude.Types.Right', V449} end; {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end end), V450 end(V399)) end end end end), V451 end(V394)) end end end end end), V452 end(V378)) end end end end), V453 end(V371)) end end end end), V454 end(V312)) end end end end), V455 end(V307)) end end end end), V456 end(V275)) end end end end), V457 end(V219)) end end end end), V458 end(V214)) end end end end), V459 end(V209)) end end end end), V460 end(V204)) end end end end), V461 end(V190)) end end end end), V462 end(V185)) end end end end)) end), V463 end(V175)) end end end end; 0 -> fun (V464) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V465 end(V170)) end end end end end), V466 end(V164)) end end end end), V467 end(V159)) end end end end), V468 end(V154)) end end end end end end end), V469 end(V146)) end end end end), V470 end(V108)) end end end end), V471 end(V103)) end end end end), V472 end(V98)) end end end end), V473 end(V92)) end end end end), V474 end(V87)) end end end end end), V475 end(V13)) end end end end; 1 -> fun (V476) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V477 end(V8)) end end end end; 1 -> fun (V478) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V479 end(V3)) end end end end.
'un--splitPaths'(V0) -> ('Idris.Idris2.Data.List1':'dn--un--map_Functor_List1'(fun (V1) -> ('Idris.Idris2.Data.String':'un--trim'(V1)) end, ('Idris.Idris2.Data.String':'un--split'(fun (V2) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Char'(V2, ('Idris.Idris2.Libraries.Utils.Path':'un--pathSeparator'()))) end, V0)))).
'un--showInfo'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> {'Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V4, V5) -> ('un--showInfo'(V0, V1, V5)) end(E0, E1)) end.
'un--quitOpts'(V0) -> case V0 of [] -> fun (V1) -> 1 end; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.CommandLine.Version'} -> fun (V4) -> begin (V5 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Idris.CommandLine':'un--versionMsg'())/binary, <<"\x{a}"/utf8>>/binary>>, V4))), 0 end end; {'Idris.CommandLine.TTCVersion'} -> fun (V6) -> begin (V7 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(('Idris.Idris2.Core.Binary':'un--ttcVersion'())))/binary, <<"\x{a}"/utf8>>/binary>>, V6))), 0 end end; {'Idris.CommandLine.Help', V8} -> case V8 of {'Prelude.Types.Nothing'} -> fun (V9) -> begin (V10 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Idris.CommandLine':'un--usage'())/binary, <<"\x{a}"/utf8>>/binary>>, V9))), 0 end end; {'Prelude.Types.Just', V11} -> case V11 of 0 -> fun (V12) -> begin (V13 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Core.Options.Log':'un--helpTopics'())/binary, <<"\x{a}"/utf8>>/binary>>, V12))), 0 end end; 1 -> fun (V14) -> begin (V15 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('Idris.Idris2.Idris.Syntax.Pragmas':'un--pragmaTopics'())/binary, <<"\x{a}"/utf8>>/binary>>, V14))), 0 end end; _ -> ('un--quitOpts'(V3)) end; _ -> ('un--quitOpts'(V3)) end; _ -> ('un--quitOpts'(V3)) end end(E0, E1)) end.
'un--mainWithCodegens'(V0, V1, V2) -> ('case--mainWithCodegens-3297'(V1, V0, ('Idris.Idris2.Idris.CommandLine':'un--getOpts'(V1)), V2)).
'un--ignoreMissingIpkg'(V0) -> case V0 of [] -> 0; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.CommandLine.IgnoreMissingIPKG'} -> 1; _ -> ('un--ignoreMissingIpkg'(V2)) end end(E0, E1)) end.
'un--getPrivDir'(V0) -> begin (V1 = ('erlang':'apply'('code', 'priv_dir', ['idris2' | []]))), ('Idris.Idris2.Erlang.Decode':'un--erlDecodeMay'({'Erlang.Types.ETErlTerm'}, ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor_ErlDecoder'(fun (V2) -> case V2 of E0 -> (fun (V3) -> V3 end((fun (V4) -> ('unicode':'characters_to_binary'(V4)) end(E0)))) end end, ('Idris.Idris2.Erlang.Decode':'un--charlist'()))), V1)) end.
'un--findInput'(V0) -> case V0 of [] -> {'Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.CommandLine.InputFile', V3} -> {'Prelude.Types.Just', V3}; _ -> ('un--findInput'(V2)) end end(E0, E1)) end.
'un--checkVerbose'(V0) -> case V0 of [] -> 0; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.CommandLine.Verbose'} -> 1; _ -> ('un--checkVerbose'(V2)) end end(E0, E1)) end.
'un--banner'() -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V0) -> fun (V1) -> <<V0/binary, V1/binary>> end end, <<""/utf8>>}, fun (V2) -> V2 end, [<<"     ____    __     _         ___\x{a}    /  _/___/ /____(_)____   |__ \x{5c}\x{a}    / // __  / ___/ / ___/   __/ /     Version "/utf8>> | [('Idris.Idris2.Libraries.Data.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'()))) | [<<"\x{a}  _/ // /_/ / /  / (__  )   / __/      https://www.idris-lang.org\x{a} /___/\x{5c}__,_/_/  /_/____/   /____/      Type :? for help\x{a}\x{a}Welcome to Idris 2.  Enjoy yourself!"/utf8>> | []]]])).
