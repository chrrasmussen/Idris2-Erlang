-module('Idris.Idris2.Network.Socket').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--3960-7797--in--un--saString'/5,
  'un--socket'/4,
  'un--sendTo'/5,
  'un--sendBytes'/3,
  'un--send'/3,
  'un--recvFrom'/3,
  'un--recvBytes'/3,
  'un--recvAllRec'/3,
  'un--recvAllBytes'/2,
  'un--recvAll'/2,
  'un--recv'/3,
  'un--listen'/2,
  'un--connect'/4,
  'un--close'/2,
  'un--bind'/4,
  'un--accept'/2
]).
'nested--3960-7797--in--un--saString'(V0, V1, V2, V3, V4) -> case V4 of {'Prelude.Types.Just', V5} -> ('Idris.Idris2.Network.Socket.Data':'dn--un--show_Show_SocketAddress'(V5)); {'Prelude.Types.Nothing'} -> <<""/utf8>> end.
'un--socket'(V0, V1, V2, V3) -> case V0 of {'Prelude.IO.MkHasIO', V4, V5} -> case V4 of {'Prelude.Interfaces.MkMonad', V6, V7, V8} -> ((((V7('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V31, V32} -> ((V32('erased'))(fun (V33) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_socket'(('Idris.Idris2.Network.Socket.Data':'dn--un--toCode_ToCode_SocketFamily'(V1)), ('Idris.Idris2.Network.Socket.Data':'dn--un--toCode_ToCode_SocketType'(V2)), V3, V33)) end)) end))(fun (V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V9, begin (V10 = -1), case ((V10 band 9223372036854775808) =/= 0) of 'true' -> (V10 bor -9223372036854775808); _ -> (V10 band 9223372036854775807) end end)) of 1 -> ((begin (V20 = case V0 of {'Prelude.IO.MkHasIO', V12, V13} -> case V12 of {'Prelude.Interfaces.MkMonad', V14, V15, V16} -> case V14 of {'Prelude.Interfaces.MkApplicative', V17, V18, V19} -> V17 end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end(fun (V11) -> {'Prelude.Types.Left', V11} end))(('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)))); 0 -> case V0 of {'Prelude.IO.MkHasIO', V23, V24} -> case V23 of {'Prelude.Interfaces.MkMonad', V25, V26, V27} -> case V25 of {'Prelude.Interfaces.MkApplicative', V28, V29, V30} -> ((V29('erased'))({'Prelude.Types.Right', {'Network.Socket.Data.MkSocket', V9, V1, V2, V3}})) end end end end end)) end end.
'un--sendTo'(V0, V1, V2, V3, V4) -> case V0 of {'Prelude.IO.MkHasIO', V5, V6} -> case V5 of {'Prelude.Interfaces.MkMonad', V7, V8, V9} -> ((((V8('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V32, V33} -> ((V33('erased'))(fun (V34) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_sendto'(case V1 of {'Network.Socket.Data.MkSocket', V35, V36, V37, V38} -> V35 end, V4, ('Idris.Idris2.Network.Socket.Data':'dn--un--show_Show_SocketAddress'(V2)), V3, ('Idris.Idris2.Network.Socket.Data':'dn--un--toCode_ToCode_SocketFamily'(case V1 of {'Network.Socket.Data.MkSocket', V39, V40, V41, V42} -> V40 end)), V34)) end)) end))(fun (V10) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V10, begin (V11 = -1), case ((V11 band 9223372036854775808) =/= 0) of 'true' -> (V11 bor -9223372036854775808); _ -> (V11 band 9223372036854775807) end end)) of 1 -> ((begin (V21 = case V0 of {'Prelude.IO.MkHasIO', V13, V14} -> case V13 of {'Prelude.Interfaces.MkMonad', V15, V16, V17} -> case V15 of {'Prelude.Interfaces.MkApplicative', V18, V19, V20} -> V18 end end end), fun (V22) -> fun (V23) -> ((((V21('erased'))('erased'))(V22))(V23)) end end end(fun (V12) -> {'Prelude.Types.Left', V12} end))(('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)))); 0 -> case V0 of {'Prelude.IO.MkHasIO', V24, V25} -> case V24 of {'Prelude.Interfaces.MkMonad', V26, V27, V28} -> case V26 of {'Prelude.Interfaces.MkApplicative', V29, V30, V31} -> ((V30('erased'))({'Prelude.Types.Right', V10})) end end end end end)) end end.
'un--sendBytes'(V0, V1, V2) -> begin (V4 = begin (V3 = ('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V2))), case ((V3 band 9223372036854775808) =/= 0) of 'true' -> (V3 bor -9223372036854775808); _ -> (V3 band 9223372036854775807) end end), case V0 of {'Prelude.IO.MkHasIO', V5, V6} -> case V5 of {'Prelude.Interfaces.MkMonad', V7, V8, V9} -> ((((V8('erased'))('erased'))(('Idris.Idris2.Data.Buffer':'un--newBuffer'(V0, V4))))(fun (V10) -> case V10 of {'Prelude.Types.Just', V11} -> case V0 of {'Prelude.IO.MkHasIO', V12, V13} -> case V12 of {'Prelude.Interfaces.MkMonad', V14, V15, V16} -> ((((V15('erased'))('erased'))(('Idris.Idris2.Prelude.Interfaces':'un--traverse_'(case V0 of {'Prelude.IO.MkHasIO', V48, V49} -> case V48 of {'Prelude.Interfaces.MkMonad', V50, V51, V52} -> V50 end end, {'Prelude.Interfaces.MkFoldable', fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V55, V56, V57)) end end end end end, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V60, V61, V62)) end end end end end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V64)) end end, fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V68, V69, V70, V71)) end end end end end end end, fun (V72) -> fun (V73) -> V73 end end, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V76, V77, V78)) end end end end end}, fun (V79) -> ('Idris.Idris2.Prelude.Basics':'un--uncurry'(fun (V80) -> fun (V81) -> case V0 of {'Prelude.IO.MkHasIO', V82, V83} -> ((V83('erased'))(fun (V84) -> ('Idris.Idris2.Data.Buffer':'un--prim__setBits8'(V11, V80, V81, V84)) end)) end end end, V79)) end, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_$a'({'Builtin.MkPair', {'Prelude.Num.MkIntegral', {'Prelude.Num.MkNum', fun (V85) -> fun (V86) -> begin (V87 = (V85 + V86)), case ((V87 band 9223372036854775808) =/= 0) of 'true' -> (V87 bor -9223372036854775808); _ -> (V87 band 9223372036854775807) end end end end, fun (V88) -> fun (V89) -> begin (V90 = (V88 * V89)), case ((V90 band 9223372036854775808) =/= 0) of 'true' -> (V90 bor -9223372036854775808); _ -> (V90 band 9223372036854775807) end end end end, fun (V91) -> begin (V92 = V91), case ((V92 band 9223372036854775808) =/= 0) of 'true' -> (V92 bor -9223372036854775808); _ -> (V92 band 9223372036854775807) end end end}, fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Num':'dn--un--div_Integral_Int'(V93, V94)) end end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Prelude.Num':'dn--un--mod_Integral_Int'(V95, V96)) end end}, {'Builtin.MkPair', {'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V97, V98)) end end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V99, V100)) end end}, fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V101, V102)) end end, fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V103, V104)) end end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V105, V106)) end end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V107, V108)) end end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V109, V110)) end end, fun (V111) -> fun (V112) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V111, V112)) end end, fun (V113) -> fun (V114) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V113, V114)) end end}, {'Prelude.Num.MkNeg', {'Prelude.Num.MkNum', fun (V115) -> fun (V116) -> begin (V117 = (V115 + V116)), case ((V117 band 9223372036854775808) =/= 0) of 'true' -> (V117 bor -9223372036854775808); _ -> (V117 band 9223372036854775807) end end end end, fun (V118) -> fun (V119) -> begin (V120 = (V118 * V119)), case ((V120 band 9223372036854775808) =/= 0) of 'true' -> (V120 bor -9223372036854775808); _ -> (V120 band 9223372036854775807) end end end end, fun (V121) -> begin (V122 = V121), case ((V122 band 9223372036854775808) =/= 0) of 'true' -> (V122 bor -9223372036854775808); _ -> (V122 band 9223372036854775807) end end end}, fun (V123) -> begin (V124 = (0 - V123)), case ((V124 band 9223372036854775808) =/= 0) of 'true' -> (V124 bor -9223372036854775808); _ -> (V124 band 9223372036854775807) end end end, fun (V125) -> fun (V126) -> begin (V127 = (V125 - V126)), case ((V127 band 9223372036854775808) =/= 0) of 'true' -> (V127 bor -9223372036854775808); _ -> (V127 band 9223372036854775807) end end end end}}}, 0, V4)), V2))))))(fun (V17) -> case V0 of {'Prelude.IO.MkHasIO', V18, V19} -> case V18 of {'Prelude.Interfaces.MkMonad', V20, V21, V22} -> ((((V21('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V41, V42} -> ((V42('erased'))(fun (V43) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_send_bytes'(case V1 of {'Network.Socket.Data.MkSocket', V44, V45, V46, V47} -> V44 end, V11, V4, 0, V43)) end)) end))(fun (V23) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V23, begin (V24 = 0), case ((V24 band 9223372036854775808) =/= 0) of 'true' -> (V24 bor -9223372036854775808); _ -> (V24 band 9223372036854775807) end end)) of 1 -> case V0 of {'Prelude.IO.MkHasIO', V25, V26} -> case V25 of {'Prelude.Interfaces.MkMonad', V27, V28, V29} -> case V27 of {'Prelude.Interfaces.MkApplicative', V30, V31, V32} -> ((V31('erased'))({'Prelude.Types.Left', V23})) end end end; 0 -> case V0 of {'Prelude.IO.MkHasIO', V33, V34} -> case V33 of {'Prelude.Interfaces.MkMonad', V35, V36, V37} -> case V35 of {'Prelude.Interfaces.MkApplicative', V38, V39, V40} -> ((V39('erased'))({'Prelude.Types.Right', V23})) end end end end end)) end end end)) end end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Builtin':'un--idris_crash'((begin (V129 = fun (V128) -> V128 end), fun (V130) -> (V129(V130)) end end(<<"somehow newBuffer failed"/utf8>>)))) end end)) end end end.
'un--send'(V0, V1, V2) -> case V0 of {'Prelude.IO.MkHasIO', V3, V4} -> case V3 of {'Prelude.Interfaces.MkMonad', V5, V6, V7} -> ((((V6('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V30, V31} -> ((V31('erased'))(fun (V32) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_send'(case V1 of {'Network.Socket.Data.MkSocket', V33, V34, V35, V36} -> V33 end, V2, V32)) end)) end))(fun (V8) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V8, begin (V9 = -1), case ((V9 band 9223372036854775808) =/= 0) of 'true' -> (V9 bor -9223372036854775808); _ -> (V9 band 9223372036854775807) end end)) of 1 -> ((begin (V19 = case V0 of {'Prelude.IO.MkHasIO', V11, V12} -> case V11 of {'Prelude.Interfaces.MkMonad', V13, V14, V15} -> case V13 of {'Prelude.Interfaces.MkApplicative', V16, V17, V18} -> V16 end end end), fun (V20) -> fun (V21) -> ((((V19('erased'))('erased'))(V20))(V21)) end end end(fun (V10) -> {'Prelude.Types.Left', V10} end))(('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)))); 0 -> case V0 of {'Prelude.IO.MkHasIO', V22, V23} -> case V22 of {'Prelude.Interfaces.MkMonad', V24, V25, V26} -> case V24 of {'Prelude.Interfaces.MkApplicative', V27, V28, V29} -> ((V28('erased'))({'Prelude.Types.Right', V8})) end end end end end)) end end.
'un--recvFrom'(V0, V1, V2) -> case V0 of {'Prelude.IO.MkHasIO', V3, V4} -> case V3 of {'Prelude.Interfaces.MkMonad', V5, V6, V7} -> ((((V6('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V88, V89} -> ((V89('erased'))(fun (V90) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_recvfrom'(case V1 of {'Network.Socket.Data.MkSocket', V91, V92, V93, V94} -> V91 end, V2, V90)) end)) end))(fun (V8) -> begin (V9 = V8), case V0 of {'Prelude.IO.MkHasIO', V10, V11} -> case V10 of {'Prelude.Interfaces.MkMonad', V12, V13, V14} -> ((((V13('erased'))('erased'))(('Idris.Idris2.Network.Socket.Data':'un--nullPtr'(V0, V8))))(fun (V15) -> case V15 of 1 -> ((begin (V25 = case V0 of {'Prelude.IO.MkHasIO', V17, V18} -> case V17 of {'Prelude.Interfaces.MkMonad', V19, V20, V21} -> case V19 of {'Prelude.Interfaces.MkApplicative', V22, V23, V24} -> V22 end end end), fun (V26) -> fun (V27) -> ((((V25('erased'))('erased'))(V26))(V27)) end end end(fun (V16) -> {'Prelude.Types.Left', V16} end))(('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)))); 0 -> case V0 of {'Prelude.IO.MkHasIO', V28, V29} -> case V28 of {'Prelude.Interfaces.MkMonad', V30, V31, V32} -> ((((V31('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V85, V86} -> ((V86('erased'))(fun (V87) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_get_recvfrom_res'(V8, V87)) end)) end))(fun (V33) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V33, begin (V34 = -1), case ((V34 band 9223372036854775808) =/= 0) of 'true' -> (V34 bor -9223372036854775808); _ -> (V34 band 9223372036854775807) end end)) of 1 -> case V0 of {'Prelude.IO.MkHasIO', V35, V36} -> case V35 of {'Prelude.Interfaces.MkMonad', V37, V38, V39} -> ((((V38('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--freeRecvfromStruct'(V0, V9))))(fun (V40) -> ((begin (V50 = case V0 of {'Prelude.IO.MkHasIO', V42, V43} -> case V42 of {'Prelude.Interfaces.MkMonad', V44, V45, V46} -> case V44 of {'Prelude.Interfaces.MkApplicative', V47, V48, V49} -> V47 end end end), fun (V51) -> fun (V52) -> ((((V50('erased'))('erased'))(V51))(V52)) end end end(fun (V41) -> {'Prelude.Types.Left', V41} end))(('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)))) end)) end end; 0 -> case V0 of {'Prelude.IO.MkHasIO', V53, V54} -> case V53 of {'Prelude.Interfaces.MkMonad', V55, V56, V57} -> ((((V56('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--foreignGetRecvfromPayload'(V0, V9))))(fun (V58) -> case V0 of {'Prelude.IO.MkHasIO', V59, V60} -> case V59 of {'Prelude.Interfaces.MkMonad', V61, V62, V63} -> ((((V62('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--foreignGetRecvfromPort'(V0, V9))))(fun (V64) -> case V0 of {'Prelude.IO.MkHasIO', V65, V66} -> case V65 of {'Prelude.Interfaces.MkMonad', V67, V68, V69} -> ((((V68('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--foreignGetRecvfromAddr'(V0, V9))))(fun (V70) -> case V0 of {'Prelude.IO.MkHasIO', V71, V72} -> case V71 of {'Prelude.Interfaces.MkMonad', V73, V74, V75} -> ((((V74('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--freeRecvfromStruct'(V0, V9))))(fun (V76) -> case V0 of {'Prelude.IO.MkHasIO', V77, V78} -> case V77 of {'Prelude.Interfaces.MkMonad', V79, V80, V81} -> case V79 of {'Prelude.Interfaces.MkApplicative', V82, V83, V84} -> ((V83('erased'))({'Prelude.Types.Right', {'Builtin.MkPair', {'Network.Socket.Data.MkUDPAddrInfo', V70, V64}, {'Builtin.MkPair', V58, V33}}})) end end end end)) end end end)) end end end)) end end end)) end end end end)) end end end end)) end end end end)) end end.
'un--recvBytes'(V0, V1, V2) -> case V0 of {'Prelude.IO.MkHasIO', V3, V4} -> case V3 of {'Prelude.Interfaces.MkMonad', V5, V6, V7} -> ((((V6('erased'))('erased'))(('Idris.Idris2.Data.Buffer':'un--newBuffer'(V0, V2))))(fun (V8) -> case V8 of {'Prelude.Types.Just', V9} -> case V0 of {'Prelude.IO.MkHasIO', V10, V11} -> case V10 of {'Prelude.Interfaces.MkMonad', V12, V13, V14} -> ((((V13('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V93, V94} -> ((V94('erased'))(fun (V95) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_recv_bytes'(case V1 of {'Network.Socket.Data.MkSocket', V96, V97, V98, V99} -> V96 end, V9, V2, 0, V95)) end)) end))(fun (V15) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V15, begin (V16 = 0), case ((V16 band 9223372036854775808) =/= 0) of 'true' -> (V16 bor -9223372036854775808); _ -> (V16 band 9223372036854775807) end end)) of 0 -> case V0 of {'Prelude.IO.MkHasIO', V17, V18} -> case V17 of {'Prelude.Interfaces.MkMonad', V19, V20, V21} -> case V19 of {'Prelude.Interfaces.MkApplicative', V22, V23, V24} -> ((V23('erased'))({'Prelude.Types.Left', V15})) end end end; 1 -> case V0 of {'Prelude.IO.MkHasIO', V25, V26} -> case V25 of {'Prelude.Interfaces.MkMonad', V27, V28, V29} -> ((((V28('erased'))('erased'))(('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'(case V0 of {'Prelude.IO.MkHasIO', V39, V40} -> case V39 of {'Prelude.Interfaces.MkMonad', V41, V42, V43} -> V41 end end, fun (V44) -> case V0 of {'Prelude.IO.MkHasIO', V45, V46} -> ((V46('erased'))(fun (V47) -> ('Idris.Idris2.Data.Buffer':'un--prim__getBits8'(V9, V44, V47)) end)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_$a'({'Builtin.MkPair', {'Prelude.Num.MkIntegral', {'Prelude.Num.MkNum', fun (V48) -> fun (V49) -> begin (V50 = (V48 + V49)), case ((V50 band 9223372036854775808) =/= 0) of 'true' -> (V50 bor -9223372036854775808); _ -> (V50 band 9223372036854775807) end end end end, fun (V51) -> fun (V52) -> begin (V53 = (V51 * V52)), case ((V53 band 9223372036854775808) =/= 0) of 'true' -> (V53 bor -9223372036854775808); _ -> (V53 band 9223372036854775807) end end end end, fun (V54) -> begin (V55 = V54), case ((V55 band 9223372036854775808) =/= 0) of 'true' -> (V55 bor -9223372036854775808); _ -> (V55 band 9223372036854775807) end end end}, fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Num':'dn--un--div_Integral_Int'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Num':'dn--un--mod_Integral_Int'(V58, V59)) end end}, {'Builtin.MkPair', {'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V62, V63)) end end}, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V64, V65)) end end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V68, V69)) end end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V70, V71)) end end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V72, V73)) end end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V74, V75)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V76, V77)) end end}, {'Prelude.Num.MkNeg', {'Prelude.Num.MkNum', fun (V78) -> fun (V79) -> begin (V80 = (V78 + V79)), case ((V80 band 9223372036854775808) =/= 0) of 'true' -> (V80 bor -9223372036854775808); _ -> (V80 band 9223372036854775807) end end end end, fun (V81) -> fun (V82) -> begin (V83 = (V81 * V82)), case ((V83 band 9223372036854775808) =/= 0) of 'true' -> (V83 bor -9223372036854775808); _ -> (V83 band 9223372036854775807) end end end end, fun (V84) -> begin (V85 = V84), case ((V85 band 9223372036854775808) =/= 0) of 'true' -> (V85 bor -9223372036854775808); _ -> (V85 band 9223372036854775807) end end end}, fun (V86) -> begin (V87 = (0 - V86)), case ((V87 band 9223372036854775808) =/= 0) of 'true' -> (V87 bor -9223372036854775808); _ -> (V87 band 9223372036854775807) end end end, fun (V88) -> fun (V89) -> begin (V90 = (V88 - V89)), case ((V90 band 9223372036854775808) =/= 0) of 'true' -> (V90 bor -9223372036854775808); _ -> (V90 band 9223372036854775807) end end end end}}}, 0, begin (V92 = (V15 - begin (V91 = 1), case ((V91 band 9223372036854775808) =/= 0) of 'true' -> (V91 bor -9223372036854775808); _ -> (V91 band 9223372036854775807) end end)), case ((V92 band 9223372036854775808) =/= 0) of 'true' -> (V92 bor -9223372036854775808); _ -> (V92 band 9223372036854775807) end end))))))(fun (V30) -> case V0 of {'Prelude.IO.MkHasIO', V31, V32} -> case V31 of {'Prelude.Interfaces.MkMonad', V33, V34, V35} -> case V33 of {'Prelude.Interfaces.MkApplicative', V36, V37, V38} -> ((V37('erased'))({'Prelude.Types.Right', V30})) end end end end)) end end end end)) end end; {'Prelude.Types.Nothing'} -> case V0 of {'Prelude.IO.MkHasIO', V100, V101} -> case V100 of {'Prelude.Interfaces.MkMonad', V102, V103, V104} -> case V102 of {'Prelude.Interfaces.MkApplicative', V105, V106, V107} -> ((V106('erased'))({'Prelude.Types.Left', begin (V108 = -1), case ((V108 band 9223372036854775808) =/= 0) of 'true' -> (V108 bor -9223372036854775808); _ -> (V108 band 9223372036854775807) end end})) end end end end end)) end end.
'un--recvAllRec'(V0, V1, V2) -> case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Prelude.IO.MkHasIO', V3, V4} -> case V3 of {'Prelude.Interfaces.MkMonad', V5, V6, V7} -> ((((V6('erased'))('erased'))(V1))(fun (V8) -> case V8 of {'Prelude.Types.Left', V9} -> case V9 of 0 -> case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Prelude.IO.MkHasIO', V10, V11} -> case V10 of {'Prelude.Interfaces.MkMonad', V12, V13, V14} -> case V12 of {'Prelude.Interfaces.MkApplicative', V15, V16, V17} -> ((V16('erased'))({'Prelude.Types.Right', ('Idris.Idris2.Data.SnocList':'dn--un--foldMap_Foldable_SnocList'(('Idris.Idris2.Builtin':'un--fst'(V0)), fun (V18) -> V18 end, V2))})) end end end; _ -> case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Prelude.IO.MkHasIO', V19, V20} -> case V19 of {'Prelude.Interfaces.MkMonad', V21, V22, V23} -> case V21 of {'Prelude.Interfaces.MkApplicative', V24, V25, V26} -> ((V25('erased'))({'Prelude.Types.Left', V9})) end end end end; {'Prelude.Types.Right', V27} -> ('un--recvAllRec'(V0, V1, {'Prelude.Basics.:<', V2, V27})) end end)) end end.
'un--recvAllBytes'(V0, V1) -> ('un--recvAllRec'({'Builtin.MkPair', {'Prelude.Interfaces.MkMonoid', fun (V2) -> fun (V3) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2, V3)) end end, []}, V0}, ('un--recvBytes'(V0, V1, begin (V4 = 65536), case ((V4 band 9223372036854775808) =/= 0) of 'true' -> (V4 bor -9223372036854775808); _ -> (V4 band 9223372036854775807) end end)), {'Prelude.Basics.Lin'})).
'un--recvAll'(V0, V1) -> ('un--recvAllRec'({'Builtin.MkPair', {'Prelude.Interfaces.MkMonoid', fun (V2) -> fun (V3) -> <<V2/binary, V3/binary>> end end, <<""/utf8>>}, V0}, ((begin (V16 = case V0 of {'Prelude.IO.MkHasIO', V8, V9} -> case V8 of {'Prelude.Interfaces.MkMonad', V10, V11, V12} -> case V10 of {'Prelude.Interfaces.MkApplicative', V13, V14, V15} -> V13 end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V5) -> case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> {'Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'(V7))} end end))(('un--recv'(V0, V1, begin (V4 = 65536), case ((V4 band 9223372036854775808) =/= 0) of 'true' -> (V4 bor -9223372036854775808); _ -> (V4 band 9223372036854775807) end end)))), {'Prelude.Basics.Lin'})).
'un--recv'(V0, V1, V2) -> case V0 of {'Prelude.IO.MkHasIO', V3, V4} -> case V3 of {'Prelude.Interfaces.MkMonad', V5, V6, V7} -> ((((V6('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V78, V79} -> ((V79('erased'))(fun (V80) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_recv'(case V1 of {'Network.Socket.Data.MkSocket', V81, V82, V83, V84} -> V81 end, V2, V80)) end)) end))(fun (V8) -> case V0 of {'Prelude.IO.MkHasIO', V9, V10} -> case V9 of {'Prelude.Interfaces.MkMonad', V11, V12, V13} -> ((((V12('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V75, V76} -> ((V76('erased'))(fun (V77) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_get_recv_res'(V8, V77)) end)) end))(fun (V14) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V14, begin (V15 = -1), case ((V15 band 9223372036854775808) =/= 0) of 'true' -> (V15 bor -9223372036854775808); _ -> (V15 band 9223372036854775807) end end)) of 1 -> case V0 of {'Prelude.IO.MkHasIO', V16, V17} -> case V16 of {'Prelude.Interfaces.MkMonad', V18, V19, V20} -> ((((V19('erased'))('erased'))(('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0))))(fun (V21) -> case V0 of {'Prelude.IO.MkHasIO', V22, V23} -> case V22 of {'Prelude.Interfaces.MkMonad', V24, V25, V26} -> ((((V25('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--freeRecvStruct'(V0, V8))))(fun (V27) -> case V0 of {'Prelude.IO.MkHasIO', V28, V29} -> case V28 of {'Prelude.Interfaces.MkMonad', V30, V31, V32} -> case V30 of {'Prelude.Interfaces.MkApplicative', V33, V34, V35} -> ((V34('erased'))({'Prelude.Types.Left', V21})) end end end end)) end end end)) end end; 0 -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V14, begin (V36 = 0), case ((V36 band 9223372036854775808) =/= 0) of 'true' -> (V36 bor -9223372036854775808); _ -> (V36 band 9223372036854775807) end end)) of 1 -> case V0 of {'Prelude.IO.MkHasIO', V37, V38} -> case V37 of {'Prelude.Interfaces.MkMonad', V39, V40, V41} -> ((((V40('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--freeRecvStruct'(V0, V8))))(fun (V42) -> case V0 of {'Prelude.IO.MkHasIO', V43, V44} -> case V43 of {'Prelude.Interfaces.MkMonad', V45, V46, V47} -> case V45 of {'Prelude.Interfaces.MkApplicative', V48, V49, V50} -> ((V49('erased'))({'Prelude.Types.Left', begin (V51 = 0), case ((V51 band 9223372036854775808) =/= 0) of 'true' -> (V51 bor -9223372036854775808); _ -> (V51 band 9223372036854775807) end end})) end end end end)) end end; 0 -> case V0 of {'Prelude.IO.MkHasIO', V52, V53} -> case V52 of {'Prelude.Interfaces.MkMonad', V54, V55, V56} -> ((((V55('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V72, V73} -> ((V73('erased'))(fun (V74) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_get_recv_payload'(V8, V74)) end)) end))(fun (V57) -> case V0 of {'Prelude.IO.MkHasIO', V58, V59} -> case V58 of {'Prelude.Interfaces.MkMonad', V60, V61, V62} -> ((((V61('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--freeRecvStruct'(V0, V8))))(fun (V63) -> case V0 of {'Prelude.IO.MkHasIO', V64, V65} -> case V64 of {'Prelude.Interfaces.MkMonad', V66, V67, V68} -> case V66 of {'Prelude.Interfaces.MkApplicative', V69, V70, V71} -> ((V70('erased'))({'Prelude.Types.Right', {'Builtin.MkPair', V57, V14}})) end end end end)) end end end)) end end end end end)) end end end)) end end.
'un--listen'(V0, V1) -> case V0 of {'Prelude.IO.MkHasIO', V2, V3} -> case V2 of {'Prelude.Interfaces.MkMonad', V4, V5, V6} -> ((((V5('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V18, V19} -> ((V19('erased'))(fun (V20) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_listen'(case V1 of {'Network.Socket.Data.MkSocket', V21, V22, V23, V24} -> V21 end, ('Idris.Idris2.Network.Socket.Data':'un--BACKLOG'()), V20)) end)) end))(fun (V7) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V7, begin (V8 = -1), case ((V8 band 9223372036854775808) =/= 0) of 'true' -> (V8 bor -9223372036854775808); _ -> (V8 band 9223372036854775807) end end)) of 1 -> ('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)); 0 -> case V0 of {'Prelude.IO.MkHasIO', V9, V10} -> case V9 of {'Prelude.Interfaces.MkMonad', V11, V12, V13} -> case V11 of {'Prelude.Interfaces.MkApplicative', V14, V15, V16} -> ((V15('erased'))(begin (V17 = 0), case ((V17 band 9223372036854775808) =/= 0) of 'true' -> (V17 bor -9223372036854775808); _ -> (V17 band 9223372036854775807) end end)) end end end end end)) end end.
'un--connect'(V0, V1, V2, V3) -> case V0 of {'Prelude.IO.MkHasIO', V4, V5} -> case V4 of {'Prelude.Interfaces.MkMonad', V6, V7, V8} -> ((((V7('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V20, V21} -> ((V21('erased'))(fun (V22) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_connect'(case V1 of {'Network.Socket.Data.MkSocket', V23, V24, V25, V26} -> V23 end, ('Idris.Idris2.Network.Socket.Data':'dn--un--toCode_ToCode_SocketFamily'(case V1 of {'Network.Socket.Data.MkSocket', V27, V28, V29, V30} -> V28 end)), ('Idris.Idris2.Network.Socket.Data':'dn--un--toCode_ToCode_SocketType'(case V1 of {'Network.Socket.Data.MkSocket', V31, V32, V33, V34} -> V33 end)), ('Idris.Idris2.Network.Socket.Data':'dn--un--show_Show_SocketAddress'(V2)), V3, V22)) end)) end))(fun (V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V9, begin (V10 = -1), case ((V10 band 9223372036854775808) =/= 0) of 'true' -> (V10 bor -9223372036854775808); _ -> (V10 band 9223372036854775807) end end)) of 1 -> ('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)); 0 -> case V0 of {'Prelude.IO.MkHasIO', V11, V12} -> case V11 of {'Prelude.Interfaces.MkMonad', V13, V14, V15} -> case V13 of {'Prelude.Interfaces.MkApplicative', V16, V17, V18} -> ((V17('erased'))(begin (V19 = 0), case ((V19 band 9223372036854775808) =/= 0) of 'true' -> (V19 bor -9223372036854775808); _ -> (V19 band 9223372036854775807) end end)) end end end end end)) end end.
'un--close'(V0, V1) -> case V0 of {'Prelude.IO.MkHasIO', V2, V3} -> case V2 of {'Prelude.Interfaces.MkMonad', V4, V5, V6} -> ((((V5('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V16, V17} -> ((V17('erased'))(fun (V18) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_close'(case V1 of {'Network.Socket.Data.MkSocket', V19, V20, V21, V22} -> V19 end, V18)) end)) end))(fun (V7) -> case V0 of {'Prelude.IO.MkHasIO', V8, V9} -> case V8 of {'Prelude.Interfaces.MkMonad', V10, V11, V12} -> case V10 of {'Prelude.Interfaces.MkApplicative', V13, V14, V15} -> ((V14('erased'))({'Builtin.MkUnit'})) end end end end)) end end.
'un--bind'(V0, V1, V2, V3) -> case V0 of {'Prelude.IO.MkHasIO', V4, V5} -> case V4 of {'Prelude.Interfaces.MkMonad', V6, V7, V8} -> ((((V7('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V20, V21} -> ((V21('erased'))(fun (V22) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_bind'(case V1 of {'Network.Socket.Data.MkSocket', V23, V24, V25, V26} -> V23 end, ('Idris.Idris2.Network.Socket.Data':'dn--un--toCode_ToCode_SocketFamily'(case V1 of {'Network.Socket.Data.MkSocket', V27, V28, V29, V30} -> V28 end)), ('Idris.Idris2.Network.Socket.Data':'dn--un--toCode_ToCode_SocketType'(case V1 of {'Network.Socket.Data.MkSocket', V31, V32, V33, V34} -> V33 end)), ('nested--3960-7797--in--un--saString'(V0, V3, V2, V1, V2)), V3, V22)) end)) end))(fun (V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V9, begin (V10 = -1), case ((V10 band 9223372036854775808) =/= 0) of 'true' -> (V10 bor -9223372036854775808); _ -> (V10 band 9223372036854775807) end end)) of 1 -> ('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)); 0 -> case V0 of {'Prelude.IO.MkHasIO', V11, V12} -> case V11 of {'Prelude.Interfaces.MkMonad', V13, V14, V15} -> case V13 of {'Prelude.Interfaces.MkApplicative', V16, V17, V18} -> ((V17('erased'))(begin (V19 = 0), case ((V19 band 9223372036854775808) =/= 0) of 'true' -> (V19 bor -9223372036854775808); _ -> (V19 band 9223372036854775807) end end)) end end end end end)) end end.
'un--accept'(V0, V1) -> case V0 of {'Prelude.IO.MkHasIO', V2, V3} -> case V2 of {'Prelude.Interfaces.MkMonad', V4, V5, V6} -> ((((V5('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V58, V59} -> ((V59('erased'))(fun (V60) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_create_sockaddr'(V60)) end)) end))(fun (V7) -> case V0 of {'Prelude.IO.MkHasIO', V8, V9} -> case V8 of {'Prelude.Interfaces.MkMonad', V10, V11, V12} -> ((((V11('erased'))('erased'))(case V0 of {'Prelude.IO.MkHasIO', V51, V52} -> ((V52('erased'))(fun (V53) -> ('Idris.Idris2.Network.FFI':'un--prim__idrnet_accept'(case V1 of {'Network.Socket.Data.MkSocket', V54, V55, V56, V57} -> V54 end, V7, V53)) end)) end))(fun (V13) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V13, begin (V14 = -1), case ((V14 band 9223372036854775808) =/= 0) of 'true' -> (V14 bor -9223372036854775808); _ -> (V14 band 9223372036854775807) end end)) of 1 -> ((begin (V24 = case V0 of {'Prelude.IO.MkHasIO', V16, V17} -> case V16 of {'Prelude.Interfaces.MkMonad', V18, V19, V20} -> case V18 of {'Prelude.Interfaces.MkApplicative', V21, V22, V23} -> V21 end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end(fun (V15) -> {'Prelude.Types.Left', V15} end))(('Idris.Idris2.Network.Socket.Data':'un--getErrno'(V0)))); 0 -> case V1 of {'Network.Socket.Data.MkSocket', V27, V28, V29, V30} -> case V0 of {'Prelude.IO.MkHasIO', V31, V32} -> case V31 of {'Prelude.Interfaces.MkMonad', V33, V34, V35} -> ((((V34('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--getSockAddr'(V0, V7))))(fun (V36) -> case V0 of {'Prelude.IO.MkHasIO', V37, V38} -> case V37 of {'Prelude.Interfaces.MkMonad', V39, V40, V41} -> ((((V40('erased'))('erased'))(('Idris.Idris2.Network.Socket.Raw':'un--sockaddr_free'(V0, V7))))(fun (V42) -> case V0 of {'Prelude.IO.MkHasIO', V43, V44} -> case V43 of {'Prelude.Interfaces.MkMonad', V45, V46, V47} -> case V45 of {'Prelude.Interfaces.MkApplicative', V48, V49, V50} -> ((V49('erased'))({'Prelude.Types.Right', {'Builtin.MkPair', {'Network.Socket.Data.MkSocket', V13, V28, V29, V30}, V36}})) end end end end)) end end end)) end end end end end)) end end end)) end end.
