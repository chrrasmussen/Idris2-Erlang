-module('Idris.Idris2.Core.TTC').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--13741-8138--in--un--fromBuf3'/2,
  'nested--13741-8137--in--un--fromBuf2'/2,
  'nested--13741-8136--in--un--fromBuf1'/2,
  'nested--18724-12671--in--un--cwName'/3,
  'dn--un--toBuf_TTC_Visibility'/2,
  'dn--un--toBuf_TTC_VirtualIdent'/2,
  'dn--un--toBuf_TTC_UseSide'/2,
  'dn--un--toBuf_TTC_TypeFlags'/2,
  'dn--un--toBuf_TTC_Transform'/2,
  'dn--un--toBuf_TTC_Totality'/2,
  'dn--un--toBuf_TTC_TotalReq'/2,
  'dn--un--toBuf_TTC_Terminating'/2,
  'dn--un--toBuf_TTC_SizeChange'/2,
  'dn--un--toBuf_TTC_SCCall'/2,
  'dn--un--toBuf_TTC_RigCount'/2,
  'dn--un--toBuf_TTC_RewriteNames'/2,
  'dn--un--toBuf_TTC_PrimType'/2,
  'dn--un--toBuf_TTC_PrimNames'/2,
  'dn--un--toBuf_TTC_Pat'/2,
  'dn--un--toBuf_TTC_PartialReason'/2,
  'dn--un--toBuf_TTC_PairNames'/2,
  'dn--un--toBuf_TTC_PMDefInfo'/2,
  'dn--un--toBuf_TTC_OriginDesc'/2,
  'dn--un--toBuf_TTC_Namespace'/2,
  'dn--un--toBuf_TTC_NameType'/2,
  'dn--un--toBuf_TTC_Name'/2,
  'dn--un--toBuf_TTC_ModuleIdent'/2,
  'dn--un--toBuf_TTC_LazyReason'/2,
  'dn--un--toBuf_TTC_InlineOk'/2,
  'dn--un--toBuf_TTC_HoleInfo'/2,
  'dn--un--toBuf_TTC_GlobalDef'/2,
  'dn--un--toBuf_TTC_FC'/2,
  'dn--un--toBuf_TTC_DefFlag'/2,
  'dn--un--toBuf_TTC_Def'/2,
  'dn--un--toBuf_TTC_Covering'/2,
  'dn--un--toBuf_TTC_Constant'/2,
  'dn--un--toBuf_TTC_ConInfo'/2,
  'dn--un--toBuf_TTC_CG'/2,
  'dn--un--toBuf_TTC_CFType'/2,
  'dn--un--toBuf_TTC_CDef'/2,
  'dn--un--toBuf_TTC_(Term $vars)'/3,
  'dn--un--toBuf_TTC_(PrimFn $n)'/3,
  'dn--un--toBuf_TTC_(PiInfo $t)'/3,
  'dn--un--toBuf_TTC_(CaseTree $vars)'/3,
  'dn--un--toBuf_TTC_(CaseAlt $vars)'/3,
  'dn--un--toBuf_TTC_(CExp $vars)'/3,
  'dn--un--toBuf_TTC_(CConstAlt $vars)'/3,
  'dn--un--toBuf_TTC_(CConAlt $vars)'/3,
  'dn--un--toBuf_TTC_(Binder (Term $vars))'/3,
  'dn--un--toBuf_TTC_((Env Term) $vars)'/3,
  'dn--un--fromBuf_TTC_Visibility'/1,
  'dn--un--fromBuf_TTC_VirtualIdent'/1,
  'dn--un--fromBuf_TTC_UseSide'/1,
  'dn--un--fromBuf_TTC_TypeFlags'/1,
  'dn--un--fromBuf_TTC_Transform'/1,
  'dn--un--fromBuf_TTC_Totality'/1,
  'dn--un--fromBuf_TTC_TotalReq'/1,
  'dn--un--fromBuf_TTC_Terminating'/1,
  'dn--un--fromBuf_TTC_SizeChange'/1,
  'dn--un--fromBuf_TTC_SCCall'/1,
  'dn--un--fromBuf_TTC_RigCount'/1,
  'dn--un--fromBuf_TTC_RewriteNames'/1,
  'dn--un--fromBuf_TTC_PrimType'/1,
  'dn--un--fromBuf_TTC_PrimNames'/1,
  'dn--un--fromBuf_TTC_Pat'/1,
  'dn--un--fromBuf_TTC_PartialReason'/1,
  'dn--un--fromBuf_TTC_PairNames'/1,
  'dn--un--fromBuf_TTC_PMDefInfo'/1,
  'dn--un--fromBuf_TTC_OriginDesc'/1,
  'dn--un--fromBuf_TTC_Namespace'/1,
  'dn--un--fromBuf_TTC_NameType'/1,
  'dn--un--fromBuf_TTC_Name'/1,
  'dn--un--fromBuf_TTC_ModuleIdent'/1,
  'dn--un--fromBuf_TTC_LazyReason'/1,
  'dn--un--fromBuf_TTC_InlineOk'/1,
  'dn--un--fromBuf_TTC_HoleInfo'/1,
  'dn--un--fromBuf_TTC_GlobalDef'/1,
  'dn--un--fromBuf_TTC_FC'/1,
  'dn--un--fromBuf_TTC_DefFlag'/1,
  'dn--un--fromBuf_TTC_Def'/1,
  'dn--un--fromBuf_TTC_Covering'/1,
  'dn--un--fromBuf_TTC_Constant'/1,
  'dn--un--fromBuf_TTC_ConInfo'/1,
  'dn--un--fromBuf_TTC_CG'/1,
  'dn--un--fromBuf_TTC_CFType'/1,
  'dn--un--fromBuf_TTC_CDef'/1,
  'dn--un--fromBuf_TTC_(Term $vars)'/2,
  'dn--un--fromBuf_TTC_(PrimFn $n)'/2,
  'dn--un--fromBuf_TTC_(PiInfo $t)'/2,
  'dn--un--fromBuf_TTC_(CaseTree $vars)'/2,
  'dn--un--fromBuf_TTC_(CaseAlt $vars)'/2,
  'dn--un--fromBuf_TTC_(CExp $vars)'/2,
  'dn--un--fromBuf_TTC_(CConstAlt $vars)'/2,
  'dn--un--fromBuf_TTC_(CConAlt $vars)'/2,
  'dn--un--fromBuf_TTC_(Binder (Term $vars))'/2,
  'dn--un--fromBuf_TTC_((Env Term) $vars)'/2,
  'dn--un--__Impl_TTC_Visibility'/0,
  'dn--un--__Impl_TTC_VirtualIdent'/0,
  'dn--un--__Impl_TTC_UseSide'/0,
  'dn--un--__Impl_TTC_TypeFlags'/0,
  'dn--un--__Impl_TTC_Transform'/0,
  'dn--un--__Impl_TTC_Totality'/0,
  'dn--un--__Impl_TTC_TotalReq'/0,
  'dn--un--__Impl_TTC_Terminating'/0,
  'dn--un--__Impl_TTC_SizeChange'/0,
  'dn--un--__Impl_TTC_SCCall'/0,
  'dn--un--__Impl_TTC_RigCount'/0,
  'dn--un--__Impl_TTC_RewriteNames'/0,
  'dn--un--__Impl_TTC_PrimType'/0,
  'dn--un--__Impl_TTC_PrimNames'/0,
  'dn--un--__Impl_TTC_Pat'/0,
  'dn--un--__Impl_TTC_PartialReason'/0,
  'dn--un--__Impl_TTC_PairNames'/0,
  'dn--un--__Impl_TTC_PMDefInfo'/0,
  'dn--un--__Impl_TTC_OriginDesc'/0,
  'dn--un--__Impl_TTC_Namespace'/0,
  'dn--un--__Impl_TTC_NameType'/0,
  'dn--un--__Impl_TTC_Name'/0,
  'dn--un--__Impl_TTC_ModuleIdent'/0,
  'dn--un--__Impl_TTC_LazyReason'/0,
  'dn--un--__Impl_TTC_InlineOk'/0,
  'dn--un--__Impl_TTC_HoleInfo'/0,
  'dn--un--__Impl_TTC_GlobalDef'/0,
  'dn--un--__Impl_TTC_FC'/0,
  'dn--un--__Impl_TTC_Def'/0,
  'dn--un--__Impl_TTC_Covering'/0,
  'dn--un--__Impl_TTC_Constant'/0,
  'dn--un--__Impl_TTC_ConInfo'/0,
  'dn--un--__Impl_TTC_CG'/0,
  'dn--un--__Impl_TTC_CFType'/0,
  'dn--un--__Impl_TTC_CDef'/0,
  'dn--un--__Impl_TTC_(Term $vars)'/1,
  'dn--un--__Impl_TTC_(PrimFn $n)'/1,
  'dn--un--__Impl_TTC_(PiInfo $t)'/1,
  'dn--un--__Impl_TTC_(CaseTree $vars)'/1,
  'dn--un--__Impl_TTC_(CaseAlt $vars)'/1,
  'dn--un--__Impl_TTC_(CExp $vars)'/1,
  'dn--un--__Impl_TTC_(CConstAlt $vars)'/1,
  'dn--un--__Impl_TTC_(CConAlt $vars)'/1,
  'dn--un--__Impl_TTC_(Binder (Term $vars))'/1,
  'dn--un--__Impl_TTC_((Env Term) $vars)'/1,
  'un--getName'/2
]).
'nested--13741-8138--in--un--fromBuf3'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V8 = fun (V7) -> case V6 of 18 -> {'Prelude.Types.Right', {'Core.TT.StrSubstr'}}; 100 -> {'Prelude.Types.Right', {'Core.TT.BelieveMe'}}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PrimFn 3"/utf8>>, V7)) end end), V8 end(V3)) end end end end.
'nested--13741-8137--in--un--fromBuf2'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V118 = case V6 of 0 -> begin (V7 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V13 = fun (V12) -> {'Prelude.Types.Right', {'Core.TT.Add', V11}} end), V13 end(V8)) end end end end; 1 -> begin (V14 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V20 = fun (V19) -> {'Prelude.Types.Right', {'Core.TT.Sub', V18}} end), V20 end(V15)) end end end end; 2 -> begin (V21 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V27 = fun (V26) -> {'Prelude.Types.Right', {'Core.TT.Mul', V25}} end), V27 end(V22)) end end end end; 3 -> begin (V28 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V34 = fun (V33) -> {'Prelude.Types.Right', {'Core.TT.Div', V32}} end), V34 end(V29)) end end end end; 4 -> begin (V35 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V41 = fun (V40) -> {'Prelude.Types.Right', {'Core.TT.Mod', V39}} end), V41 end(V36)) end end end end; 6 -> begin (V42 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V48 = fun (V47) -> {'Prelude.Types.Right', {'Core.TT.LT', V46}} end), V48 end(V43)) end end end end; 7 -> begin (V49 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V55 = fun (V54) -> {'Prelude.Types.Right', {'Core.TT.LTE', V53}} end), V55 end(V50)) end end end end; 8 -> begin (V56 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V62 = fun (V61) -> {'Prelude.Types.Right', {'Core.TT.EQ', V60}} end), V62 end(V57)) end end end end; 9 -> begin (V63 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V69 = fun (V68) -> {'Prelude.Types.Right', {'Core.TT.GTE', V67}} end), V69 end(V64)) end end end end; 10 -> begin (V70 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V76 = fun (V75) -> {'Prelude.Types.Right', {'Core.TT.GT', V74}} end), V76 end(V71)) end end end end; 14 -> fun (V77) -> {'Prelude.Types.Right', {'Core.TT.StrIndex'}} end; 15 -> fun (V78) -> {'Prelude.Types.Right', {'Core.TT.StrCons'}} end; 16 -> fun (V79) -> {'Prelude.Types.Right', {'Core.TT.StrAppend'}} end; 21 -> fun (V80) -> {'Prelude.Types.Right', {'Core.TT.DoublePow'}} end; 35 -> begin (V81 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V82) -> begin (V83 = (V81(V82))), case V83 of {'Prelude.Types.Left', V84} -> {'Prelude.Types.Left', V84}; {'Prelude.Types.Right', V85} -> (begin (V87 = fun (V86) -> {'Prelude.Types.Right', {'Core.TT.ShiftL', V85}} end), V87 end(V82)) end end end end; 36 -> begin (V88 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V94 = fun (V93) -> {'Prelude.Types.Right', {'Core.TT.ShiftR', V92}} end), V94 end(V89)) end end end end; 37 -> begin (V95 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V101 = fun (V100) -> {'Prelude.Types.Right', {'Core.TT.BAnd', V99}} end), V101 end(V96)) end end end end; 38 -> begin (V102 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V103) -> begin (V104 = (V102(V103))), case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> (begin (V108 = fun (V107) -> {'Prelude.Types.Right', {'Core.TT.BOr', V106}} end), V108 end(V103)) end end end end; 39 -> begin (V109 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V115 = fun (V114) -> {'Prelude.Types.Right', {'Core.TT.BXOr', V113}} end), V115 end(V110)) end end end end; 101 -> fun (V116) -> {'Prelude.Types.Right', {'Core.TT.Crash'}} end; _ -> fun (V117) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PrimFn 2"/utf8>>, V117)) end end), V118 end(V3)) end end end end.
'nested--13741-8136--in--un--fromBuf1'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V43 = case V6 of 5 -> begin (V7 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V13 = fun (V12) -> {'Prelude.Types.Right', {'Core.TT.Neg', V11}} end), V13 end(V8)) end end end end; 11 -> fun (V14) -> {'Prelude.Types.Right', {'Core.TT.StrLength'}} end; 12 -> fun (V15) -> {'Prelude.Types.Right', {'Core.TT.StrHead'}} end; 13 -> fun (V16) -> {'Prelude.Types.Right', {'Core.TT.StrTail'}} end; 17 -> fun (V17) -> {'Prelude.Types.Right', {'Core.TT.StrReverse'}} end; 19 -> fun (V18) -> {'Prelude.Types.Right', {'Core.TT.DoubleExp'}} end; 20 -> fun (V19) -> {'Prelude.Types.Right', {'Core.TT.DoubleLog'}} end; 22 -> fun (V20) -> {'Prelude.Types.Right', {'Core.TT.DoubleSin'}} end; 23 -> fun (V21) -> {'Prelude.Types.Right', {'Core.TT.DoubleCos'}} end; 24 -> fun (V22) -> {'Prelude.Types.Right', {'Core.TT.DoubleTan'}} end; 25 -> fun (V23) -> {'Prelude.Types.Right', {'Core.TT.DoubleASin'}} end; 26 -> fun (V24) -> {'Prelude.Types.Right', {'Core.TT.DoubleACos'}} end; 27 -> fun (V25) -> {'Prelude.Types.Right', {'Core.TT.DoubleATan'}} end; 32 -> fun (V26) -> {'Prelude.Types.Right', {'Core.TT.DoubleSqrt'}} end; 33 -> fun (V27) -> {'Prelude.Types.Right', {'Core.TT.DoubleFloor'}} end; 34 -> fun (V28) -> {'Prelude.Types.Right', {'Core.TT.DoubleCeiling'}} end; 99 -> begin (V29 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V41 = begin (V34 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V40 = fun (V39) -> {'Prelude.Types.Right', {'Core.TT.Cast', V33, V38}} end), V40 end(V35)) end end end end), V41 end(V30)) end end end end; _ -> fun (V42) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PrimFn 1"/utf8>>, V42)) end end), V43 end(V3)) end end end end.
'nested--18724-12671--in--un--cwName'(V0, V1, V2) -> case V2 of {'Core.Name.CaseBlock', V3, V4} -> 1; {'Core.Name.WithBlock', V5, V6} -> 1; _ -> 0 end.
'dn--un--toBuf_TTC_Visibility'(V0, V1) -> case V1 of 0 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); 2 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)) end.
'dn--un--toBuf_TTC_VirtualIdent'(V0, V1) -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)).
'dn--un--toBuf_TTC_UseSide'(V0, V1) -> case V1 of 0 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)) end.
'dn--un--toBuf_TTC_TypeFlags'(V0, V1) -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, case V1 of {'Core.Context.Context.MkTypeFlags', V2, V3} -> V2 end))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V11 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, case V1 of {'Core.Context.Context.MkTypeFlags', V9, V10} -> V10 end))), V11 end(V5)) end end end end.
'dn--un--toBuf_TTC_Transform'(V0, V1) -> case V1 of {'Core.Context.MkTransform', V2, V3, V4, V5, V6} -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V7) -> fun (V8) -> ('dn--un--toBuf_TTC_Name'(V7, V8)) end end, fun (V9) -> ('dn--un--fromBuf_TTC_Name'(V9)) end}, V0, V2))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V33 = begin (V15 = ('dn--un--toBuf_TTC_Name'(V0, V3))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V32 = begin (V20 = ('dn--un--toBuf_TTC_((Env Term) $vars)'(V2, V0, V4))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V31 = begin (V25 = ('dn--un--toBuf_TTC_(Term $vars)'(V2, V0, V5))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V30 = ('dn--un--toBuf_TTC_(Term $vars)'(V2, V0, V6))), V30 end(V26)) end end end end), V31 end(V21)) end end end end), V32 end(V16)) end end end end), V33 end(V11)) end end end end end.
'dn--un--toBuf_TTC_Totality'(V0, V1) -> case V1 of {'Core.TT.MkTotality', V2, V3} -> begin (V4 = ('dn--un--toBuf_TTC_Terminating'(V0, V2))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V9 = ('dn--un--toBuf_TTC_Covering'(V0, V3))), V9 end(V5)) end end end end end.
'dn--un--toBuf_TTC_TotalReq'(V0, V1) -> case V1 of 0 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); 2 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)) end.
'dn--un--toBuf_TTC_Terminating'(V0, V1) -> case V1 of {'Core.TT.Unchecked'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.TT.IsTerminating'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); {'Core.TT.NotTerminating', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V8 = ('dn--un--toBuf_TTC_PartialReason'(V0, V2))), V8 end(V4)) end end end end end.
'dn--un--toBuf_TTC_SizeChange'(V0, V1) -> case V1 of 0 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); 2 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)) end.
'dn--un--toBuf_TTC_SCCall'(V0, V1) -> begin (V4 = ('dn--un--toBuf_TTC_Name'(V0, case V1 of {'Core.Context.Context.MkSCCall', V2, V3} -> V2 end))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V44 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V13, V14)) end end, fun (V15) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V15)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V16) -> fun (V17) -> ('dn--un--toBuf_TTC_SizeChange'(V16, V17)) end end, fun (V18) -> ('dn--un--fromBuf_TTC_SizeChange'(V18)) end}}, V11, V12)) end end, fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V20, V21)) end end, fun (V22) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V22)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V23) -> fun (V24) -> ('dn--un--toBuf_TTC_SizeChange'(V23, V24)) end end, fun (V25) -> ('dn--un--fromBuf_TTC_SizeChange'(V25)) end}}, V19)) end}, V9, V10)) end end, fun (V26) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V29, V30)) end end, fun (V31) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V31)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V32) -> fun (V33) -> ('dn--un--toBuf_TTC_SizeChange'(V32, V33)) end end, fun (V34) -> ('dn--un--fromBuf_TTC_SizeChange'(V34)) end}}, V27, V28)) end end, fun (V35) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V36, V37)) end end, fun (V38) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V38)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V39) -> fun (V40) -> ('dn--un--toBuf_TTC_SizeChange'(V39, V40)) end end, fun (V41) -> ('dn--un--fromBuf_TTC_SizeChange'(V41)) end}}, V35)) end}, V26)) end}, V0, case V1 of {'Core.Context.Context.MkSCCall', V42, V43} -> V43 end))), V44 end(V5)) end end end end.
'dn--un--toBuf_TTC_RigCount'(V0, V1) -> ('Idris.Idris2.Algebra.Semiring':'un--elimSemi'({'Builtin.MkPair', {'Algebra.Semiring.dn--un--__mkSemiring', fun (V2) -> fun (V3) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V2, V3)) end end, 0, fun (V4) -> fun (V5) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V4, V5)) end end, 1}, {'Prelude.EqOrd.MkEq', fun (V6) -> fun (V7) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V8, V9)) end end}}, ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)), ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)), fun (V10) -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)) end, V1)).
'dn--un--toBuf_TTC_RewriteNames'(V0, V1) -> begin (V4 = ('dn--un--toBuf_TTC_Name'(V0, case V1 of {'Core.Options.MkRewriteNs', V2, V3} -> V2 end))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V11 = ('dn--un--toBuf_TTC_Name'(V0, case V1 of {'Core.Options.MkRewriteNs', V9, V10} -> V10 end))), V11 end(V5)) end end end end.
'dn--un--toBuf_TTC_PrimType'(V0, V1) -> case V1 of 0 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); 2 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)); 3 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3)); 4 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4)); 5 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5)); 6 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6)); 7 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7)); 8 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8)); 9 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 9)); 10 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 10)); 11 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 11)); 12 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 12)); 13 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 13)) end.
'dn--un--toBuf_TTC_PrimNames'(V0, V1) -> begin (V9 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V2) -> fun (V3) -> ('dn--un--toBuf_TTC_Name'(V2, V3)) end end, fun (V4) -> ('dn--un--fromBuf_TTC_Name'(V4)) end}, V0, case V1 of {'Core.Options.MkPrimNs', V5, V6, V7, V8} -> V5 end))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V47 = begin (V21 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('dn--un--toBuf_TTC_Name'(V14, V15)) end end, fun (V16) -> ('dn--un--fromBuf_TTC_Name'(V16)) end}, V0, case V1 of {'Core.Options.MkPrimNs', V17, V18, V19, V20} -> V18 end))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V46 = begin (V33 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('dn--un--toBuf_TTC_Name'(V26, V27)) end end, fun (V28) -> ('dn--un--fromBuf_TTC_Name'(V28)) end}, V0, case V1 of {'Core.Options.MkPrimNs', V29, V30, V31, V32} -> V31 end))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V45 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V38) -> fun (V39) -> ('dn--un--toBuf_TTC_Name'(V38, V39)) end end, fun (V40) -> ('dn--un--fromBuf_TTC_Name'(V40)) end}, V0, case V1 of {'Core.Options.MkPrimNs', V41, V42, V43, V44} -> V44 end))), V45 end(V34)) end end end end), V46 end(V22)) end end end end), V47 end(V10)) end end end end.
'dn--un--toBuf_TTC_Pat'(V0, V1) -> case V1 of {'Core.Case.CaseTree.PAs', V2, V3, V4} -> begin (V5 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V22 = begin (V10 = ('dn--un--toBuf_TTC_FC'(V0, V2))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V21 = begin (V15 = ('dn--un--toBuf_TTC_Name'(V0, V3))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V20 = ('dn--un--toBuf_TTC_Pat'(V0, V4))), V20 end(V16)) end end end end), V21 end(V11)) end end end end), V22 end(V6)) end end end end; {'Core.Case.CaseTree.PCon', V23, V24, V25, V26, V27} -> begin (V28 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V60 = begin (V33 = ('dn--un--toBuf_TTC_FC'(V0, V23))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V59 = begin (V38 = ('dn--un--toBuf_TTC_Name'(V0, V24))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V58 = begin (V43 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V25))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V57 = begin (V48 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V26))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V56 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V53) -> fun (V54) -> ('dn--un--toBuf_TTC_Pat'(V53, V54)) end end, fun (V55) -> ('dn--un--fromBuf_TTC_Pat'(V55)) end}, V0, V27))), V56 end(V49)) end end end end), V57 end(V44)) end end end end), V58 end(V39)) end end end end), V59 end(V34)) end end end end), V60 end(V29)) end end end end; {'Core.Case.CaseTree.PTyCon', V61, V62, V63, V64} -> begin (V65 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V91 = begin (V70 = ('dn--un--toBuf_TTC_FC'(V0, V61))), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V90 = begin (V75 = ('dn--un--toBuf_TTC_Name'(V0, V62))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V89 = begin (V80 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V63))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V88 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V85) -> fun (V86) -> ('dn--un--toBuf_TTC_Pat'(V85, V86)) end end, fun (V87) -> ('dn--un--fromBuf_TTC_Pat'(V87)) end}, V0, V64))), V88 end(V81)) end end end end), V89 end(V76)) end end end end), V90 end(V71)) end end end end), V91 end(V66)) end end end end; {'Core.Case.CaseTree.PConst', V92, V93} -> begin (V94 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3))), fun (V95) -> begin (V96 = (V94(V95))), case V96 of {'Prelude.Types.Left', V97} -> {'Prelude.Types.Left', V97}; {'Prelude.Types.Right', V98} -> (begin (V105 = begin (V99 = ('dn--un--toBuf_TTC_FC'(V0, V92))), fun (V100) -> begin (V101 = (V99(V100))), case V101 of {'Prelude.Types.Left', V102} -> {'Prelude.Types.Left', V102}; {'Prelude.Types.Right', V103} -> (begin (V104 = ('dn--un--toBuf_TTC_Constant'(V0, V93))), V104 end(V100)) end end end end), V105 end(V95)) end end end end; {'Core.Case.CaseTree.PArrow', V106, V107, V108, V109} -> begin (V110 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4))), fun (V111) -> begin (V112 = (V110(V111))), case V112 of {'Prelude.Types.Left', V113} -> {'Prelude.Types.Left', V113}; {'Prelude.Types.Right', V114} -> (begin (V133 = begin (V115 = ('dn--un--toBuf_TTC_FC'(V0, V106))), fun (V116) -> begin (V117 = (V115(V116))), case V117 of {'Prelude.Types.Left', V118} -> {'Prelude.Types.Left', V118}; {'Prelude.Types.Right', V119} -> (begin (V132 = begin (V120 = ('dn--un--toBuf_TTC_Name'(V0, V107))), fun (V121) -> begin (V122 = (V120(V121))), case V122 of {'Prelude.Types.Left', V123} -> {'Prelude.Types.Left', V123}; {'Prelude.Types.Right', V124} -> (begin (V131 = begin (V125 = ('dn--un--toBuf_TTC_Pat'(V0, V108))), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V130 = ('dn--un--toBuf_TTC_Pat'(V0, V109))), V130 end(V126)) end end end end), V131 end(V121)) end end end end), V132 end(V116)) end end end end), V133 end(V111)) end end end end; {'Core.Case.CaseTree.PDelay', V134, V135, V136, V137} -> begin (V138 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5))), fun (V139) -> begin (V140 = (V138(V139))), case V140 of {'Prelude.Types.Left', V141} -> {'Prelude.Types.Left', V141}; {'Prelude.Types.Right', V142} -> (begin (V161 = begin (V143 = ('dn--un--toBuf_TTC_FC'(V0, V134))), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V160 = begin (V148 = ('dn--un--toBuf_TTC_LazyReason'(V0, V135))), fun (V149) -> begin (V150 = (V148(V149))), case V150 of {'Prelude.Types.Left', V151} -> {'Prelude.Types.Left', V151}; {'Prelude.Types.Right', V152} -> (begin (V159 = begin (V153 = ('dn--un--toBuf_TTC_Pat'(V0, V136))), fun (V154) -> begin (V155 = (V153(V154))), case V155 of {'Prelude.Types.Left', V156} -> {'Prelude.Types.Left', V156}; {'Prelude.Types.Right', V157} -> (begin (V158 = ('dn--un--toBuf_TTC_Pat'(V0, V137))), V158 end(V154)) end end end end), V159 end(V149)) end end end end), V160 end(V144)) end end end end), V161 end(V139)) end end end end; {'Core.Case.CaseTree.PLoc', V162, V163} -> begin (V164 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6))), fun (V165) -> begin (V166 = (V164(V165))), case V166 of {'Prelude.Types.Left', V167} -> {'Prelude.Types.Left', V167}; {'Prelude.Types.Right', V168} -> (begin (V175 = begin (V169 = ('dn--un--toBuf_TTC_FC'(V0, V162))), fun (V170) -> begin (V171 = (V169(V170))), case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> (begin (V174 = ('dn--un--toBuf_TTC_Name'(V0, V163))), V174 end(V170)) end end end end), V175 end(V165)) end end end end; {'Core.Case.CaseTree.PUnmatchable', V176, V177} -> begin (V178 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7))), fun (V179) -> begin (V180 = (V178(V179))), case V180 of {'Prelude.Types.Left', V181} -> {'Prelude.Types.Left', V181}; {'Prelude.Types.Right', V182} -> (begin (V189 = begin (V183 = ('dn--un--toBuf_TTC_FC'(V0, V176))), fun (V184) -> begin (V185 = (V183(V184))), case V185 of {'Prelude.Types.Left', V186} -> {'Prelude.Types.Left', V186}; {'Prelude.Types.Right', V187} -> (begin (V188 = ('dn--un--toBuf_TTC_(Term $vars)'([], V0, V177))), V188 end(V184)) end end end end), V189 end(V179)) end end end end end.
'dn--un--toBuf_TTC_PartialReason'(V0, V1) -> case V1 of {'Core.TT.NotStrictlyPositive'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.TT.BadCall', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V11 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V8) -> fun (V9) -> ('dn--un--toBuf_TTC_Name'(V8, V9)) end end, fun (V10) -> ('dn--un--fromBuf_TTC_Name'(V10)) end}, V0, V2))), V11 end(V4)) end end end end; {'Core.TT.RecPath', V12} -> begin (V13 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V21 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V18) -> fun (V19) -> ('dn--un--toBuf_TTC_Name'(V18, V19)) end end, fun (V20) -> ('dn--un--fromBuf_TTC_Name'(V20)) end}, V0, V12))), V21 end(V14)) end end end end end.
'dn--un--toBuf_TTC_PairNames'(V0, V1) -> begin (V5 = ('dn--un--toBuf_TTC_Name'(V0, case V1 of {'Core.Options.MkPairNs', V2, V3, V4} -> V2 end))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V22 = begin (V13 = ('dn--un--toBuf_TTC_Name'(V0, case V1 of {'Core.Options.MkPairNs', V10, V11, V12} -> V11 end))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V21 = ('dn--un--toBuf_TTC_Name'(V0, case V1 of {'Core.Options.MkPairNs', V18, V19, V20} -> V20 end))), V21 end(V14)) end end end end), V22 end(V6)) end end end end.
'dn--un--toBuf_TTC_PMDefInfo'(V0, V1) -> begin (V5 = ('dn--un--toBuf_TTC_HoleInfo'(V0, case V1 of {'Core.Context.Context.MkPMDefInfo', V2, V3, V4} -> V2 end))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V22 = begin (V13 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, case V1 of {'Core.Context.Context.MkPMDefInfo', V10, V11, V12} -> V11 end))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V21 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, case V1 of {'Core.Context.Context.MkPMDefInfo', V18, V19, V20} -> V20 end))), V21 end(V14)) end end end end), V22 end(V6)) end end end end.
'dn--un--toBuf_TTC_OriginDesc'(V0, V1) -> case V1 of {'Core.FC.PhysicalIdrSrc', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V8 = ('dn--un--toBuf_TTC_ModuleIdent'(V0, V2))), V8 end(V4)) end end end end; {'Core.FC.PhysicalPkgSrc', V9} -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V15 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V9))), V15 end(V11)) end end end end; {'Core.FC.Virtual', V16} -> begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V22 = ('dn--un--toBuf_TTC_VirtualIdent'(V0, V16))), V22 end(V18)) end end end end end.
'dn--un--toBuf_TTC_Namespace'(V0, V1) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V2, V3)) end end, fun (V4) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V4)) end}, V0, ('Idris.Idris2.Core.Name.Namespace':'un--unsafeUnfoldNamespace'(V1)))).
'dn--un--toBuf_TTC_NameType'(V0, V1) -> case V1 of {'Core.TT.Bound'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.TT.Func'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); {'Core.TT.DataCon', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V15 = begin (V9 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V2))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V14 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V3))), V14 end(V10)) end end end end), V15 end(V5)) end end end end; {'Core.TT.TyCon', V16, V17} -> begin (V18 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V29 = begin (V23 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V16))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V28 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V17))), V28 end(V24)) end end end end), V29 end(V19)) end end end end end.
'dn--un--toBuf_TTC_Name'(V0, V1) -> case V1 of {'Core.Name.NS', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V15 = begin (V9 = ('dn--un--toBuf_TTC_Namespace'(V0, V2))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V14 = ('dn--un--toBuf_TTC_Name'(V0, V3))), V14 end(V10)) end end end end), V15 end(V5)) end end end end; {'Core.Name.UN', V16} -> case V16 of {'Core.Name.Basic', V17} -> begin (V18 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V23 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V17))), V23 end(V19)) end end end end; {'Core.Name.Field', V24} -> begin (V25 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V30 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V24))), V30 end(V26)) end end end end; {'Core.Name.Underscore'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 9)) end; {'Core.Name.MN', V31, V32} -> begin (V33 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V44 = begin (V38 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V31))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V43 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V32))), V43 end(V39)) end end end end), V44 end(V34)) end end end end; {'Core.Name.PV', V45, V46} -> begin (V47 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3))), fun (V48) -> begin (V49 = (V47(V48))), case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> (begin (V58 = begin (V52 = ('dn--un--toBuf_TTC_Name'(V0, V45))), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V57 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V46))), V57 end(V53)) end end end end), V58 end(V48)) end end end end; {'Core.Name.DN', V59, V60} -> begin (V61 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4))), fun (V62) -> begin (V63 = (V61(V62))), case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> (begin (V72 = begin (V66 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V59))), fun (V67) -> begin (V68 = (V66(V67))), case V68 of {'Prelude.Types.Left', V69} -> {'Prelude.Types.Left', V69}; {'Prelude.Types.Right', V70} -> (begin (V71 = ('dn--un--toBuf_TTC_Name'(V0, V60))), V71 end(V67)) end end end end), V72 end(V62)) end end end end; {'Core.Name.Nested', V73, V74} -> begin (V75 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V92 = begin (V86 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V80, V81)) end end, fun (V82) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V82)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V83, V84)) end end, fun (V85) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V85)) end}}, V0, V73))), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V91 = ('dn--un--toBuf_TTC_Name'(V0, V74))), V91 end(V87)) end end end end), V92 end(V76)) end end end end; {'Core.Name.CaseBlock', V93, V94} -> begin (V95 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V106 = begin (V100 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V93))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V105 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V94))), V105 end(V101)) end end end end), V106 end(V96)) end end end end; {'Core.Name.WithBlock', V107, V108} -> begin (V109 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8))), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V120 = begin (V114 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V107))), fun (V115) -> begin (V116 = (V114(V115))), case V116 of {'Prelude.Types.Left', V117} -> {'Prelude.Types.Left', V117}; {'Prelude.Types.Right', V118} -> (begin (V119 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V108))), V119 end(V115)) end end end end), V120 end(V110)) end end end end; {'Core.Name.Resolved', V121} -> fun (V122) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<<<"Can\x{27}t write resolved name "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V121))/binary>>}, V122)) end end.
'dn--un--toBuf_TTC_ModuleIdent'(V0, V1) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V2, V3)) end end, fun (V4) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V4)) end}, V0, ('Idris.Idris2.Core.Name.Namespace':'un--unsafeUnfoldModuleIdent'(V1)))).
'dn--un--toBuf_TTC_LazyReason'(V0, V1) -> case V1 of 0 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); 2 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)) end.
'dn--un--toBuf_TTC_InlineOk'(V0, V1) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, ('Idris.Idris2.Core.CompileExpr':'dn--un--==_Eq_InlineOk'(0, V1)))).
'dn--un--toBuf_TTC_HoleInfo'(V0, V1) -> case V1 of {'Core.Context.Context.NotHole'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.Context.Context.SolvedHole', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V8 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V2))), V8 end(V4)) end end end end end.
'dn--un--toBuf_TTC_GlobalDef'(V0, V1) -> begin (V27 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V2) -> fun (V3) -> ('dn--un--toBuf_TTC_CDef'(V2, V3)) end end, fun (V4) -> ('dn--un--fromBuf_TTC_CDef'(V4)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26} -> V23 end))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V678 = begin (V95 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('dn--un--toBuf_TTC_Name'(V36, V37)) end end, fun (V38) -> ('dn--un--fromBuf_TTC_Name'(V38)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V39, V40)) end end, fun (V41) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V41)) end}}, V34, V35)) end end, fun (V42) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V43) -> fun (V44) -> ('dn--un--toBuf_TTC_Name'(V43, V44)) end end, fun (V45) -> ('dn--un--fromBuf_TTC_Name'(V45)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V46, V47)) end end, fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V48)) end}}, V42)) end}, V32, V33)) end end, fun (V49) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V52) -> fun (V53) -> ('dn--un--toBuf_TTC_Name'(V52, V53)) end end, fun (V54) -> ('dn--un--fromBuf_TTC_Name'(V54)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V55, V56)) end end, fun (V57) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V57)) end}}, V50, V51)) end end, fun (V58) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V59) -> fun (V60) -> ('dn--un--toBuf_TTC_Name'(V59, V60)) end end, fun (V61) -> ('dn--un--fromBuf_TTC_Name'(V61)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V62, V63)) end end, fun (V64) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V64)) end}}, V58)) end}, V49)) end}, V0, ((begin (V92 = fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V90, V91)) end end end end), fun (V93) -> fun (V94) -> ((((V92('erased'))('erased'))(V93))(V94)) end end end(fun (V87) -> ('Idris.Idris2.Libraries.Data.NameMap':'un--toList'(V87)) end))(case V1 of {'Core.Context.Context.MkGlobalDef', V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86} -> V78 end))))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V677 = begin (V122 = ('dn--un--toBuf_TTC_FC'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121} -> V100 end))), fun (V123) -> begin (V124 = (V122(V123))), case V124 of {'Prelude.Types.Left', V125} -> {'Prelude.Types.Left', V125}; {'Prelude.Types.Right', V126} -> (begin (V676 = begin (V149 = ('dn--un--toBuf_TTC_RigCount'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148} -> V134 end))), fun (V150) -> begin (V151 = (V149(V150))), case V151 of {'Prelude.Types.Left', V152} -> {'Prelude.Types.Left', V152}; {'Prelude.Types.Right', V153} -> (begin (V675 = begin (V176 = ('dn--un--toBuf_TTC_Name'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175} -> V155 end))), fun (V177) -> begin (V178 = (V176(V177))), case V178 of {'Prelude.Types.Left', V179} -> {'Prelude.Types.Left', V179}; {'Prelude.Types.Right', V180} -> (begin (V674 = begin (V244 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V181) -> fun (V182) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V183) -> fun (V184) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V185) -> fun (V186) -> ('dn--un--toBuf_TTC_Name'(V185, V186)) end end, fun (V187) -> ('dn--un--fromBuf_TTC_Name'(V187)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V188, V189)) end end, fun (V190) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V190)) end}}, V183, V184)) end end, fun (V191) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V192) -> fun (V193) -> ('dn--un--toBuf_TTC_Name'(V192, V193)) end end, fun (V194) -> ('dn--un--fromBuf_TTC_Name'(V194)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V195) -> fun (V196) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V195, V196)) end end, fun (V197) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V197)) end}}, V191)) end}, V181, V182)) end end, fun (V198) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V199) -> fun (V200) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V201) -> fun (V202) -> ('dn--un--toBuf_TTC_Name'(V201, V202)) end end, fun (V203) -> ('dn--un--fromBuf_TTC_Name'(V203)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V204) -> fun (V205) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V204, V205)) end end, fun (V206) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V206)) end}}, V199, V200)) end end, fun (V207) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V208) -> fun (V209) -> ('dn--un--toBuf_TTC_Name'(V208, V209)) end end, fun (V210) -> ('dn--un--fromBuf_TTC_Name'(V210)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V211) -> fun (V212) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V211, V212)) end end, fun (V213) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V213)) end}}, V207)) end}, V198)) end}, V0, ((begin (V241 = fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V239, V240)) end end end end), fun (V242) -> fun (V243) -> ((((V241('erased'))('erased'))(V242))(V243)) end end end(fun (V236) -> ('Idris.Idris2.Libraries.Data.NameMap':'un--toList'(V236)) end))(case V1 of {'Core.Context.Context.MkGlobalDef', V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235} -> V226 end))))), fun (V245) -> begin (V246 = (V244(V245))), case V246 of {'Prelude.Types.Left', V247} -> {'Prelude.Types.Left', V247}; {'Prelude.Types.Right', V248} -> (begin (V673 = begin (V271 = ('dn--un--toBuf_TTC_Def'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270} -> V266 end))), fun (V272) -> begin (V273 = (V271(V272))), case V273 of {'Prelude.Types.Left', V274} -> {'Prelude.Types.Left', V274}; {'Prelude.Types.Right', V275} -> (begin (V672 = case case ('Idris.Idris2.Core.Name':'un--isUserName'(case V1 of {'Core.Context.Context.MkGlobalDef', V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297} -> V277 end)) of 1 -> 1; 0 -> ('nested--18724-12671--in--un--cwName'(V1, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319} -> V299 end)) end of 1 -> begin (V342 = ('dn--un--toBuf_TTC_(Term $vars)'([], V0, case V1 of {'Core.Context.Context.MkGlobalDef', V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341} -> V322 end))), fun (V343) -> begin (V344 = (V342(V343))), case V344 of {'Prelude.Types.Left', V345} -> {'Prelude.Types.Left', V345}; {'Prelude.Types.Right', V346} -> (begin (V670 = begin (V372 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V347) -> fun (V348) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V347, V348)) end end, fun (V349) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V349)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371} -> V353 end))), fun (V373) -> begin (V374 = (V372(V373))), case V374 of {'Prelude.Types.Left', V375} -> {'Prelude.Types.Left', V375}; {'Prelude.Types.Right', V376} -> (begin (V669 = begin (V402 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V377) -> fun (V378) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V377, V378)) end end, fun (V379) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V379)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401} -> V384 end))), fun (V403) -> begin (V404 = (V402(V403))), case V404 of {'Prelude.Types.Left', V405} -> {'Prelude.Types.Left', V405}; {'Prelude.Types.Right', V406} -> (begin (V668 = begin (V432 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V407) -> fun (V408) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V407, V408)) end end, fun (V409) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V409)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431} -> V415 end))), fun (V433) -> begin (V434 = (V432(V433))), case V434 of {'Prelude.Types.Left', V435} -> {'Prelude.Types.Left', V435}; {'Prelude.Types.Right', V436} -> (begin (V667 = begin (V462 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V437) -> fun (V438) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V437, V438)) end end, fun (V439) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V439)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461} -> V446 end))), fun (V463) -> begin (V464 = (V462(V463))), case V464 of {'Prelude.Types.Left', V465} -> {'Prelude.Types.Left', V465}; {'Prelude.Types.Right', V466} -> (begin (V666 = begin (V492 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V467) -> fun (V468) -> ('dn--un--toBuf_TTC_Name'(V467, V468)) end end, fun (V469) -> ('dn--un--fromBuf_TTC_Name'(V469)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491} -> V478 end))), fun (V493) -> begin (V494 = (V492(V493))), case V494 of {'Prelude.Types.Left', V495} -> {'Prelude.Types.Left', V495}; {'Prelude.Types.Right', V496} -> (begin (V665 = begin (V519 = ('dn--un--toBuf_TTC_Visibility'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514, V515, V516, V517, V518} -> V506 end))), fun (V520) -> begin (V521 = (V519(V520))), case V521 of {'Prelude.Types.Left', V522} -> {'Prelude.Types.Left', V522}; {'Prelude.Types.Right', V523} -> (begin (V664 = begin (V546 = ('dn--un--toBuf_TTC_Totality'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V524, V525, V526, V527, V528, V529, V530, V531, V532, V533, V534, V535, V536, V537, V538, V539, V540, V541, V542, V543, V544, V545} -> V534 end))), fun (V547) -> begin (V548 = (V546(V547))), case V548 of {'Prelude.Types.Left', V549} -> {'Prelude.Types.Left', V549}; {'Prelude.Types.Right', V550} -> (begin (V663 = begin (V576 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V551) -> fun (V552) -> ('dn--un--toBuf_TTC_DefFlag'(V551, V552)) end end, fun (V553) -> ('dn--un--fromBuf_TTC_DefFlag'(V553)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V554, V555, V556, V557, V558, V559, V560, V561, V562, V563, V564, V565, V566, V567, V568, V569, V570, V571, V572, V573, V574, V575} -> V565 end))), fun (V577) -> begin (V578 = (V576(V577))), case V578 of {'Prelude.Types.Left', V579} -> {'Prelude.Types.Left', V579}; {'Prelude.Types.Right', V580} -> (begin (V662 = begin (V603 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V581, V582, V583, V584, V585, V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596, V597, V598, V599, V600, V601, V602} -> V595 end))), fun (V604) -> begin (V605 = (V603(V604))), case V605 of {'Prelude.Types.Left', V606} -> {'Prelude.Types.Left', V606}; {'Prelude.Types.Right', V607} -> (begin (V661 = begin (V630 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, case V1 of {'Core.Context.Context.MkGlobalDef', V608, V609, V610, V611, V612, V613, V614, V615, V616, V617, V618, V619, V620, V621, V622, V623, V624, V625, V626, V627, V628, V629} -> V623 end))), fun (V631) -> begin (V632 = (V630(V631))), case V632 of {'Prelude.Types.Left', V633} -> {'Prelude.Types.Left', V633}; {'Prelude.Types.Right', V634} -> (begin (V660 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V635) -> fun (V636) -> ('dn--un--toBuf_TTC_SCCall'(V635, V636)) end end, fun (V637) -> ('dn--un--fromBuf_TTC_SCCall'(V637)) end}, V0, case V1 of {'Core.Context.Context.MkGlobalDef', V638, V639, V640, V641, V642, V643, V644, V645, V646, V647, V648, V649, V650, V651, V652, V653, V654, V655, V656, V657, V658, V659} -> V658 end))), V660 end(V631)) end end end end), V661 end(V604)) end end end end), V662 end(V577)) end end end end), V663 end(V547)) end end end end), V664 end(V520)) end end end end), V665 end(V493)) end end end end), V666 end(V463)) end end end end), V667 end(V433)) end end end end), V668 end(V403)) end end end end), V669 end(V373)) end end end end), V670 end(V343)) end end end end; 0 -> fun (V671) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V672 end(V272)) end end end end), V673 end(V245)) end end end end), V674 end(V177)) end end end end), V675 end(V150)) end end end end), V676 end(V123)) end end end end), V677 end(V96)) end end end end), V678 end(V28)) end end end end.
'dn--un--toBuf_TTC_FC'(V0, V1) -> case V1 of {'Core.FC.MkFC', V2, V3, V4} -> begin (V5 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V34 = begin (V10 = ('dn--un--toBuf_TTC_OriginDesc'(V0, V2))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V33 = begin (V21 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V15, V16)) end end, fun (V17) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V17)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V18, V19)) end end, fun (V20) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V20)) end}}, V0, V3))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V32 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V26, V27)) end end, fun (V28) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V28)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V29, V30)) end end, fun (V31) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V31)) end}}, V0, V4))), V32 end(V22)) end end end end), V33 end(V11)) end end end end), V34 end(V6)) end end end end; {'Core.FC.MkVirtualFC', V35, V36, V37} -> begin (V38 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V67 = begin (V43 = ('dn--un--toBuf_TTC_OriginDesc'(V0, V35))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V66 = begin (V54 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V48, V49)) end end, fun (V50) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V50)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V51, V52)) end end, fun (V53) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V53)) end}}, V0, V36))), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V65 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V59, V60)) end end, fun (V61) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V61)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V62, V63)) end end, fun (V64) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V64)) end}}, V0, V37))), V65 end(V55)) end end end end), V66 end(V44)) end end end end), V67 end(V39)) end end end end; {'Core.FC.EmptyFC'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)) end.
'dn--un--toBuf_TTC_DefFlag'(V0, V1) -> case V1 of {'Core.Context.Context.Inline'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)); {'Core.Context.Context.NoInline'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 13)); {'Core.Context.Context.Deprecate'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 15)); {'Core.Context.Context.Invertible'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3)); {'Core.Context.Context.Overloadable'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4)); {'Core.Context.Context.TCInline'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5)); {'Core.Context.Context.SetTotal', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V8 = ('dn--un--toBuf_TTC_TotalReq'(V0, V2))), V8 end(V4)) end end end end; {'Core.Context.Context.BlockedHint'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7)); {'Core.Context.Context.Macro'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8)); {'Core.Context.Context.PartialEval', V9} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 9)); {'Core.Context.Context.AllGuarded'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 10)); {'Core.Context.Context.ConType', V10} -> begin (V11 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 11))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V16 = ('dn--un--toBuf_TTC_ConInfo'(V0, V10))), V16 end(V12)) end end end end; {'Core.Context.Context.Identity', V17} -> begin (V18 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 12))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V23 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V17))), V23 end(V19)) end end end end end.
'dn--un--toBuf_TTC_Def'(V0, V1) -> case V1 of {'Core.Context.Context.None'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.Context.Context.PMDef', V2, V3, V4, V5, V6} -> begin (V7 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V134 = begin (V12 = ('dn--un--toBuf_TTC_PMDefInfo'(V0, V2))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V133 = begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_Name'(V17, V18)) end end, fun (V19) -> ('dn--un--fromBuf_TTC_Name'(V19)) end}, V0, V3))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V132 = begin (V25 = ('dn--un--toBuf_TTC_(CaseTree $vars)'(V3, V0, V4))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V131 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_((DPair $a) $p)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V34) -> fun (V35) -> ('dn--un--toBuf_TTC_Name'(V34, V35)) end end, fun (V36) -> ('dn--un--fromBuf_TTC_Name'(V36)) end}, V32, V33)) end end, fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V38) -> fun (V39) -> ('dn--un--toBuf_TTC_Name'(V38, V39)) end end, fun (V40) -> ('dn--un--fromBuf_TTC_Name'(V40)) end}, V37)) end}, fun (V41) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V44) -> fun (V45) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V41, V44, V45)) end end, fun (V46) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V41, V46)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V49) -> fun (V50) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V49, V50)) end end, fun (V51) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V51)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V52) -> fun (V53) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V52, V53)) end end, fun (V54) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V54)) end}}, V47, V48)) end end, fun (V55) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V56) -> fun (V57) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V56, V57)) end end, fun (V58) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V58)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V59) -> fun (V60) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V59, V60)) end end, fun (V61) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V61)) end}}, V55)) end}}, V42, V43)) end end, fun (V62) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V63) -> fun (V64) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V41, V63, V64)) end end, fun (V65) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V41, V65)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V68) -> fun (V69) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V68, V69)) end end, fun (V70) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V70)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V71) -> fun (V72) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V71, V72)) end end, fun (V73) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V73)) end}}, V66, V67)) end end, fun (V74) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V75) -> fun (V76) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V75, V76)) end end, fun (V77) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V77)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V78) -> fun (V79) -> ('dn--un--toBuf_TTC_(Term $vars)'(V41, V78, V79)) end end, fun (V80) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V41, V80)) end}}, V74)) end}}, V62)) end} end}, V30, V31)) end end, fun (V81) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_((DPair $a) $p)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V84) -> fun (V85) -> ('dn--un--toBuf_TTC_Name'(V84, V85)) end end, fun (V86) -> ('dn--un--fromBuf_TTC_Name'(V86)) end}, V82, V83)) end end, fun (V87) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V88) -> fun (V89) -> ('dn--un--toBuf_TTC_Name'(V88, V89)) end end, fun (V90) -> ('dn--un--fromBuf_TTC_Name'(V90)) end}, V87)) end}, fun (V91) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V94) -> fun (V95) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V91, V94, V95)) end end, fun (V96) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V91, V96)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V97) -> fun (V98) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V99) -> fun (V100) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V99, V100)) end end, fun (V101) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V101)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V102) -> fun (V103) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V102, V103)) end end, fun (V104) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V104)) end}}, V97, V98)) end end, fun (V105) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V106) -> fun (V107) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V106, V107)) end end, fun (V108) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V108)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V109) -> fun (V110) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V109, V110)) end end, fun (V111) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V111)) end}}, V105)) end}}, V92, V93)) end end, fun (V112) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V113) -> fun (V114) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V91, V113, V114)) end end, fun (V115) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V91, V115)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V116) -> fun (V117) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V118) -> fun (V119) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V118, V119)) end end, fun (V120) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V120)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V121) -> fun (V122) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V121, V122)) end end, fun (V123) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V123)) end}}, V116, V117)) end end, fun (V124) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V125) -> fun (V126) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V125, V126)) end end, fun (V127) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V127)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V128) -> fun (V129) -> ('dn--un--toBuf_TTC_(Term $vars)'(V91, V128, V129)) end end, fun (V130) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V91, V130)) end}}, V124)) end}}, V112)) end} end}, V81)) end}, V0, V6))), V131 end(V26)) end end end end), V132 end(V21)) end end end end), V133 end(V13)) end end end end), V134 end(V8)) end end end end; {'Core.Context.Context.ExternDef', V135} -> begin (V136 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V141 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V135))), V141 end(V137)) end end end end; {'Core.Context.Context.ForeignDef', V142, V143} -> begin (V144 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3))), fun (V145) -> begin (V146 = (V144(V145))), case V146 of {'Prelude.Types.Left', V147} -> {'Prelude.Types.Left', V147}; {'Prelude.Types.Right', V148} -> (begin (V158 = begin (V149 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V142))), fun (V150) -> begin (V151 = (V149(V150))), case V151 of {'Prelude.Types.Left', V152} -> {'Prelude.Types.Left', V152}; {'Prelude.Types.Right', V153} -> (begin (V157 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V154) -> fun (V155) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V154, V155)) end end, fun (V156) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V156)) end}, V0, V143))), V157 end(V150)) end end end end), V158 end(V145)) end end end end; {'Core.Context.Context.Builtin', V159, V160} -> fun (V161) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<"Trying to serialise a Builtin"/utf8>>}, V161)) end; {'Core.Context.Context.DCon', V162, V163, V164} -> begin (V165 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4))), fun (V166) -> begin (V167 = (V165(V166))), case V167 of {'Prelude.Types.Left', V168} -> {'Prelude.Types.Left', V168}; {'Prelude.Types.Right', V169} -> (begin (V197 = begin (V170 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V162))), fun (V171) -> begin (V172 = (V170(V171))), case V172 of {'Prelude.Types.Left', V173} -> {'Prelude.Types.Left', V173}; {'Prelude.Types.Right', V174} -> (begin (V196 = begin (V175 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V163))), fun (V176) -> begin (V177 = (V175(V176))), case V177 of {'Prelude.Types.Left', V178} -> {'Prelude.Types.Left', V178}; {'Prelude.Types.Right', V179} -> (begin (V195 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V180) -> fun (V181) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V182, V183)) end end, fun (V184) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V184)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V185) -> fun (V186) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V185, V186)) end end, fun (V187) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V187)) end}}, V180, V181)) end end, fun (V188) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V189) -> fun (V190) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V189, V190)) end end, fun (V191) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V191)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V192) -> fun (V193) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V192, V193)) end end, fun (V194) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V194)) end}}, V188)) end}, V0, V164))), V195 end(V176)) end end end end), V196 end(V171)) end end end end), V197 end(V166)) end end end end; {'Core.Context.Context.TCon', V198, V199, V200, V201, V202, V203, V204, V205} -> begin (V206 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5))), fun (V207) -> begin (V208 = (V206(V207))), case V208 of {'Prelude.Types.Left', V209} -> {'Prelude.Types.Left', V209}; {'Prelude.Types.Right', V210} -> (begin (V274 = begin (V211 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V198))), fun (V212) -> begin (V213 = (V211(V212))), case V213 of {'Prelude.Types.Left', V214} -> {'Prelude.Types.Left', V214}; {'Prelude.Types.Right', V215} -> (begin (V273 = begin (V216 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V199))), fun (V217) -> begin (V218 = (V216(V217))), case V218 of {'Prelude.Types.Left', V219} -> {'Prelude.Types.Left', V219}; {'Prelude.Types.Right', V220} -> (begin (V272 = begin (V224 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V221, V222)) end end, fun (V223) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V223)) end}, V0, V200))), fun (V225) -> begin (V226 = (V224(V225))), case V226 of {'Prelude.Types.Left', V227} -> {'Prelude.Types.Left', V227}; {'Prelude.Types.Right', V228} -> (begin (V271 = begin (V232 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V229) -> fun (V230) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V229, V230)) end end, fun (V231) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V231)) end}, V0, V201))), fun (V233) -> begin (V234 = (V232(V233))), case V234 of {'Prelude.Types.Left', V235} -> {'Prelude.Types.Left', V235}; {'Prelude.Types.Right', V236} -> (begin (V270 = begin (V237 = ('dn--un--toBuf_TTC_TypeFlags'(V0, V202))), fun (V238) -> begin (V239 = (V237(V238))), case V239 of {'Prelude.Types.Left', V240} -> {'Prelude.Types.Left', V240}; {'Prelude.Types.Right', V241} -> (begin (V269 = begin (V245 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V242) -> fun (V243) -> ('dn--un--toBuf_TTC_Name'(V242, V243)) end end, fun (V244) -> ('dn--un--fromBuf_TTC_Name'(V244)) end}, V0, V203))), fun (V246) -> begin (V247 = (V245(V246))), case V247 of {'Prelude.Types.Left', V248} -> {'Prelude.Types.Left', V248}; {'Prelude.Types.Right', V249} -> (begin (V268 = begin (V253 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V250) -> fun (V251) -> ('dn--un--toBuf_TTC_Name'(V250, V251)) end end, fun (V252) -> ('dn--un--fromBuf_TTC_Name'(V252)) end}, V0, V204))), fun (V254) -> begin (V255 = (V253(V254))), case V255 of {'Prelude.Types.Left', V256} -> {'Prelude.Types.Left', V256}; {'Prelude.Types.Right', V257} -> (begin (V267 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V258) -> fun (V259) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V260) -> fun (V261) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V260, V261)) end end, fun (V262) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V262)) end}, V258, V259)) end end, fun (V263) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V264) -> fun (V265) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V264, V265)) end end, fun (V266) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V266)) end}, V263)) end}, V0, V205))), V267 end(V254)) end end end end), V268 end(V246)) end end end end), V269 end(V238)) end end end end), V270 end(V233)) end end end end), V271 end(V225)) end end end end), V272 end(V217)) end end end end), V273 end(V212)) end end end end), V274 end(V207)) end end end end; {'Core.Context.Context.Hole', V275, V276} -> begin (V277 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6))), fun (V278) -> begin (V279 = (V277(V278))), case V279 of {'Prelude.Types.Left', V280} -> {'Prelude.Types.Left', V280}; {'Prelude.Types.Right', V281} -> (begin (V290 = begin (V282 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V275))), fun (V283) -> begin (V284 = (V282(V283))), case V284 of {'Prelude.Types.Left', V285} -> {'Prelude.Types.Left', V285}; {'Prelude.Types.Right', V286} -> (begin (V289 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, case V276 of {'Core.Context.Context.MkHoleFlags', V287, V288} -> V287 end))), V289 end(V283)) end end end end), V290 end(V278)) end end end end; {'Core.Context.Context.BySearch', V291, V292, V293} -> begin (V294 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7))), fun (V295) -> begin (V296 = (V294(V295))), case V296 of {'Prelude.Types.Left', V297} -> {'Prelude.Types.Left', V297}; {'Prelude.Types.Right', V298} -> (begin (V311 = begin (V299 = ('dn--un--toBuf_TTC_RigCount'(V0, V291))), fun (V300) -> begin (V301 = (V299(V300))), case V301 of {'Prelude.Types.Left', V302} -> {'Prelude.Types.Left', V302}; {'Prelude.Types.Right', V303} -> (begin (V310 = begin (V304 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V292))), fun (V305) -> begin (V306 = (V304(V305))), case V306 of {'Prelude.Types.Left', V307} -> {'Prelude.Types.Left', V307}; {'Prelude.Types.Right', V308} -> (begin (V309 = ('dn--un--toBuf_TTC_Name'(V0, V293))), V309 end(V305)) end end end end), V310 end(V300)) end end end end), V311 end(V295)) end end end end; {'Core.Context.Context.Guess', V312, V313, V314} -> begin (V315 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8))), fun (V316) -> begin (V317 = (V315(V316))), case V317 of {'Prelude.Types.Left', V318} -> {'Prelude.Types.Left', V318}; {'Prelude.Types.Right', V319} -> (begin (V335 = begin (V320 = ('dn--un--toBuf_TTC_(Term $vars)'([], V0, V312))), fun (V321) -> begin (V322 = (V320(V321))), case V322 of {'Prelude.Types.Left', V323} -> {'Prelude.Types.Left', V323}; {'Prelude.Types.Right', V324} -> (begin (V334 = begin (V325 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V313))), fun (V326) -> begin (V327 = (V325(V326))), case V327 of {'Prelude.Types.Left', V328} -> {'Prelude.Types.Left', V328}; {'Prelude.Types.Right', V329} -> (begin (V333 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V330) -> fun (V331) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V330, V331)) end end, fun (V332) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V332)) end}, V0, V314))), V333 end(V326)) end end end end), V334 end(V321)) end end end end), V335 end(V316)) end end end end; {'Core.Context.Context.ImpBind'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 9)); {'Core.Context.Context.Delayed'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 10)); {'Core.Context.Context.UniverseLevel', V336} -> begin (V337 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 11))), fun (V338) -> begin (V339 = (V337(V338))), case V339 of {'Prelude.Types.Left', V340} -> {'Prelude.Types.Left', V340}; {'Prelude.Types.Right', V341} -> (begin (V342 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Integer'(V0, V336))), V342 end(V338)) end end end end end.
'dn--un--toBuf_TTC_Covering'(V0, V1) -> case V1 of {'Core.TT.IsCovering'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.TT.MissingCases', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V11 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V8) -> fun (V9) -> ('dn--un--toBuf_TTC_(Term $vars)'([], V8, V9)) end end, fun (V10) -> ('dn--un--fromBuf_TTC_(Term $vars)'([], V10)) end}, V0, V2))), V11 end(V4)) end end end end; {'Core.TT.NonCoveringCall', V12} -> begin (V13 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V21 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V18) -> fun (V19) -> ('dn--un--toBuf_TTC_Name'(V18, V19)) end end, fun (V20) -> ('dn--un--fromBuf_TTC_Name'(V20)) end}, V0, V12))), V21 end(V14)) end end end end end.
'dn--un--toBuf_TTC_Constant'(V0, V1) -> case V1 of {'Core.TT.I', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V8 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V0, V2))), V8 end(V4)) end end end end; {'Core.TT.I8', V9} -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V15 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int8'(V0, V9))), V15 end(V11)) end end end end; {'Core.TT.I16', V16} -> begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V22 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int16'(V0, V16))), V22 end(V18)) end end end end; {'Core.TT.I32', V23} -> begin (V24 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V29 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int32'(V0, V23))), V29 end(V25)) end end end end; {'Core.TT.I64', V30} -> begin (V31 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V36 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int64'(V0, V30))), V36 end(V32)) end end end end; {'Core.TT.BI', V37} -> begin (V38 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V43 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Integer'(V0, V37))), V43 end(V39)) end end end end; {'Core.TT.B8', V44} -> begin (V45 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V50 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bits8'(V0, V44))), V50 end(V46)) end end end end; {'Core.TT.B16', V51} -> begin (V52 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7))), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V57 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bits16'(V0, V51))), V57 end(V53)) end end end end; {'Core.TT.B32', V58} -> begin (V59 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V64 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bits32'(V0, V58))), V64 end(V60)) end end end end; {'Core.TT.B64', V65} -> begin (V66 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 9))), fun (V67) -> begin (V68 = (V66(V67))), case V68 of {'Prelude.Types.Left', V69} -> {'Prelude.Types.Left', V69}; {'Prelude.Types.Right', V70} -> (begin (V71 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bits64'(V0, V65))), V71 end(V67)) end end end end; {'Core.TT.Str', V72} -> begin (V73 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 10))), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V78 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V72))), V78 end(V74)) end end end end; {'Core.TT.Ch', V79} -> begin (V80 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 11))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V85 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Char'(V0, V79))), V85 end(V81)) end end end end; {'Core.TT.Db', V86} -> begin (V87 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 12))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V92 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Double'(V0, V86))), V92 end(V88)) end end end end; {'Core.TT.PrT', V93} -> begin (V94 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 13))), fun (V95) -> begin (V96 = (V94(V95))), case V96 of {'Prelude.Types.Left', V97} -> {'Prelude.Types.Left', V97}; {'Prelude.Types.Right', V98} -> (begin (V99 = ('dn--un--toBuf_TTC_PrimType'(V0, V93))), V99 end(V95)) end end end end; {'Core.TT.WorldVal'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 14)) end.
'dn--un--toBuf_TTC_ConInfo'(V0, V1) -> case V1 of {'Core.CompileExpr.DATACON'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.CompileExpr.TYCON'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); {'Core.CompileExpr.NIL'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)); {'Core.CompileExpr.CONS'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3)); {'Core.CompileExpr.ENUM', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V8 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V2))), V8 end(V4)) end end end end; {'Core.CompileExpr.NOTHING'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5)); {'Core.CompileExpr.JUST'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6)); {'Core.CompileExpr.RECORD'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7)); {'Core.CompileExpr.ZERO'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8)); {'Core.CompileExpr.SUCC'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 9)); {'Core.CompileExpr.UNIT'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 10)) end.
'dn--un--toBuf_TTC_CG'(V0, V1) -> case V1 of {'Core.Options.Chez'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.Options.ChezSep'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); {'Core.Options.Racket'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)); {'Core.Options.Gambit'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3)); {'Core.Options.Other', V2} -> begin (V3 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4))), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V8 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V2))), V8 end(V4)) end end end end; {'Core.Options.Node'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5)); {'Core.Options.Javascript'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6)); {'Core.Options.RefC'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7)); {'Core.Options.VMCodeInterp'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8)) end.
'dn--un--toBuf_TTC_CFType'(V0, V1) -> case V1 of {'Core.CompileExpr.CFUnit'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); {'Core.CompileExpr.CFInt'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); {'Core.CompileExpr.CFUnsigned8'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)); {'Core.CompileExpr.CFUnsigned16'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3)); {'Core.CompileExpr.CFUnsigned32'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 4)); {'Core.CompileExpr.CFUnsigned64'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 5)); {'Core.CompileExpr.CFString'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 6)); {'Core.CompileExpr.CFDouble'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 7)); {'Core.CompileExpr.CFChar'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 8)); {'Core.CompileExpr.CFPtr'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 9)); {'Core.CompileExpr.CFWorld'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 10)); {'Core.CompileExpr.CFFun', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 11))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V15 = begin (V9 = ('dn--un--toBuf_TTC_CFType'(V0, V2))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V14 = ('dn--un--toBuf_TTC_CFType'(V0, V3))), V14 end(V10)) end end end end), V15 end(V5)) end end end end; {'Core.CompileExpr.CFIORes', V16} -> begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 12))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V22 = ('dn--un--toBuf_TTC_CFType'(V0, V16))), V22 end(V18)) end end end end; {'Core.CompileExpr.CFStruct', V23, V24} -> begin (V25 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 13))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V51 = begin (V30 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V0, V23))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V50 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V37, V38)) end end, fun (V39) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V39)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V40) -> fun (V41) -> ('dn--un--toBuf_TTC_CFType'(V40, V41)) end end, fun (V42) -> ('dn--un--fromBuf_TTC_CFType'(V42)) end}}, V35, V36)) end end, fun (V43) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V44, V45)) end end, fun (V46) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V46)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('dn--un--toBuf_TTC_CFType'(V47, V48)) end end, fun (V49) -> ('dn--un--fromBuf_TTC_CFType'(V49)) end}}, V43)) end}, V0, V24))), V50 end(V31)) end end end end), V51 end(V26)) end end end end; {'Core.CompileExpr.CFUser', V52, V53} -> begin (V54 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 14))), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V68 = begin (V59 = ('dn--un--toBuf_TTC_Name'(V0, V52))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V67 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V64) -> fun (V65) -> ('dn--un--toBuf_TTC_CFType'(V64, V65)) end end, fun (V66) -> ('dn--un--fromBuf_TTC_CFType'(V66)) end}, V0, V53))), V67 end(V60)) end end end end), V68 end(V55)) end end end end; {'Core.CompileExpr.CFGCPtr'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 15)); {'Core.CompileExpr.CFBuffer'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 16)); {'Core.CompileExpr.CFInt8'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 17)); {'Core.CompileExpr.CFInt16'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 18)); {'Core.CompileExpr.CFInt32'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 19)); {'Core.CompileExpr.CFInt64'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 20)); {'Core.CompileExpr.CFForeignObj'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 21)); {'Core.CompileExpr.CFInteger'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 22)) end.
'dn--un--toBuf_TTC_CDef'(V0, V1) -> case V1 of {'Core.CompileExpr.MkFun', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V18 = begin (V12 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V9) -> fun (V10) -> ('dn--un--toBuf_TTC_Name'(V9, V10)) end end, fun (V11) -> ('dn--un--fromBuf_TTC_Name'(V11)) end}, V0, V2))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V17 = ('dn--un--toBuf_TTC_(CExp $vars)'(V2, V0, V3))), V17 end(V13)) end end end end), V18 end(V5)) end end end end; {'Core.CompileExpr.MkCon', V19, V20, V21} -> begin (V22 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V45 = begin (V30 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V27, V28)) end end, fun (V29) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V29)) end}, V0, V19))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V44 = begin (V35 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V0, V20))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V43 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V40, V41)) end end, fun (V42) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V42)) end}, V0, V21))), V43 end(V36)) end end end end), V44 end(V31)) end end end end), V45 end(V23)) end end end end; {'Core.CompileExpr.MkForeign', V46, V47, V48} -> begin (V49 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V72 = begin (V57 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V54, V55)) end end, fun (V56) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V56)) end}, V0, V46))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V71 = begin (V65 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V62) -> fun (V63) -> ('dn--un--toBuf_TTC_CFType'(V62, V63)) end end, fun (V64) -> ('dn--un--fromBuf_TTC_CFType'(V64)) end}, V0, V47))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V70 = ('dn--un--toBuf_TTC_CFType'(V0, V48))), V70 end(V66)) end end end end), V71 end(V58)) end end end end), V72 end(V50)) end end end end; {'Core.CompileExpr.MkError', V73} -> begin (V74 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3))), fun (V75) -> begin (V76 = (V74(V75))), case V76 of {'Prelude.Types.Left', V77} -> {'Prelude.Types.Left', V77}; {'Prelude.Types.Right', V78} -> (begin (V79 = ('dn--un--toBuf_TTC_(CExp $vars)'([], V0, V73))), V79 end(V75)) end end end end end.
'dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V2) -> case V2 of {'Core.TT.Local', V3, V4, V5} -> case ('Idris.Idris2.Prelude.Types':'dn--un--<_Ord_Nat'(V5, 243)) of 1 -> begin (V8 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, begin (V7 = (begin (V6 = V5), case ((V6 band 9223372036854775808) =/= 0) of 'true' -> (V6 bor -9223372036854775808); _ -> (V6 band 9223372036854775807) end end + 13)), case ((V7 band 9223372036854775808) =/= 0) of 'true' -> (V7 bor -9223372036854775808); _ -> (V7 band 9223372036854775807) end end))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V16 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V13, V14)) end end, fun (V15) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V15)) end}, V1, V4))), V16 end(V9)) end end end end; 0 -> begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 0))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V31 = begin (V25 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V22, V23)) end end, fun (V24) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V24)) end}, V1, V4))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V30 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V1, V5))), V30 end(V26)) end end end end), V31 end(V18)) end end end end end; {'Core.TT.Ref', V32, V33, V34} -> begin (V35 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 1))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V46 = begin (V40 = ('dn--un--toBuf_TTC_NameType'(V1, V33))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V45 = ('dn--un--toBuf_TTC_Name'(V1, V34))), V45 end(V41)) end end end end), V46 end(V36)) end end end end; {'Core.TT.Meta', V47, V48, V49, V50} -> begin (V51 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 2))), fun (V52) -> begin (V53 = (V51(V52))), case V53 of {'Prelude.Types.Left', V54} -> {'Prelude.Types.Left', V54}; {'Prelude.Types.Right', V55} -> (begin (V65 = begin (V56 = ('dn--un--toBuf_TTC_Name'(V1, V48))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V64 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V61) -> fun (V62) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V61, V62)) end end, fun (V63) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V63)) end}, V1, V50))), V64 end(V57)) end end end end), V65 end(V52)) end end end end; {'Core.TT.Bind', V66, V67, V68, V69} -> begin (V70 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 3))), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V87 = begin (V75 = ('dn--un--toBuf_TTC_Name'(V1, V67))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V86 = begin (V80 = ('dn--un--toBuf_TTC_(Binder (Term $vars))'(V0, V1, V68))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V85 = ('dn--un--toBuf_TTC_(Term $vars)'([V67 | V0], V1, V69))), V85 end(V81)) end end end end), V86 end(V76)) end end end end), V87 end(V71)) end end end end; {'Core.TT.App', V88, V89, V90} -> case ('Idris.Idris2.Core.TT':'un--getFnArgs'({'Core.TT.App', V88, V89, V90})) of {'Builtin.MkPair', V91, V92} -> case V92 of [E0 | E1] -> (fun (V93, V94) -> case V94 of [] -> begin (V95 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 4))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V106 = begin (V100 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V91))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V105 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V93))), V105 end(V101)) end end end end), V106 end(V96)) end end end end; _ -> begin (V107 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 12))), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V121 = begin (V112 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V91))), fun (V113) -> begin (V114 = (V112(V113))), case V114 of {'Prelude.Types.Left', V115} -> {'Prelude.Types.Left', V115}; {'Prelude.Types.Right', V116} -> (begin (V120 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V117) -> fun (V118) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V117, V118)) end end, fun (V119) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V119)) end}, V1, V92))), V120 end(V113)) end end end end), V121 end(V108)) end end end end end end(E0, E1)); _ -> begin (V122 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 12))), fun (V123) -> begin (V124 = (V122(V123))), case V124 of {'Prelude.Types.Left', V125} -> {'Prelude.Types.Left', V125}; {'Prelude.Types.Right', V126} -> (begin (V136 = begin (V127 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V91))), fun (V128) -> begin (V129 = (V127(V128))), case V129 of {'Prelude.Types.Left', V130} -> {'Prelude.Types.Left', V130}; {'Prelude.Types.Right', V131} -> (begin (V135 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V132) -> fun (V133) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V132, V133)) end end, fun (V134) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V134)) end}, V1, V92))), V135 end(V128)) end end end end), V136 end(V123)) end end end end end end; {'Core.TT.As', V137, V138, V139, V140} -> begin (V141 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 5))), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V158 = begin (V146 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V139))), fun (V147) -> begin (V148 = (V146(V147))), case V148 of {'Prelude.Types.Left', V149} -> {'Prelude.Types.Left', V149}; {'Prelude.Types.Right', V150} -> (begin (V157 = begin (V151 = ('dn--un--toBuf_TTC_UseSide'(V1, V138))), fun (V152) -> begin (V153 = (V151(V152))), case V153 of {'Prelude.Types.Left', V154} -> {'Prelude.Types.Left', V154}; {'Prelude.Types.Right', V155} -> (begin (V156 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V140))), V156 end(V152)) end end end end), V157 end(V147)) end end end end), V158 end(V142)) end end end end; {'Core.TT.TDelayed', V159, V160, V161} -> begin (V162 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 6))), fun (V163) -> begin (V164 = (V162(V163))), case V164 of {'Prelude.Types.Left', V165} -> {'Prelude.Types.Left', V165}; {'Prelude.Types.Right', V166} -> (begin (V173 = begin (V167 = ('dn--un--toBuf_TTC_LazyReason'(V1, V160))), fun (V168) -> begin (V169 = (V167(V168))), case V169 of {'Prelude.Types.Left', V170} -> {'Prelude.Types.Left', V170}; {'Prelude.Types.Right', V171} -> (begin (V172 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V161))), V172 end(V168)) end end end end), V173 end(V163)) end end end end; {'Core.TT.TDelay', V174, V175, V176, V177} -> begin (V178 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 7))), fun (V179) -> begin (V180 = (V178(V179))), case V180 of {'Prelude.Types.Left', V181} -> {'Prelude.Types.Left', V181}; {'Prelude.Types.Right', V182} -> (begin (V195 = begin (V183 = ('dn--un--toBuf_TTC_LazyReason'(V1, V175))), fun (V184) -> begin (V185 = (V183(V184))), case V185 of {'Prelude.Types.Left', V186} -> {'Prelude.Types.Left', V186}; {'Prelude.Types.Right', V187} -> (begin (V194 = begin (V188 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V176))), fun (V189) -> begin (V190 = (V188(V189))), case V190 of {'Prelude.Types.Left', V191} -> {'Prelude.Types.Left', V191}; {'Prelude.Types.Right', V192} -> (begin (V193 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V177))), V193 end(V189)) end end end end), V194 end(V184)) end end end end), V195 end(V179)) end end end end; {'Core.TT.TForce', V196, V197, V198} -> begin (V199 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 8))), fun (V200) -> begin (V201 = (V199(V200))), case V201 of {'Prelude.Types.Left', V202} -> {'Prelude.Types.Left', V202}; {'Prelude.Types.Right', V203} -> (begin (V210 = begin (V204 = ('dn--un--toBuf_TTC_LazyReason'(V1, V197))), fun (V205) -> begin (V206 = (V204(V205))), case V206 of {'Prelude.Types.Left', V207} -> {'Prelude.Types.Left', V207}; {'Prelude.Types.Right', V208} -> (begin (V209 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V198))), V209 end(V205)) end end end end), V210 end(V200)) end end end end; {'Core.TT.PrimVal', V211, V212} -> begin (V213 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 9))), fun (V214) -> begin (V215 = (V213(V214))), case V215 of {'Prelude.Types.Left', V216} -> {'Prelude.Types.Left', V216}; {'Prelude.Types.Right', V217} -> (begin (V218 = ('dn--un--toBuf_TTC_Constant'(V1, V212))), V218 end(V214)) end end end end; {'Core.TT.Erased', V219, V220} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 10)); {'Core.TT.TType', V221, V222} -> begin (V223 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 11))), fun (V224) -> begin (V225 = (V223(V224))), case V225 of {'Prelude.Types.Left', V226} -> {'Prelude.Types.Left', V226}; {'Prelude.Types.Right', V227} -> (begin (V228 = ('dn--un--toBuf_TTC_Name'(V1, V222))), V228 end(V224)) end end end end end.
'dn--un--toBuf_TTC_(PrimFn $n)'(V0, V1, V2) -> case V0 of 0 -> ('erlang':'throw'({'$idris_error', <<"Nat case not covered"/utf8>>})); _ -> begin (V3 = (V0 - 1)), case V3 of 0 -> case V2 of {'Core.TT.Neg', V4} -> begin (V5 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 5))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V10 = ('dn--un--toBuf_TTC_PrimType'(V1, V4))), V10 end(V6)) end end end end; {'Core.TT.StrLength'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 11)); {'Core.TT.StrHead'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 12)); {'Core.TT.StrTail'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 13)); {'Core.TT.StrReverse'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 17)); {'Core.TT.DoubleExp'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 19)); {'Core.TT.DoubleLog'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 20)); {'Core.TT.DoubleSin'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 22)); {'Core.TT.DoubleCos'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 23)); {'Core.TT.DoubleTan'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 24)); {'Core.TT.DoubleASin'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 25)); {'Core.TT.DoubleACos'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 26)); {'Core.TT.DoubleATan'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 27)); {'Core.TT.DoubleSqrt'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 32)); {'Core.TT.DoubleFloor'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 33)); {'Core.TT.DoubleCeiling'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 34)); {'Core.TT.Cast', V11, V12} -> begin (V13 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 99))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V24 = begin (V18 = ('dn--un--toBuf_TTC_PrimType'(V1, V11))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V23 = ('dn--un--toBuf_TTC_PrimType'(V1, V12))), V23 end(V19)) end end end end), V24 end(V14)) end end end end end; _ -> begin (V25 = (V3 - 1)), case V25 of 0 -> case V2 of {'Core.TT.Add', V26} -> begin (V27 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 0))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V32 = ('dn--un--toBuf_TTC_PrimType'(V1, V26))), V32 end(V28)) end end end end; {'Core.TT.Sub', V33} -> begin (V34 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 1))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V39 = ('dn--un--toBuf_TTC_PrimType'(V1, V33))), V39 end(V35)) end end end end; {'Core.TT.Mul', V40} -> begin (V41 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 2))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V46 = ('dn--un--toBuf_TTC_PrimType'(V1, V40))), V46 end(V42)) end end end end; {'Core.TT.Div', V47} -> begin (V48 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 3))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V53 = ('dn--un--toBuf_TTC_PrimType'(V1, V47))), V53 end(V49)) end end end end; {'Core.TT.Mod', V54} -> begin (V55 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 4))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V60 = ('dn--un--toBuf_TTC_PrimType'(V1, V54))), V60 end(V56)) end end end end; {'Core.TT.ShiftL', V61} -> begin (V62 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 35))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V67 = ('dn--un--toBuf_TTC_PrimType'(V1, V61))), V67 end(V63)) end end end end; {'Core.TT.ShiftR', V68} -> begin (V69 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 36))), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V74 = ('dn--un--toBuf_TTC_PrimType'(V1, V68))), V74 end(V70)) end end end end; {'Core.TT.BAnd', V75} -> begin (V76 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 37))), fun (V77) -> begin (V78 = (V76(V77))), case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> (begin (V81 = ('dn--un--toBuf_TTC_PrimType'(V1, V75))), V81 end(V77)) end end end end; {'Core.TT.BOr', V82} -> begin (V83 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 38))), fun (V84) -> begin (V85 = (V83(V84))), case V85 of {'Prelude.Types.Left', V86} -> {'Prelude.Types.Left', V86}; {'Prelude.Types.Right', V87} -> (begin (V88 = ('dn--un--toBuf_TTC_PrimType'(V1, V82))), V88 end(V84)) end end end end; {'Core.TT.BXOr', V89} -> begin (V90 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 39))), fun (V91) -> begin (V92 = (V90(V91))), case V92 of {'Prelude.Types.Left', V93} -> {'Prelude.Types.Left', V93}; {'Prelude.Types.Right', V94} -> (begin (V95 = ('dn--un--toBuf_TTC_PrimType'(V1, V89))), V95 end(V91)) end end end end; {'Core.TT.LT', V96} -> begin (V97 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 6))), fun (V98) -> begin (V99 = (V97(V98))), case V99 of {'Prelude.Types.Left', V100} -> {'Prelude.Types.Left', V100}; {'Prelude.Types.Right', V101} -> (begin (V102 = ('dn--un--toBuf_TTC_PrimType'(V1, V96))), V102 end(V98)) end end end end; {'Core.TT.LTE', V103} -> begin (V104 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 7))), fun (V105) -> begin (V106 = (V104(V105))), case V106 of {'Prelude.Types.Left', V107} -> {'Prelude.Types.Left', V107}; {'Prelude.Types.Right', V108} -> (begin (V109 = ('dn--un--toBuf_TTC_PrimType'(V1, V103))), V109 end(V105)) end end end end; {'Core.TT.EQ', V110} -> begin (V111 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 8))), fun (V112) -> begin (V113 = (V111(V112))), case V113 of {'Prelude.Types.Left', V114} -> {'Prelude.Types.Left', V114}; {'Prelude.Types.Right', V115} -> (begin (V116 = ('dn--un--toBuf_TTC_PrimType'(V1, V110))), V116 end(V112)) end end end end; {'Core.TT.GTE', V117} -> begin (V118 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 9))), fun (V119) -> begin (V120 = (V118(V119))), case V120 of {'Prelude.Types.Left', V121} -> {'Prelude.Types.Left', V121}; {'Prelude.Types.Right', V122} -> (begin (V123 = ('dn--un--toBuf_TTC_PrimType'(V1, V117))), V123 end(V119)) end end end end; {'Core.TT.GT', V124} -> begin (V125 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 10))), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V130 = ('dn--un--toBuf_TTC_PrimType'(V1, V124))), V130 end(V126)) end end end end; {'Core.TT.StrIndex'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 14)); {'Core.TT.StrCons'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 15)); {'Core.TT.StrAppend'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 16)); {'Core.TT.DoublePow'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 21)); {'Core.TT.Crash'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, begin (V131 = 101), case ((V131 band 9223372036854775808) =/= 0) of 'true' -> (V131 bor -9223372036854775808); _ -> (V131 band 9223372036854775807) end end)) end; _ -> begin (V132 = (V25 - 1)), case V132 of 0 -> case V2 of {'Core.TT.StrSubstr'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 18)); {'Core.TT.BelieveMe'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, begin (V133 = 100), case ((V133 band 9223372036854775808) =/= 0) of 'true' -> (V133 bor -9223372036854775808); _ -> (V133 band 9223372036854775807) end end)) end; _ -> ('erlang':'throw'({'$idris_error', <<"Nat case not covered"/utf8>>})) end end end end end end end.
'dn--un--toBuf_TTC_(PiInfo $t)'(V0, V1, V2) -> case V2 of {'Core.TT.Implicit'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 0)); {'Core.TT.Explicit'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 1)); {'Core.TT.AutoImplicit'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 2)); {'Core.TT.DefImplicit', V3} -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 3))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V11 = case V0 of {'Core.Binary.Prims.dn--un--__mkTTC', V9, V10} -> ((V9(V1))(V3)) end), V11 end(V5)) end end end end end.
'dn--un--toBuf_TTC_(CaseTree $vars)'(V0, V1, V2) -> case V2 of {'Core.Case.CaseTree.Case', V3, V4, V5, V6} -> begin (V7 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V27 = begin (V12 = ('dn--un--toBuf_TTC_Name'(V1, V3))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V26 = begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V1, V4))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V25 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('dn--un--toBuf_TTC_(CaseAlt $vars)'(V0, V22, V23)) end end, fun (V24) -> ('dn--un--fromBuf_TTC_(CaseAlt $vars)'(V0, V24)) end}, V1, V6))), V25 end(V18)) end end end end), V26 end(V13)) end end end end), V27 end(V8)) end end end end; {'Core.Case.CaseTree.STerm', V28, V29} -> begin (V30 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 1))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V35 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V29))), V35 end(V31)) end end end end; {'Core.Case.CaseTree.Unmatched', V36} -> begin (V37 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 2))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V42 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V1, V36))), V42 end(V38)) end end end end; {'Core.Case.CaseTree.Impossible'} -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 3)) end.
'dn--un--toBuf_TTC_(CaseAlt $vars)'(V0, V1, V2) -> case V2 of {'Core.Case.CaseTree.ConCase', V3, V4, V5, V6} -> begin (V7 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V33 = begin (V12 = ('dn--un--toBuf_TTC_Name'(V1, V3))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V32 = begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V1, V4))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V31 = begin (V25 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('dn--un--toBuf_TTC_Name'(V22, V23)) end end, fun (V24) -> ('dn--un--fromBuf_TTC_Name'(V24)) end}, V1, V5))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V30 = ('dn--un--toBuf_TTC_(CaseTree $vars)'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5, V0)), V1, V6))), V30 end(V26)) end end end end), V31 end(V18)) end end end end), V32 end(V13)) end end end end), V33 end(V8)) end end end end; {'Core.Case.CaseTree.DelayCase', V34, V35, V36} -> begin (V37 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 1))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V54 = begin (V42 = ('dn--un--toBuf_TTC_Name'(V1, V34))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V53 = begin (V47 = ('dn--un--toBuf_TTC_Name'(V1, V35))), fun (V48) -> begin (V49 = (V47(V48))), case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> (begin (V52 = ('dn--un--toBuf_TTC_(CaseTree $vars)'([V34 | [V35 | V0]], V1, V36))), V52 end(V48)) end end end end), V53 end(V43)) end end end end), V54 end(V38)) end end end end; {'Core.Case.CaseTree.ConstCase', V55, V56} -> begin (V57 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 2))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V68 = begin (V62 = ('dn--un--toBuf_TTC_Constant'(V1, V55))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V67 = ('dn--un--toBuf_TTC_(CaseTree $vars)'(V0, V1, V56))), V67 end(V63)) end end end end), V68 end(V58)) end end end end; {'Core.Case.CaseTree.DefaultCase', V69} -> begin (V70 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 3))), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V75 = ('dn--un--toBuf_TTC_(CaseTree $vars)'(V0, V1, V69))), V75 end(V71)) end end end end end.
'dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V2) -> case V2 of {'Core.CompileExpr.CLocal', V3, V4} -> begin (V5 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 0))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V16 = begin (V10 = ('dn--un--toBuf_TTC_FC'(V1, V4))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V15 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V1, V3))), V15 end(V11)) end end end end), V16 end(V6)) end end end end; {'Core.CompileExpr.CRef', V17, V18} -> begin (V19 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 1))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V30 = begin (V24 = ('dn--un--toBuf_TTC_FC'(V1, V17))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V29 = ('dn--un--toBuf_TTC_Name'(V1, V18))), V29 end(V25)) end end end end), V30 end(V20)) end end end end; {'Core.CompileExpr.CLam', V31, V32, V33} -> begin (V34 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 2))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V51 = begin (V39 = ('dn--un--toBuf_TTC_FC'(V1, V31))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V50 = begin (V44 = ('dn--un--toBuf_TTC_Name'(V1, V32))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V49 = ('dn--un--toBuf_TTC_(CExp $vars)'([V32 | V0], V1, V33))), V49 end(V45)) end end end end), V50 end(V40)) end end end end), V51 end(V35)) end end end end; {'Core.CompileExpr.CLet', V52, V53, V54, V55, V56} -> begin (V57 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 3))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V86 = begin (V62 = ('dn--un--toBuf_TTC_FC'(V1, V52))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V85 = begin (V67 = ('dn--un--toBuf_TTC_Name'(V1, V53))), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V84 = begin (V72 = ('dn--un--toBuf_TTC_InlineOk'(V1, V54))), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V83 = begin (V77 = ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V55))), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V82 = ('dn--un--toBuf_TTC_(CExp $vars)'([V53 | V0], V1, V56))), V82 end(V78)) end end end end), V83 end(V73)) end end end end), V84 end(V68)) end end end end), V85 end(V63)) end end end end), V86 end(V58)) end end end end; {'Core.CompileExpr.CApp', V87, V88, V89} -> begin (V90 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 4))), fun (V91) -> begin (V92 = (V90(V91))), case V92 of {'Prelude.Types.Left', V93} -> {'Prelude.Types.Left', V93}; {'Prelude.Types.Right', V94} -> (begin (V110 = begin (V95 = ('dn--un--toBuf_TTC_FC'(V1, V87))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V109 = begin (V100 = ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V88))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V108 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V105) -> fun (V106) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V105, V106)) end end, fun (V107) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V107)) end}, V1, V89))), V108 end(V101)) end end end end), V109 end(V96)) end end end end), V110 end(V91)) end end end end; {'Core.CompileExpr.CCon', V111, V112, V113, V114, V115} -> begin (V116 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 5))), fun (V117) -> begin (V118 = (V116(V117))), case V118 of {'Prelude.Types.Left', V119} -> {'Prelude.Types.Left', V119}; {'Prelude.Types.Right', V120} -> (begin (V151 = begin (V121 = ('dn--un--toBuf_TTC_FC'(V1, V111))), fun (V122) -> begin (V123 = (V121(V122))), case V123 of {'Prelude.Types.Left', V124} -> {'Prelude.Types.Left', V124}; {'Prelude.Types.Right', V125} -> (begin (V150 = begin (V126 = ('dn--un--toBuf_TTC_Name'(V1, V112))), fun (V127) -> begin (V128 = (V126(V127))), case V128 of {'Prelude.Types.Left', V129} -> {'Prelude.Types.Left', V129}; {'Prelude.Types.Right', V130} -> (begin (V149 = begin (V131 = ('dn--un--toBuf_TTC_ConInfo'(V1, V113))), fun (V132) -> begin (V133 = (V131(V132))), case V133 of {'Prelude.Types.Left', V134} -> {'Prelude.Types.Left', V134}; {'Prelude.Types.Right', V135} -> (begin (V148 = begin (V139 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V136, V137)) end end, fun (V138) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V138)) end}, V1, V114))), fun (V140) -> begin (V141 = (V139(V140))), case V141 of {'Prelude.Types.Left', V142} -> {'Prelude.Types.Left', V142}; {'Prelude.Types.Right', V143} -> (begin (V147 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V144) -> fun (V145) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V144, V145)) end end, fun (V146) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V146)) end}, V1, V115))), V147 end(V140)) end end end end), V148 end(V132)) end end end end), V149 end(V127)) end end end end), V150 end(V122)) end end end end), V151 end(V117)) end end end end; {'Core.CompileExpr.COp', V152, V153, V154, V155} -> begin (V156 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 6))), fun (V157) -> begin (V158 = (V156(V157))), case V158 of {'Prelude.Types.Left', V159} -> {'Prelude.Types.Left', V159}; {'Prelude.Types.Right', V160} -> (begin (V182 = begin (V161 = ('dn--un--toBuf_TTC_FC'(V1, V153))), fun (V162) -> begin (V163 = (V161(V162))), case V163 of {'Prelude.Types.Left', V164} -> {'Prelude.Types.Left', V164}; {'Prelude.Types.Right', V165} -> (begin (V181 = begin (V166 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V1, V152))), fun (V167) -> begin (V168 = (V166(V167))), case V168 of {'Prelude.Types.Left', V169} -> {'Prelude.Types.Left', V169}; {'Prelude.Types.Right', V170} -> (begin (V180 = begin (V171 = ('dn--un--toBuf_TTC_(PrimFn $n)'(V152, V1, V154))), fun (V172) -> begin (V173 = (V171(V172))), case V173 of {'Prelude.Types.Left', V174} -> {'Prelude.Types.Left', V174}; {'Prelude.Types.Right', V175} -> (begin (V179 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_((Vect $n) $a)'(V152, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V176) -> fun (V177) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V176, V177)) end end, fun (V178) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V178)) end}, V1, V155))), V179 end(V172)) end end end end), V180 end(V167)) end end end end), V181 end(V162)) end end end end), V182 end(V157)) end end end end; {'Core.CompileExpr.CExtPrim', V183, V184, V185} -> begin (V186 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 7))), fun (V187) -> begin (V188 = (V186(V187))), case V188 of {'Prelude.Types.Left', V189} -> {'Prelude.Types.Left', V189}; {'Prelude.Types.Right', V190} -> (begin (V206 = begin (V191 = ('dn--un--toBuf_TTC_FC'(V1, V183))), fun (V192) -> begin (V193 = (V191(V192))), case V193 of {'Prelude.Types.Left', V194} -> {'Prelude.Types.Left', V194}; {'Prelude.Types.Right', V195} -> (begin (V205 = begin (V196 = ('dn--un--toBuf_TTC_Name'(V1, V184))), fun (V197) -> begin (V198 = (V196(V197))), case V198 of {'Prelude.Types.Left', V199} -> {'Prelude.Types.Left', V199}; {'Prelude.Types.Right', V200} -> (begin (V204 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V201) -> fun (V202) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V201, V202)) end end, fun (V203) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V203)) end}, V1, V185))), V204 end(V197)) end end end end), V205 end(V192)) end end end end), V206 end(V187)) end end end end; {'Core.CompileExpr.CForce', V207, V208, V209} -> begin (V210 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 8))), fun (V211) -> begin (V212 = (V210(V211))), case V212 of {'Prelude.Types.Left', V213} -> {'Prelude.Types.Left', V213}; {'Prelude.Types.Right', V214} -> (begin (V227 = begin (V215 = ('dn--un--toBuf_TTC_FC'(V1, V207))), fun (V216) -> begin (V217 = (V215(V216))), case V217 of {'Prelude.Types.Left', V218} -> {'Prelude.Types.Left', V218}; {'Prelude.Types.Right', V219} -> (begin (V226 = begin (V220 = ('dn--un--toBuf_TTC_LazyReason'(V1, V208))), fun (V221) -> begin (V222 = (V220(V221))), case V222 of {'Prelude.Types.Left', V223} -> {'Prelude.Types.Left', V223}; {'Prelude.Types.Right', V224} -> (begin (V225 = ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V209))), V225 end(V221)) end end end end), V226 end(V216)) end end end end), V227 end(V211)) end end end end; {'Core.CompileExpr.CDelay', V228, V229, V230} -> begin (V231 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 9))), fun (V232) -> begin (V233 = (V231(V232))), case V233 of {'Prelude.Types.Left', V234} -> {'Prelude.Types.Left', V234}; {'Prelude.Types.Right', V235} -> (begin (V248 = begin (V236 = ('dn--un--toBuf_TTC_FC'(V1, V228))), fun (V237) -> begin (V238 = (V236(V237))), case V238 of {'Prelude.Types.Left', V239} -> {'Prelude.Types.Left', V239}; {'Prelude.Types.Right', V240} -> (begin (V247 = begin (V241 = ('dn--un--toBuf_TTC_LazyReason'(V1, V229))), fun (V242) -> begin (V243 = (V241(V242))), case V243 of {'Prelude.Types.Left', V244} -> {'Prelude.Types.Left', V244}; {'Prelude.Types.Right', V245} -> (begin (V246 = ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V230))), V246 end(V242)) end end end end), V247 end(V237)) end end end end), V248 end(V232)) end end end end; {'Core.CompileExpr.CConCase', V249, V250, V251, V252} -> begin (V253 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 10))), fun (V254) -> begin (V255 = (V253(V254))), case V255 of {'Prelude.Types.Left', V256} -> {'Prelude.Types.Left', V256}; {'Prelude.Types.Right', V257} -> (begin (V282 = begin (V258 = ('dn--un--toBuf_TTC_FC'(V1, V249))), fun (V259) -> begin (V260 = (V258(V259))), case V260 of {'Prelude.Types.Left', V261} -> {'Prelude.Types.Left', V261}; {'Prelude.Types.Right', V262} -> (begin (V281 = begin (V263 = ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V250))), fun (V264) -> begin (V265 = (V263(V264))), case V265 of {'Prelude.Types.Left', V266} -> {'Prelude.Types.Left', V266}; {'Prelude.Types.Right', V267} -> (begin (V280 = begin (V271 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V268) -> fun (V269) -> ('dn--un--toBuf_TTC_(CConAlt $vars)'(V0, V268, V269)) end end, fun (V270) -> ('dn--un--fromBuf_TTC_(CConAlt $vars)'(V0, V270)) end}, V1, V251))), fun (V272) -> begin (V273 = (V271(V272))), case V273 of {'Prelude.Types.Left', V274} -> {'Prelude.Types.Left', V274}; {'Prelude.Types.Right', V275} -> (begin (V279 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V276) -> fun (V277) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V276, V277)) end end, fun (V278) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V278)) end}, V1, V252))), V279 end(V272)) end end end end), V280 end(V264)) end end end end), V281 end(V259)) end end end end), V282 end(V254)) end end end end; {'Core.CompileExpr.CConstCase', V283, V284, V285, V286} -> begin (V287 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 11))), fun (V288) -> begin (V289 = (V287(V288))), case V289 of {'Prelude.Types.Left', V290} -> {'Prelude.Types.Left', V290}; {'Prelude.Types.Right', V291} -> (begin (V316 = begin (V292 = ('dn--un--toBuf_TTC_FC'(V1, V283))), fun (V293) -> begin (V294 = (V292(V293))), case V294 of {'Prelude.Types.Left', V295} -> {'Prelude.Types.Left', V295}; {'Prelude.Types.Right', V296} -> (begin (V315 = begin (V297 = ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V284))), fun (V298) -> begin (V299 = (V297(V298))), case V299 of {'Prelude.Types.Left', V300} -> {'Prelude.Types.Left', V300}; {'Prelude.Types.Right', V301} -> (begin (V314 = begin (V305 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V302) -> fun (V303) -> ('dn--un--toBuf_TTC_(CConstAlt $vars)'(V0, V302, V303)) end end, fun (V304) -> ('dn--un--fromBuf_TTC_(CConstAlt $vars)'(V0, V304)) end}, V1, V285))), fun (V306) -> begin (V307 = (V305(V306))), case V307 of {'Prelude.Types.Left', V308} -> {'Prelude.Types.Left', V308}; {'Prelude.Types.Right', V309} -> (begin (V313 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V310) -> fun (V311) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V310, V311)) end end, fun (V312) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V312)) end}, V1, V286))), V313 end(V306)) end end end end), V314 end(V298)) end end end end), V315 end(V293)) end end end end), V316 end(V288)) end end end end; {'Core.CompileExpr.CPrimVal', V317, V318} -> begin (V319 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 12))), fun (V320) -> begin (V321 = (V319(V320))), case V321 of {'Prelude.Types.Left', V322} -> {'Prelude.Types.Left', V322}; {'Prelude.Types.Right', V323} -> (begin (V330 = begin (V324 = ('dn--un--toBuf_TTC_FC'(V1, V317))), fun (V325) -> begin (V326 = (V324(V325))), case V326 of {'Prelude.Types.Left', V327} -> {'Prelude.Types.Left', V327}; {'Prelude.Types.Right', V328} -> (begin (V329 = ('dn--un--toBuf_TTC_Constant'(V1, V318))), V329 end(V325)) end end end end), V330 end(V320)) end end end end; {'Core.CompileExpr.CErased', V331} -> begin (V332 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 13))), fun (V333) -> begin (V334 = (V332(V333))), case V334 of {'Prelude.Types.Left', V335} -> {'Prelude.Types.Left', V335}; {'Prelude.Types.Right', V336} -> (begin (V337 = ('dn--un--toBuf_TTC_FC'(V1, V331))), V337 end(V333)) end end end end; {'Core.CompileExpr.CCrash', V338, V339} -> begin (V340 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 14))), fun (V341) -> begin (V342 = (V340(V341))), case V342 of {'Prelude.Types.Left', V343} -> {'Prelude.Types.Left', V343}; {'Prelude.Types.Right', V344} -> (begin (V351 = begin (V345 = ('dn--un--toBuf_TTC_FC'(V1, V338))), fun (V346) -> begin (V347 = (V345(V346))), case V347 of {'Prelude.Types.Left', V348} -> {'Prelude.Types.Left', V348}; {'Prelude.Types.Right', V349} -> (begin (V350 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V1, V339))), V350 end(V346)) end end end end), V351 end(V341)) end end end end end.
'dn--un--toBuf_TTC_(CConstAlt $vars)'(V0, V1, V2) -> case V2 of {'Core.CompileExpr.MkConstAlt', V3, V4} -> begin (V5 = ('dn--un--toBuf_TTC_Constant'(V1, V3))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V10 = ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V4))), V10 end(V6)) end end end end end.
'dn--un--toBuf_TTC_(CConAlt $vars)'(V0, V1, V2) -> case V2 of {'Core.CompileExpr.MkConAlt', V3, V4, V5, V6, V7} -> begin (V8 = ('dn--un--toBuf_TTC_Name'(V1, V3))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V37 = begin (V13 = ('dn--un--toBuf_TTC_ConInfo'(V1, V4))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V36 = begin (V21 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V18, V19)) end end, fun (V20) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V20)) end}, V1, V5))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V35 = begin (V29 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('dn--un--toBuf_TTC_Name'(V26, V27)) end end, fun (V28) -> ('dn--un--fromBuf_TTC_Name'(V28)) end}, V1, V6))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V34 = ('dn--un--toBuf_TTC_(CExp $vars)'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6, V0)), V1, V7))), V34 end(V30)) end end end end), V35 end(V22)) end end end end), V36 end(V14)) end end end end), V37 end(V9)) end end end end end.
'dn--un--toBuf_TTC_(Binder (Term $vars))'(V0, V1, V2) -> case V2 of {'Core.TT.Lam', V3, V4, V5, V6} -> begin (V7 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V27 = begin (V12 = ('dn--un--toBuf_TTC_RigCount'(V1, V4))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V26 = begin (V20 = ('dn--un--toBuf_TTC_(PiInfo $t)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V17, V18)) end end, fun (V19) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V19)) end}, V1, V5))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V25 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V6))), V25 end(V21)) end end end end), V26 end(V13)) end end end end), V27 end(V8)) end end end end; {'Core.TT.Let', V28, V29, V30, V31} -> begin (V32 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 1))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V43 = begin (V37 = ('dn--un--toBuf_TTC_RigCount'(V1, V29))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V42 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V30))), V42 end(V38)) end end end end), V43 end(V33)) end end end end; {'Core.TT.Pi', V44, V45, V46, V47} -> begin (V48 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 2))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V68 = begin (V53 = ('dn--un--toBuf_TTC_RigCount'(V1, V45))), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V67 = begin (V61 = ('dn--un--toBuf_TTC_(PiInfo $t)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V58) -> fun (V59) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V58, V59)) end end, fun (V60) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V60)) end}, V1, V46))), fun (V62) -> begin (V63 = (V61(V62))), case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> (begin (V66 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V47))), V66 end(V62)) end end end end), V67 end(V54)) end end end end), V68 end(V49)) end end end end; {'Core.TT.PVar', V69, V70, V71, V72} -> begin (V73 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 3))), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V93 = begin (V78 = ('dn--un--toBuf_TTC_RigCount'(V1, V70))), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V92 = begin (V86 = ('dn--un--toBuf_TTC_(PiInfo $t)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V83) -> fun (V84) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V83, V84)) end end, fun (V85) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V85)) end}, V1, V71))), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V91 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V72))), V91 end(V87)) end end end end), V92 end(V79)) end end end end), V93 end(V74)) end end end end; {'Core.TT.PLet', V94, V95, V96, V97} -> begin (V98 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 4))), fun (V99) -> begin (V100 = (V98(V99))), case V100 of {'Prelude.Types.Left', V101} -> {'Prelude.Types.Left', V101}; {'Prelude.Types.Right', V102} -> (begin (V109 = begin (V103 = ('dn--un--toBuf_TTC_RigCount'(V1, V95))), fun (V104) -> begin (V105 = (V103(V104))), case V105 of {'Prelude.Types.Left', V106} -> {'Prelude.Types.Left', V106}; {'Prelude.Types.Right', V107} -> (begin (V108 = ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V96))), V108 end(V104)) end end end end), V109 end(V99)) end end end end; {'Core.TT.PVTy', V110, V111, V112} -> begin (V113 = ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V1, 5))), fun (V114) -> begin (V115 = (V113(V114))), case V115 of {'Prelude.Types.Left', V116} -> {'Prelude.Types.Left', V116}; {'Prelude.Types.Right', V117} -> (begin (V118 = ('dn--un--toBuf_TTC_RigCount'(V1, V111))), V118 end(V114)) end end end end end.
'dn--un--toBuf_TTC_((Env Term) $vars)'(V0, V1, V2) -> case V0 of [] -> fun (V3) -> case V2 of {'Core.Env.Nil'} -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; [E0 | E1] -> (fun (V4, V5) -> case V2 of {'Core.Env.::', V6, V7} -> begin (V8 = ('dn--un--toBuf_TTC_(Binder (Term $vars))'(V5, V1, V6))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V13 = ('dn--un--toBuf_TTC_((Env Term) $vars)'(V5, V1, V7))), V13 end(V9)) end end end end end end(E0, E1)) end.
'dn--un--fromBuf_TTC_Visibility'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', 0}; 1 -> {'Prelude.Types.Right', 1}; 2 -> {'Prelude.Types.Right', 2}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Visibility"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--fromBuf_TTC_VirtualIdent'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', {'Core.FC.Interactive'}}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"VirtualIdent"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--fromBuf_TTC_UseSide'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', 0}; 1 -> {'Prelude.Types.Right', 1}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"UseSide"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--fromBuf_TTC_TypeFlags'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V13 = begin (V6 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V12 = fun (V11) -> {'Prelude.Types.Right', {'Core.Context.Context.MkTypeFlags', V5, V10}} end), V12 end(V7)) end end end end), V13 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Transform'(V0) -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_Name'(V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_Name'(V3)) end}, V0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V34 = begin (V9 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V33 = begin (V14 = ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V8, V0))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V32 = begin (V19 = ('dn--un--fromBuf_TTC_(Term $vars)'(V8, V0))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V31 = begin (V24 = ('dn--un--fromBuf_TTC_(Term $vars)'(V8, V0))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V30 = fun (V29) -> {'Prelude.Types.Right', {'Core.Context.MkTransform', V8, V13, V18, V23, V28}} end), V30 end(V25)) end end end end), V31 end(V20)) end end end end), V32 end(V15)) end end end end), V33 end(V10)) end end end end), V34 end(V5)) end end end end.
'dn--un--fromBuf_TTC_Totality'(V0) -> begin (V1 = ('dn--un--fromBuf_TTC_Terminating'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V13 = begin (V6 = ('dn--un--fromBuf_TTC_Covering'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V12 = fun (V11) -> {'Prelude.Types.Right', {'Core.TT.MkTotality', V5, V10}} end), V12 end(V7)) end end end end), V13 end(V2)) end end end end.
'dn--un--fromBuf_TTC_TotalReq'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', 0}; 1 -> {'Prelude.Types.Right', 1}; 2 -> {'Prelude.Types.Right', 2}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"TotalReq"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Terminating'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V16 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.TT.Unchecked'}} end; 1 -> fun (V7) -> {'Prelude.Types.Right', {'Core.TT.IsTerminating'}} end; 2 -> begin (V8 = ('dn--un--fromBuf_TTC_PartialReason'(V0))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V14 = fun (V13) -> {'Prelude.Types.Right', {'Core.TT.NotTerminating', V12}} end), V14 end(V9)) end end end end; _ -> fun (V15) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Terminating"/utf8>>, V15)) end end), V16 end(V2)) end end end end.
'dn--un--fromBuf_TTC_SizeChange'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', 0}; 1 -> {'Prelude.Types.Right', 1}; 2 -> {'Prelude.Types.Right', 2}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"SizeChange"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--fromBuf_TTC_SCCall'(V0) -> begin (V1 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V46 = begin (V39 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V10, V11)) end end, fun (V12) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V12)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V13) -> fun (V14) -> ('dn--un--toBuf_TTC_SizeChange'(V13, V14)) end end, fun (V15) -> ('dn--un--fromBuf_TTC_SizeChange'(V15)) end}}, V8, V9)) end end, fun (V16) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V17, V18)) end end, fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V19)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('dn--un--toBuf_TTC_SizeChange'(V20, V21)) end end, fun (V22) -> ('dn--un--fromBuf_TTC_SizeChange'(V22)) end}}, V16)) end}, V6, V7)) end end, fun (V23) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V26, V27)) end end, fun (V28) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V28)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('dn--un--toBuf_TTC_SizeChange'(V29, V30)) end end, fun (V31) -> ('dn--un--fromBuf_TTC_SizeChange'(V31)) end}}, V24, V25)) end end, fun (V32) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V33, V34)) end end, fun (V35) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V35)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('dn--un--toBuf_TTC_SizeChange'(V36, V37)) end end, fun (V38) -> ('dn--un--fromBuf_TTC_SizeChange'(V38)) end}}, V32)) end}, V23)) end}, V0))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V45 = fun (V44) -> {'Prelude.Types.Right', {'Core.Context.Context.MkSCCall', V5, V43}} end), V45 end(V40)) end end end end), V46 end(V2)) end end end end.
'dn--un--fromBuf_TTC_RigCount'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V15 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V7) -> fun (V8) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V7, V8)) end end, 0, fun (V9) -> fun (V10) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V9, V10)) end end, 1}))}; 1 -> {'Prelude.Types.Right', ('Idris.Idris2.Algebra.Semiring':'un--linear'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V11) -> fun (V12) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V11, V12)) end end, 0, fun (V13) -> fun (V14) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V13, V14)) end end, 1}))}; 2 -> {'Prelude.Types.Right', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'())}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"RigCount"/utf8>>, V6)) end end), V15 end(V2)) end end end end.
'dn--un--fromBuf_TTC_RewriteNames'(V0) -> begin (V1 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V13 = begin (V6 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V12 = fun (V11) -> {'Prelude.Types.Right', {'Core.Options.MkRewriteNs', V5, V10}} end), V12 end(V7)) end end end end), V13 end(V2)) end end end end.
'dn--un--fromBuf_TTC_PrimType'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', 0}; 1 -> {'Prelude.Types.Right', 1}; 2 -> {'Prelude.Types.Right', 2}; 3 -> {'Prelude.Types.Right', 3}; 4 -> {'Prelude.Types.Right', 4}; 5 -> {'Prelude.Types.Right', 5}; 6 -> {'Prelude.Types.Right', 6}; 7 -> {'Prelude.Types.Right', 7}; 8 -> {'Prelude.Types.Right', 8}; 9 -> {'Prelude.Types.Right', 9}; 10 -> {'Prelude.Types.Right', 10}; 11 -> {'Prelude.Types.Right', 11}; 12 -> {'Prelude.Types.Right', 12}; 13 -> {'Prelude.Types.Right', 13}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PrimType"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--fromBuf_TTC_PrimNames'(V0) -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_Name'(V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_Name'(V3)) end}, V0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V37 = begin (V12 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V9) -> fun (V10) -> ('dn--un--toBuf_TTC_Name'(V9, V10)) end end, fun (V11) -> ('dn--un--fromBuf_TTC_Name'(V11)) end}, V0))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V36 = begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_Name'(V17, V18)) end end, fun (V19) -> ('dn--un--fromBuf_TTC_Name'(V19)) end}, V0))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V35 = begin (V28 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V25) -> fun (V26) -> ('dn--un--toBuf_TTC_Name'(V25, V26)) end end, fun (V27) -> ('dn--un--fromBuf_TTC_Name'(V27)) end}, V0))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V34 = fun (V33) -> {'Prelude.Types.Right', {'Core.Options.MkPrimNs', V8, V16, V24, V32}} end), V34 end(V29)) end end end end), V35 end(V21)) end end end end), V36 end(V13)) end end end end), V37 end(V5)) end end end end.
'dn--un--fromBuf_TTC_Pat'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V177 = case V5 of 0 -> begin (V6 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V24 = begin (V11 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V23 = begin (V16 = ('dn--un--fromBuf_TTC_Pat'(V0))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V22 = fun (V21) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PAs', V10, V15, V20}} end), V22 end(V17)) end end end end), V23 end(V12)) end end end end), V24 end(V7)) end end end end; 1 -> begin (V25 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V58 = begin (V30 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V57 = begin (V35 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V56 = begin (V40 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V55 = begin (V48 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V45) -> fun (V46) -> ('dn--un--toBuf_TTC_Pat'(V45, V46)) end end, fun (V47) -> ('dn--un--fromBuf_TTC_Pat'(V47)) end}, V0))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V54 = fun (V53) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PCon', V29, V34, V39, V44, V52}} end), V54 end(V49)) end end end end), V55 end(V41)) end end end end), V56 end(V36)) end end end end), V57 end(V31)) end end end end), V58 end(V26)) end end end end; 2 -> begin (V59 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V86 = begin (V64 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V85 = begin (V69 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V84 = begin (V77 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V74) -> fun (V75) -> ('dn--un--toBuf_TTC_Pat'(V74, V75)) end end, fun (V76) -> ('dn--un--fromBuf_TTC_Pat'(V76)) end}, V0))), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V83 = fun (V82) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PTyCon', V63, V68, V73, V81}} end), V83 end(V78)) end end end end), V84 end(V70)) end end end end), V85 end(V65)) end end end end), V86 end(V60)) end end end end; 3 -> begin (V87 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V99 = begin (V92 = ('dn--un--fromBuf_TTC_Constant'(V0))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V98 = fun (V97) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PConst', V91, V96}} end), V98 end(V93)) end end end end), V99 end(V88)) end end end end; 4 -> begin (V100 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V124 = begin (V105 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V106) -> begin (V107 = (V105(V106))), case V107 of {'Prelude.Types.Left', V108} -> {'Prelude.Types.Left', V108}; {'Prelude.Types.Right', V109} -> (begin (V123 = begin (V110 = ('dn--un--fromBuf_TTC_Pat'(V0))), fun (V111) -> begin (V112 = (V110(V111))), case V112 of {'Prelude.Types.Left', V113} -> {'Prelude.Types.Left', V113}; {'Prelude.Types.Right', V114} -> (begin (V122 = begin (V115 = ('dn--un--fromBuf_TTC_Pat'(V0))), fun (V116) -> begin (V117 = (V115(V116))), case V117 of {'Prelude.Types.Left', V118} -> {'Prelude.Types.Left', V118}; {'Prelude.Types.Right', V119} -> (begin (V121 = fun (V120) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PArrow', V104, V109, V114, V119}} end), V121 end(V116)) end end end end), V122 end(V111)) end end end end), V123 end(V106)) end end end end), V124 end(V101)) end end end end; 5 -> begin (V125 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V149 = begin (V130 = ('dn--un--fromBuf_TTC_LazyReason'(V0))), fun (V131) -> begin (V132 = (V130(V131))), case V132 of {'Prelude.Types.Left', V133} -> {'Prelude.Types.Left', V133}; {'Prelude.Types.Right', V134} -> (begin (V148 = begin (V135 = ('dn--un--fromBuf_TTC_Pat'(V0))), fun (V136) -> begin (V137 = (V135(V136))), case V137 of {'Prelude.Types.Left', V138} -> {'Prelude.Types.Left', V138}; {'Prelude.Types.Right', V139} -> (begin (V147 = begin (V140 = ('dn--un--fromBuf_TTC_Pat'(V0))), fun (V141) -> begin (V142 = (V140(V141))), case V142 of {'Prelude.Types.Left', V143} -> {'Prelude.Types.Left', V143}; {'Prelude.Types.Right', V144} -> (begin (V146 = fun (V145) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PDelay', V129, V134, V139, V144}} end), V146 end(V141)) end end end end), V147 end(V136)) end end end end), V148 end(V131)) end end end end), V149 end(V126)) end end end end; 6 -> begin (V150 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V151) -> begin (V152 = (V150(V151))), case V152 of {'Prelude.Types.Left', V153} -> {'Prelude.Types.Left', V153}; {'Prelude.Types.Right', V154} -> (begin (V162 = begin (V155 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V156) -> begin (V157 = (V155(V156))), case V157 of {'Prelude.Types.Left', V158} -> {'Prelude.Types.Left', V158}; {'Prelude.Types.Right', V159} -> (begin (V161 = fun (V160) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PLoc', V154, V159}} end), V161 end(V156)) end end end end), V162 end(V151)) end end end end; 7 -> begin (V163 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V164) -> begin (V165 = (V163(V164))), case V165 of {'Prelude.Types.Left', V166} -> {'Prelude.Types.Left', V166}; {'Prelude.Types.Right', V167} -> (begin (V175 = begin (V168 = ('dn--un--fromBuf_TTC_(Term $vars)'([], V0))), fun (V169) -> begin (V170 = (V168(V169))), case V170 of {'Prelude.Types.Left', V171} -> {'Prelude.Types.Left', V171}; {'Prelude.Types.Right', V172} -> (begin (V174 = fun (V173) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.PUnmatchable', V167, V172}} end), V174 end(V169)) end end end end), V175 end(V164)) end end end end; _ -> fun (V176) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Pat"/utf8>>, V176)) end end), V177 end(V2)) end end end end.
'dn--un--fromBuf_TTC_PartialReason'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V28 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.TT.NotStrictlyPositive'}} end; 1 -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V7) -> fun (V8) -> ('dn--un--toBuf_TTC_Name'(V7, V8)) end end, fun (V9) -> ('dn--un--fromBuf_TTC_Name'(V9)) end}, V0))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', {'Core.TT.BadCall', V14}} end), V16 end(V11)) end end end end; 2 -> begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_Name'(V17, V18)) end end, fun (V19) -> ('dn--un--fromBuf_TTC_Name'(V19)) end}, V0))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V26 = fun (V25) -> {'Prelude.Types.Right', {'Core.TT.RecPath', V24}} end), V26 end(V21)) end end end end; _ -> fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PartialReason"/utf8>>, V27)) end end), V28 end(V2)) end end end end.
'dn--un--fromBuf_TTC_PairNames'(V0) -> begin (V1 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V19 = begin (V6 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V18 = begin (V11 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V17 = fun (V16) -> {'Prelude.Types.Right', {'Core.Options.MkPairNs', V5, V10, V15}} end), V17 end(V12)) end end end end), V18 end(V7)) end end end end), V19 end(V2)) end end end end.
'dn--un--fromBuf_TTC_PMDefInfo'(V0) -> begin (V1 = ('dn--un--fromBuf_TTC_HoleInfo'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V19 = begin (V6 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V18 = begin (V11 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V17 = fun (V16) -> {'Prelude.Types.Right', {'Core.Context.Context.MkPMDefInfo', V5, V10, V15}} end), V17 end(V12)) end end end end), V18 end(V7)) end end end end), V19 end(V2)) end end end end.
'dn--un--fromBuf_TTC_OriginDesc'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V13 = case V5 of 0 -> ('Idris.Idris2.Core.Core':'un--<*>'(fun (V6) -> {'Prelude.Types.Right', fun (V7) -> {'Core.FC.PhysicalIdrSrc', V7} end} end, ('dn--un--fromBuf_TTC_ModuleIdent'(V0)))); 1 -> ('Idris.Idris2.Core.Core':'un--<*>'(fun (V8) -> {'Prelude.Types.Right', fun (V9) -> {'Core.FC.PhysicalPkgSrc', V9} end} end, ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0)))); 2 -> ('Idris.Idris2.Core.Core':'un--<*>'(fun (V10) -> {'Prelude.Types.Right', fun (V11) -> {'Core.FC.Virtual', V11} end} end, ('dn--un--fromBuf_TTC_VirtualIdent'(V0)))); _ -> fun (V12) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"OriginDesc"/utf8>>, V12)) end end), V13 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Namespace'(V0) -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V1, V2)) end end, fun (V3) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V3)) end}, V0))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> V5 end))))(V4)) end.
'dn--un--fromBuf_TTC_NameType'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V35 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.TT.Bound'}} end; 1 -> fun (V7) -> {'Prelude.Types.Right', {'Core.TT.Func'}} end; 2 -> begin (V8 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V20 = begin (V13 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V19 = fun (V18) -> {'Prelude.Types.Right', {'Core.TT.DataCon', V12, V17}} end), V19 end(V14)) end end end end), V20 end(V9)) end end end end; 3 -> begin (V21 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V33 = begin (V26 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V32 = fun (V31) -> {'Prelude.Types.Right', {'Core.TT.TyCon', V25, V30}} end), V32 end(V27)) end end end end), V33 end(V22)) end end end end; _ -> fun (V34) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"NameType"/utf8>>, V34)) end end), V35 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Name'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V119 = case V5 of 0 -> begin (V6 = ('dn--un--fromBuf_TTC_Namespace'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V18 = begin (V11 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V17 = fun (V16) -> {'Prelude.Types.Right', {'Core.Name.NS', V10, V15}} end), V17 end(V12)) end end end end), V18 end(V7)) end end end end; 1 -> begin (V19 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V25 = fun (V24) -> {'Prelude.Types.Right', {'Core.Name.UN', {'Core.Name.Basic', V23}}} end), V25 end(V20)) end end end end; 2 -> begin (V26 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V38 = begin (V31 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V37 = fun (V36) -> {'Prelude.Types.Right', {'Core.Name.MN', V30, V35}} end), V37 end(V32)) end end end end), V38 end(V27)) end end end end; 3 -> begin (V39 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V51 = begin (V44 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V50 = fun (V49) -> {'Prelude.Types.Right', {'Core.Name.PV', V43, V48}} end), V50 end(V45)) end end end end), V51 end(V40)) end end end end; 4 -> begin (V52 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V64 = begin (V57 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V63 = fun (V62) -> {'Prelude.Types.Right', {'Core.Name.DN', V56, V61}} end), V63 end(V58)) end end end end), V64 end(V53)) end end end end; 5 -> begin (V65 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V71 = fun (V70) -> {'Prelude.Types.Right', {'Core.Name.UN', {'Core.Name.Field', V69}}} end), V71 end(V66)) end end end end; 6 -> begin (V78 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V72) -> fun (V73) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V72, V73)) end end, fun (V74) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V74)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V75, V76)) end end, fun (V77) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V77)) end}}, V0))), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V90 = begin (V83 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V84) -> begin (V85 = (V83(V84))), case V85 of {'Prelude.Types.Left', V86} -> {'Prelude.Types.Left', V86}; {'Prelude.Types.Right', V87} -> (begin (V89 = fun (V88) -> {'Prelude.Types.Right', {'Core.Name.Nested', V82, V87}} end), V89 end(V84)) end end end end), V90 end(V79)) end end end end; 7 -> begin (V91 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V103 = begin (V96 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V97) -> begin (V98 = (V96(V97))), case V98 of {'Prelude.Types.Left', V99} -> {'Prelude.Types.Left', V99}; {'Prelude.Types.Right', V100} -> (begin (V102 = fun (V101) -> {'Prelude.Types.Right', {'Core.Name.CaseBlock', V95, V100}} end), V102 end(V97)) end end end end), V103 end(V92)) end end end end; 8 -> begin (V104 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V105) -> begin (V106 = (V104(V105))), case V106 of {'Prelude.Types.Left', V107} -> {'Prelude.Types.Left', V107}; {'Prelude.Types.Right', V108} -> (begin (V116 = begin (V109 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V115 = fun (V114) -> {'Prelude.Types.Right', {'Core.Name.WithBlock', V108, V113}} end), V115 end(V110)) end end end end), V116 end(V105)) end end end end; 9 -> fun (V117) -> {'Prelude.Types.Right', {'Core.Name.UN', {'Core.Name.Underscore'}}} end; _ -> fun (V118) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Name"/utf8>>, V118)) end end), V119 end(V2)) end end end end.
'dn--un--fromBuf_TTC_ModuleIdent'(V0) -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V1, V2)) end end, fun (V3) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V3)) end}, V0))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> V5 end))))(V4)) end.
'dn--un--fromBuf_TTC_LazyReason'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', 0}; 1 -> {'Prelude.Types.Right', 1}; 2 -> {'Prelude.Types.Right', 2}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"LazyReason"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--fromBuf_TTC_InlineOk'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), ((begin (V17 = fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V14, V15, V16)) end end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end((begin (V9 = fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> {'Prelude.Types.Right', (V5(V8))} end end end end end), fun (V10) -> fun (V11) -> ((((V9('erased'))('erased'))(V10))(V11)) end end end(fun (V2) -> case V2 of 1 -> 0; 0 -> 1 end end))))(V1)) end.
'dn--un--fromBuf_TTC_HoleInfo'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V15 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.Context.Context.NotHole'}} end; 1 -> begin (V7 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V13 = fun (V12) -> {'Prelude.Types.Right', {'Core.Context.Context.SolvedHole', V11}} end), V13 end(V8)) end end end end; _ -> fun (V14) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"HoleInfo"/utf8>>, V14)) end end), V15 end(V2)) end end end end.
'dn--un--fromBuf_TTC_GlobalDef'(V0) -> begin (V4 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_CDef'(V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_CDef'(V3)) end}, V0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V224 = begin (V42 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V13) -> fun (V14) -> ('dn--un--toBuf_TTC_Name'(V13, V14)) end end, fun (V15) -> ('dn--un--fromBuf_TTC_Name'(V15)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V16, V17)) end end, fun (V18) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V18)) end}}, V11, V12)) end end, fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('dn--un--toBuf_TTC_Name'(V20, V21)) end end, fun (V22) -> ('dn--un--fromBuf_TTC_Name'(V22)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V23, V24)) end end, fun (V25) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V25)) end}}, V19)) end}, V9, V10)) end end, fun (V26) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('dn--un--toBuf_TTC_Name'(V29, V30)) end end, fun (V31) -> ('dn--un--fromBuf_TTC_Name'(V31)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V32, V33)) end end, fun (V34) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V34)) end}}, V27, V28)) end end, fun (V35) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('dn--un--toBuf_TTC_Name'(V36, V37)) end end, fun (V38) -> ('dn--un--fromBuf_TTC_Name'(V38)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V39, V40)) end end, fun (V41) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V41)) end}}, V35)) end}, V26)) end}, V0))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V223 = begin (V55 = ((begin (V52 = fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V50, V51)) end end end end), fun (V53) -> fun (V54) -> ((((V52('erased'))('erased'))(V53))(V54)) end end end(fun (V47) -> ('Idris.Idris2.Libraries.Data.NameMap':'un--fromList'(V47)) end))(V46))), begin (V56 = ('dn--un--fromBuf_TTC_FC'(V0))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V222 = begin (V61 = ('dn--un--fromBuf_TTC_RigCount'(V0))), fun (V62) -> begin (V63 = (V61(V62))), case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> (begin (V221 = begin (V66 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V67) -> begin (V68 = (V66(V67))), case V68 of {'Prelude.Types.Left', V69} -> {'Prelude.Types.Left', V69}; {'Prelude.Types.Right', V70} -> (begin (V220 = begin (V104 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V75) -> fun (V76) -> ('dn--un--toBuf_TTC_Name'(V75, V76)) end end, fun (V77) -> ('dn--un--fromBuf_TTC_Name'(V77)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V78, V79)) end end, fun (V80) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V80)) end}}, V73, V74)) end end, fun (V81) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V82) -> fun (V83) -> ('dn--un--toBuf_TTC_Name'(V82, V83)) end end, fun (V84) -> ('dn--un--fromBuf_TTC_Name'(V84)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V85, V86)) end end, fun (V87) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V87)) end}}, V81)) end}, V71, V72)) end end, fun (V88) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V89) -> fun (V90) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V91) -> fun (V92) -> ('dn--un--toBuf_TTC_Name'(V91, V92)) end end, fun (V93) -> ('dn--un--fromBuf_TTC_Name'(V93)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V94, V95)) end end, fun (V96) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V96)) end}}, V89, V90)) end end, fun (V97) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V98) -> fun (V99) -> ('dn--un--toBuf_TTC_Name'(V98, V99)) end end, fun (V100) -> ('dn--un--fromBuf_TTC_Name'(V100)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V101, V102)) end end, fun (V103) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V103)) end}}, V97)) end}, V88)) end}, V0))), fun (V105) -> begin (V106 = (V104(V105))), case V106 of {'Prelude.Types.Left', V107} -> {'Prelude.Types.Left', V107}; {'Prelude.Types.Right', V108} -> (begin (V219 = begin (V117 = ((begin (V114 = fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V112, V113)) end end end end), fun (V115) -> fun (V116) -> ((((V114('erased'))('erased'))(V115))(V116)) end end end(fun (V109) -> ('Idris.Idris2.Libraries.Data.NameMap':'un--fromList'(V109)) end))(V108))), begin (V118 = ('dn--un--fromBuf_TTC_Def'(V0))), fun (V119) -> begin (V120 = (V118(V119))), case V120 of {'Prelude.Types.Left', V121} -> {'Prelude.Types.Left', V121}; {'Prelude.Types.Right', V122} -> (begin (V218 = case ('Idris.Idris2.Core.Name':'un--isUserName'(V70)) of 1 -> begin (V123 = ('dn--un--fromBuf_TTC_(Term $vars)'([], V0))), fun (V124) -> begin (V125 = (V123(V124))), case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> (begin (V216 = begin (V131 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V128) -> fun (V129) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V128, V129)) end end, fun (V130) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V130)) end}, V0))), fun (V132) -> begin (V133 = (V131(V132))), case V133 of {'Prelude.Types.Left', V134} -> {'Prelude.Types.Left', V134}; {'Prelude.Types.Right', V135} -> (begin (V215 = begin (V139 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V136, V137)) end end, fun (V138) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V138)) end}, V0))), fun (V140) -> begin (V141 = (V139(V140))), case V141 of {'Prelude.Types.Left', V142} -> {'Prelude.Types.Left', V142}; {'Prelude.Types.Right', V143} -> (begin (V214 = begin (V147 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V144, V145)) end end, fun (V146) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V146)) end}, V0))), fun (V148) -> begin (V149 = (V147(V148))), case V149 of {'Prelude.Types.Left', V150} -> {'Prelude.Types.Left', V150}; {'Prelude.Types.Right', V151} -> (begin (V213 = begin (V155 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V152) -> fun (V153) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V152, V153)) end end, fun (V154) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V154)) end}, V0))), fun (V156) -> begin (V157 = (V155(V156))), case V157 of {'Prelude.Types.Left', V158} -> {'Prelude.Types.Left', V158}; {'Prelude.Types.Right', V159} -> (begin (V212 = begin (V163 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V160) -> fun (V161) -> ('dn--un--toBuf_TTC_Name'(V160, V161)) end end, fun (V162) -> ('dn--un--fromBuf_TTC_Name'(V162)) end}, V0))), fun (V164) -> begin (V165 = (V163(V164))), case V165 of {'Prelude.Types.Left', V166} -> {'Prelude.Types.Left', V166}; {'Prelude.Types.Right', V167} -> (begin (V211 = begin (V168 = ('dn--un--fromBuf_TTC_Visibility'(V0))), fun (V169) -> begin (V170 = (V168(V169))), case V170 of {'Prelude.Types.Left', V171} -> {'Prelude.Types.Left', V171}; {'Prelude.Types.Right', V172} -> (begin (V210 = begin (V173 = ('dn--un--fromBuf_TTC_Totality'(V0))), fun (V174) -> begin (V175 = (V173(V174))), case V175 of {'Prelude.Types.Left', V176} -> {'Prelude.Types.Left', V176}; {'Prelude.Types.Right', V177} -> (begin (V209 = begin (V181 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V178) -> fun (V179) -> ('dn--un--toBuf_TTC_DefFlag'(V178, V179)) end end, fun (V180) -> ('dn--un--fromBuf_TTC_DefFlag'(V180)) end}, V0))), fun (V182) -> begin (V183 = (V181(V182))), case V183 of {'Prelude.Types.Left', V184} -> {'Prelude.Types.Left', V184}; {'Prelude.Types.Right', V185} -> (begin (V208 = begin (V186 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V187) -> begin (V188 = (V186(V187))), case V188 of {'Prelude.Types.Left', V189} -> {'Prelude.Types.Left', V189}; {'Prelude.Types.Right', V190} -> (begin (V207 = begin (V191 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V192) -> begin (V193 = (V191(V192))), case V193 of {'Prelude.Types.Left', V194} -> {'Prelude.Types.Left', V194}; {'Prelude.Types.Right', V195} -> (begin (V206 = begin (V199 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V196) -> fun (V197) -> ('dn--un--toBuf_TTC_SCCall'(V196, V197)) end end, fun (V198) -> ('dn--un--fromBuf_TTC_SCCall'(V198)) end}, V0))), fun (V200) -> begin (V201 = (V199(V200))), case V201 of {'Prelude.Types.Left', V202} -> {'Prelude.Types.Left', V202}; {'Prelude.Types.Right', V203} -> (begin (V205 = fun (V204) -> {'Prelude.Types.Right', {'Core.Context.Context.MkGlobalDef', V60, V70, V127, V135, V143, V151, V159, V65, V167, V172, V177, V185, V117, V55, V190, V195, 1, V122, V8, {'Prelude.Types.Nothing'}, V203, {'Prelude.Types.Nothing'}}} end), V205 end(V200)) end end end end), V206 end(V192)) end end end end), V207 end(V187)) end end end end), V208 end(V182)) end end end end), V209 end(V174)) end end end end), V210 end(V169)) end end end end), V211 end(V164)) end end end end), V212 end(V156)) end end end end), V213 end(V148)) end end end end), V214 end(V140)) end end end end), V215 end(V132)) end end end end), V216 end(V124)) end end end end; 0 -> fun (V217) -> {'Prelude.Types.Right', {'Core.Context.Context.MkGlobalDef', V60, V70, {'Core.TT.Erased', V60, {'Core.TT.Placeholder'}}, [], [], [], [], V65, [], 2, ('Idris.Idris2.Core.TT':'un--unchecked'()), [], V117, V55, 0, 0, 1, V122, V8, {'Prelude.Types.Nothing'}, [], {'Prelude.Types.Nothing'}}} end end), V218 end(V119)) end end end end end), V219 end(V105)) end end end end), V220 end(V67)) end end end end), V221 end(V62)) end end end end), V222 end(V57)) end end end end end), V223 end(V43)) end end end end), V224 end(V5)) end end end end.
'dn--un--fromBuf_TTC_FC'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V70 = case V5 of 0 -> begin (V6 = ('dn--un--fromBuf_TTC_OriginDesc'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V36 = begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V11, V12)) end end, fun (V13) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V13)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V14, V15)) end end, fun (V16) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V16)) end}}, V0))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V35 = begin (V28 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V22, V23)) end end, fun (V24) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V24)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V25, V26)) end end, fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V27)) end}}, V0))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V34 = fun (V33) -> {'Prelude.Types.Right', {'Core.FC.MkFC', V10, V21, V32}} end), V34 end(V29)) end end end end), V35 end(V18)) end end end end), V36 end(V7)) end end end end; 1 -> fun (V37) -> {'Prelude.Types.Right', {'Core.FC.EmptyFC'}} end; 2 -> begin (V38 = ('dn--un--fromBuf_TTC_OriginDesc'(V0))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V68 = begin (V49 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V43, V44)) end end, fun (V45) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V45)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V46, V47)) end end, fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V48)) end}}, V0))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V67 = begin (V60 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V54, V55)) end end, fun (V56) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V56)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V57, V58)) end end, fun (V59) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V59)) end}}, V0))), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V66 = fun (V65) -> {'Prelude.Types.Right', {'Core.FC.MkVirtualFC', V42, V53, V64}} end), V66 end(V61)) end end end end), V67 end(V50)) end end end end), V68 end(V39)) end end end end; _ -> fun (V69) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"FC"/utf8>>, V69)) end end), V70 end(V2)) end end end end.
'dn--un--fromBuf_TTC_DefFlag'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V38 = case V5 of 2 -> fun (V6) -> {'Prelude.Types.Right', {'Core.Context.Context.Inline'}} end; 3 -> fun (V7) -> {'Prelude.Types.Right', {'Core.Context.Context.Invertible'}} end; 4 -> fun (V8) -> {'Prelude.Types.Right', {'Core.Context.Context.Overloadable'}} end; 5 -> fun (V9) -> {'Prelude.Types.Right', {'Core.Context.Context.TCInline'}} end; 6 -> begin (V10 = ('dn--un--fromBuf_TTC_TotalReq'(V0))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', {'Core.Context.Context.SetTotal', V14}} end), V16 end(V11)) end end end end; 7 -> fun (V17) -> {'Prelude.Types.Right', {'Core.Context.Context.BlockedHint'}} end; 8 -> fun (V18) -> {'Prelude.Types.Right', {'Core.Context.Context.Macro'}} end; 9 -> fun (V19) -> {'Prelude.Types.Right', {'Core.Context.Context.PartialEval', []}} end; 10 -> fun (V20) -> {'Prelude.Types.Right', {'Core.Context.Context.AllGuarded'}} end; 11 -> begin (V21 = ('dn--un--fromBuf_TTC_ConInfo'(V0))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V27 = fun (V26) -> {'Prelude.Types.Right', {'Core.Context.Context.ConType', V25}} end), V27 end(V22)) end end end end; 12 -> begin (V28 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V34 = fun (V33) -> {'Prelude.Types.Right', {'Core.Context.Context.Identity', V32}} end), V34 end(V29)) end end end end; 13 -> fun (V35) -> {'Prelude.Types.Right', {'Core.Context.Context.NoInline'}} end; 15 -> fun (V36) -> {'Prelude.Types.Right', {'Core.Context.Context.Deprecate'}} end; _ -> fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"DefFlag"/utf8>>, V37)) end end), V38 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Def'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V327 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.Context.Context.None'}} end; 1 -> begin (V7 = ('dn--un--fromBuf_TTC_PMDefInfo'(V0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V135 = begin (V15 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V12) -> fun (V13) -> ('dn--un--toBuf_TTC_Name'(V12, V13)) end end, fun (V14) -> ('dn--un--fromBuf_TTC_Name'(V14)) end}, V0))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V134 = begin (V20 = ('dn--un--fromBuf_TTC_(CaseTree $vars)'(V19, V0))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V133 = begin (V126 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_((DPair $a) $p)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('dn--un--toBuf_TTC_Name'(V29, V30)) end end, fun (V31) -> ('dn--un--fromBuf_TTC_Name'(V31)) end}, V27, V28)) end end, fun (V32) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V33) -> fun (V34) -> ('dn--un--toBuf_TTC_Name'(V33, V34)) end end, fun (V35) -> ('dn--un--fromBuf_TTC_Name'(V35)) end}, V32)) end}, fun (V36) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V39) -> fun (V40) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V36, V39, V40)) end end, fun (V41) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V36, V41)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V44) -> fun (V45) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V44, V45)) end end, fun (V46) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V46)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V47, V48)) end end, fun (V49) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V49)) end}}, V42, V43)) end end, fun (V50) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V51) -> fun (V52) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V51, V52)) end end, fun (V53) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V53)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V54) -> fun (V55) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V54, V55)) end end, fun (V56) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V56)) end}}, V50)) end}}, V37, V38)) end end, fun (V57) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V58) -> fun (V59) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V36, V58, V59)) end end, fun (V60) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V36, V60)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V63) -> fun (V64) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V63, V64)) end end, fun (V65) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V65)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V66) -> fun (V67) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V66, V67)) end end, fun (V68) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V68)) end}}, V61, V62)) end end, fun (V69) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V70) -> fun (V71) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V70, V71)) end end, fun (V72) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V72)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V73) -> fun (V74) -> ('dn--un--toBuf_TTC_(Term $vars)'(V36, V73, V74)) end end, fun (V75) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V36, V75)) end}}, V69)) end}}, V57)) end} end}, V25, V26)) end end, fun (V76) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_((DPair $a) $p)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V79) -> fun (V80) -> ('dn--un--toBuf_TTC_Name'(V79, V80)) end end, fun (V81) -> ('dn--un--fromBuf_TTC_Name'(V81)) end}, V77, V78)) end end, fun (V82) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V83) -> fun (V84) -> ('dn--un--toBuf_TTC_Name'(V83, V84)) end end, fun (V85) -> ('dn--un--fromBuf_TTC_Name'(V85)) end}, V82)) end}, fun (V86) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V87) -> fun (V88) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V89) -> fun (V90) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V86, V89, V90)) end end, fun (V91) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V86, V91)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V94) -> fun (V95) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V94, V95)) end end, fun (V96) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V96)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V97) -> fun (V98) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V97, V98)) end end, fun (V99) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V99)) end}}, V92, V93)) end end, fun (V100) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V101) -> fun (V102) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V101, V102)) end end, fun (V103) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V103)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V104) -> fun (V105) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V104, V105)) end end, fun (V106) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V106)) end}}, V100)) end}}, V87, V88)) end end, fun (V107) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V108) -> fun (V109) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V86, V108, V109)) end end, fun (V110) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V86, V110)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V111) -> fun (V112) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V113) -> fun (V114) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V113, V114)) end end, fun (V115) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V115)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V116) -> fun (V117) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V116, V117)) end end, fun (V118) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V118)) end}}, V111, V112)) end end, fun (V119) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V120) -> fun (V121) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V120, V121)) end end, fun (V122) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V122)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V123) -> fun (V124) -> ('dn--un--toBuf_TTC_(Term $vars)'(V86, V123, V124)) end end, fun (V125) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V86, V125)) end}}, V119)) end}}, V107)) end} end}, V76)) end}, V0))), fun (V127) -> begin (V128 = (V126(V127))), case V128 of {'Prelude.Types.Left', V129} -> {'Prelude.Types.Left', V129}; {'Prelude.Types.Right', V130} -> (begin (V132 = fun (V131) -> {'Prelude.Types.Right', {'Core.Context.Context.PMDef', V11, V19, V24, {'Core.Case.CaseTree.Unmatched', <<""/utf8>>}, V130}} end), V132 end(V127)) end end end end), V133 end(V21)) end end end end), V134 end(V16)) end end end end), V135 end(V8)) end end end end; 2 -> begin (V136 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V142 = fun (V141) -> {'Prelude.Types.Right', {'Core.Context.Context.ExternDef', V140}} end), V142 end(V137)) end end end end; 3 -> begin (V143 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V158 = begin (V151 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V148, V149)) end end, fun (V150) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V150)) end}, V0))), fun (V152) -> begin (V153 = (V151(V152))), case V153 of {'Prelude.Types.Left', V154} -> {'Prelude.Types.Left', V154}; {'Prelude.Types.Right', V155} -> (begin (V157 = fun (V156) -> {'Prelude.Types.Right', {'Core.Context.Context.ForeignDef', V147, V155}} end), V157 end(V152)) end end end end), V158 end(V144)) end end end end; 4 -> begin (V159 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V160) -> begin (V161 = (V159(V160))), case V161 of {'Prelude.Types.Left', V162} -> {'Prelude.Types.Left', V162}; {'Prelude.Types.Right', V163} -> (begin (V192 = begin (V164 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V165) -> begin (V166 = (V164(V165))), case V166 of {'Prelude.Types.Left', V167} -> {'Prelude.Types.Left', V167}; {'Prelude.Types.Right', V168} -> (begin (V191 = begin (V184 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V169) -> fun (V170) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V171) -> fun (V172) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V171, V172)) end end, fun (V173) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V173)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V174, V175)) end end, fun (V176) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V176)) end}}, V169, V170)) end end, fun (V177) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V178, V179)) end end, fun (V180) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V180)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V181) -> fun (V182) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V181, V182)) end end, fun (V183) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V183)) end}}, V177)) end}, V0))), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V190 = fun (V189) -> {'Prelude.Types.Right', {'Core.Context.Context.DCon', V163, V168, V188}} end), V190 end(V185)) end end end end), V191 end(V165)) end end end end), V192 end(V160)) end end end end; 5 -> begin (V193 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V194) -> begin (V195 = (V193(V194))), case V195 of {'Prelude.Types.Left', V196} -> {'Prelude.Types.Left', V196}; {'Prelude.Types.Right', V197} -> (begin (V262 = begin (V198 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V199) -> begin (V200 = (V198(V199))), case V200 of {'Prelude.Types.Left', V201} -> {'Prelude.Types.Left', V201}; {'Prelude.Types.Right', V202} -> (begin (V261 = begin (V206 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V203) -> fun (V204) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V203, V204)) end end, fun (V205) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V205)) end}, V0))), fun (V207) -> begin (V208 = (V206(V207))), case V208 of {'Prelude.Types.Left', V209} -> {'Prelude.Types.Left', V209}; {'Prelude.Types.Right', V210} -> (begin (V260 = begin (V214 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V211) -> fun (V212) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V211, V212)) end end, fun (V213) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V213)) end}, V0))), fun (V215) -> begin (V216 = (V214(V215))), case V216 of {'Prelude.Types.Left', V217} -> {'Prelude.Types.Left', V217}; {'Prelude.Types.Right', V218} -> (begin (V259 = begin (V219 = ('dn--un--fromBuf_TTC_TypeFlags'(V0))), fun (V220) -> begin (V221 = (V219(V220))), case V221 of {'Prelude.Types.Left', V222} -> {'Prelude.Types.Left', V222}; {'Prelude.Types.Right', V223} -> (begin (V258 = begin (V227 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V224) -> fun (V225) -> ('dn--un--toBuf_TTC_Name'(V224, V225)) end end, fun (V226) -> ('dn--un--fromBuf_TTC_Name'(V226)) end}, V0))), fun (V228) -> begin (V229 = (V227(V228))), case V229 of {'Prelude.Types.Left', V230} -> {'Prelude.Types.Left', V230}; {'Prelude.Types.Right', V231} -> (begin (V257 = begin (V235 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V232) -> fun (V233) -> ('dn--un--toBuf_TTC_Name'(V232, V233)) end end, fun (V234) -> ('dn--un--fromBuf_TTC_Name'(V234)) end}, V0))), fun (V236) -> begin (V237 = (V235(V236))), case V237 of {'Prelude.Types.Left', V238} -> {'Prelude.Types.Left', V238}; {'Prelude.Types.Right', V239} -> (begin (V256 = begin (V249 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V240) -> fun (V241) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V242) -> fun (V243) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V242, V243)) end end, fun (V244) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V244)) end}, V240, V241)) end end, fun (V245) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V246) -> fun (V247) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V246, V247)) end end, fun (V248) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V248)) end}, V245)) end}, V0))), fun (V250) -> begin (V251 = (V249(V250))), case V251 of {'Prelude.Types.Left', V252} -> {'Prelude.Types.Left', V252}; {'Prelude.Types.Right', V253} -> (begin (V255 = fun (V254) -> {'Prelude.Types.Right', {'Core.Context.Context.TCon', V197, V202, V210, V218, V223, V231, V239, V253}} end), V255 end(V250)) end end end end), V256 end(V236)) end end end end), V257 end(V228)) end end end end), V258 end(V220)) end end end end), V259 end(V215)) end end end end), V260 end(V207)) end end end end), V261 end(V199)) end end end end), V262 end(V194)) end end end end; 6 -> begin (V263 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V264) -> begin (V265 = (V263(V264))), case V265 of {'Prelude.Types.Left', V266} -> {'Prelude.Types.Left', V266}; {'Prelude.Types.Right', V267} -> (begin (V275 = begin (V268 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V269) -> begin (V270 = (V268(V269))), case V270 of {'Prelude.Types.Left', V271} -> {'Prelude.Types.Left', V271}; {'Prelude.Types.Right', V272} -> (begin (V274 = fun (V273) -> {'Prelude.Types.Right', {'Core.Context.Context.Hole', V267, ('Idris.Idris2.Core.Context.Context':'un--holeInit'(V272))}} end), V274 end(V269)) end end end end), V275 end(V264)) end end end end; 7 -> begin (V276 = ('dn--un--fromBuf_TTC_RigCount'(V0))), fun (V277) -> begin (V278 = (V276(V277))), case V278 of {'Prelude.Types.Left', V279} -> {'Prelude.Types.Left', V279}; {'Prelude.Types.Right', V280} -> (begin (V294 = begin (V281 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V282) -> begin (V283 = (V281(V282))), case V283 of {'Prelude.Types.Left', V284} -> {'Prelude.Types.Left', V284}; {'Prelude.Types.Right', V285} -> (begin (V293 = begin (V286 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V287) -> begin (V288 = (V286(V287))), case V288 of {'Prelude.Types.Left', V289} -> {'Prelude.Types.Left', V289}; {'Prelude.Types.Right', V290} -> (begin (V292 = fun (V291) -> {'Prelude.Types.Right', {'Core.Context.Context.BySearch', V280, V285, V290}} end), V292 end(V287)) end end end end), V293 end(V282)) end end end end), V294 end(V277)) end end end end; 8 -> begin (V295 = ('dn--un--fromBuf_TTC_(Term $vars)'([], V0))), fun (V296) -> begin (V297 = (V295(V296))), case V297 of {'Prelude.Types.Left', V298} -> {'Prelude.Types.Left', V298}; {'Prelude.Types.Right', V299} -> (begin (V316 = begin (V300 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V301) -> begin (V302 = (V300(V301))), case V302 of {'Prelude.Types.Left', V303} -> {'Prelude.Types.Left', V303}; {'Prelude.Types.Right', V304} -> (begin (V315 = begin (V308 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V305) -> fun (V306) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V305, V306)) end end, fun (V307) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V307)) end}, V0))), fun (V309) -> begin (V310 = (V308(V309))), case V310 of {'Prelude.Types.Left', V311} -> {'Prelude.Types.Left', V311}; {'Prelude.Types.Right', V312} -> (begin (V314 = fun (V313) -> {'Prelude.Types.Right', {'Core.Context.Context.Guess', V299, V304, V312}} end), V314 end(V309)) end end end end), V315 end(V301)) end end end end), V316 end(V296)) end end end end; 9 -> fun (V317) -> {'Prelude.Types.Right', {'Core.Context.Context.ImpBind'}} end; 10 -> fun (V318) -> {'Prelude.Types.Right', {'Core.Context.Context.Delayed'}} end; 11 -> begin (V319 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Integer'(V0))), fun (V320) -> begin (V321 = (V319(V320))), case V321 of {'Prelude.Types.Left', V322} -> {'Prelude.Types.Left', V322}; {'Prelude.Types.Right', V323} -> (begin (V325 = fun (V324) -> {'Prelude.Types.Right', {'Core.Context.Context.UniverseLevel', V323}} end), V325 end(V320)) end end end end; _ -> fun (V326) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Def"/utf8>>, V326)) end end), V327 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Covering'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V28 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.TT.IsCovering'}} end; 1 -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V7) -> fun (V8) -> ('dn--un--toBuf_TTC_(Term $vars)'([], V7, V8)) end end, fun (V9) -> ('dn--un--fromBuf_TTC_(Term $vars)'([], V9)) end}, V0))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', {'Core.TT.MissingCases', V14}} end), V16 end(V11)) end end end end; 2 -> begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_Name'(V17, V18)) end end, fun (V19) -> ('dn--un--fromBuf_TTC_Name'(V19)) end}, V0))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V26 = fun (V25) -> {'Prelude.Types.Right', {'Core.TT.NonCoveringCall', V24}} end), V26 end(V21)) end end end end; _ -> fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Covering"/utf8>>, V27)) end end), V28 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Constant'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V106 = case V5 of 0 -> begin (V6 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V12 = fun (V11) -> {'Prelude.Types.Right', {'Core.TT.I', V10}} end), V12 end(V7)) end end end end; 1 -> begin (V13 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int8'(V0))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V19 = fun (V18) -> {'Prelude.Types.Right', {'Core.TT.I8', V17}} end), V19 end(V14)) end end end end; 2 -> begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int16'(V0))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V26 = fun (V25) -> {'Prelude.Types.Right', {'Core.TT.I16', V24}} end), V26 end(V21)) end end end end; 3 -> begin (V27 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int32'(V0))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V33 = fun (V32) -> {'Prelude.Types.Right', {'Core.TT.I32', V31}} end), V33 end(V28)) end end end end; 4 -> begin (V34 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int64'(V0))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V40 = fun (V39) -> {'Prelude.Types.Right', {'Core.TT.I64', V38}} end), V40 end(V35)) end end end end; 5 -> begin (V41 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Integer'(V0))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V47 = fun (V46) -> {'Prelude.Types.Right', {'Core.TT.BI', V45}} end), V47 end(V42)) end end end end; 6 -> begin (V48 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bits8'(V0))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V54 = fun (V53) -> {'Prelude.Types.Right', {'Core.TT.B8', V52}} end), V54 end(V49)) end end end end; 7 -> begin (V55 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bits16'(V0))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V61 = fun (V60) -> {'Prelude.Types.Right', {'Core.TT.B16', V59}} end), V61 end(V56)) end end end end; 8 -> begin (V62 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bits32'(V0))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V68 = fun (V67) -> {'Prelude.Types.Right', {'Core.TT.B32', V66}} end), V68 end(V63)) end end end end; 9 -> begin (V69 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bits64'(V0))), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V75 = fun (V74) -> {'Prelude.Types.Right', {'Core.TT.B64', V73}} end), V75 end(V70)) end end end end; 10 -> begin (V76 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V77) -> begin (V78 = (V76(V77))), case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> (begin (V82 = fun (V81) -> {'Prelude.Types.Right', {'Core.TT.Str', V80}} end), V82 end(V77)) end end end end; 11 -> begin (V83 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Char'(V0))), fun (V84) -> begin (V85 = (V83(V84))), case V85 of {'Prelude.Types.Left', V86} -> {'Prelude.Types.Left', V86}; {'Prelude.Types.Right', V87} -> (begin (V89 = fun (V88) -> {'Prelude.Types.Right', {'Core.TT.Ch', V87}} end), V89 end(V84)) end end end end; 12 -> begin (V90 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Double'(V0))), fun (V91) -> begin (V92 = (V90(V91))), case V92 of {'Prelude.Types.Left', V93} -> {'Prelude.Types.Left', V93}; {'Prelude.Types.Right', V94} -> (begin (V96 = fun (V95) -> {'Prelude.Types.Right', {'Core.TT.Db', V94}} end), V96 end(V91)) end end end end; 13 -> begin (V97 = ('dn--un--fromBuf_TTC_PrimType'(V0))), fun (V98) -> begin (V99 = (V97(V98))), case V99 of {'Prelude.Types.Left', V100} -> {'Prelude.Types.Left', V100}; {'Prelude.Types.Right', V101} -> (begin (V103 = fun (V102) -> {'Prelude.Types.Right', {'Core.TT.PrT', V101}} end), V103 end(V98)) end end end end; 14 -> fun (V104) -> {'Prelude.Types.Right', {'Core.TT.WorldVal'}} end; _ -> fun (V105) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Constant"/utf8>>, V105)) end end), V106 end(V2)) end end end end.
'dn--un--fromBuf_TTC_ConInfo'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V24 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.CompileExpr.DATACON'}} end; 1 -> fun (V7) -> {'Prelude.Types.Right', {'Core.CompileExpr.TYCON'}} end; 2 -> fun (V8) -> {'Prelude.Types.Right', {'Core.CompileExpr.NIL'}} end; 3 -> fun (V9) -> {'Prelude.Types.Right', {'Core.CompileExpr.CONS'}} end; 4 -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', {'Core.CompileExpr.ENUM', V14}} end), V16 end(V11)) end end end end; 5 -> fun (V17) -> {'Prelude.Types.Right', {'Core.CompileExpr.NOTHING'}} end; 6 -> fun (V18) -> {'Prelude.Types.Right', {'Core.CompileExpr.JUST'}} end; 7 -> fun (V19) -> {'Prelude.Types.Right', {'Core.CompileExpr.RECORD'}} end; 8 -> fun (V20) -> {'Prelude.Types.Right', {'Core.CompileExpr.ZERO'}} end; 9 -> fun (V21) -> {'Prelude.Types.Right', {'Core.CompileExpr.SUCC'}} end; 10 -> fun (V22) -> {'Prelude.Types.Right', {'Core.CompileExpr.UNIT'}} end; _ -> fun (V23) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"ConInfo"/utf8>>, V23)) end end), V24 end(V2)) end end end end.
'dn--un--fromBuf_TTC_CG'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V22 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.Options.Chez'}} end; 1 -> fun (V7) -> {'Prelude.Types.Right', {'Core.Options.ChezSep'}} end; 2 -> fun (V8) -> {'Prelude.Types.Right', {'Core.Options.Racket'}} end; 3 -> fun (V9) -> {'Prelude.Types.Right', {'Core.Options.Gambit'}} end; 4 -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', {'Core.Options.Other', V14}} end), V16 end(V11)) end end end end; 5 -> fun (V17) -> {'Prelude.Types.Right', {'Core.Options.Node'}} end; 6 -> fun (V18) -> {'Prelude.Types.Right', {'Core.Options.Javascript'}} end; 7 -> fun (V19) -> {'Prelude.Types.Right', {'Core.Options.RefC'}} end; 8 -> fun (V20) -> {'Prelude.Types.Right', {'Core.Options.VMCodeInterp'}} end; _ -> fun (V21) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"CG"/utf8>>, V21)) end end), V22 end(V2)) end end end end.
'dn--un--fromBuf_TTC_CFType'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V90 = case V5 of 0 -> fun (V6) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFUnit'}} end; 1 -> fun (V7) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFInt'}} end; 2 -> fun (V8) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFUnsigned8'}} end; 3 -> fun (V9) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFUnsigned16'}} end; 4 -> fun (V10) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFUnsigned32'}} end; 5 -> fun (V11) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFUnsigned64'}} end; 6 -> fun (V12) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFString'}} end; 7 -> fun (V13) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFDouble'}} end; 8 -> fun (V14) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFChar'}} end; 9 -> fun (V15) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFPtr'}} end; 10 -> fun (V16) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFWorld'}} end; 11 -> begin (V17 = ('dn--un--fromBuf_TTC_CFType'(V0))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V29 = begin (V22 = ('dn--un--fromBuf_TTC_CFType'(V0))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V28 = fun (V27) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFFun', V21, V26}} end), V28 end(V23)) end end end end), V29 end(V18)) end end end end; 12 -> begin (V30 = ('dn--un--fromBuf_TTC_CFType'(V0))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V36 = fun (V35) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFIORes', V34}} end), V36 end(V31)) end end end end; 13 -> begin (V37 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V0))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V64 = begin (V57 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V44, V45)) end end, fun (V46) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V46)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('dn--un--toBuf_TTC_CFType'(V47, V48)) end end, fun (V49) -> ('dn--un--fromBuf_TTC_CFType'(V49)) end}}, V42, V43)) end end, fun (V50) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V51, V52)) end end, fun (V53) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V53)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V54) -> fun (V55) -> ('dn--un--toBuf_TTC_CFType'(V54, V55)) end end, fun (V56) -> ('dn--un--fromBuf_TTC_CFType'(V56)) end}}, V50)) end}, V0))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V63 = fun (V62) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFStruct', V41, V61}} end), V63 end(V58)) end end end end), V64 end(V38)) end end end end; 14 -> begin (V65 = ('dn--un--fromBuf_TTC_Name'(V0))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V80 = begin (V73 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V70) -> fun (V71) -> ('dn--un--toBuf_TTC_CFType'(V70, V71)) end end, fun (V72) -> ('dn--un--fromBuf_TTC_CFType'(V72)) end}, V0))), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V79 = fun (V78) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFUser', V69, V77}} end), V79 end(V74)) end end end end), V80 end(V66)) end end end end; 15 -> fun (V81) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFGCPtr'}} end; 16 -> fun (V82) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFBuffer'}} end; 17 -> fun (V83) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFInt8'}} end; 18 -> fun (V84) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFInt16'}} end; 19 -> fun (V85) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFInt32'}} end; 20 -> fun (V86) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFInt64'}} end; 21 -> fun (V87) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFForeignObj'}} end; 22 -> fun (V88) -> {'Prelude.Types.Right', {'Core.CompileExpr.CFInteger'}} end; _ -> fun (V89) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"CFType"/utf8>>, V89)) end end), V90 end(V2)) end end end end.
'dn--un--fromBuf_TTC_CDef'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V80 = case V5 of 0 -> begin (V9 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V6) -> fun (V7) -> ('dn--un--toBuf_TTC_Name'(V6, V7)) end end, fun (V8) -> ('dn--un--fromBuf_TTC_Name'(V8)) end}, V0))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V21 = begin (V14 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V13, V0))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V20 = fun (V19) -> {'Prelude.Types.Right', {'Core.CompileExpr.MkFun', V13, V18}} end), V20 end(V15)) end end end end), V21 end(V10)) end end end end; 1 -> begin (V25 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V22, V23)) end end, fun (V24) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V24)) end}, V0))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V46 = begin (V30 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V0))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V45 = begin (V38 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V35, V36)) end end, fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V37)) end}, V0))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V44 = fun (V43) -> {'Prelude.Types.Right', {'Core.CompileExpr.MkCon', V29, V34, V42}} end), V44 end(V39)) end end end end), V45 end(V31)) end end end end), V46 end(V26)) end end end end; 2 -> begin (V50 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V47, V48)) end end, fun (V49) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V49)) end}, V0))), fun (V51) -> begin (V52 = (V50(V51))), case V52 of {'Prelude.Types.Left', V53} -> {'Prelude.Types.Left', V53}; {'Prelude.Types.Right', V54} -> (begin (V71 = begin (V58 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V55) -> fun (V56) -> ('dn--un--toBuf_TTC_CFType'(V55, V56)) end end, fun (V57) -> ('dn--un--fromBuf_TTC_CFType'(V57)) end}, V0))), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V70 = begin (V63 = ('dn--un--fromBuf_TTC_CFType'(V0))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V69 = fun (V68) -> {'Prelude.Types.Right', {'Core.CompileExpr.MkForeign', V54, V62, V67}} end), V69 end(V64)) end end end end), V70 end(V59)) end end end end), V71 end(V51)) end end end end; 3 -> begin (V72 = ('dn--un--fromBuf_TTC_(CExp $vars)'([], V0))), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V78 = fun (V77) -> {'Prelude.Types.Right', {'Core.CompileExpr.MkError', V76}} end), V78 end(V73)) end end end end; _ -> fun (V79) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"CDef"/utf8>>, V79)) end end), V80 end(V2)) end end end end.
'dn--un--fromBuf_TTC_(Term $vars)'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V204 = case V6 of 0 -> begin (V10 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V7, V8)) end end, fun (V9) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V9)) end}, V1))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V31 = begin (V15 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V1))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V30 = begin (V23 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V20) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Term"/utf8>>, V20)) end end, fun () -> fun (V21) -> fun (V22) -> {'Prelude.Types.Right', V21} end end end, ('un--getName'(V19, V0))))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V29 = fun (V28) -> {'Prelude.Types.Right', {'Core.TT.Local', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V14, V19}} end), V29 end(V24)) end end end end), V30 end(V16)) end end end end), V31 end(V11)) end end end end; 1 -> begin (V32 = ('dn--un--fromBuf_TTC_NameType'(V1))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V44 = begin (V37 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V43 = fun (V42) -> {'Prelude.Types.Right', {'Core.TT.Ref', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V36, V41}} end), V43 end(V38)) end end end end), V44 end(V33)) end end end end; 2 -> begin (V45 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V60 = begin (V53 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V50, V51)) end end, fun (V52) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V52)) end}, V1))), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V59 = fun (V58) -> {'Prelude.Types.Right', {'Core.TT.Meta', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V49, 0, V57}} end), V59 end(V54)) end end end end), V60 end(V46)) end end end end; 3 -> begin (V61 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V62) -> begin (V63 = (V61(V62))), case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> (begin (V79 = begin (V66 = ('dn--un--fromBuf_TTC_(Binder (Term $vars))'(V0, V1))), fun (V67) -> begin (V68 = (V66(V67))), case V68 of {'Prelude.Types.Left', V69} -> {'Prelude.Types.Left', V69}; {'Prelude.Types.Right', V70} -> (begin (V78 = begin (V71 = ('dn--un--fromBuf_TTC_(Term $vars)'([V65 | V0], V1))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V77 = fun (V76) -> {'Prelude.Types.Right', {'Core.TT.Bind', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V65, V70, V75}} end), V77 end(V72)) end end end end), V78 end(V67)) end end end end), V79 end(V62)) end end end end; 4 -> begin (V80 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V92 = begin (V85 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V86) -> begin (V87 = (V85(V86))), case V87 of {'Prelude.Types.Left', V88} -> {'Prelude.Types.Left', V88}; {'Prelude.Types.Right', V89} -> (begin (V91 = fun (V90) -> {'Prelude.Types.Right', {'Core.TT.App', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V84, V89}} end), V91 end(V86)) end end end end), V92 end(V81)) end end end end; 5 -> begin (V93 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V94) -> begin (V95 = (V93(V94))), case V95 of {'Prelude.Types.Left', V96} -> {'Prelude.Types.Left', V96}; {'Prelude.Types.Right', V97} -> (begin (V111 = begin (V98 = ('dn--un--fromBuf_TTC_UseSide'(V1))), fun (V99) -> begin (V100 = (V98(V99))), case V100 of {'Prelude.Types.Left', V101} -> {'Prelude.Types.Left', V101}; {'Prelude.Types.Right', V102} -> (begin (V110 = begin (V103 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V104) -> begin (V105 = (V103(V104))), case V105 of {'Prelude.Types.Left', V106} -> {'Prelude.Types.Left', V106}; {'Prelude.Types.Right', V107} -> (begin (V109 = fun (V108) -> {'Prelude.Types.Right', {'Core.TT.As', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V102, V97, V107}} end), V109 end(V104)) end end end end), V110 end(V99)) end end end end), V111 end(V94)) end end end end; 6 -> begin (V112 = ('dn--un--fromBuf_TTC_LazyReason'(V1))), fun (V113) -> begin (V114 = (V112(V113))), case V114 of {'Prelude.Types.Left', V115} -> {'Prelude.Types.Left', V115}; {'Prelude.Types.Right', V116} -> (begin (V124 = begin (V117 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V118) -> begin (V119 = (V117(V118))), case V119 of {'Prelude.Types.Left', V120} -> {'Prelude.Types.Left', V120}; {'Prelude.Types.Right', V121} -> (begin (V123 = fun (V122) -> {'Prelude.Types.Right', {'Core.TT.TDelayed', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V116, V121}} end), V123 end(V118)) end end end end), V124 end(V113)) end end end end; 7 -> begin (V125 = ('dn--un--fromBuf_TTC_LazyReason'(V1))), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V143 = begin (V130 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V131) -> begin (V132 = (V130(V131))), case V132 of {'Prelude.Types.Left', V133} -> {'Prelude.Types.Left', V133}; {'Prelude.Types.Right', V134} -> (begin (V142 = begin (V135 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V136) -> begin (V137 = (V135(V136))), case V137 of {'Prelude.Types.Left', V138} -> {'Prelude.Types.Left', V138}; {'Prelude.Types.Right', V139} -> (begin (V141 = fun (V140) -> {'Prelude.Types.Right', {'Core.TT.TDelay', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V129, V134, V139}} end), V141 end(V136)) end end end end), V142 end(V131)) end end end end), V143 end(V126)) end end end end; 8 -> begin (V144 = ('dn--un--fromBuf_TTC_LazyReason'(V1))), fun (V145) -> begin (V146 = (V144(V145))), case V146 of {'Prelude.Types.Left', V147} -> {'Prelude.Types.Left', V147}; {'Prelude.Types.Right', V148} -> (begin (V156 = begin (V149 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V150) -> begin (V151 = (V149(V150))), case V151 of {'Prelude.Types.Left', V152} -> {'Prelude.Types.Left', V152}; {'Prelude.Types.Right', V153} -> (begin (V155 = fun (V154) -> {'Prelude.Types.Right', {'Core.TT.TForce', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V148, V153}} end), V155 end(V150)) end end end end), V156 end(V145)) end end end end; 9 -> begin (V157 = ('dn--un--fromBuf_TTC_Constant'(V1))), fun (V158) -> begin (V159 = (V157(V158))), case V159 of {'Prelude.Types.Left', V160} -> {'Prelude.Types.Left', V160}; {'Prelude.Types.Right', V161} -> (begin (V163 = fun (V162) -> {'Prelude.Types.Right', {'Core.TT.PrimVal', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V161}} end), V163 end(V158)) end end end end; 10 -> fun (V164) -> {'Prelude.Types.Right', {'Core.TT.Erased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}} end; 11 -> begin (V165 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V166) -> begin (V167 = (V165(V166))), case V167 of {'Prelude.Types.Left', V168} -> {'Prelude.Types.Left', V168}; {'Prelude.Types.Right', V169} -> (begin (V171 = fun (V170) -> {'Prelude.Types.Right', {'Core.TT.TType', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V169}} end), V171 end(V166)) end end end end; 12 -> begin (V172 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V173) -> begin (V174 = (V172(V173))), case V174 of {'Prelude.Types.Left', V175} -> {'Prelude.Types.Left', V175}; {'Prelude.Types.Right', V176} -> (begin (V187 = begin (V180 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V177) -> fun (V178) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V177, V178)) end end, fun (V179) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V179)) end}, V1))), fun (V181) -> begin (V182 = (V180(V181))), case V182 of {'Prelude.Types.Left', V183} -> {'Prelude.Types.Left', V183}; {'Prelude.Types.Right', V184} -> (begin (V186 = fun (V185) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'un--apply'(('Idris.Idris2.Core.FC':'un--emptyFC'()), V176, V184))} end), V186 end(V181)) end end end end), V187 end(V173)) end end end end; _ -> begin (V191 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V188, V189)) end end, fun (V190) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V190)) end}, V1))), fun (V192) -> begin (V193 = (V191(V192))), case V193 of {'Prelude.Types.Left', V194} -> {'Prelude.Types.Left', V194}; {'Prelude.Types.Right', V195} -> (begin (V203 = begin (V200 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V198 = fun (V197) -> V197 end), fun (V199) -> (V198(V199)) end end(begin (V196 = (V6 - 13)), case ((V196 band 9223372036854775808) =/= 0) of 'true' -> (V196 bor -9223372036854775808); _ -> (V196 band 9223372036854775807) end end))))), fun (V201) -> case ('un--getName'(V200, V0)) of {'Prelude.Types.Just', V202} -> {'Prelude.Types.Right', {'Core.TT.Local', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V195, V200}}; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Term"/utf8>>, V201)) end end end), V203 end(V192)) end end end end end), V204 end(V3)) end end end end.
'dn--un--fromBuf_TTC_(PrimFn $n)'(V0, V1) -> case V0 of 0 -> fun (V2) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PrimFn"/utf8>>, V2)) end; _ -> begin (V3 = (V0 - 1)), case V3 of 0 -> ('nested--13741-8136--in--un--fromBuf1'(V1, V0)); _ -> begin (V4 = (V3 - 1)), case V4 of 0 -> ('nested--13741-8137--in--un--fromBuf2'(V1, V0)); _ -> begin (V5 = (V4 - 1)), case V5 of 0 -> ('nested--13741-8138--in--un--fromBuf3'(V1, V0)); _ -> fun (V6) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PrimFn"/utf8>>, V6)) end end end end end end end end.
'dn--un--fromBuf_TTC_(PiInfo $t)'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V20 = case V6 of 0 -> fun (V7) -> {'Prelude.Types.Right', {'Core.TT.Implicit'}} end; 1 -> fun (V8) -> {'Prelude.Types.Right', {'Core.TT.Explicit'}} end; 2 -> fun (V9) -> {'Prelude.Types.Right', {'Core.TT.AutoImplicit'}} end; 3 -> begin (V12 = case V0 of {'Core.Binary.Prims.dn--un--__mkTTC', V10, V11} -> (V11(V1)) end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V18 = fun (V17) -> {'Prelude.Types.Right', {'Core.TT.DefImplicit', V16}} end), V18 end(V13)) end end end end; _ -> fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"PiInfo"/utf8>>, V19)) end end), V20 end(V3)) end end end end.
'dn--un--fromBuf_TTC_(CaseTree $vars)'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V45 = case V6 of 0 -> begin (V7 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V28 = begin (V12 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V1))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V27 = begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_(CaseAlt $vars)'(V0, V17, V18)) end end, fun (V19) -> ('dn--un--fromBuf_TTC_(CaseAlt $vars)'(V0, V19)) end}, V1))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V26 = fun (V25) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.Case', V11, V16, {'Core.TT.Erased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}, V24}} end), V26 end(V21)) end end end end), V27 end(V13)) end end end end), V28 end(V8)) end end end end; 1 -> begin (V29 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V35 = fun (V34) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.STerm', 0, V33}} end), V35 end(V30)) end end end end; 2 -> begin (V36 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V1))), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V42 = fun (V41) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.Unmatched', V40}} end), V42 end(V37)) end end end end; 3 -> fun (V43) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.Impossible'}} end; _ -> fun (V44) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"CaseTree"/utf8>>, V44)) end end), V45 end(V3)) end end end end.
'dn--un--fromBuf_TTC_(CaseAlt $vars)'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V75 = case V6 of 0 -> begin (V7 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V34 = begin (V12 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V1))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V33 = begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('dn--un--toBuf_TTC_Name'(V17, V18)) end end, fun (V19) -> ('dn--un--fromBuf_TTC_Name'(V19)) end}, V1))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V32 = begin (V25 = ('dn--un--fromBuf_TTC_(CaseTree $vars)'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V24, V0)), V1))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V31 = fun (V30) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.ConCase', V11, V16, V24, V29}} end), V31 end(V26)) end end end end), V32 end(V21)) end end end end), V33 end(V13)) end end end end), V34 end(V8)) end end end end; 1 -> begin (V35 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V53 = begin (V40 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V52 = begin (V45 = ('dn--un--fromBuf_TTC_(CaseTree $vars)'([V39 | [V44 | V0]], V1))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V51 = fun (V50) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.DelayCase', V39, V44, V49}} end), V51 end(V46)) end end end end), V52 end(V41)) end end end end), V53 end(V36)) end end end end; 2 -> begin (V54 = ('dn--un--fromBuf_TTC_Constant'(V1))), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V66 = begin (V59 = ('dn--un--fromBuf_TTC_(CaseTree $vars)'(V0, V1))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V65 = fun (V64) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.ConstCase', V58, V63}} end), V65 end(V60)) end end end end), V66 end(V55)) end end end end; 3 -> begin (V67 = ('dn--un--fromBuf_TTC_(CaseTree $vars)'(V0, V1))), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V73 = fun (V72) -> {'Prelude.Types.Right', {'Core.Case.CaseTree.DefaultCase', V71}} end), V73 end(V68)) end end end end; _ -> fun (V74) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"CaseAlt"/utf8>>, V74)) end end), V75 end(V3)) end end end end.
'dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V327 = case V6 of 0 -> begin (V7 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V20 = begin (V12 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V1))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V19 = fun (V17) -> case ('un--getName'(V16, V0)) of {'Prelude.Types.Just', V18} -> {'Prelude.Types.Right', {'Core.CompileExpr.CLocal', V16, V11}}; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"CExp"/utf8>>, V17)) end end), V19 end(V13)) end end end end), V20 end(V8)) end end end end; 1 -> begin (V21 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V33 = begin (V26 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V32 = fun (V31) -> {'Prelude.Types.Right', {'Core.CompileExpr.CRef', V25, V30}} end), V32 end(V27)) end end end end), V33 end(V22)) end end end end; 2 -> begin (V34 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V52 = begin (V39 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V51 = begin (V44 = ('dn--un--fromBuf_TTC_(CExp $vars)'([V43 | V0], V1))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V50 = fun (V49) -> {'Prelude.Types.Right', {'Core.CompileExpr.CLam', V38, V43, V48}} end), V50 end(V45)) end end end end), V51 end(V40)) end end end end), V52 end(V35)) end end end end; 3 -> begin (V53 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V83 = begin (V58 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V82 = begin (V63 = ('dn--un--fromBuf_TTC_InlineOk'(V1))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V81 = begin (V68 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1))), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V80 = begin (V73 = ('dn--un--fromBuf_TTC_(CExp $vars)'([V62 | V0], V1))), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V79 = fun (V78) -> {'Prelude.Types.Right', {'Core.CompileExpr.CLet', V57, V62, V67, V72, V77}} end), V79 end(V74)) end end end end), V80 end(V69)) end end end end), V81 end(V64)) end end end end), V82 end(V59)) end end end end), V83 end(V54)) end end end end; 4 -> begin (V84 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V85) -> begin (V86 = (V84(V85))), case V86 of {'Prelude.Types.Left', V87} -> {'Prelude.Types.Left', V87}; {'Prelude.Types.Right', V88} -> (begin (V105 = begin (V89 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V104 = begin (V97 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V94) -> fun (V95) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V94, V95)) end end, fun (V96) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V96)) end}, V1))), fun (V98) -> begin (V99 = (V97(V98))), case V99 of {'Prelude.Types.Left', V100} -> {'Prelude.Types.Left', V100}; {'Prelude.Types.Right', V101} -> (begin (V103 = fun (V102) -> {'Prelude.Types.Right', {'Core.CompileExpr.CApp', V88, V93, V101}} end), V103 end(V98)) end end end end), V104 end(V90)) end end end end), V105 end(V85)) end end end end; 5 -> begin (V106 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V107) -> begin (V108 = (V106(V107))), case V108 of {'Prelude.Types.Left', V109} -> {'Prelude.Types.Left', V109}; {'Prelude.Types.Right', V110} -> (begin (V142 = begin (V111 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V112) -> begin (V113 = (V111(V112))), case V113 of {'Prelude.Types.Left', V114} -> {'Prelude.Types.Left', V114}; {'Prelude.Types.Right', V115} -> (begin (V141 = begin (V116 = ('dn--un--fromBuf_TTC_ConInfo'(V1))), fun (V117) -> begin (V118 = (V116(V117))), case V118 of {'Prelude.Types.Left', V119} -> {'Prelude.Types.Left', V119}; {'Prelude.Types.Right', V120} -> (begin (V140 = begin (V124 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V121) -> fun (V122) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V121, V122)) end end, fun (V123) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V123)) end}, V1))), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V139 = begin (V132 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V129) -> fun (V130) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V129, V130)) end end, fun (V131) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V131)) end}, V1))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V138 = fun (V137) -> {'Prelude.Types.Right', {'Core.CompileExpr.CCon', V110, V115, V120, V128, V136}} end), V138 end(V133)) end end end end), V139 end(V125)) end end end end), V140 end(V117)) end end end end), V141 end(V112)) end end end end), V142 end(V107)) end end end end; 6 -> begin (V143 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V170 = begin (V148 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V1))), fun (V149) -> begin (V150 = (V148(V149))), case V150 of {'Prelude.Types.Left', V151} -> {'Prelude.Types.Left', V151}; {'Prelude.Types.Right', V152} -> (begin (V169 = begin (V153 = ('dn--un--fromBuf_TTC_(PrimFn $n)'(V152, V1))), fun (V154) -> begin (V155 = (V153(V154))), case V155 of {'Prelude.Types.Left', V156} -> {'Prelude.Types.Left', V156}; {'Prelude.Types.Right', V157} -> (begin (V168 = begin (V161 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_((Vect $n) $a)'(V152, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V158) -> fun (V159) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V158, V159)) end end, fun (V160) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V160)) end}, V1))), fun (V162) -> begin (V163 = (V161(V162))), case V163 of {'Prelude.Types.Left', V164} -> {'Prelude.Types.Left', V164}; {'Prelude.Types.Right', V165} -> (begin (V167 = fun (V166) -> {'Prelude.Types.Right', {'Core.CompileExpr.COp', V152, V147, V157, V165}} end), V167 end(V162)) end end end end), V168 end(V154)) end end end end), V169 end(V149)) end end end end), V170 end(V144)) end end end end; 7 -> begin (V171 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V172) -> begin (V173 = (V171(V172))), case V173 of {'Prelude.Types.Left', V174} -> {'Prelude.Types.Left', V174}; {'Prelude.Types.Right', V175} -> (begin (V192 = begin (V176 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V177) -> begin (V178 = (V176(V177))), case V178 of {'Prelude.Types.Left', V179} -> {'Prelude.Types.Left', V179}; {'Prelude.Types.Right', V180} -> (begin (V191 = begin (V184 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V181) -> fun (V182) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V181, V182)) end end, fun (V183) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V183)) end}, V1))), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V190 = fun (V189) -> {'Prelude.Types.Right', {'Core.CompileExpr.CExtPrim', V175, V180, V188}} end), V190 end(V185)) end end end end), V191 end(V177)) end end end end), V192 end(V172)) end end end end; 8 -> begin (V193 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V194) -> begin (V195 = (V193(V194))), case V195 of {'Prelude.Types.Left', V196} -> {'Prelude.Types.Left', V196}; {'Prelude.Types.Right', V197} -> (begin (V211 = begin (V198 = ('dn--un--fromBuf_TTC_LazyReason'(V1))), fun (V199) -> begin (V200 = (V198(V199))), case V200 of {'Prelude.Types.Left', V201} -> {'Prelude.Types.Left', V201}; {'Prelude.Types.Right', V202} -> (begin (V210 = begin (V203 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1))), fun (V204) -> begin (V205 = (V203(V204))), case V205 of {'Prelude.Types.Left', V206} -> {'Prelude.Types.Left', V206}; {'Prelude.Types.Right', V207} -> (begin (V209 = fun (V208) -> {'Prelude.Types.Right', {'Core.CompileExpr.CForce', V197, V202, V207}} end), V209 end(V204)) end end end end), V210 end(V199)) end end end end), V211 end(V194)) end end end end; 9 -> begin (V212 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V213) -> begin (V214 = (V212(V213))), case V214 of {'Prelude.Types.Left', V215} -> {'Prelude.Types.Left', V215}; {'Prelude.Types.Right', V216} -> (begin (V230 = begin (V217 = ('dn--un--fromBuf_TTC_LazyReason'(V1))), fun (V218) -> begin (V219 = (V217(V218))), case V219 of {'Prelude.Types.Left', V220} -> {'Prelude.Types.Left', V220}; {'Prelude.Types.Right', V221} -> (begin (V229 = begin (V222 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1))), fun (V223) -> begin (V224 = (V222(V223))), case V224 of {'Prelude.Types.Left', V225} -> {'Prelude.Types.Left', V225}; {'Prelude.Types.Right', V226} -> (begin (V228 = fun (V227) -> {'Prelude.Types.Right', {'Core.CompileExpr.CDelay', V216, V221, V226}} end), V228 end(V223)) end end end end), V229 end(V218)) end end end end), V230 end(V213)) end end end end; 10 -> begin (V231 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V232) -> begin (V233 = (V231(V232))), case V233 of {'Prelude.Types.Left', V234} -> {'Prelude.Types.Left', V234}; {'Prelude.Types.Right', V235} -> (begin (V261 = begin (V236 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1))), fun (V237) -> begin (V238 = (V236(V237))), case V238 of {'Prelude.Types.Left', V239} -> {'Prelude.Types.Left', V239}; {'Prelude.Types.Right', V240} -> (begin (V260 = begin (V244 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V241) -> fun (V242) -> ('dn--un--toBuf_TTC_(CConAlt $vars)'(V0, V241, V242)) end end, fun (V243) -> ('dn--un--fromBuf_TTC_(CConAlt $vars)'(V0, V243)) end}, V1))), fun (V245) -> begin (V246 = (V244(V245))), case V246 of {'Prelude.Types.Left', V247} -> {'Prelude.Types.Left', V247}; {'Prelude.Types.Right', V248} -> (begin (V259 = begin (V252 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V249) -> fun (V250) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V249, V250)) end end, fun (V251) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V251)) end}, V1))), fun (V253) -> begin (V254 = (V252(V253))), case V254 of {'Prelude.Types.Left', V255} -> {'Prelude.Types.Left', V255}; {'Prelude.Types.Right', V256} -> (begin (V258 = fun (V257) -> {'Prelude.Types.Right', {'Core.CompileExpr.CConCase', V235, V240, V248, V256}} end), V258 end(V253)) end end end end), V259 end(V245)) end end end end), V260 end(V237)) end end end end), V261 end(V232)) end end end end; 11 -> begin (V262 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V263) -> begin (V264 = (V262(V263))), case V264 of {'Prelude.Types.Left', V265} -> {'Prelude.Types.Left', V265}; {'Prelude.Types.Right', V266} -> (begin (V292 = begin (V267 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1))), fun (V268) -> begin (V269 = (V267(V268))), case V269 of {'Prelude.Types.Left', V270} -> {'Prelude.Types.Left', V270}; {'Prelude.Types.Right', V271} -> (begin (V291 = begin (V275 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V272) -> fun (V273) -> ('dn--un--toBuf_TTC_(CConstAlt $vars)'(V0, V272, V273)) end end, fun (V274) -> ('dn--un--fromBuf_TTC_(CConstAlt $vars)'(V0, V274)) end}, V1))), fun (V276) -> begin (V277 = (V275(V276))), case V277 of {'Prelude.Types.Left', V278} -> {'Prelude.Types.Left', V278}; {'Prelude.Types.Right', V279} -> (begin (V290 = begin (V283 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V280) -> fun (V281) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V280, V281)) end end, fun (V282) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V282)) end}, V1))), fun (V284) -> begin (V285 = (V283(V284))), case V285 of {'Prelude.Types.Left', V286} -> {'Prelude.Types.Left', V286}; {'Prelude.Types.Right', V287} -> (begin (V289 = fun (V288) -> {'Prelude.Types.Right', {'Core.CompileExpr.CConstCase', V266, V271, V279, V287}} end), V289 end(V284)) end end end end), V290 end(V276)) end end end end), V291 end(V268)) end end end end), V292 end(V263)) end end end end; 12 -> begin (V293 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V294) -> begin (V295 = (V293(V294))), case V295 of {'Prelude.Types.Left', V296} -> {'Prelude.Types.Left', V296}; {'Prelude.Types.Right', V297} -> (begin (V305 = begin (V298 = ('dn--un--fromBuf_TTC_Constant'(V1))), fun (V299) -> begin (V300 = (V298(V299))), case V300 of {'Prelude.Types.Left', V301} -> {'Prelude.Types.Left', V301}; {'Prelude.Types.Right', V302} -> (begin (V304 = fun (V303) -> {'Prelude.Types.Right', {'Core.CompileExpr.CPrimVal', V297, V302}} end), V304 end(V299)) end end end end), V305 end(V294)) end end end end; 13 -> begin (V306 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V307) -> begin (V308 = (V306(V307))), case V308 of {'Prelude.Types.Left', V309} -> {'Prelude.Types.Left', V309}; {'Prelude.Types.Right', V310} -> (begin (V312 = fun (V311) -> {'Prelude.Types.Right', {'Core.CompileExpr.CErased', V310}} end), V312 end(V307)) end end end end; 14 -> begin (V313 = ('dn--un--fromBuf_TTC_FC'(V1))), fun (V314) -> begin (V315 = (V313(V314))), case V315 of {'Prelude.Types.Left', V316} -> {'Prelude.Types.Left', V316}; {'Prelude.Types.Right', V317} -> (begin (V325 = begin (V318 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V1))), fun (V319) -> begin (V320 = (V318(V319))), case V320 of {'Prelude.Types.Left', V321} -> {'Prelude.Types.Left', V321}; {'Prelude.Types.Right', V322} -> (begin (V324 = fun (V323) -> {'Prelude.Types.Right', {'Core.CompileExpr.CCrash', V317, V322}} end), V324 end(V319)) end end end end), V325 end(V314)) end end end end; _ -> fun (V326) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"CExp"/utf8>>, V326)) end end), V327 end(V3)) end end end end.
'dn--un--fromBuf_TTC_(CConstAlt $vars)'(V0, V1) -> begin (V2 = ('dn--un--fromBuf_TTC_Constant'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V14 = begin (V7 = ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V13 = fun (V12) -> {'Prelude.Types.Right', {'Core.CompileExpr.MkConstAlt', V6, V11}} end), V13 end(V8)) end end end end), V14 end(V3)) end end end end.
'dn--un--fromBuf_TTC_(CConAlt $vars)'(V0, V1) -> begin (V2 = ('dn--un--fromBuf_TTC_Name'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V38 = begin (V7 = ('dn--un--fromBuf_TTC_ConInfo'(V1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V37 = begin (V15 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V12, V13)) end end, fun (V14) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V14)) end}, V1))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V36 = begin (V23 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('dn--un--toBuf_TTC_Name'(V20, V21)) end end, fun (V22) -> ('dn--un--fromBuf_TTC_Name'(V22)) end}, V1))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V35 = begin (V28 = ('dn--un--fromBuf_TTC_(CExp $vars)'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V27, V0)), V1))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V34 = fun (V33) -> {'Prelude.Types.Right', {'Core.CompileExpr.MkConAlt', V6, V11, V19, V27, V32}} end), V34 end(V29)) end end end end), V35 end(V24)) end end end end), V36 end(V16)) end end end end), V37 end(V8)) end end end end), V38 end(V3)) end end end end.
'dn--un--fromBuf_TTC_(Binder (Term $vars))'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V107 = case V6 of 0 -> begin (V7 = ('dn--un--fromBuf_TTC_RigCount'(V1))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V28 = begin (V15 = ('dn--un--fromBuf_TTC_(PiInfo $t)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V12) -> fun (V13) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V12, V13)) end end, fun (V14) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V14)) end}, V1))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V27 = begin (V20 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V26 = fun (V25) -> {'Prelude.Types.Right', {'Core.TT.Lam', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V11, V19, V24}} end), V26 end(V21)) end end end end), V27 end(V16)) end end end end), V28 end(V8)) end end end end; 1 -> begin (V29 = ('dn--un--fromBuf_TTC_RigCount'(V1))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V41 = begin (V34 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V40 = fun (V39) -> {'Prelude.Types.Right', {'Core.TT.Let', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V33, V38, {'Core.TT.Erased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}}} end), V40 end(V35)) end end end end), V41 end(V30)) end end end end; 2 -> begin (V42 = ('dn--un--fromBuf_TTC_RigCount'(V1))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V63 = begin (V50 = ('dn--un--fromBuf_TTC_(PiInfo $t)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V47, V48)) end end, fun (V49) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V49)) end}, V1))), fun (V51) -> begin (V52 = (V50(V51))), case V52 of {'Prelude.Types.Left', V53} -> {'Prelude.Types.Left', V53}; {'Prelude.Types.Right', V54} -> (begin (V62 = begin (V55 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V61 = fun (V60) -> {'Prelude.Types.Right', {'Core.TT.Pi', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V46, V54, V59}} end), V61 end(V56)) end end end end), V62 end(V51)) end end end end), V63 end(V43)) end end end end; 3 -> begin (V64 = ('dn--un--fromBuf_TTC_RigCount'(V1))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V85 = begin (V72 = ('dn--un--fromBuf_TTC_(PiInfo $t)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V69) -> fun (V70) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V69, V70)) end end, fun (V71) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V71)) end}, V1))), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V84 = begin (V77 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V83 = fun (V82) -> {'Prelude.Types.Right', {'Core.TT.PVar', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V68, V76, V81}} end), V83 end(V78)) end end end end), V84 end(V73)) end end end end), V85 end(V65)) end end end end; 4 -> begin (V86 = ('dn--un--fromBuf_TTC_RigCount'(V1))), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V98 = begin (V91 = ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V1))), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V97 = fun (V96) -> {'Prelude.Types.Right', {'Core.TT.PLet', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V90, V95, {'Core.TT.Erased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}}} end), V97 end(V92)) end end end end), V98 end(V87)) end end end end; 5 -> begin (V99 = ('dn--un--fromBuf_TTC_RigCount'(V1))), fun (V100) -> begin (V101 = (V99(V100))), case V101 of {'Prelude.Types.Left', V102} -> {'Prelude.Types.Left', V102}; {'Prelude.Types.Right', V103} -> (begin (V105 = fun (V104) -> {'Prelude.Types.Right', {'Core.TT.PVTy', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V103, {'Core.TT.Erased', ('Idris.Idris2.Core.FC':'un--emptyFC'()), {'Core.TT.Placeholder'}}}} end), V105 end(V100)) end end end end; _ -> fun (V106) -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Binder"/utf8>>, V106)) end end), V107 end(V3)) end end end end.
'dn--un--fromBuf_TTC_((Env Term) $vars)'(V0, V1) -> case V0 of [] -> fun (V2) -> {'Prelude.Types.Right', {'Core.Env.Nil'}} end; [E0 | E1] -> (fun (V3, V4) -> begin (V5 = ('dn--un--fromBuf_TTC_(Binder (Term $vars))'(V4, V1))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V17 = begin (V10 = ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V4, V1))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', {'Core.Env.::', V9, V14}} end), V16 end(V11)) end end end end), V17 end(V6)) end end end end end(E0, E1)) end.
'dn--un--__Impl_TTC_Visibility'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Visibility'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Visibility'(V2)) end}.
'dn--un--__Impl_TTC_VirtualIdent'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_VirtualIdent'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_VirtualIdent'(V2)) end}.
'dn--un--__Impl_TTC_UseSide'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_UseSide'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_UseSide'(V2)) end}.
'dn--un--__Impl_TTC_TypeFlags'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_TypeFlags'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_TypeFlags'(V2)) end}.
'dn--un--__Impl_TTC_Transform'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Transform'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Transform'(V2)) end}.
'dn--un--__Impl_TTC_Totality'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Totality'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Totality'(V2)) end}.
'dn--un--__Impl_TTC_TotalReq'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_TotalReq'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_TotalReq'(V2)) end}.
'dn--un--__Impl_TTC_Terminating'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Terminating'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Terminating'(V2)) end}.
'dn--un--__Impl_TTC_SizeChange'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_SizeChange'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_SizeChange'(V2)) end}.
'dn--un--__Impl_TTC_SCCall'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_SCCall'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_SCCall'(V2)) end}.
'dn--un--__Impl_TTC_RigCount'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_RigCount'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_RigCount'(V2)) end}.
'dn--un--__Impl_TTC_RewriteNames'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_RewriteNames'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_RewriteNames'(V2)) end}.
'dn--un--__Impl_TTC_PrimType'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_PrimType'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_PrimType'(V2)) end}.
'dn--un--__Impl_TTC_PrimNames'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_PrimNames'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_PrimNames'(V2)) end}.
'dn--un--__Impl_TTC_Pat'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Pat'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Pat'(V2)) end}.
'dn--un--__Impl_TTC_PartialReason'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_PartialReason'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_PartialReason'(V2)) end}.
'dn--un--__Impl_TTC_PairNames'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_PairNames'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_PairNames'(V2)) end}.
'dn--un--__Impl_TTC_PMDefInfo'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_PMDefInfo'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_PMDefInfo'(V2)) end}.
'dn--un--__Impl_TTC_OriginDesc'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_OriginDesc'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_OriginDesc'(V2)) end}.
'dn--un--__Impl_TTC_Namespace'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Namespace'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Namespace'(V2)) end}.
'dn--un--__Impl_TTC_NameType'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_NameType'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_NameType'(V2)) end}.
'dn--un--__Impl_TTC_Name'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Name'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Name'(V2)) end}.
'dn--un--__Impl_TTC_ModuleIdent'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_ModuleIdent'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_ModuleIdent'(V2)) end}.
'dn--un--__Impl_TTC_LazyReason'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_LazyReason'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_LazyReason'(V2)) end}.
'dn--un--__Impl_TTC_InlineOk'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_InlineOk'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_InlineOk'(V2)) end}.
'dn--un--__Impl_TTC_HoleInfo'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_HoleInfo'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_HoleInfo'(V2)) end}.
'dn--un--__Impl_TTC_GlobalDef'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_GlobalDef'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_GlobalDef'(V2)) end}.
'dn--un--__Impl_TTC_FC'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_FC'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_FC'(V2)) end}.
'dn--un--__Impl_TTC_Def'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Def'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Def'(V2)) end}.
'dn--un--__Impl_TTC_Covering'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Covering'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Covering'(V2)) end}.
'dn--un--__Impl_TTC_Constant'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Constant'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Constant'(V2)) end}.
'dn--un--__Impl_TTC_ConInfo'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_ConInfo'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_ConInfo'(V2)) end}.
'dn--un--__Impl_TTC_CG'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_CG'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_CG'(V2)) end}.
'dn--un--__Impl_TTC_CFType'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_CFType'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_CFType'(V2)) end}.
'dn--un--__Impl_TTC_CDef'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_CDef'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_CDef'(V2)) end}.
'dn--un--__Impl_TTC_(Term $vars)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(Term $vars)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(Term $vars)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(PrimFn $n)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(PrimFn $n)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(PrimFn $n)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(PiInfo $t)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(PiInfo $t)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(PiInfo $t)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(CaseTree $vars)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(CaseTree $vars)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(CaseTree $vars)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(CaseAlt $vars)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(CaseAlt $vars)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(CaseAlt $vars)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(CExp $vars)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(CExp $vars)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(CExp $vars)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(CConstAlt $vars)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(CConstAlt $vars)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(CConstAlt $vars)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(CConAlt $vars)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(CConAlt $vars)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(CConAlt $vars)'(V0, V3)) end}.
'dn--un--__Impl_TTC_(Binder (Term $vars))'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_(Binder (Term $vars))'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_(Binder (Term $vars))'(V0, V3)) end}.
'dn--un--__Impl_TTC_((Env Term) $vars)'(V0) -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('dn--un--toBuf_TTC_((Env Term) $vars)'(V0, V1, V2)) end end, fun (V3) -> ('dn--un--fromBuf_TTC_((Env Term) $vars)'(V0, V3)) end}.
'un--getName'(V0, V1) -> case V0 of 0 -> case V1 of [E2 | E3] -> (fun (V2, V3) -> {'Prelude.Types.Just', V2} end(E2, E3)); _ -> case V1 of [] -> {'Prelude.Types.Nothing'} end end; _ -> begin (V4 = (V0 - 1)), case V1 of [E0 | E1] -> (fun (V5, V6) -> ('un--getName'(V4, V6)) end(E0, E1)); _ -> case V1 of [] -> {'Prelude.Types.Nothing'} end end end end.
