-module('Idris.Idris2.Idris.Doc.String').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in case block in case block in case block in case block in getDocsForImplementation-13111'/27,
  'case--case block in case block in case block in case block in case block in getDocsForImplementation-12969'/22,
  'case--case block in case block in case block in case block in getDocsForImplementation-12916'/20,
  'case--case block in getDocsForImplementation-12746'/8,
  'case--getDocsForImplementation-12717'/4,
  'case--case block in getDocsForName-12542'/14,
  'case--getDocsForName-12499'/11,
  'case--case block in getDocsForName,getExtra-11337'/10,
  'case--getDocsForName,getFieldsDoc-11095'/8,
  'case--case block in getDocsForName,getFieldDoc-10934'/14,
  'case--getDocsForName,getIFaceDoc-10777'/9,
  'case--getDocsForName,getIFaceDoc-10635'/12,
  'case--getDocsForName,getIFaceDoc-10545'/14,
  'case--getDocsForName,getIFaceDoc-10389'/17,
  'case--getDocsForName,getFixityDoc-10117'/10,
  'case--getDocsForName,getPrefixDoc-9963'/8,
  'case--getDocsForName,getInfixDoc-9805'/8,
  'case--case block in getDocsForName,getDConDoc-9492'/14,
  'case--getImplDocs-8762'/6,
  'case--prettyName-8337'/2,
  'nested--18192-14662--in--un--visible'/6,
  'nested--12237-9287--in--un--showVisible'/7,
  'nested--12237-9286--in--un--showTotal'/7,
  'nested--12237-9284--in--un--showDoc'/8,
  'nested--12237-9285--in--un--reflowDoc'/7,
  'nested--11995-9041--in--un--primTyDoc'/4,
  'nested--11995-9042--in--un--primDoc'/4,
  'nested--18192-14663--in--un--inNS'/5,
  'nested--12237-9292--in--un--getPrefixDoc'/7,
  'nested--12237-9290--in--un--getMethDoc'/7,
  'nested--12237-9291--in--un--getInfixDoc'/7,
  'nested--12237-9289--in--un--getImplDoc'/7,
  'nested--12237-9294--in--un--getIFaceDoc'/7,
  'nested--12237-9293--in--un--getFixityDoc'/7,
  'nested--12237-9296--in--un--getFieldsDoc'/7,
  'nested--12237-9295--in--un--getFieldDoc'/7,
  'nested--12237-9297--in--un--getExtra'/8,
  'nested--12237-9288--in--un--getDConDoc'/7,
  'un--summarise'/3,
  'un--shortNamesConfig'/0,
  'un--prettyType'/4,
  'un--prettyName'/1,
  'un--prettyKindedName'/2,
  'un--methodsConfig'/0,
  'un--justUserDoc'/0,
  'un--getImplDocs'/3,
  'un--getHintsForType'/3,
  'un--getHintsForPrimitive'/3,
  'un--getDocsForPrimitive'/3,
  'un--getDocsForPTerm'/4,
  'un--getDocsForName'/6,
  'un--getDocsForImplementation'/3,
  'un--getDocs'/4,
  'un--getContents'/4,
  'un--addDocStringNS'/5,
  'un--addDocString'/4
]).
'case--case block in case block in case block in case block in case block in case block in case block in getDocsForImplementation-13111'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of {'Builtin.MkPair', V27, V28} -> case V27 of {'Builtin.MkPair', V29, V30} -> case V29 of {'Idris.Syntax.PRef', V31, V32} -> case V28 of {'Builtin.MkPair', V33, V34} -> case V33 of {'Idris.Syntax.PRef', V35, V36} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V32)), ('Idris.Idris2.Core.Name':'un--dropNS'(case V36 of {'Core.TT.MkKindedName', V37, V38, V39} -> V38 end)))) of 0 -> begin (V72 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V32, case V13 of {'Core.Context.MkDefs', V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71} -> V40 end))), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V170 = begin (V86 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"doc.implementation"/utf8>>, 50, fun () -> ('Idris.Idris2.Data.String':'un--unwords'([('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V77) -> fun (V78) -> <<V77/binary, V78/binary>> end end, <<""/utf8>>}, fun (V79) -> V79 end, [<<"Mismatch between "/utf8>> | [('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V32)) | [<<" and "/utf8>> | [('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V36)) | [<<","/utf8>> | []]]]]])) | [('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V80) -> fun (V81) -> <<V80/binary, V81/binary>> end end, <<""/utf8>>}, fun (V82) -> V82 end, [<<"checking whether "/utf8>> | [('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V32)) | [<<" exists:"/utf8>> | []]]])) | [('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V83) -> fun (V84) -> <<V83/binary, V84/binary>> end end, <<""/utf8>>}, fun (V85) -> V85 end, [('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(('Idris.Idris2.Prelude.Types.List':'un--lengthTR'(V76)))) | [<<" candidates"/utf8>> | []]])) | []]]])) end))), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V169 = case V76 of [] -> begin (V161 = case ('Idris.Idris2.Prelude.Interfaces':'un-->=>'({'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V93, V94)) end end end end, fun (V95) -> fun (V96) -> {'Prelude.Types.Just', V96} end end, fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V99, V100)) end end end end}, fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V103, V104)) end end end end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V106)) end end}, fun (V107) -> ('Idris.Idris2.Prelude.Interfaces':'un-->=>'({'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V110, V111)) end end end end, fun (V112) -> fun (V113) -> {'Prelude.Types.Just', V113} end end, fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V116, V117)) end end end end}, fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V120, V121)) end end end end, fun (V122) -> fun (V123) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V123)) end end}, fun (V124) -> ('Idris.Idris2.Prelude.Interfaces':'un-->=>'({'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V127, V128)) end end end end, fun (V129) -> fun (V130) -> {'Prelude.Types.Just', V130} end end, fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V133, V134)) end end end end}, fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V137, V138)) end end end end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V140)) end end}, fun (V141) -> ('Idris.Idris2.Core.Name':'un--isUN'(V141)) end, fun (V142) -> ('Idris.Idris2.Core.Name':'un--isBasic'(('Idris.Idris2.Builtin':'un--snd'(V142)))) end, V124)) end, fun (V143) -> ('Idris.Idris2.Prelude.Types':'un--strUncons'(V143)) end, V107)) end, fun (V144) -> ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V147, V148)) end end end end, fun (V149) -> fun (V150) -> {'Prelude.Types.Just', V150} end end, fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V153, V154)) end end end end}, fun (V155) -> {'Prelude.Types.Nothing'} end, fun (V156) -> fun (V157) -> fun (V158) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V157, V158)) end end end}, ('Idris.Idris2.Prelude.Types':'un--isUpper'(('Idris.Idris2.Builtin':'un--fst'(V144)))))) end, V32)) of {'Prelude.Types.Just', V159} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V1, V31, V32)); {'Prelude.Types.Nothing'} -> fun (V160) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V162) -> begin (V163 = (V161(V162))), case V163 of {'Prelude.Types.Left', V164} -> {'Prelude.Types.Left', V164}; {'Prelude.Types.Right', V165} -> (begin (V167 = fun (V166) -> {'Prelude.Types.Right', 1} end), V167 end(V162)) end end end end; _ -> fun (V168) -> {'Prelude.Types.Right', 0} end end), V169 end(V87)) end end end end), V170 end(V73)) end end end end; 1 -> fun (V171) -> {'Prelude.Types.Right', 1} end end; _ -> fun (V172) -> {'Prelude.Types.Right', 0} end end; _ -> fun (V173) -> {'Prelude.Types.Right', 0} end end; {'Idris.Syntax.PPrimVal', V174, V175} -> fun (V176) -> case V28 of {'Builtin.MkPair', V177, V178} -> case V177 of {'Idris.Syntax.PPrimVal', V179, V180} -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V175, V180))}; _ -> {'Prelude.Types.Right', 0} end; _ -> {'Prelude.Types.Right', 0} end end; {'Idris.Syntax.PType', V181} -> fun (V182) -> case V28 of {'Builtin.MkPair', V183, V184} -> case V183 of {'Idris.Syntax.PType', V185} -> {'Prelude.Types.Right', 1}; _ -> {'Prelude.Types.Right', 0} end; _ -> {'Prelude.Types.Right', 0} end end; _ -> fun (V186) -> {'Prelude.Types.Right', 0} end end; _ -> fun (V187) -> {'Prelude.Types.Right', 0} end end; _ -> fun (V188) -> {'Prelude.Types.Right', 0} end end.
'case--case block in case block in case block in case block in case block in getDocsForImplementation-12969'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'Builtin.MkPair', V22, V23} -> begin (V32 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V24, V25, [])) end end, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V5, V23)), fun (V26) -> case V26 of {'Builtin.MkPair', V27, V28} -> begin (V29 = {'Builtin.MkPair', V27, V28}), ('case--case block in case block in case block in case block in case block in case block in case block in getDocsForImplementation-13111'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V22, V23, V27, V28, V29, {'Builtin.MkPair', ('Idris.Idris2.Idris.Syntax.Views':'un--getFnArgs'(fun (V30) -> V30 end, ('Idris.Idris2.Idris.Syntax.Views':'un--unArg'(V27)))), ('Idris.Idris2.Idris.Syntax.Views':'un--getFnArgs'(fun (V31) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V31)) end, ('Idris.Idris2.Idris.Syntax.Views':'un--unArg'(V28))))})) end end end))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V41 = fun (V37) -> case ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Interfaces.Bool.Semigroup':'dn--un--<+>_Semigroup_AllBool'(V38, V39)) end end, 1}, fun (V40) -> V40 end, V36)) of 1 -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Builtin.MkPair', V14, {'Builtin.MkPair', V15, V16}}}}; 0 -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end), V41 end(V33)) end end end end end.
'case--case block in case block in case block in case block in getDocsForImplementation-12916'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Builtin.MkPair', V20, V21} -> ('case--case block in case block in case block in case block in case block in getDocsForImplementation-12969'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20, V21, ('Idris.Idris2.Idris.Syntax.Views':'un--getFnArgs'(fun (V22) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V22)) end, V21)))) end.
'case--case block in getDocsForImplementation-12746'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [E0 | E1] -> (fun (V8, V9) -> case V8 of {'Builtin.MkPair', V10, V11} -> case V9 of [] -> begin (V33 = begin (V12 = ('Idris.Idris2.Core.Context':'un--getSearchData'(V1, V4, 0, V10))), ((begin (V30 = fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V27, V28, V29)) end end end end end), fun (V31) -> fun (V32) -> ((((V30('erased'))('erased'))(V31))(V32)) end end end((begin (V22 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> {'Prelude.Types.Right', (V18(V21))} end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end(fun (V13) -> case V13 of {'Core.Context.MkSearchData', V14, V15} -> V15 end end))))(V12)) end), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V179 = case V37 of [E2 | E3] -> (fun (V38, V39) -> case V38 of {'Builtin.MkPair', V40, V41} -> begin (V47 = begin (V42 = V1), fun (V43) -> begin (V46 = (begin (V44 = V42), fun (V45) -> ('erlang':'get'(V44)) end end(V43))), {'Prelude.Types.Right', V46} end end end), fun (V48) -> begin (V49 = (V47(V48))), case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> (begin (V176 = begin (V155 = begin (V136 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V52, V53, [])) end end, V41, fun (V54) -> begin (V87 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExactI'(V54, case V51 of {'Core.Context.MkDefs', V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86} -> V55 end))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V135 = begin (V92 = [{'Builtin.MkPair', V40, V41} | V39]), case V91 of {'Prelude.Types.Just', V93} -> case V93 of {'Builtin.MkPair', V94, V95} -> begin (V127 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V96) -> fun (V97) -> begin (V98 = V96), fun (V99) -> begin (V100 = (V98(V99))), case V100 of {'Prelude.Types.Left', V101} -> {'Prelude.Types.Left', V101}; {'Prelude.Types.Right', V102} -> (begin (V103 = (V97(V102))), V103 end(V99)) end end end end end end, fun (V104) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V1, V2, {'Core.Env.Nil'}, V104)) end, ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V1, [], V51, {'Core.Env.Nil'}, case V95 of {'Core.Context.Context.MkGlobalDef', V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126} -> V107 end))))), fun (V128) -> begin (V129 = (V127(V128))), case V129 of {'Prelude.Types.Left', V130} -> {'Prelude.Types.Left', V130}; {'Prelude.Types.Right', V131} -> (begin (V133 = begin (V132 = {'Prelude.Types.Just', {'Builtin.MkPair', V94, V95}}), ('case--case block in case block in case block in case block in getDocsForImplementation-12916'(V0, V1, V2, V3, V4, V5, V6, V11, V10, V39, V40, V41, V92, V51, V54, V94, V95, V132, V131, ('Idris.Idris2.Idris.Syntax.Views':'un--underPis'(V131)))) end), V133 end(V128)) end end end end end; {'Prelude.Types.Nothing'} -> fun (V134) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end), V135 end(V88)) end end end end end))), ((begin (V152 = fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V149, V150, V151)) end end end end end), fun (V153) -> fun (V154) -> ((((V152('erased'))('erased'))(V153))(V154)) end end end((begin (V144 = fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> case V141 of {'Prelude.Types.Left', V142} -> {'Prelude.Types.Left', V142}; {'Prelude.Types.Right', V143} -> {'Prelude.Types.Right', (V140(V143))} end end end end end), fun (V145) -> fun (V146) -> ((((V144('erased'))('erased'))(V145))(V146)) end end end(fun (V137) -> ('Idris.Idris2.Data.List':'un--catMaybes'(V137)) end))))(V136)) end), fun (V156) -> begin (V157 = (V155(V156))), case V157 of {'Prelude.Types.Left', V158} -> {'Prelude.Types.Left', V158}; {'Prelude.Types.Right', V159} -> (begin (V175 = case V159 of [] -> fun (V160) -> {'Prelude.Types.Right', {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V162 = fun (V161) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V161)) end), fun (V163) -> (V162(V163)) end end(<<"Could not find an implementation for"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V164) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V164)) end, fun (V165) -> fun (V166) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V165, V166)) end end}, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V0))))))}} end; _ -> begin (V168 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V167) -> ('Idris.Idris2.Idris.Doc.Display':'un--displayImpl'(V1, V2, V51, V167)) end, V159, []))), fun (V169) -> begin (V170 = (V168(V169))), case V170 of {'Prelude.Types.Left', V171} -> {'Prelude.Types.Left', V171}; {'Prelude.Types.Right', V172} -> (begin (V174 = fun (V173) -> {'Prelude.Types.Right', {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(V172))}} end), V174 end(V169)) end end end end end), V175 end(V156)) end end end end), V176 end(V48)) end end end end; _ -> fun (V177) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end(E2, E3)); _ -> fun (V178) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end), V179 end(V34)) end end end end; _ -> fun (V180) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end; _ -> fun (V181) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end(E0, E1)); _ -> fun (V182) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end.
'case--getDocsForImplementation-12717'(V0, V1, V2, V3) -> case V3 of {'Builtin.MkPair', V4, V5} -> case V4 of {'Idris.Syntax.PRef', V6, V7} -> begin (V13 = begin (V8 = V2), fun (V9) -> begin (V12 = (begin (V10 = V8), fun (V11) -> ('erlang':'get'(V10)) end end(V9))), {'Prelude.Types.Right', V12} end end end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V31 = ('case--case block in getDocsForImplementation-12746'(V0, V1, V2, V7, V6, V5, V17, ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V7, case V17 of {'Idris.Syntax.MkSyntax', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} -> V24 end))))), V31 end(V14)) end end end end; _ -> fun (V32) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end; _ -> fun (V33) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end.
'case--case block in getDocsForName-12542'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of [E0 | E1] -> (fun (V14, V15) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V16) -> ('nested--12237-9284--in--un--showDoc'(V0, V1, V2, V3, V4, V5, V0, V16)) end, V13, []))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V23 = fun (V22) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(V21))} end), V23 end(V18)) end end end end end(E0, E1)); [] -> fun (V24) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'())} end end.
'case--getDocsForName-12499'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of [E0 | E1] -> (fun (V11, V12) -> begin (V13 = [V11 | V12]), ('case--case block in getDocsForName-12542'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V12, V11, V13, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V14, V15)) end end, []}, fun (V16) -> ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V16, case V6 of {'Idris.Syntax.MkSyntax', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} -> V25 end)) end, V13)))) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V4, V2, V1)) end.
'case--case block in getDocsForName,getExtra-11337'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Core.Context.Context.PMDef', V10, V11, V12, V13, V14} -> fun (V15) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Nothing'}, ('Idris.Idris2.Data.List':'un--catMaybes'([('nested--12237-9286--in--un--showTotal'(V0, V1, V2, V3, V4, V5, case V6 of {'Core.Context.Context.MkGlobalDef', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37} -> V26 end)) | [{'Prelude.Types.Just', ('nested--12237-9287--in--un--showVisible'(V0, V1, V2, V3, V4, V5, case V6 of {'Core.Context.Context.MkGlobalDef', V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59} -> V47 end))} | []]]))}} end; {'Core.Context.Context.TCon', V60, V61, V62, V63, V64, V65, V66, V67} -> begin (V112 = ('Idris.Idris2.Data.List':'un--catMaybes'([('nested--12237-9286--in--un--showTotal'(V0, V1, V2, V3, V4, V5, case V6 of {'Core.Context.Context.MkGlobalDef', V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89} -> V78 end)) | [{'Prelude.Types.Just', ('nested--12237-9287--in--un--showVisible'(V0, V1, V2, V3, V4, V5, case V6 of {'Core.Context.Context.MkGlobalDef', V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111} -> V99 end))} | []]]))), begin (V131 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V116) -> fun (V117) -> begin (V118 = V116), fun (V119) -> begin (V120 = (V118(V119))), case V120 of {'Prelude.Types.Left', V121} -> {'Prelude.Types.Left', V121}; {'Prelude.Types.Right', V122} -> (begin (V123 = (V117(V122))), V123 end(V119)) end end end end end end, V114, (V113(V115)))) end end end, fun (V124) -> ('nested--12237-9288--in--un--getDConDoc'(V0, V1, V2, V3, V4, V5, V124)) end, fun (V125) -> ('Idris.Idris2.Core.Context':'un--toFullNames'(V4, {'Core.Context.dn--un--__mkHasNames', fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V126, V127)) end end, fun (V128) -> fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V128, V129, V130)) end end end}, V125)) end)), V66, []))), fun (V132) -> begin (V133 = (V131(V132))), case V133 of {'Prelude.Types.Left', V134} -> {'Prelude.Types.Left', V134}; {'Prelude.Types.Right', V135} -> (begin (V198 = begin (V175 = case V135 of [] -> fun (V136) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Just', <<"data"/utf8>>}, []}} end; [E0 | E1] -> (fun (V137, V138) -> case V138 of [] -> begin (V142 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'((begin (V140 = fun (V139) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V139)) end), fun (V141) -> (V140(V141)) end end(<<"Constructor"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, V137))))), begin (V143 = ('nested--12237-9296--in--un--getFieldsDoc'(V0, V1, V2, V3, V4, V5, V7))), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V150 = fun (V148) -> case V147 of {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Just', <<"data"/utf8>>}, [V142 | []]}}; {'Prelude.Types.Just', V149} -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Just', <<"record"/utf8>>}, [V142 | [V149 | []]]}} end end), V150 end(V144)) end end end end end; _ -> fun (V151) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Just', <<"data"/utf8>>}, [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'((begin (V153 = fun (V152) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V152)) end), fun (V154) -> (V153(V154)) end end(<<"Constructors"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V160 = fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V158, V159)) end end end end), fun (V161) -> fun (V162) -> ((((V160('erased'))('erased'))(V161))(V162)) end end end(fun (V155) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V155)) end))(V135)))))) | []]])) | []]}} end end end(E0, E1)); _ -> fun (V163) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Just', <<"data"/utf8>>}, [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'((begin (V165 = fun (V164) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V164)) end), fun (V166) -> (V165(V166)) end end(<<"Constructors"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V172 = fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V170, V171)) end end end end), fun (V173) -> fun (V174) -> ((((V172('erased'))('erased'))(V173))(V174)) end end end(fun (V167) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V167)) end))(V135)))))) | []]])) | []]}} end end), fun (V176) -> begin (V177 = (V175(V176))), case V177 of {'Prelude.Types.Left', V178} -> {'Prelude.Types.Left', V178}; {'Prelude.Types.Right', V179} -> (begin (V197 = begin (V180 = ('un--getHintsForType'(V4, V3, V7))), fun (V181) -> begin (V182 = (V180(V181))), case V182 of {'Prelude.Types.Left', V183} -> {'Prelude.Types.Left', V183}; {'Prelude.Types.Right', V184} -> (begin (V196 = fun (V185) -> {'Prelude.Types.Right', ((begin (V193 = fun (V187) -> fun (V188) -> fun (V189) -> fun (V190) -> case V190 of {'Builtin.MkPair', V191, V192} -> {'Builtin.MkPair', V191, (V189(V192))} end end end end end), fun (V194) -> fun (V195) -> ((((V193('erased'))('erased'))(V194))(V195)) end end end(fun (V186) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V112, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V186, V184)))) end))(V179))} end), V196 end(V181)) end end end end), V197 end(V176)) end end end end), V198 end(V132)) end end end end end; _ -> fun (V199) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Nothing'}, []}} end end.
'case--getDocsForName,getFieldsDoc-11095'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Builtin.MkPair', V8, V9} -> case V8 of {'Prelude.Types.Just', V10} -> begin (V11 = ('Idris.Idris2.Core.Name.Namespace':'un--<.>'(V10, ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V9))))), begin (V17 = begin (V12 = V4), fun (V13) -> begin (V16 = (begin (V14 = V12), fun (V15) -> ('erlang':'get'(V14)) end end(V13))), {'Prelude.Types.Right', V16} end end end), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V106 = begin (V54 = ('Idris.Idris2.Core.Context':'un--getFieldNames'(case V21 of {'Core.Context.MkDefs', V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53} -> V22 end, V11))), case V54 of [] -> fun (V55) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; [E0 | E1] -> (fun (V56, V57) -> case V57 of [] -> begin (V58 = ('nested--12237-9295--in--un--getFieldDoc'(V0, V1, V2, V3, V4, V5, V56))), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V67 = fun (V63) -> {'Prelude.Types.Right', {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'((begin (V65 = fun (V64) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V64)) end), fun (V66) -> (V65(V66)) end end(<<"Projection"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, V62))))}} end), V67 end(V59)) end end end end; _ -> begin (V69 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V68) -> ('nested--12237-9295--in--un--getFieldDoc'(V0, V1, V2, V3, V4, V5, V68)) end, V54, []))), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V86 = fun (V74) -> {'Prelude.Types.Right', {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'((begin (V76 = fun (V75) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V75)) end), fun (V77) -> (V76(V77)) end end(<<"Projections"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V83 = fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V81, V82)) end end end end), fun (V84) -> fun (V85) -> ((((V83('erased'))('erased'))(V84))(V85)) end end end(fun (V78) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V78)) end))(V73)))))) | []]]))}} end), V86 end(V70)) end end end end end end(E0, E1)); _ -> begin (V88 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V87) -> ('nested--12237-9295--in--un--getFieldDoc'(V0, V1, V2, V3, V4, V5, V87)) end, V54, []))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V105 = fun (V93) -> {'Prelude.Types.Right', {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'((begin (V95 = fun (V94) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V94)) end), fun (V96) -> (V95(V96)) end end(<<"Projections"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V102 = fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V100, V101)) end end end end), fun (V103) -> fun (V104) -> ((((V102('erased'))('erased'))(V103))(V104)) end end end(fun (V97) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V97)) end))(V92)))))) | []]]))}} end), V105 end(V89)) end end end end end end), V106 end(V18)) end end end end end; _ -> fun (V107) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end; _ -> fun (V108) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end.
'case--case block in getDocsForName,getFieldDoc-10934'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of [E0 | E1] -> (fun (V14, V15) -> case V14 of {'Builtin.MkPair', V16, V17} -> case V17 of <<""/utf8>> -> fun (V18) -> case V15 of [] -> {'Prelude.Types.Right', V12}; _ -> case V15 of [] -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([V12 | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.DocStringBody'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.UserDocString'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('nested--12237-9285--in--un--reflowDoc'(V0, V1, V2, V3, V4, V5, V17)))))))) | []]]))}; _ -> {'Prelude.Types.Right', V12} end end end; _ -> fun (V19) -> case V15 of [] -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([V12 | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.DocStringBody'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.UserDocString'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('nested--12237-9285--in--un--reflowDoc'(V0, V1, V2, V3, V4, V5, V17)))))))) | []]]))}; _ -> {'Prelude.Types.Right', V12} end end end; _ -> fun (V20) -> {'Prelude.Types.Right', V12} end end end(E0, E1)); _ -> fun (V21) -> {'Prelude.Types.Right', V12} end end.
'case--getDocsForName,getIFaceDoc-10777'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> []; _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Parameters"/utf8>>)))) | ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--punctuate'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'()), ((begin (V17 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V15, V16)) end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V9) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V10)) end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V11, V12)) end end}, V9)) end))(V8))))])) | []] end.
'case--getDocsForName,getIFaceDoc-10635'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Core.Name.DN', V12, V13} -> []; _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Constructor"/utf8>>)))) | [('Idris.Idris2.Idris.Doc.Annotations':'un--dCon'(V11, ('un--prettyName'(V11)))) | []]])) | []] end.
'case--getDocsForName,getIFaceDoc-10545'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of [] -> []; _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V14) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V15) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V15)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V16) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V16)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V17) -> fun (V18) -> case case (V17 =:= V18) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V14)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V19} -> case V19 of {'Builtin.MkPair', V20, V21} -> [V20 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V21))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V14)); 0 -> V14 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V22} -> case V22 of {'Builtin.MkPair', V23, V24} -> [V23 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V24))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V25) -> fun (V26) -> case case (V25 =:= V26) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V14)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V27} -> case V27 of {'Builtin.MkPair', V28, V29} -> [V28 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V29))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V14)); 0 -> V14 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V30} -> case V30 of {'Builtin.MkPair', V31, V32} -> [V31 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V32))] end end)))))))) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V35) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V35)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V36) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V36)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V37) -> fun (V38) -> case case (V37 =:= V38) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V34)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V39} -> case V39 of {'Builtin.MkPair', V40, V41} -> [V40 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V41))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V34)); 0 -> V34 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V42} -> case V42 of {'Builtin.MkPair', V43, V44} -> [V43 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V44))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V45) -> fun (V46) -> case case (V45 =:= V46) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V34)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V47} -> case V47 of {'Builtin.MkPair', V48, V49} -> [V48 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V49))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V34)); 0 -> V34 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V50} -> case V50 of {'Builtin.MkPair', V51, V52} -> [V51 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V52))] end end)))))))) end end}, <<"Methods"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V58 = fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V56, V57)) end end end end), fun (V59) -> fun (V60) -> ((((V58('erased'))('erased'))(V59))(V60)) end end end(fun (V53) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V53)) end))(V13)))))) | []]])) | []] end.
'case--getDocsForName,getIFaceDoc-10389'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of [] -> []; [E0 | E1] -> (fun (V17, V18) -> case V18 of [] -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Implementation"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, V17)))) | []]; _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Implementations"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V24 = fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V22, V23)) end end end end), fun (V25) -> fun (V26) -> ((((V24('erased'))('erased'))(V25))(V26)) end end end(fun (V19) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V19)) end))(V16)))))) | []]])) | []] end end(E0, E1)); _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Implementations"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V32 = fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V30, V31)) end end end end), fun (V33) -> fun (V34) -> ((((V32('erased'))('erased'))(V33))(V34)) end end end(fun (V27) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V27)) end))(V16)))))) | []]])) | []] end.
'case--getDocsForName,getFixityDoc-10117'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [] -> []; [E0 | E1] -> (fun (V10, V11) -> case V11 of [] -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Fixity Declaration"/utf8>>)))), V10)) | []]; _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Fixity Declarations"/utf8>>)))), {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.Line'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(V9)))))) | []] end end(E0, E1)); _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Fixity Declarations"/utf8>>)))), {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.Line'})), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(V9)))))) | []] end.
'case--getDocsForName,getPrefixDoc-9963'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Prelude.Types.Just', V8} -> case V8 of {'Core.Name.Basic', V9} -> begin (V15 = begin (V10 = V3), fun (V11) -> begin (V14 = (begin (V12 = V10), fun (V13) -> ('erlang':'get'(V12)) end end(V11))), {'Prelude.Types.Right', V14} end end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V43 = fun (V20) -> case ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(V9, case V19 of {'Idris.Syntax.MkSyntax', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33} -> V22 end)) of {'Prelude.Types.Just', V34} -> case V34 of {'Builtin.MkPair', V35, V36} -> {'Prelude.Types.Right', [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V38 = fun (V37) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V37)) end), fun (V39) -> (V38(V39)) end end(<<"prefix operator, level"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V40) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V41, V42)) end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V36)))))) | []]} end; {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', []} end end), V43 end(V16)) end end end end; _ -> fun (V44) -> {'Prelude.Types.Right', []} end end; _ -> fun (V45) -> {'Prelude.Types.Right', []} end end.
'case--getDocsForName,getInfixDoc-9805'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Prelude.Types.Just', V8} -> case V8 of {'Core.Name.Basic', V9} -> begin (V15 = begin (V10 = V3), fun (V11) -> begin (V14 = (begin (V12 = V10), fun (V13) -> ('erlang':'get'(V12)) end end(V11))), {'Prelude.Types.Right', V14} end end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V46 = case ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(V9, case V19 of {'Idris.Syntax.MkSyntax', V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32} -> V20 end)) of {'Prelude.Types.Just', V33} -> fun (V34) -> case V33 of {'Builtin.MkPair', V35, V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> {'Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V39) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V40, V41)) end end}, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_Fixity'(V37)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"operator,"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"level"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V42) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V42)) end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V43, V44)) end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V38)))) | []]]]]))))} end end end; {'Prelude.Types.Nothing'} -> fun (V45) -> {'Prelude.Types.Right', []} end end), V46 end(V16)) end end end end; _ -> fun (V47) -> {'Prelude.Types.Right', []} end end; _ -> fun (V48) -> {'Prelude.Types.Right', []} end end.
'case--case block in getDocsForName,getDConDoc-9492'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of [E0 | E1] -> (fun (V14, V15) -> case V14 of {'Builtin.MkPair', V16, V17} -> case V17 of <<""/utf8>> -> fun (V18) -> case V15 of [] -> {'Prelude.Types.Right', V12}; _ -> case V15 of [] -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([V12 | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.DocStringBody'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.UserDocString'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('nested--12237-9285--in--un--reflowDoc'(V0, V1, V2, V3, V4, V5, V17)))))))) | []]]))}; _ -> {'Prelude.Types.Right', V12} end end end; _ -> fun (V19) -> case V15 of [] -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([V12 | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.DocStringBody'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.UserDocString'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('nested--12237-9285--in--un--reflowDoc'(V0, V1, V2, V3, V4, V5, V17)))))))) | []]]))}; _ -> {'Prelude.Types.Right', V12} end end end; _ -> fun (V20) -> {'Prelude.Types.Right', V12} end end end(E0, E1)); _ -> fun (V21) -> {'Prelude.Types.Right', V12} end end.
'case--getImplDocs-8762'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> []; [E0 | E1] -> (fun (V6, V7) -> case V7 of [] -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V8) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V9) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V9)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V10) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V10)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V8)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V8)); 0 -> V8 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V19) -> fun (V20) -> case case (V19 =:= V20) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V8)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V21} -> case V21 of {'Builtin.MkPair', V22, V23} -> [V22 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V23))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V8)); 0 -> V8 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V24} -> case V24 of {'Builtin.MkPair', V25, V26} -> [V25 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V26))] end end)))))))) end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V29) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V29)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V30) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V30)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V28)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V28)); 0 -> V28 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V39) -> fun (V40) -> case case (V39 =:= V40) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V28)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V41} -> case V41 of {'Builtin.MkPair', V42, V43} -> [V42 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V43))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V28)); 0 -> V28 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V44} -> case V44 of {'Builtin.MkPair', V45, V46} -> [V45 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V46))] end end)))))))) end end}, <<"Hint"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, V6)))) | []]; _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V47) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V48) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V48)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V49) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V49)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V50) -> fun (V51) -> case case (V50 =:= V51) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V47)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V52} -> case V52 of {'Builtin.MkPair', V53, V54} -> [V53 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V54))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V47)); 0 -> V47 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V55} -> case V55 of {'Builtin.MkPair', V56, V57} -> [V56 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V57))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V58) -> fun (V59) -> case case (V58 =:= V59) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V47)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V60} -> case V60 of {'Builtin.MkPair', V61, V62} -> [V61 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V62))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V47)); 0 -> V47 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V63} -> case V63 of {'Builtin.MkPair', V64, V65} -> [V64 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V65))] end end)))))))) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V68) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V68)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V69) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V69)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V70) -> fun (V71) -> case case (V70 =:= V71) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V67)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V72} -> case V72 of {'Builtin.MkPair', V73, V74} -> [V73 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V74))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V67)); 0 -> V67 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V75} -> case V75 of {'Builtin.MkPair', V76, V77} -> [V76 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V77))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V78) -> fun (V79) -> case case (V78 =:= V79) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V67)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V80} -> case V80 of {'Builtin.MkPair', V81, V82} -> [V81 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V82))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V67)); 0 -> V67 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V83} -> case V83 of {'Builtin.MkPair', V84, V85} -> [V84 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V85))] end end)))))))) end end}, <<"Hints"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V91 = fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V89, V90)) end end end end), fun (V92) -> fun (V93) -> ((((V91('erased'))('erased'))(V92))(V93)) end end end(fun (V86) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V86)) end))(V5)))))) | []]])) | []] end end(E0, E1)); _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V94) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V95) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V95)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V96) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V96)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V97) -> fun (V98) -> case case (V97 =:= V98) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V94)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V99} -> case V99 of {'Builtin.MkPair', V100, V101} -> [V100 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V101))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V94)); 0 -> V94 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V102} -> case V102 of {'Builtin.MkPair', V103, V104} -> [V103 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V104))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V105) -> fun (V106) -> case case (V105 =:= V106) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V94)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V107} -> case V107 of {'Builtin.MkPair', V108, V109} -> [V108 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V109))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V94)); 0 -> V94 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V110} -> case V110 of {'Builtin.MkPair', V111, V112} -> [V111 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V112))] end end)))))))) end, fun (V113) -> fun (V114) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V115) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V115)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V116) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V116)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V117) -> fun (V118) -> case case (V117 =:= V118) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V114)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V119} -> case V119 of {'Builtin.MkPair', V120, V121} -> [V120 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V121))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V114)); 0 -> V114 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V122} -> case V122 of {'Builtin.MkPair', V123, V124} -> [V123 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V124))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V125) -> fun (V126) -> case case (V125 =:= V126) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V114)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V127} -> case V127 of {'Builtin.MkPair', V128, V129} -> [V128 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V129))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V114)); 0 -> V114 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V130} -> case V130 of {'Builtin.MkPair', V131, V132} -> [V131 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V132))] end end)))))))) end end}, <<"Hints"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Declarations'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(((begin (V138 = fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V136, V137)) end end end end), fun (V139) -> fun (V140) -> ((((V138('erased'))('erased'))(V139))(V140)) end end end(fun (V133) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V133)) end))(V5)))))) | []]])) | []] end.
'case--prettyName-8337'(V0, V1) -> case V1 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V2) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V2)) end, fun (V3) -> fun (V4) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V3, V4)) end end}, ('Idris.Idris2.Core.Name':'un--nameRoot'(V0)))); {'Prelude.Types.Just', V5} -> case ('Idris.Idris2.Core.Name':'un--isOpUserName'(V5)) of 1 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--parens'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V6) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_UserName'(V6)) end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_UserName'(V7, V8)) end end}, V5)))); 0 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V9) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_UserName'(V9)) end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_UserName'(V10, V11)) end end}, V5)) end end.
'nested--18192-14662--in--un--visible'(V0, V1, V2, V3, V4, V5) -> begin (V38 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V4 of {'Core.Context.MkDefs', V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37} -> V6 end))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V67 = fun (V43) -> case V42 of {'Prelude.Types.Just', V44} -> {'Prelude.Types.Right', ('Idris.Idris2.Core.TT':'dn--un--/=_Eq_Visibility'(case V44 of {'Core.Context.Context.MkGlobalDef', V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66} -> V54 end, 0))}; {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', 0} end end), V67 end(V39)) end end end end.
'nested--12237-9287--in--un--showVisible'(V0, V1, V2, V3, V4, V5, V6) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Visibility"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Syntax', {'Idris.Pretty.Annotations.Keyword'}}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V7) -> ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_Void_Visibility'(V7)) end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.TT':'dn--un--prettyPrec_Pretty_Void_Visibility'(V8, V9)) end end}, V6)))))).
'nested--12237-9286--in--un--showTotal'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Core.TT.MkTotality', V7, V8} -> case V7 of {'Core.TT.Unchecked'} -> {'Prelude.Types.Nothing'}; _ -> {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V9) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V10) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V10)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V11) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V11)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V12) -> fun (V13) -> case case (V12 =:= V13) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V9)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V14} -> case V14 of {'Builtin.MkPair', V15, V16} -> [V15 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V16))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V9)); 0 -> V9 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V17} -> case V17 of {'Builtin.MkPair', V18, V19} -> [V18 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V19))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V20) -> fun (V21) -> case case (V20 =:= V21) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V9)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V22} -> case V22 of {'Builtin.MkPair', V23, V24} -> [V23 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V24))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V9)); 0 -> V9 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))))))) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V30) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V30)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V31) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V31)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V32) -> fun (V33) -> case case (V32 =:= V33) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V29)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V34} -> case V34 of {'Builtin.MkPair', V35, V36} -> [V35 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V36))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V29)); 0 -> V29 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V37} -> case V37 of {'Builtin.MkPair', V38, V39} -> [V38 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V39))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V40) -> fun (V41) -> case case (V40 =:= V41) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V29)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V42} -> case V42 of {'Builtin.MkPair', V43, V44} -> [V43 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V44))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V29)); 0 -> V29 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V45} -> case V45 of {'Builtin.MkPair', V46, V47} -> [V46 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V47))] end end)))))))) end end}, <<"Totality"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Syntax', {'Idris.Pretty.Annotations.Keyword'}}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V48) -> ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_Void_Totality'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.TT':'dn--un--prettyPrec_Pretty_Void_Totality'(V49, V50)) end end}, V6))))))} end end.
'nested--12237-9284--in--un--showDoc'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Doc.String.MkConfig', V8, V9, V10, V11} -> case V7 of {'Builtin.MkPair', V12, V13} -> begin (V19 = begin (V14 = V4), fun (V15) -> begin (V18 = (begin (V16 = V14), fun (V17) -> ('erlang':'get'(V16)) end end(V15))), {'Prelude.Types.Right', V18} end end end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V330 = begin (V56 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V12, case V23 of {'Core.Context.MkDefs', V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55} -> V24 end))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V329 = case V60 of {'Prelude.Types.Just', V61} -> begin (V63 = case V11 of 1 -> ('nested--12237-9297--in--un--getExtra'(V0, V1, V2, V3, V4, V5, V12, V61)); 0 -> fun (V62) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Nothing'}, []}} end end), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V328 = case V67 of {'Builtin.MkPair', V68, V69} -> begin (V101 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V70) -> fun (V71) -> begin (V72 = V70), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V77 = (V71(V76))), V77 end(V73)) end end end end end end, fun (V78) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V4, V3, {'Core.Env.Nil'}, V78)) end, ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V4, [], V23, {'Core.Env.Nil'}, case V61 of {'Core.Context.Context.MkGlobalDef', V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100} -> V81 end))))), fun (V102) -> begin (V103 = (V101(V102))), case V103 of {'Prelude.Types.Left', V104} -> {'Prelude.Types.Left', V104}; {'Prelude.Types.Right', V105} -> (begin (V327 = begin (V112 = case V10 of 1 -> (case V105 of {'Idris.Syntax.PPi', V106, V107, V108, V109, V110, V111} -> case V108 of {'Core.TT.AutoImplicit'} -> fun () -> V111 end; _ -> fun () -> V105 end end; _ -> fun () -> V105 end end()); 0 -> V105 end), begin (V113 = ('Idris.Idris2.Core.Context':'un--aliasName'(V4, V12))), fun (V114) -> begin (V115 = (V113(V114))), case V115 of {'Prelude.Types.Left', V116} -> {'Prelude.Types.Left', V116}; {'Prelude.Types.Right', V117} -> (begin (V326 = begin (V141 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V118) -> {'Idris.Doc.Annotations.Syntax', V118} end, ('Idris.Idris2.Idris.Pretty.Annotations':'un--prettyRig'(case V61 of {'Core.Context.Context.MkGlobalDef', V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140} -> V126 end))))), begin (V143 = ('Idris.Idris2.Idris.Pretty':'un--showCategory'(fun (V142) -> {'Idris.Doc.Annotations.Syntax', V142} end, V61))), begin (V147 = ('un--prettyKindedName'(V68, (V143(case V9 of 1 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V144) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V144)) end, fun (V145) -> fun (V146) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V145, V146)) end end}, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V117)))); 0 -> ('un--prettyName'(V117)) end))))), begin (V208 = case ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V150, V151, V152)) end end end end end, fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V155, V156, V157)) end end end end end, fun (V158) -> fun (V159) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V159)) end end, fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V163, V164, V165, V166)) end end end end end end end, fun (V167) -> fun (V168) -> V168 end end, fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V171, V172, V173)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Context.Context':'dn--un--==_Eq_DefFlag'(V174, V175)) end end, fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.Context.Context':'dn--un--/=_Eq_DefFlag'(V176, V177)) end end}, {'Core.Context.Context.Deprecate'}, case V61 of {'Core.Context.Context.MkGlobalDef', V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199} -> V189 end)) of 1 -> ((begin (V205 = fun (V203) -> fun (V204) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V203, V204)) end end), fun (V206) -> fun (V207) -> ((V205(V206))(V207)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Deprecation'}, (begin (V201 = fun (V200) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V200)) end), fun (V202) -> (V201(V202)) end end(<<"=DEPRECATED="/utf8>>))))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--line'()))); 0 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'()) end), begin (V223 = ((begin (V220 = fun (V218) -> fun (V219) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V218, V219)) end end), fun (V221) -> fun (V222) -> ((V220(V221))(V222)) end end end(V208))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Decl', V12}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([((begin (V211 = fun (V209) -> fun (V210) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V209, V210)) end end), fun (V212) -> fun (V213) -> ((V211(V212))(V213)) end end end(V141))(V147)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V214) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V214)) end, fun (V215) -> fun (V216) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V215, V216)) end end}, fun (V217) -> {'Idris.Doc.Annotations.Syntax', V217} end, V112)) | []]]]))))))), begin (V247 = begin (V224 = ('nested--12237-9285--in--un--reflowDoc'(V0, V1, V2, V3, V4, V5, V13))), ((begin (V244 = fun (V240) -> fun (V241) -> fun (V242) -> fun (V243) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V242, V243)) end end end end), fun (V245) -> fun (V246) -> ((((V244('erased'))('erased'))(V245))(V246)) end end end(fun (V239) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.UserDocString'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(V224)))) end))(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V227, V228)) end end end end, fun (V229) -> fun (V230) -> {'Prelude.Types.Just', V230} end end, fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V233, V234)) end end end end}, fun (V235) -> {'Prelude.Types.Nothing'} end, fun (V236) -> fun (V237) -> fun (V238) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V237, V238)) end end end}, case ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V224)) of 1 -> 0; 0 -> 1 end)))) end), begin (V248 = ('nested--12237-9293--in--un--getFixityDoc'(V0, V1, V2, V3, V4, V5, V12))), fun (V249) -> begin (V250 = (V248(V249))), case V250 of {'Prelude.Types.Left', V251} -> {'Prelude.Types.Left', V251}; {'Prelude.Types.Right', V252} -> (begin (V325 = begin (V299 = begin (V264 = (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V261) -> V261 end end, fun () -> fun (V262) -> fun (V263) -> [V262 | V263] end end end, V247))(((begin (V258 = fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V256, V257)) end end end end), fun (V259) -> fun (V260) -> ((((V258('erased'))('erased'))(V259))(V260)) end end end(fun (V253) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V253)) end))(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V69, V252))))))), ((begin (V296 = fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V294, V295)) end end end end), fun (V297) -> fun (V298) -> ((((V296('erased'))('erased'))(V297))(V298)) end end end(fun (V279) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.DocStringBody'}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V280) -> fun (V281) -> ((begin (V289 = fun (V287) -> fun (V288) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V287, V288)) end end), fun (V290) -> fun (V291) -> ((V289(V290))(V291)) end end end(((begin (V284 = fun (V282) -> fun (V283) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V282, V283)) end end), fun (V285) -> fun (V286) -> ((V284(V285))(V286)) end end end(V280))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hardline'())))))(V281)) end end, V264)))) end))(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V267, V268)) end end end end, fun (V269) -> fun (V270) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'(V270)) end end, fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_List'(V273, V274)) end end end end}, fun (V275) -> [] end, fun (V276) -> fun (V277) -> fun (V278) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V277, (V278()))) end end end}, case ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V264)) of 1 -> 0; 0 -> 1 end)))) end), begin (V315 = ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V300) -> fun (V301) -> fun (V302) -> fun (V303) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V302, V303)) end end end end, fun (V304) -> fun (V305) -> {'Prelude.Types.Just', V305} end end, fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V308, V309)) end end end end}, fun (V310) -> {'Prelude.Types.Nothing'} end, fun (V311) -> fun (V312) -> fun (V313) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V312, V313)) end end end}, V8)), fun (V314) -> {'Prelude.Types.Just', V223} end))), fun (V316) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('Idris.Idris2.Data.List':'un--catMaybes'([V315 | ((begin (V322 = fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V320, V321)) end end end end), fun (V323) -> fun (V324) -> ((((V322('erased'))('erased'))(V323))(V324)) end end end(fun (V317) -> {'Prelude.Types.Just', V317} end))(V299))]))))} end end end), V325 end(V249)) end end end end end end end end end end), V326 end(V114)) end end end end end), V327 end(V102)) end end end end end), V328 end(V64)) end end end end; {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V4, V2, V12)) end), V329 end(V57)) end end end end), V330 end(V20)) end end end end end end.
'nested--12237-9285--in--un--reflowDoc'(V0, V1, V2, V3, V4, V5, V6) -> ((begin (V15 = fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V13, V14)) end end end end), fun (V16) -> fun (V17) -> ((((V15('erased'))('erased'))(V16))(V17)) end end end(fun (V7) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V8) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V8)) end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V9, V10)) end end}, V7)))) end))(('Idris.Idris2.Data.String':'un--lines'(V6)))).
'nested--11995-9041--in--un--primTyDoc'(V0, V1, V2, V3) -> case V3 of 0 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of bounded signed integers (backend dependent size)"/utf8>>)); 1 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 8 bits signed integers"/utf8>>)); 2 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 16 bits signed integers"/utf8>>)); 3 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 32 bits signed integers"/utf8>>)); 4 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 64 bits signed integers"/utf8>>)); 5 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of unbounded signed integers"/utf8>>)); 6 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 8 bits unsigned integers"/utf8>>)); 7 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 16 bits unsigned integers"/utf8>>)); 8 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 32 bits unsigned integers"/utf8>>)); 9 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of 64 bits unsigned integers"/utf8>>)); 10 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of strings"/utf8>>)); 11 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of characters"/utf8>>)); 12 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of double-precision floating-points"/utf8>>)); 13 -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive type of tokens for IO actions"/utf8>>)) end.
'nested--11995-9042--in--un--primDoc'(V0, V1, V2, V3) -> case V3 of {'Core.TT.I', V4} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive signed int value (backend-dependent precision)"/utf8>>)); {'Core.TT.I8', V5} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive signed 8 bits value"/utf8>>)); {'Core.TT.I16', V6} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive signed 16 bits value"/utf8>>)); {'Core.TT.I32', V7} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive signed 32 bits value"/utf8>>)); {'Core.TT.I64', V8} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive signed 64 bits value"/utf8>>)); {'Core.TT.BI', V9} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive unsigned int value (backend-dependent precision)"/utf8>>)); {'Core.TT.B8', V10} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive unsigned 8 bits value"/utf8>>)); {'Core.TT.B16', V11} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive unsigned 16 bits value"/utf8>>)); {'Core.TT.B32', V12} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive unsigned 32 bits value"/utf8>>)); {'Core.TT.B64', V13} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive unsigned 64 bits value"/utf8>>)); {'Core.TT.Str', V14} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive string value"/utf8>>)); {'Core.TT.Ch', V15} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive character value"/utf8>>)); {'Core.TT.Db', V16} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive double value"/utf8>>)); {'Core.TT.PrT', V17} -> ('nested--11995-9041--in--un--primTyDoc'(V0, V1, V2, V17)); {'Core.TT.WorldVal'} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Primitive token for IO actions"/utf8>>)) end.
'nested--18192-14663--in--un--inNS'(V0, V1, V2, V3, V4) -> case V4 of {'Core.Name.NS', V5, V6} -> case V6 of {'Core.Name.UN', V7} -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V0, V5)); _ -> 0 end; _ -> 0 end.
'nested--12237-9292--in--un--getPrefixDoc'(V0, V1, V2, V3, V4, V5, V6) -> ('case--getDocsForName,getPrefixDoc-9963'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Core.Name':'un--userNameRoot'(V6)))).
'nested--12237-9290--in--un--getMethDoc'(V0, V1, V2, V3, V4, V5, V6) -> begin (V12 = begin (V7 = V3), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V57 = case ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(case V6 of {'Idris.Syntax.MkMethod', V17, V18, V19, V20} -> V17 end, case V16 of {'Idris.Syntax.MkSyntax', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33} -> V29 end)) of [E0 | E1] -> (fun (V34, V35) -> case V35 of [] -> begin (V36 = ('nested--12237-9284--in--un--showDoc'(V0, V1, V2, V3, V4, V5, ('un--methodsConfig'()), V34))), ((begin (V52 = fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V49, V50, V51)) end end end end end), fun (V53) -> fun (V54) -> ((((V52('erased'))('erased'))(V53))(V54)) end end end((begin (V44 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> {'Prelude.Types.Right', (V40(V43))} end end end end end), fun (V45) -> fun (V46) -> ((((V44('erased'))('erased'))(V45))(V46)) end end end(fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'(V37)) end))))(V36)) end; _ -> fun (V55) -> {'Prelude.Types.Right', []} end end end(E0, E1)); _ -> fun (V56) -> {'Prelude.Types.Right', []} end end), V57 end(V13)) end end end end.
'nested--12237-9291--in--un--getInfixDoc'(V0, V1, V2, V3, V4, V5, V6) -> ('case--getDocsForName,getInfixDoc-9805'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Core.Name':'un--userNameRoot'(V6)))).
'nested--12237-9289--in--un--getImplDoc'(V0, V1, V2, V3, V4, V5, V6) -> begin (V12 = begin (V7 = V4), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V87 = begin (V49 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V6, case V16 of {'Core.Context.MkDefs', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48} -> V17 end))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V86 = case V53 of {'Prelude.Types.Just', V54} -> begin (V78 = ('un--prettyType'(V4, V3, fun (V55) -> {'Idris.Doc.Annotations.Syntax', V55} end, case V54 of {'Core.Context.Context.MkGlobalDef', V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77} -> V58 end))), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V84 = fun (V83) -> {'Prelude.Types.Right', [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Decl', V6}, V82)) | []]} end), V84 end(V79)) end end end end; {'Prelude.Types.Nothing'} -> fun (V85) -> {'Prelude.Types.Right', []} end end), V86 end(V50)) end end end end), V87 end(V13)) end end end end.
'nested--12237-9294--in--un--getIFaceDoc'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Builtin.MkPair', V7, V8} -> begin (V15 = ('case--getDocsForName,getIFaceDoc-10777'(V0, V1, V2, V3, V4, V5, V7, V8, case V8 of {'Idris.Syntax.MkIFaceInfo', V9, V10, V11, V12, V13, V14} -> V11 end))), begin (V24 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V16) -> ('Idris.Idris2.Idris.Resugar':'un--pterm'(V4, V3, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V17) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V17)) end, V16)))) end, case V8 of {'Idris.Syntax.MkIFaceInfo', V18, V19, V20, V21, V22, V23} -> V21 end, []))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V94 = begin (V44 = case V28 of [] -> []; _ -> [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'((begin (V30 = fun (V29) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V29)) end), fun (V31) -> (V30(V31)) end end(<<"Constraints"/utf8>>)))) | ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--punctuate'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'()), ((begin (V41 = fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V39, V40)) end end end end), fun (V42) -> fun (V43) -> ((((V41('erased'))('erased'))(V42))(V43)) end end end(fun (V32) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V33) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V34, V35)) end end}, fun (V36) -> {'Idris.Doc.Annotations.Syntax', V36} end, V32)) end))(V28))))])) | []] end), begin (V51 = ('case--getDocsForName,getIFaceDoc-10635'(V0, V1, V2, V3, V4, V5, V7, V8, V15, V28, V44, ('Idris.Idris2.Core.Name':'un--dropNS'(case V8 of {'Idris.Syntax.MkIFaceInfo', V45, V46, V47, V48, V49, V50} -> V45 end))))), begin (V59 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V52) -> ('nested--12237-9290--in--un--getMethDoc'(V0, V1, V2, V3, V4, V5, V52)) end, case V8 of {'Idris.Syntax.MkIFaceInfo', V53, V54, V55, V56, V57, V58} -> V57 end, []))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V93 = begin (V67 = ('case--getDocsForName,getIFaceDoc-10545'(V0, V1, V2, V3, V4, V5, V7, V8, V15, V28, V44, V51, V63, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V64, V65)) end end, []}, fun (V66) -> V66 end, V63))))), begin (V68 = ('Idris.Idris2.Core.Context':'un--getSearchData'(V4, V2, 0, V7))), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V92 = begin (V81 = case V72 of {'Core.Context.MkSearchData', V73, V74} -> case V74 of [] -> fun (V75) -> {'Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V76, V77) -> case V76 of {'Builtin.MkPair', V78, V79} -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V80) -> ('nested--12237-9289--in--un--getImplDoc'(V0, V1, V2, V3, V4, V5, V80)) end, V79, [])) end end(E0, E1)) end end), fun (V82) -> begin (V83 = (V81(V82))), case V83 of {'Prelude.Types.Left', V84} -> {'Prelude.Types.Left', V84}; {'Prelude.Types.Right', V85} -> (begin (V91 = begin (V89 = ('case--getDocsForName,getIFaceDoc-10389'(V0, V1, V2, V3, V4, V5, V7, V8, V15, V28, V44, V51, V63, V67, V72, V85, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V86, V87)) end end, []}, fun (V88) -> V88 end, V85))))), fun (V90) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V15, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V44, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V51, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V67, V89))))))))))} end end), V91 end(V82)) end end end end), V92 end(V69)) end end end end end), V93 end(V60)) end end end end end end), V94 end(V25)) end end end end end end.
'nested--12237-9293--in--un--getFixityDoc'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('nested--12237-9291--in--un--getInfixDoc'(V0, V1, V2, V3, V4, V5, V6))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V19 = begin (V12 = ('nested--12237-9292--in--un--getPrefixDoc'(V0, V1, V2, V3, V4, V5, V6))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V18 = fun (V17) -> {'Prelude.Types.Right', ('case--getDocsForName,getFixityDoc-10117'(V0, V1, V2, V3, V4, V5, V6, V11, V16, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V11, V16))))} end), V18 end(V13)) end end end end), V19 end(V8)) end end end end.
'nested--12237-9296--in--un--getFieldsDoc'(V0, V1, V2, V3, V4, V5, V6) -> ('case--getDocsForName,getFieldsDoc-11095'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Core.Name':'un--displayName'(V6)))).
'nested--12237-9295--in--un--getFieldDoc'(V0, V1, V2, V3, V4, V5, V6) -> begin (V12 = begin (V7 = V3), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V140 = begin (V22 = begin (V17 = V4), fun (V18) -> begin (V21 = (begin (V19 = V17), fun (V20) -> ('erlang':'get'(V19)) end end(V18))), {'Prelude.Types.Right', V21} end end end), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V139 = begin (V59 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V6, case V26 of {'Core.Context.MkDefs', V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58} -> V27 end))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V138 = case V63 of {'Prelude.Types.Just', V64} -> begin (V88 = ('un--prettyType'(V4, V3, fun (V65) -> {'Idris.Doc.Annotations.Syntax', V65} end, case V64 of {'Core.Context.Context.MkGlobalDef', V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87} -> V68 end))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V136 = begin (V121 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Decl', V6}, ((begin (V118 = fun (V116) -> fun (V117) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V116, V117)) end end), fun (V119) -> fun (V120) -> ((V118(V119))(V120)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V93) -> {'Idris.Doc.Annotations.Syntax', V93} end, ('Idris.Idris2.Idris.Pretty.Annotations':'un--prettyRig'(case V64 of {'Core.Context.Context.MkGlobalDef', V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115} -> V101 end))))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([('Idris.Idris2.Idris.Doc.Annotations':'un--fun'(V6, ('un--prettyName'(V6)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()) | [V92 | []]]]))))))), begin (V122 = {'Prelude.Types.Just', V64}), ('case--case block in getDocsForName,getFieldDoc-10934'(V0, V1, V2, V3, V4, V5, V6, V16, V26, V64, V122, V92, V121, ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V6, case V16 of {'Idris.Syntax.MkSyntax', V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135} -> V131 end)))) end end), V136 end(V89)) end end end end; {'Prelude.Types.Nothing'} -> fun (V137) -> {'Prelude.Types.Right', {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.Empty'}} end end), V138 end(V60)) end end end end), V139 end(V23)) end end end end), V140 end(V13)) end end end end.
'nested--12237-9297--in--un--getExtra'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V13 = begin (V8 = V3), fun (V9) -> begin (V12 = (begin (V10 = V8), fun (V11) -> ('erlang':'get'(V10)) end end(V9))), {'Prelude.Types.Right', V12} end end end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V76 = case ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V6, case V17 of {'Idris.Syntax.MkSyntax', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} -> V24 end)) of [] -> ('case--case block in getDocsForName,getExtra-11337'(V0, V1, V2, V3, V4, V5, V7, V6, V17, case V7 of {'Core.Context.Context.MkGlobalDef', V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52} -> V48 end)); [E0 | E1] -> (fun (V53, V54) -> case V54 of [] -> begin (V55 = ('nested--12237-9294--in--un--getIFaceDoc'(V0, V1, V2, V3, V4, V5, V53))), ((begin (V71 = fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V68, V69, V70)) end end end end end), fun (V72) -> fun (V73) -> ((((V71('erased'))('erased'))(V72))(V73)) end end end((begin (V63 = fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> {'Prelude.Types.Right', (V59(V62))} end end end end end), fun (V64) -> fun (V65) -> ((((V63('erased'))('erased'))(V64))(V65)) end end end(fun (V56) -> {'Builtin.MkPair', {'Prelude.Types.Just', <<"interface"/utf8>>}, ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'(V56))} end))))(V55)) end; _ -> fun (V74) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Nothing'}, []}} end end end(E0, E1)); _ -> fun (V75) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Nothing'}, []}} end end), V76 end(V14)) end end end end.
'nested--12237-9288--in--un--getDConDoc'(V0, V1, V2, V3, V4, V5, V6) -> begin (V12 = begin (V7 = V4), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V112 = begin (V49 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V6, case V16 of {'Core.Context.MkDefs', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48} -> V17 end))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V111 = case V53 of {'Prelude.Types.Just', V54} -> begin (V60 = begin (V55 = V3), fun (V56) -> begin (V59 = (begin (V57 = V55), fun (V58) -> ('erlang':'get'(V57)) end end(V56))), {'Prelude.Types.Right', V59} end end end), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V109 = begin (V88 = ('un--prettyType'(V4, V3, fun (V65) -> {'Idris.Doc.Annotations.Syntax', V65} end, case V54 of {'Core.Context.Context.MkGlobalDef', V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87} -> V68 end))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V108 = begin (V93 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Decl', V6}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([('Idris.Idris2.Idris.Doc.Annotations':'un--dCon'(V6, ('un--prettyName'(V6)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()) | [V92 | []]]]))))), begin (V94 = {'Prelude.Types.Just', V54}), ('case--case block in getDocsForName,getDConDoc-9492'(V0, V1, V2, V3, V4, V5, V6, V16, V54, V94, V64, V92, V93, ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V6, case V64 of {'Idris.Syntax.MkSyntax', V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107} -> V103 end)))) end end), V108 end(V89)) end end end end), V109 end(V61)) end end end end; {'Prelude.Types.Nothing'} -> fun (V110) -> {'Prelude.Types.Right', {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.Empty'}} end end), V111 end(V50)) end end end end), V112 end(V13)) end end end end.
'un--summarise'(V0, V1, V2) -> begin (V8 = begin (V3 = V0), fun (V4) -> begin (V7 = (begin (V5 = V3), fun (V6) -> ('erlang':'get'(V5)) end end(V4))), {'Prelude.Types.Right', V7} end end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V151 = begin (V45 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V12 of {'Core.Context.MkDefs', V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44} -> V13 end))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V150 = case V49 of {'Prelude.Types.Just', V50} -> begin (V74 = ('un--prettyType'(V0, V1, fun (V51) -> {'Idris.Doc.Annotations.Syntax', V51} end, case V50 of {'Core.Context.Context.MkGlobalDef', V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73} -> V54 end))), fun (V75) -> begin (V76 = (V74(V75))), case V76 of {'Prelude.Types.Left', V77} -> {'Prelude.Types.Left', V77}; {'Prelude.Types.Right', V78} -> (begin (V109 = fun (V79) -> {'Prelude.Types.Right', ((begin (V106 = fun (V104) -> fun (V105) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V104, V105)) end end), fun (V107) -> fun (V108) -> ((V106(V107))(V108)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V81) -> {'Idris.Doc.Annotations.Syntax', V81} end, ('Idris.Idris2.Idris.Pretty.Annotations':'un--prettyRig'(case V50 of {'Core.Context.Context.MkGlobalDef', V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103} -> V89 end))))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([(('Idris.Idris2.Idris.Pretty':'un--showCategory'(fun (V80) -> {'Idris.Doc.Annotations.Syntax', V80} end, V50))(('un--prettyName'(V2)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hang'(0, V78)) | []]]]))))} end), V109 end(V75)) end end end end; _ -> fun (V110) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V111) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V112) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V112)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V113) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V113)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V114) -> fun (V115) -> case case (V114 =:= V115) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V111)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V116} -> case V116 of {'Builtin.MkPair', V117, V118} -> [V117 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V118))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V111)); 0 -> V111 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V119} -> case V119 of {'Builtin.MkPair', V120, V121} -> [V120 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V121))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V122) -> fun (V123) -> case case (V122 =:= V123) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V111)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V124} -> case V124 of {'Builtin.MkPair', V125, V126} -> [V125 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V126))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V111)); 0 -> V111 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V127} -> case V127 of {'Builtin.MkPair', V128, V129} -> [V128 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V129))] end end)))))))) end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V132) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V132)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V133) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V133)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V134) -> fun (V135) -> case case (V134 =:= V135) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V131)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V136} -> case V136 of {'Builtin.MkPair', V137, V138} -> [V137 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V138))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V131)); 0 -> V131 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V139} -> case V139 of {'Builtin.MkPair', V140, V141} -> [V140 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V141))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V142) -> fun (V143) -> case case (V142 =:= V143) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V131)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V144} -> case V144 of {'Builtin.MkPair', V145, V146} -> [V145 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V146))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V131)); 0 -> V131 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V147} -> case V147 of {'Builtin.MkPair', V148, V149} -> [V148 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V149))] end end)))))))) end end}, <<""/utf8>>))} end end), V150 end(V46)) end end end end), V151 end(V9)) end end end end.
'un--shortNamesConfig'() -> {'Idris.Doc.String.MkConfig', 1, 0, 0, 1}.
'un--prettyType'(V0, V1, V2, V3) -> begin (V9 = begin (V4 = V0), fun (V5) -> begin (V8 = (begin (V6 = V4), fun (V7) -> ('erlang':'get'(V6)) end end(V5))), {'Prelude.Types.Right', V8} end end end), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V40 = begin (V14 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V13, {'Core.Env.Nil'}, V3))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V39 = begin (V23 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V21, V22)) end end}, V18))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V38 = begin (V28 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Core.Env.Nil'}, V27))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V37 = fun (V33) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V34) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V34)) end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V35, V36)) end end}, V2, V32))} end), V37 end(V29)) end end end end), V38 end(V24)) end end end end), V39 end(V15)) end end end end), V40 end(V10)) end end end end.
'un--prettyName'(V0) -> ('case--prettyName-8337'(V0, ('Idris.Idris2.Core.Name':'un--userNameRoot'(V0)))).
'un--prettyKindedName'(V0, V1) -> case V0 of {'Prelude.Types.Nothing'} -> V1; {'Prelude.Types.Just', V2} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Syntax', {'Idris.Pretty.Annotations.Keyword'}}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V3) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V3)) end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V4, V5)) end end}, V2)))), V1)) end.
'un--methodsConfig'() -> {'Idris.Doc.String.MkConfig', 1, 0, 1, 0}.
'un--justUserDoc'() -> {'Idris.Doc.String.MkConfig', 0, 0, 1, 0}.
'un--getImplDocs'(V0, V1, V2) -> begin (V8 = begin (V3 = V0), fun (V4) -> begin (V7 = (begin (V5 = V3), fun (V6) -> ('erlang':'get'(V5)) end end(V4))), {'Prelude.Types.Right', V7} end end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V184 = begin (V174 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V13, V14, [])) end end, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V15, V16)) end end, []}, fun (V17) -> V17 end, ('Idris.Idris2.Libraries.Data.NameMap':'un--values'(case V12 of {'Core.Context.MkDefs', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49} -> V25 end)))), fun (V50) -> case V50 of {'Builtin.MkPair', V51, V52} -> begin (V85 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V51, case V12 of {'Core.Context.MkDefs', V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84} -> V53 end))), fun (V86) -> begin (V87 = (V85(V86))), case V87 of {'Prelude.Types.Left', V88} -> {'Prelude.Types.Left', V88}; {'Prelude.Types.Right', V89} -> (begin (V173 = case V89 of {'Prelude.Types.Just', V90} -> case ('Idris.Idris2.Core.Context.Context':'un--defNameType'(case V90 of {'Core.Context.Context.MkGlobalDef', V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112} -> V108 end)) of {'Prelude.Types.Just', V113} -> case V113 of {'Core.TT.Func'} -> begin (V146 = begin (V136 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V12, {'Core.Env.Nil'}, case V90 of {'Core.Context.Context.MkGlobalDef', V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135} -> V116 end))), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V145 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V141) -> fun (V142) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V141, V142)) end end, fun (V143) -> fun (V144) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V143, V144)) end end}, V140))), V145 end(V137)) end end end end), fun (V147) -> begin (V148 = (V146(V147))), case V148 of {'Prelude.Types.Left', V149} -> {'Prelude.Types.Left', V149}; {'Prelude.Types.Right', V150} -> (begin (V169 = begin (V151 = (V2(V150))), fun (V152) -> begin (V153 = (V151(V152))), case V153 of {'Prelude.Types.Left', V154} -> {'Prelude.Types.Left', V154}; {'Prelude.Types.Right', V155} -> (begin (V168 = case V155 of 1 -> begin (V156 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Core.Env.Nil'}, V150))), fun (V157) -> begin (V158 = (V156(V157))), case V158 of {'Prelude.Types.Left', V159} -> {'Prelude.Types.Left', V159}; {'Prelude.Types.Right', V160} -> (begin (V166 = fun (V161) -> {'Prelude.Types.Right', [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Doc.Annotations.Decl', V51}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V162) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V162)) end, fun (V163) -> fun (V164) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V163, V164)) end end}, fun (V165) -> {'Idris.Doc.Annotations.Syntax', V165} end, V160)))) | []]} end), V166 end(V157)) end end end end; 0 -> fun (V167) -> {'Prelude.Types.Right', []} end end), V168 end(V152)) end end end end), V169 end(V147)) end end end end; _ -> fun (V170) -> {'Prelude.Types.Right', []} end end; _ -> fun (V171) -> {'Prelude.Types.Right', []} end end; _ -> fun (V172) -> {'Prelude.Types.Right', []} end end), V173 end(V86)) end end end end end end))), fun (V175) -> begin (V176 = (V174(V175))), case V176 of {'Prelude.Types.Left', V177} -> {'Prelude.Types.Left', V177}; {'Prelude.Types.Right', V178} -> (begin (V183 = fun (V179) -> {'Prelude.Types.Right', ('case--getImplDocs-8762'(V2, V1, V0, V12, V178, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V180) -> fun (V181) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V180, V181)) end end, []}, fun (V182) -> V182 end, V178))))} end), V183 end(V175)) end end end end), V184 end(V9)) end end end end.
'un--getHintsForType'(V0, V1, V2) -> begin (V6 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"doc.data"/utf8>>, 10, fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V3) -> fun (V4) -> <<V3/binary, V4/binary>> end end, <<""/utf8>>}, fun (V5) -> V5 end, [<<"Looking at "/utf8>> | [('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)) | []]])) end))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V23 = ('un--getImplDocs'(V0, V1, fun (V11) -> begin (V12 = ('Idris.Idris2.Core.TT.Traversals':'un--allGlobals'(V11))), begin (V16 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"doc.data"/utf8>>, 10, fun () -> ('Idris.Idris2.Data.String':'un--fastUnlines'([<<<<"Candidate: "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V11))/binary>> | [<<<<"Containing names: "/utf8>>/binary, ('Idris.Idris2.Libraries.Data.NameMap':'dn--un--show_Show_(NameMap $v)'({'Prelude.Show.MkShow', fun (V13) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|Unit,MkUnit|)'(V13)) end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|Unit,MkUnit|)'(V14, V15)) end end}, V12))/binary>> | []]])) end))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V22 = fun (V21) -> {'Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V2, V12))))} end), V22 end(V17)) end end end end end end))), V23 end(V7)) end end end end.
'un--getHintsForPrimitive'(V0, V1, V2) -> begin (V6 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"doc.data"/utf8>>, 10, fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V3) -> fun (V4) -> <<V3/binary, V4/binary>> end end, <<""/utf8>>}, fun (V5) -> V5 end, [<<"Looking at "/utf8>> | [('Idris.Idris2.Core.TT':'dn--un--show_Show_Constant'(V2)) | []]])) end))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V23 = ('un--getImplDocs'(V0, V1, fun (V11) -> begin (V12 = ('Idris.Idris2.Core.TT.Traversals':'un--allConstants'(V11))), begin (V16 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"doc.data"/utf8>>, 10, fun () -> ('Idris.Idris2.Data.String':'un--fastUnlines'([<<<<"Candidate: "/utf8>>/binary, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V11))/binary>> | [<<<<"Containing constants: "/utf8>>/binary, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--show_Show_(SortedSet $k)'({'Prelude.Show.MkShow', fun (V13) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_Constant'(V13)) end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_Constant'(V14, V15)) end end}, V12))/binary>> | []]])) end))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V22 = fun (V21) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Data.SortedSet':'un--contains'(V2, V12))} end), V22 end(V17)) end end end end end end))), V23 end(V7)) end end end end.
'un--getDocsForPrimitive'(V0, V1, V2) -> case ('Idris.Idris2.TTImp.Elab.Prim':'un--checkPrim'({'Core.FC.EmptyFC'}, V2)) of {'Builtin.MkPair', V3, V4} -> begin (V5 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Core.Env.Nil'}, V4))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V26 = begin (V18 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V10) -> ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_IdrisSyntax_Constant'(V10)) end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.TT':'dn--un--prettyPrec_Pretty_IdrisSyntax_Constant'(V11, V12)) end end}, fun (V13) -> {'Idris.Doc.Annotations.Syntax', V13} end, V2)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V14) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V14)) end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V15, V16)) end end}, fun (V17) -> {'Idris.Doc.Annotations.Syntax', V17} end, V9))))))), begin (V19 = ('un--getHintsForPrimitive'(V0, V1, V2))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V25 = fun (V24) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([V18 | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, ('nested--11995-9042--in--un--primDoc'(V2, V1, V0, V2)))) | V23]]))} end), V25 end(V20)) end end end end end), V26 end(V6)) end end end end end.
'un--getDocsForPTerm'(V0, V1, V2, V3) -> case V3 of {'Idris.Syntax.PRef', V4, V5} -> ('un--getDocsForName'(V0, V1, V2, V4, V5, {'Idris.Doc.String.MkConfig', 1, 1, 0, 1})); {'Idris.Syntax.PPrimVal', V6, V7} -> ('un--getDocsForPrimitive'(V1, V2, V7)); {'Idris.Syntax.PType', V8} -> fun (V9) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Type : Type"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, (begin (V11 = fun (V10) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V10)) end), fun (V12) -> (V11(V12)) end end(<<"The type of all types is Type. The type of Type is Type."/utf8>>)))) | []]]))} end; {'Idris.Syntax.PString', V13, V14} -> fun (V15) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"String Literal"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, (begin (V17 = fun (V16) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V16)) end), fun (V18) -> (V17(V18)) end end(<<"Desugars to a fromString call"/utf8>>)))) | []]]))} end; {'Idris.Syntax.PList', V19, V20, V21} -> fun (V22) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"List Literal"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, (begin (V24 = fun (V23) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V23)) end), fun (V25) -> (V24(V25)) end end(<<"Desugars to (::) and Nil"/utf8>>)))) | []]]))} end; {'Idris.Syntax.PSnocList', V26, V27, V28} -> fun (V29) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"SnocList Literal"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, (begin (V31 = fun (V30) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V30)) end), fun (V32) -> (V31(V32)) end end(<<"Desugars to (:<) and Lin"/utf8>>)))) | []]]))} end; {'Idris.Syntax.PPair', V33, V34, V35} -> fun (V36) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Pair Literal"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, (begin (V38 = fun (V37) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V37)) end), fun (V39) -> (V38(V39)) end end(<<"Desugars to MkPair or Pair"/utf8>>)))) | []]]))} end; {'Idris.Syntax.PDPair', V40, V41, V42, V43, V44} -> fun (V45) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Dependant Pair Literal"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, (begin (V47 = fun (V46) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V46)) end), fun (V48) -> (V47(V48)) end end(<<"Desugars to MkDPair or DPair"/utf8>>)))) | []]]))} end; {'Idris.Syntax.PUnit', V49} -> fun (V50) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Unit Literal"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, (begin (V52 = fun (V51) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V51)) end), fun (V53) -> (V52(V53)) end end(<<"Desugars to MkUnit or Unit"/utf8>>)))) | []]]))} end; {'Idris.Syntax.PUnquote', V54, V55} -> fun (V56) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V57) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V58) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V58)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V59) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V59)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V60) -> fun (V61) -> case case (V60 =:= V61) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V57)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V62} -> case V62 of {'Builtin.MkPair', V63, V64} -> [V63 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V64))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V57)); 0 -> V57 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V65} -> case V65 of {'Builtin.MkPair', V66, V67} -> [V66 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V67))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V68) -> fun (V69) -> case case (V68 =:= V69) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V57)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V70} -> case V70 of {'Builtin.MkPair', V71, V72} -> [V71 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V72))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V57)); 0 -> V57 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V73} -> case V73 of {'Builtin.MkPair', V74, V75} -> [V74 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V75))] end end)))))))) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V78) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V78)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V79) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V79)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V80) -> fun (V81) -> case case (V80 =:= V81) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V77)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V82} -> case V82 of {'Builtin.MkPair', V83, V84} -> [V83 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V84))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V77)); 0 -> V77 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V85} -> case V85 of {'Builtin.MkPair', V86, V87} -> [V86 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V87))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V88) -> fun (V89) -> case case (V88 =:= V89) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V77)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V90} -> case V90 of {'Builtin.MkPair', V91, V92} -> [V91 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V92))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V77)); 0 -> V77 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V93} -> case V93 of {'Builtin.MkPair', V94, V95} -> [V94 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V95))] end end)))))))) end end}, <<"Unquotes"/utf8>>)))) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V96) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V97) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V97)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V98) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V98)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V99) -> fun (V100) -> case case (V99 =:= V100) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V96)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V101} -> case V101 of {'Builtin.MkPair', V102, V103} -> [V102 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V103))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V96)); 0 -> V96 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V104} -> case V104 of {'Builtin.MkPair', V105, V106} -> [V105 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V106))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V107) -> fun (V108) -> case case (V107 =:= V108) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V96)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V109} -> case V109 of {'Builtin.MkPair', V110, V111} -> [V110 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V111))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V96)); 0 -> V96 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V112} -> case V112 of {'Builtin.MkPair', V113, V114} -> [V113 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V114))] end end)))))))) end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V117) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V117)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V118) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V118)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V119) -> fun (V120) -> case case (V119 =:= V120) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V116)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V121} -> case V121 of {'Builtin.MkPair', V122, V123} -> [V122 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V123))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V116)); 0 -> V116 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V124} -> case V124 of {'Builtin.MkPair', V125, V126} -> [V125 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V126))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V127) -> fun (V128) -> case case (V127 =:= V128) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V116)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V129} -> case V129 of {'Builtin.MkPair', V130, V131} -> [V130 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V131))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V116)); 0 -> V116 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V132} -> case V132 of {'Builtin.MkPair', V133, V134} -> [V133 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V134))] end end)))))))) end end}, <<""/utf8>>)) | ((begin (V146 = fun (V142) -> fun (V143) -> fun (V144) -> fun (V145) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V144, V145)) end end end end), fun (V147) -> fun (V148) -> ((((V146('erased'))('erased'))(V147))(V148)) end end end(fun (V141) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V141)) end))([(begin (V139 = fun (V138) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V138)) end), fun (V140) -> (V139(V140)) end end(('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V135) -> fun (V136) -> <<V135/binary, V136/binary>> end end, <<""/utf8>>}, fun (V137) -> V137 end, [<<"Unquotes allows us to use TTImp expressions inside a quoted expression.\x{a}This is useful when we want to add some computed TTImp while building up\x{a}complex expressions.\x{a}\x{a}```idris\x{a}module Quote\x{a}\x{a}import Language.Reflection\x{a}\x{a}foo : TTImp -> TTImp\x{a}foo expr = `(either ~(expr) x y)\x{a}```"/utf8>> | []])))) | []]))]]))} end; _ -> fun (V149) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V151 = fun (V150) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V150)) end), fun (V152) -> (V151(V152)) end end(<<"Docs not implemented for"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V153) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V153)) end, fun (V154) -> fun (V155) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V154, V155)) end end}, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V3)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"yet"/utf8>>))))))} end end.
'un--getDocsForName'(V0, V1, V2, V3, V4, V5) -> begin (V11 = begin (V6 = V2), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V74 = begin (V21 = begin (V16 = V1), fun (V17) -> begin (V20 = (begin (V18 = V16), fun (V19) -> ('erlang':'get'(V18)) end end(V17))), {'Prelude.Types.Right', V20} end end end), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V73 = begin (V26 = case ('Idris.Idris2.Core.Name':'un--nameRoot'(V4)) of <<"-"/utf8>> -> [{'Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--numNS'()), {'Core.Name.UN', {'Core.Name.Basic', <<"negate"/utf8>>}}} | []]; _ -> [] end), begin (V59 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V4, case V25 of {'Core.Context.MkDefs', V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58} -> V27 end))), fun (V60) -> begin (V61 = (V59(V60))), case V61 of {'Prelude.Types.Left', V62} -> {'Prelude.Types.Left', V62}; {'Prelude.Types.Right', V63} -> (begin (V72 = ('case--getDocsForName-12499'(V5, V4, V3, V2, V1, V0, V15, V25, V26, V63, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V26, ((begin (V69 = fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V67, V68)) end end end end), fun (V70) -> fun (V71) -> ((((V69('erased'))('erased'))(V70))(V71)) end end end(fun (V64) -> ('Idris.Idris2.Builtin':'un--fst'(V64)) end))(V63))))))), V72 end(V60)) end end end end end), V73 end(V22)) end end end end), V74 end(V12)) end end end end.
'un--getDocsForImplementation'(V0, V1, V2) -> ('case--getDocsForImplementation-12717'(V2, V1, V0, ('Idris.Idris2.Idris.Syntax.Views':'un--getFnArgs'(fun (V3) -> V3 end, V2)))).
'un--getDocs'(V0, V1, V2, V3) -> case V3 of {'Idris.Syntax.APTerm', V4} -> ('un--getDocsForPTerm'(V0, V1, V2, V4)); {'Idris.Syntax.Symbol', V5} -> fun (V6) -> {'Prelude.Types.Right', ('Idris.Idris2.Idris.Doc.Keywords':'un--getDocsForSymbol'(V5))} end; {'Idris.Syntax.Bracket', V7} -> fun (V8) -> {'Prelude.Types.Right', ('Idris.Idris2.Idris.Doc.Brackets':'un--getDocsForBracket'(V7))} end; {'Idris.Syntax.Keyword', V9} -> fun (V10) -> {'Prelude.Types.Right', ('Idris.Idris2.Idris.Doc.Keywords':'un--getDocsForKeyword'(V9))} end; {'Idris.Syntax.AModule', V11} -> begin (V17 = begin (V12 = V2), fun (V13) -> begin (V16 = (begin (V14 = V12), fun (V15) -> ('erlang':'get'(V14)) end end(V13))), {'Prelude.Types.Right', V16} end end end), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V40 = fun (V22) -> case ('Idris.Idris2.Libraries.Data.SortedMap':'un--lookup'(V11, case V21 of {'Idris.Syntax.MkSyntax', V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35} -> V26 end)) of {'Prelude.Types.Just', V36} -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V37) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V38, V39)) end end}, V36))}; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.ModuleNotFound', ('Idris.Idris2.Core.FC':'un--replFC'()), V11}, V22)) end end), V40 end(V18)) end end end end end.
'un--getContents'(V0, V1, V2, V3) -> begin (V9 = begin (V4 = V1), fun (V5) -> begin (V8 = (begin (V6 = V4), fun (V7) -> ('erlang':'get'(V6)) end end(V5))), {'Prelude.Types.Right', V8} end end end), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V99 = begin (V46 = ('Idris.Idris2.Core.Context':'un--allNames'(case V13 of {'Core.Context.MkDefs', V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45} -> V14 end))), fun (V47) -> begin (V48 = (V46(V47))), case V48 of {'Prelude.Types.Left', V49} -> {'Prelude.Types.Left', V49}; {'Prelude.Types.Right', V50} -> (begin (V98 = begin (V52 = ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V51) -> ('nested--18192-14663--in--un--inNS'(V3, V2, V1, V0, V51)) end, V50))), begin (V54 = ('Idris.Idris2.Core.Core':'un--filterM'(fun (V53) -> ('nested--18192-14662--in--un--visible'(V3, V2, V1, V0, V13, V53)) end, V52))), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V97 = begin (V78 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V59) -> ('un--summarise'(V1, V2, V59)) end, ('Idris.Idris2.Data.List':'un--sort'({'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V62, V63)) end end}, fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Name':'dn--un--compare_Ord_Name'(V64, V65)) end end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.Name':'dn--un--<_Ord_Name'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un-->_Ord_Name'(V68, V69)) end end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--<=_Ord_Name'(V70, V71)) end end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Core.Name':'dn--un-->=_Ord_Name'(V72, V73)) end end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Name':'dn--un--max_Ord_Name'(V74, V75)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Name':'dn--un--min_Ord_Name'(V76, V77)) end end}, V58)), []))), ((begin (V94 = fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V91, V92, V93)) end end end end end), fun (V95) -> fun (V96) -> ((((V94('erased'))('erased'))(V95))(V96)) end end end((begin (V86 = fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> case V83 of {'Prelude.Types.Left', V84} -> {'Prelude.Types.Left', V84}; {'Prelude.Types.Right', V85} -> {'Prelude.Types.Right', (V82(V85))} end end end end end), fun (V87) -> fun (V88) -> ((((V86('erased'))('erased'))(V87))(V88)) end end end(fun (V79) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V79)) end))))(V78)) end), V97 end(V55)) end end end end end), V98 end(V47)) end end end end), V99 end(V10)) end end end end.
'un--addDocStringNS'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V0, V3))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V42 = begin (V12 = case V9 of {'Core.Name.NS', V10, V11} -> {'Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--<.>'(V10, V2)), V11}; _ -> {'Core.Name.NS', V2, V9} end), begin (V18 = begin (V13 = V1), fun (V14) -> begin (V17 = (begin (V15 = V13), fun (V16) -> ('erlang':'get'(V15)) end end(V14))), {'Prelude.Types.Right', V17} end end end), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V41 = begin (V23 = V1), fun (V24) -> begin (V40 = (begin (V25 = V23), fun (V26) -> ('erlang':'put'(V25, case V22 of {'Idris.Syntax.MkSyntax', V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39} -> {'Idris.Syntax.MkSyntax', V27, V28, V29, V30, V31, V32, V33, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V12, {'Builtin.MkUnit'}, V34)), ('Idris.Idris2.Libraries.Data.ANameMap':'un--addName'(V12, V4, V35)), V36, V37, V38, V39} end)) end end(V24))), {'Prelude.Types.Right', V40} end end end), V41 end(V19)) end end end end end), V42 end(V6)) end end end end.
'un--addDocString'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V0, V2))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V44 = begin (V9 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"doc.record"/utf8>>, 50, fun () -> <<<<"Adding doc for "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2))/binary, <<<<" (aka "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))/binary, <<" in current NS)"/utf8>>/binary>>/binary>>/binary>>/binary>> end))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V43 = begin (V19 = begin (V14 = V1), fun (V15) -> begin (V18 = (begin (V16 = V14), fun (V17) -> ('erlang':'get'(V16)) end end(V15))), {'Prelude.Types.Right', V18} end end end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V42 = begin (V24 = V1), fun (V25) -> begin (V41 = (begin (V26 = V24), fun (V27) -> ('erlang':'put'(V26, case V23 of {'Idris.Syntax.MkSyntax', V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> {'Idris.Syntax.MkSyntax', V28, V29, V30, V31, V32, V33, V34, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V8, {'Builtin.MkUnit'}, V35)), ('Idris.Idris2.Libraries.Data.ANameMap':'un--addName'(V8, V3, V36)), V37, V38, V39, V40} end)) end end(V25))), {'Prelude.Types.Right', V41} end end end), V42 end(V20)) end end end end), V43 end(V10)) end end end end), V44 end(V5)) end end end end.
