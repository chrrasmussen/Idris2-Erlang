-module('Idris.Idris2.Idris.Pretty.Annotations').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--with_'/0,
  'un--semi'/0,
  'un--rewrite_'/0,
  'un--record_'/0,
  'un--rcurly'/0,
  'un--prettyRig'/1,
  'un--pragma'/1,
  'un--of_'/0,
  'un--let_'/0,
  'un--lcurly'/0,
  'un--keyword'/1,
  'un--in_'/0,
  'un--impossible_'/0,
  'un--hole'/1,
  'un--fatArrow'/0,
  'un--equals'/0,
  'un--do_'/0,
  'un--default_'/0,
  'un--case_'/0,
  'un--auto_'/0,
  'un--arrow'/0
]).
'un--with_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"with"/utf8>>)))).
'un--semi'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<";"/utf8>>)))).
'un--rewrite_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"rewrite"/utf8>>)))).
'un--record_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"record"/utf8>>)))).
'un--rcurly'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"}"/utf8>>)))).
'un--prettyRig'(V0) -> ('Idris.Idris2.Algebra.Semiring':'un--elimSemi'({'Builtin.MkPair', {'Algebra.Semiring.dn--un--__mkSemiring', fun (V1) -> fun (V2) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V1, V2)) end end, 0, fun (V3) -> fun (V4) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V3, V4)) end end, 1}, {'Prelude.EqOrd.MkEq', fun (V5) -> fun (V6) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V5, V6)) end end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V7, V8)) end end}}, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V9) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_Char'(V9)) end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_Char'(V10, V11)) end end}, (begin (V13 = fun (V12) -> V12 end), fun (V14) -> (V13(V14)) end end($0)))))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V15) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_Char'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_Char'(V16, V17)) end end}, (begin (V19 = fun (V18) -> V18 end), fun (V20) -> (V19(V20)) end end($1)))))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'()) end, V0)).
'un--pragma'(V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Pretty.Annotations.Pragma'}, V0)).
'un--of_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"of"/utf8>>)))).
'un--let_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"let"/utf8>>)))).
'un--lcurly'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"{"/utf8>>)))).
'un--keyword'(V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Pretty.Annotations.Keyword'}, V0)).
'un--in_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"in"/utf8>>)))).
'un--impossible_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"impossible"/utf8>>)))).
'un--hole'(V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--annotate'({'Idris.Pretty.Annotations.Hole'}, V0)).
'un--fatArrow'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"=>"/utf8>>)))).
'un--equals'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"="/utf8>>)))).
'un--do_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"do"/utf8>>)))).
'un--default_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"default"/utf8>>)))).
'un--case_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"case"/utf8>>)))).
'un--auto_'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"auto"/utf8>>)))).
'un--arrow'() -> ('un--keyword'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V1) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V1)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V2) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V2)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V3) -> fun (V4) -> case case (V3 =:= V4) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> [V6 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V7))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> [V9 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V10))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V11) -> fun (V12) -> case case (V11 =:= V12) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V0)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> [V14 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V15))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V0)); 0 -> V0 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V16} -> case V16 of {'Builtin.MkPair', V17, V18} -> [V17 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V18))] end end)))))))) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V21) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V21)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V22) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V22)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V23) -> fun (V24) -> case case (V23 =:= V24) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V25} -> case V25 of {'Builtin.MkPair', V26, V27} -> [V26 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V27))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V28} -> case V28 of {'Builtin.MkPair', V29, V30} -> [V29 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V30))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V31) -> fun (V32) -> case case (V31 =:= V32) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V20)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V33} -> case V33 of {'Builtin.MkPair', V34, V35} -> [V34 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V35))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V20)); 0 -> V20 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V36} -> case V36 of {'Builtin.MkPair', V37, V38} -> [V37 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V38))] end end)))))))) end end}, <<"->"/utf8>>)))).
