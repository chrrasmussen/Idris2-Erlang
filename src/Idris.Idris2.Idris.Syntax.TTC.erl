-module('Idris.Idris2.Idris.Syntax.TTC').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--toBuf_TTC_SyntaxInfo'/2,
  'dn--un--toBuf_TTC_Method'/2,
  'dn--un--toBuf_TTC_Import'/2,
  'dn--un--toBuf_TTC_IFaceInfo'/2,
  'dn--un--toBuf_TTC_Fixity'/2,
  'dn--un--fromBuf_TTC_SyntaxInfo'/1,
  'dn--un--fromBuf_TTC_Method'/1,
  'dn--un--fromBuf_TTC_Import'/1,
  'dn--un--fromBuf_TTC_IFaceInfo'/1,
  'dn--un--fromBuf_TTC_Fixity'/1,
  'dn--un--__Impl_TTC_SyntaxInfo'/0,
  'dn--un--__Impl_TTC_Method'/0,
  'dn--un--__Impl_TTC_Import'/0,
  'dn--un--__Impl_TTC_IFaceInfo'/0,
  'dn--un--__Impl_TTC_Fixity'/0
]).
'dn--un--toBuf_TTC_SyntaxInfo'(V0, V1) -> begin (V102 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V4, V5)) end end, fun (V6) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V6)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V9, V10)) end end, fun (V11) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V11)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('dn--un--toBuf_TTC_Fixity'(V14, V15)) end end, fun (V16) -> ('dn--un--fromBuf_TTC_Fixity'(V16)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V17, V18)) end end, fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V19)) end}}, V12, V13)) end end, fun (V20) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V21) -> fun (V22) -> ('dn--un--toBuf_TTC_Fixity'(V21, V22)) end end, fun (V23) -> ('dn--un--fromBuf_TTC_Fixity'(V23)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V24, V25)) end end, fun (V26) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V26)) end}}, V20)) end}}, V7, V8)) end end, fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V28, V29)) end end, fun (V30) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V30)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V33) -> fun (V34) -> ('dn--un--toBuf_TTC_Fixity'(V33, V34)) end end, fun (V35) -> ('dn--un--fromBuf_TTC_Fixity'(V35)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V36, V37)) end end, fun (V38) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V38)) end}}, V31, V32)) end end, fun (V39) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V40) -> fun (V41) -> ('dn--un--toBuf_TTC_Fixity'(V40, V41)) end end, fun (V42) -> ('dn--un--fromBuf_TTC_Fixity'(V42)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V43, V44)) end end, fun (V45) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V45)) end}}, V39)) end}}, V27)) end}}, V2, V3)) end end, fun (V46) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V47, V48)) end end, fun (V49) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V49)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V52, V53)) end end, fun (V54) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V54)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V57) -> fun (V58) -> ('dn--un--toBuf_TTC_Fixity'(V57, V58)) end end, fun (V59) -> ('dn--un--fromBuf_TTC_Fixity'(V59)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V60, V61)) end end, fun (V62) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V62)) end}}, V55, V56)) end end, fun (V63) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V64) -> fun (V65) -> ('dn--un--toBuf_TTC_Fixity'(V64, V65)) end end, fun (V66) -> ('dn--un--fromBuf_TTC_Fixity'(V66)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V67, V68)) end end, fun (V69) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V69)) end}}, V63)) end}}, V50, V51)) end end, fun (V70) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V71, V72)) end end, fun (V73) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V73)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V76) -> fun (V77) -> ('dn--un--toBuf_TTC_Fixity'(V76, V77)) end end, fun (V78) -> ('dn--un--fromBuf_TTC_Fixity'(V78)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V79, V80)) end end, fun (V81) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V81)) end}}, V74, V75)) end end, fun (V82) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V83) -> fun (V84) -> ('dn--un--toBuf_TTC_Fixity'(V83, V84)) end end, fun (V85) -> ('dn--un--fromBuf_TTC_Fixity'(V85)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V86, V87)) end end, fun (V88) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V88)) end}}, V82)) end}}, V70)) end}}, V46)) end}, V0, ('Idris.Idris2.Libraries.Data.StringMap':'un--toList'(case V1 of {'Idris.Syntax.MkSyntax', V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101} -> V89 end))))), fun (V103) -> begin (V104 = (V102(V103))), case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> (begin (V512 = begin (V159 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V109, V110)) end end, fun (V111) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V111)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V112) -> fun (V113) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V114, V115)) end end, fun (V116) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V116)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V117) -> fun (V118) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V117, V118)) end end, fun (V119) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V119)) end}}, V112, V113)) end end, fun (V120) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V121) -> fun (V122) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V121, V122)) end end, fun (V123) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V123)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V124, V125)) end end, fun (V126) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V126)) end}}, V120)) end}}, V107, V108)) end end, fun (V127) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V128) -> fun (V129) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V128, V129)) end end, fun (V130) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V130)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V131) -> fun (V132) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V133, V134)) end end, fun (V135) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V135)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V136, V137)) end end, fun (V138) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V138)) end}}, V131, V132)) end end, fun (V139) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V140) -> fun (V141) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V140, V141)) end end, fun (V142) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V142)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V143) -> fun (V144) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V143, V144)) end end, fun (V145) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V145)) end}}, V139)) end}}, V127)) end}, V0, ('Idris.Idris2.Libraries.Data.StringMap':'un--toList'(case V1 of {'Idris.Syntax.MkSyntax', V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158} -> V147 end))))), fun (V160) -> begin (V161 = (V159(V160))), case V161 of {'Prelude.Types.Left', V162} -> {'Prelude.Types.Left', V162}; {'Prelude.Types.Right', V163} -> (begin (V511 = begin (V234 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V166, V167)) end end, fun (V168) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V168)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V169) -> fun (V170) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V169, V170)) end end, fun (V171) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V171)) end}}, V164, V165)) end end, fun (V172) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V173) -> fun (V174) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V173, V174)) end end, fun (V175) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V175)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V176, V177)) end end, fun (V178) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V178)) end}}, V172)) end}, V0, ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V179) -> ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V182, V183, V184)) end end end end end, fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> fun (V189) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V187, V188, V189)) end end end end end, fun (V190) -> fun (V191) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V191)) end end, fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V195, V196, V197, V198)) end end end end end end end, fun (V199) -> fun (V200) -> V200 end end, fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V203, V204, V205)) end end end end end}, fun (V206) -> fun (V207) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V206, V207)) end end, ('Idris.Idris2.Builtin':'un--fst'(V179)), case V1 of {'Idris.Syntax.MkSyntax', V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220} -> V210 end)) end, ('Idris.Idris2.Libraries.Data.SortedMap':'un--toList'(case V1 of {'Idris.Syntax.MkSyntax', V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233} -> V224 end))))))), fun (V235) -> begin (V236 = (V234(V235))), case V236 of {'Prelude.Types.Left', V237} -> {'Prelude.Types.Left', V237}; {'Prelude.Types.Right', V238} -> (begin (V510 = begin (V321 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V239) -> fun (V240) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V241) -> fun (V242) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V241, V242)) end end, fun (V243) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V243)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V244) -> fun (V245) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V246) -> fun (V247) -> ('dn--un--toBuf_TTC_Import'(V246, V247)) end end, fun (V248) -> ('dn--un--fromBuf_TTC_Import'(V248)) end}, V244, V245)) end end, fun (V249) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V250) -> fun (V251) -> ('dn--un--toBuf_TTC_Import'(V250, V251)) end end, fun (V252) -> ('dn--un--fromBuf_TTC_Import'(V252)) end}, V249)) end}}, V239, V240)) end end, fun (V253) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V254) -> fun (V255) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V254, V255)) end end, fun (V256) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V256)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V257) -> fun (V258) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V259) -> fun (V260) -> ('dn--un--toBuf_TTC_Import'(V259, V260)) end end, fun (V261) -> ('dn--un--fromBuf_TTC_Import'(V261)) end}, V257, V258)) end end, fun (V262) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V263) -> fun (V264) -> ('dn--un--toBuf_TTC_Import'(V263, V264)) end end, fun (V265) -> ('dn--un--fromBuf_TTC_Import'(V265)) end}, V262)) end}}, V253)) end}, V0, ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V266) -> ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> fun (V271) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V269, V270, V271)) end end end end end, fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V274, V275, V276)) end end end end end, fun (V277) -> fun (V278) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V278)) end end, fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> fun (V285) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V282, V283, V284, V285)) end end end end end end end, fun (V286) -> fun (V287) -> V287 end end, fun (V288) -> fun (V289) -> fun (V290) -> fun (V291) -> fun (V292) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V290, V291, V292)) end end end end end}, fun (V293) -> fun (V294) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V293, V294)) end end, ('Idris.Idris2.Builtin':'un--fst'(V266)), case V1 of {'Idris.Syntax.MkSyntax', V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307} -> V297 end)) end, ('Idris.Idris2.Libraries.Data.SortedMap':'un--toList'(case V1 of {'Idris.Syntax.MkSyntax', V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319, V320} -> V312 end))))))), fun (V322) -> begin (V323 = (V321(V322))), case V323 of {'Prelude.Types.Left', V324} -> {'Prelude.Types.Left', V324}; {'Prelude.Types.Right', V325} -> (begin (V509 = begin (V398 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V326) -> fun (V327) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V328) -> fun (V329) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V328, V329)) end end, fun (V330) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V330)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V331) -> fun (V332) -> ('dn--un--toBuf_TTC_IFaceInfo'(V331, V332)) end end, fun (V333) -> ('dn--un--fromBuf_TTC_IFaceInfo'(V333)) end}}, V326, V327)) end end, fun (V334) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V335) -> fun (V336) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V335, V336)) end end, fun (V337) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V337)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V338) -> fun (V339) -> ('dn--un--toBuf_TTC_IFaceInfo'(V338, V339)) end end, fun (V340) -> ('dn--un--fromBuf_TTC_IFaceInfo'(V340)) end}}, V334)) end}, V0, ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V341) -> ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V344, V345, V346)) end end end end end, fun (V347) -> fun (V348) -> fun (V349) -> fun (V350) -> fun (V351) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V349, V350, V351)) end end end end end, fun (V352) -> fun (V353) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V353)) end end, fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> fun (V359) -> fun (V360) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V357, V358, V359, V360)) end end end end end end end, fun (V361) -> fun (V362) -> V362 end end, fun (V363) -> fun (V364) -> fun (V365) -> fun (V366) -> fun (V367) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V365, V366, V367)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V368) -> fun (V369) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V368, V369)) end end, fun (V370) -> fun (V371) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V370, V371)) end end}, ('Idris.Idris2.Builtin':'un--fst'(V341)), case V1 of {'Idris.Syntax.MkSyntax', V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384} -> V377 end)) end, ('Idris.Idris2.Libraries.Data.ANameMap':'un--toList'(case V1 of {'Idris.Syntax.MkSyntax', V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397} -> V391 end))))))), fun (V399) -> begin (V400 = (V398(V399))), case V400 of {'Prelude.Types.Left', V401} -> {'Prelude.Types.Left', V401}; {'Prelude.Types.Right', V402} -> (begin (V508 = begin (V445 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V403) -> fun (V404) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V405) -> fun (V406) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V405, V406)) end end, fun (V407) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V407)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V408) -> fun (V409) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V408, V409)) end end, fun (V410) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V410)) end}}, V403, V404)) end end, fun (V411) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V412) -> fun (V413) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V412, V413)) end end, fun (V414) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V414)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V415) -> fun (V416) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V415, V416)) end end, fun (V417) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V417)) end}}, V411)) end}, V0, ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V418) -> ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(('Idris.Idris2.Builtin':'un--fst'(V418)), case V1 of {'Idris.Syntax.MkSyntax', V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431} -> V426 end)))) end, ('Idris.Idris2.Libraries.Data.ANameMap':'un--toList'(case V1 of {'Idris.Syntax.MkSyntax', V432, V433, V434, V435, V436, V437, V438, V439, V440, V441, V442, V443, V444} -> V440 end))))))), fun (V446) -> begin (V447 = (V445(V446))), case V447 of {'Prelude.Types.Left', V448} -> {'Prelude.Types.Left', V448}; {'Prelude.Types.Right', V449} -> (begin (V507 = begin (V466 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V450) -> fun (V451) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V450, V451)) end end, fun (V452) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V452)) end}, V0, case V1 of {'Idris.Syntax.MkSyntax', V453, V454, V455, V456, V457, V458, V459, V460, V461, V462, V463, V464, V465} -> V462 end))), fun (V467) -> begin (V468 = (V466(V467))), case V468 of {'Prelude.Types.Left', V469} -> {'Prelude.Types.Left', V469}; {'Prelude.Types.Right', V470} -> (begin (V506 = begin (V484 = ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_RawImp'(V0, case V1 of {'Idris.Syntax.MkSyntax', V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483} -> V482 end))), fun (V485) -> begin (V486 = (V484(V485))), case V486 of {'Prelude.Types.Left', V487} -> {'Prelude.Types.Left', V487}; {'Prelude.Types.Right', V488} -> (begin (V505 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V489) -> fun (V490) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V489, V490)) end end, fun (V491) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V491)) end}, V0, case V1 of {'Idris.Syntax.MkSyntax', V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504} -> V504 end))), V505 end(V485)) end end end end), V506 end(V467)) end end end end), V507 end(V446)) end end end end), V508 end(V399)) end end end end), V509 end(V322)) end end end end), V510 end(V235)) end end end end), V511 end(V160)) end end end end), V512 end(V103)) end end end end.
'dn--un--toBuf_TTC_Method'(V0, V1) -> case V1 of {'Idris.Syntax.MkMethod', V2, V3, V4, V5} -> begin (V6 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V2))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V26 = begin (V11 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RigCount'(V0, V3))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V25 = begin (V19 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_TotalReq'(V16, V17)) end end, fun (V18) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_TotalReq'(V18)) end}, V0, V4))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V24 = ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_RawImp'(V0, V5))), V24 end(V20)) end end end end), V25 end(V12)) end end end end), V26 end(V7)) end end end end end.
'dn--un--toBuf_TTC_Import'(V0, V1) -> case V1 of {'Idris.Syntax.MkImport', V2, V3, V4, V5} -> begin (V6 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V0, V2))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V23 = begin (V11 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V0, V3))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V22 = begin (V16 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V0, V4))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V21 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V0, V5))), V21 end(V17)) end end end end), V22 end(V12)) end end end end), V23 end(V7)) end end end end end.
'dn--un--toBuf_TTC_IFaceInfo'(V0, V1) -> case V1 of {'Idris.Syntax.MkIFaceInfo', V2, V3, V4, V5, V6, V7} -> begin (V8 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V0, V2))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V76 = begin (V16 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V13, V14)) end end, fun (V15) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V15)) end}, V0, V3))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V75 = begin (V24 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V21, V22)) end end, fun (V23) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V23)) end}, V0, V4))), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V74 = begin (V32 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V29) -> fun (V30) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_RawImp'(V29, V30)) end end, fun (V31) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_RawImp'(V31)) end}, V0, V5))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V73 = begin (V40 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V37) -> fun (V38) -> ('dn--un--toBuf_TTC_Method'(V37, V38)) end end, fun (V39) -> ('dn--un--fromBuf_TTC_Method'(V39)) end}, V0, V6))), fun (V41) -> begin (V42 = (V40(V41))), case V42 of {'Prelude.Types.Left', V43} -> {'Prelude.Types.Left', V43}; {'Prelude.Types.Right', V44} -> (begin (V72 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V45) -> fun (V46) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V47, V48)) end end, fun (V49) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V49)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V52) -> fun (V53) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V52, V53)) end end, fun (V54) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V54)) end}, V50, V51)) end end, fun (V55) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V56) -> fun (V57) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V56, V57)) end end, fun (V58) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V58)) end}, V55)) end}}, V45, V46)) end end, fun (V59) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V60, V61)) end end, fun (V62) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V62)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V65) -> fun (V66) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V65, V66)) end end, fun (V67) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V67)) end}, V63, V64)) end end, fun (V68) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V69) -> fun (V70) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V69, V70)) end end, fun (V71) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V71)) end}, V68)) end}}, V59)) end}, V0, V7))), V72 end(V41)) end end end end), V73 end(V33)) end end end end), V74 end(V25)) end end end end), V75 end(V17)) end end end end), V76 end(V9)) end end end end end.
'dn--un--toBuf_TTC_Fixity'(V0, V1) -> case V1 of 0 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 0)); 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 1)); 2 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 2)); 3 -> ('Idris.Idris2.Core.Binary.Prims':'un--tag'(V0, 3)) end.
'dn--un--fromBuf_TTC_SyntaxInfo'(V0) -> begin (V88 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V1) -> fun (V2) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V3, V4)) end end, fun (V5) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V5)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V8, V9)) end end, fun (V10) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V10)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V13) -> fun (V14) -> ('dn--un--toBuf_TTC_Fixity'(V13, V14)) end end, fun (V15) -> ('dn--un--fromBuf_TTC_Fixity'(V15)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V16, V17)) end end, fun (V18) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V18)) end}}, V11, V12)) end end, fun (V19) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V20) -> fun (V21) -> ('dn--un--toBuf_TTC_Fixity'(V20, V21)) end end, fun (V22) -> ('dn--un--fromBuf_TTC_Fixity'(V22)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V23, V24)) end end, fun (V25) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V25)) end}}, V19)) end}}, V6, V7)) end end, fun (V26) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V27, V28)) end end, fun (V29) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V29)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V32) -> fun (V33) -> ('dn--un--toBuf_TTC_Fixity'(V32, V33)) end end, fun (V34) -> ('dn--un--fromBuf_TTC_Fixity'(V34)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V35, V36)) end end, fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V37)) end}}, V30, V31)) end end, fun (V38) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V39) -> fun (V40) -> ('dn--un--toBuf_TTC_Fixity'(V39, V40)) end end, fun (V41) -> ('dn--un--fromBuf_TTC_Fixity'(V41)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V42, V43)) end end, fun (V44) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V44)) end}}, V38)) end}}, V26)) end}}, V1, V2)) end end, fun (V45) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V46, V47)) end end, fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V48)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V51, V52)) end end, fun (V53) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V53)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V56) -> fun (V57) -> ('dn--un--toBuf_TTC_Fixity'(V56, V57)) end end, fun (V58) -> ('dn--un--fromBuf_TTC_Fixity'(V58)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V59, V60)) end end, fun (V61) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V61)) end}}, V54, V55)) end end, fun (V62) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V63) -> fun (V64) -> ('dn--un--toBuf_TTC_Fixity'(V63, V64)) end end, fun (V65) -> ('dn--un--fromBuf_TTC_Fixity'(V65)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V66, V67)) end end, fun (V68) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V68)) end}}, V62)) end}}, V49, V50)) end end, fun (V69) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V70, V71)) end end, fun (V72) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V72)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V75) -> fun (V76) -> ('dn--un--toBuf_TTC_Fixity'(V75, V76)) end end, fun (V77) -> ('dn--un--fromBuf_TTC_Fixity'(V77)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V78, V79)) end end, fun (V80) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V80)) end}}, V73, V74)) end end, fun (V81) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V82) -> fun (V83) -> ('dn--un--toBuf_TTC_Fixity'(V82, V83)) end end, fun (V84) -> ('dn--un--fromBuf_TTC_Fixity'(V84)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V85, V86)) end end, fun (V87) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V87)) end}}, V81)) end}}, V69)) end}}, V45)) end}, V0))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V295 = begin (V132 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V93) -> fun (V94) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V95, V96)) end end, fun (V97) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V97)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V98) -> fun (V99) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V100, V101)) end end, fun (V102) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V102)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V103, V104)) end end, fun (V105) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V105)) end}}, V98, V99)) end end, fun (V106) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V107, V108)) end end, fun (V109) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V109)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V110, V111)) end end, fun (V112) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V112)) end}}, V106)) end}}, V93, V94)) end end, fun (V113) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V114, V115)) end end, fun (V116) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V116)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V117) -> fun (V118) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V119) -> fun (V120) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V119, V120)) end end, fun (V121) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V121)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V122, V123)) end end, fun (V124) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V124)) end}}, V117, V118)) end end, fun (V125) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_FC'(V126, V127)) end end, fun (V128) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V128)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Nat'(V129, V130)) end end, fun (V131) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Nat'(V131)) end}}, V125)) end}}, V113)) end}, V0))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V294 = begin (V152 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V139, V140)) end end, fun (V141) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V141)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V142) -> fun (V143) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V142, V143)) end end, fun (V144) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V144)) end}}, V137, V138)) end end, fun (V145) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V146) -> fun (V147) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V146, V147)) end end, fun (V148) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V148)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V149) -> fun (V150) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V149, V150)) end end, fun (V151) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V151)) end}}, V145)) end}, V0))), fun (V153) -> begin (V154 = (V152(V153))), case V154 of {'Prelude.Types.Left', V155} -> {'Prelude.Types.Left', V155}; {'Prelude.Types.Right', V156} -> (begin (V293 = begin (V184 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V157) -> fun (V158) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V159) -> fun (V160) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V159, V160)) end end, fun (V161) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V161)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V162) -> fun (V163) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V164) -> fun (V165) -> ('dn--un--toBuf_TTC_Import'(V164, V165)) end end, fun (V166) -> ('dn--un--fromBuf_TTC_Import'(V166)) end}, V162, V163)) end end, fun (V167) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V168) -> fun (V169) -> ('dn--un--toBuf_TTC_Import'(V168, V169)) end end, fun (V170) -> ('dn--un--fromBuf_TTC_Import'(V170)) end}, V167)) end}}, V157, V158)) end end, fun (V171) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V172) -> fun (V173) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V172, V173)) end end, fun (V174) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V174)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V175) -> fun (V176) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V177) -> fun (V178) -> ('dn--un--toBuf_TTC_Import'(V177, V178)) end end, fun (V179) -> ('dn--un--fromBuf_TTC_Import'(V179)) end}, V175, V176)) end end, fun (V180) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V181) -> fun (V182) -> ('dn--un--toBuf_TTC_Import'(V181, V182)) end end, fun (V183) -> ('dn--un--fromBuf_TTC_Import'(V183)) end}, V180)) end}}, V171)) end}, V0))), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V292 = begin (V204 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V189) -> fun (V190) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V191) -> fun (V192) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V191, V192)) end end, fun (V193) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V193)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V194) -> fun (V195) -> ('dn--un--toBuf_TTC_IFaceInfo'(V194, V195)) end end, fun (V196) -> ('dn--un--fromBuf_TTC_IFaceInfo'(V196)) end}}, V189, V190)) end end, fun (V197) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V198) -> fun (V199) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V198, V199)) end end, fun (V200) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V200)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V201) -> fun (V202) -> ('dn--un--toBuf_TTC_IFaceInfo'(V201, V202)) end end, fun (V203) -> ('dn--un--fromBuf_TTC_IFaceInfo'(V203)) end}}, V197)) end}, V0))), fun (V205) -> begin (V206 = (V204(V205))), case V206 of {'Prelude.Types.Left', V207} -> {'Prelude.Types.Left', V207}; {'Prelude.Types.Right', V208} -> (begin (V291 = begin (V224 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V209) -> fun (V210) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V211) -> fun (V212) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V211, V212)) end end, fun (V213) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V213)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V214) -> fun (V215) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V214, V215)) end end, fun (V216) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V216)) end}}, V209, V210)) end end, fun (V217) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V218) -> fun (V219) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V218, V219)) end end, fun (V220) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V220)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V221, V222)) end end, fun (V223) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V223)) end}}, V217)) end}, V0))), fun (V225) -> begin (V226 = (V224(V225))), case V226 of {'Prelude.Types.Left', V227} -> {'Prelude.Types.Left', V227}; {'Prelude.Types.Right', V228} -> (begin (V290 = begin (V232 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V229) -> fun (V230) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V229, V230)) end end, fun (V231) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V231)) end}, V0))), fun (V233) -> begin (V234 = (V232(V233))), case V234 of {'Prelude.Types.Left', V235} -> {'Prelude.Types.Left', V235}; {'Prelude.Types.Right', V236} -> (begin (V289 = begin (V237 = ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_RawImp'(V0))), fun (V238) -> begin (V239 = (V237(V238))), case V239 of {'Prelude.Types.Left', V240} -> {'Prelude.Types.Left', V240}; {'Prelude.Types.Right', V241} -> (begin (V288 = begin (V245 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V242) -> fun (V243) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V242, V243)) end end, fun (V244) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V244)) end}, V0))), fun (V246) -> begin (V247 = (V245(V246))), case V247 of {'Prelude.Types.Left', V248} -> {'Prelude.Types.Left', V248}; {'Prelude.Types.Right', V249} -> (begin (V287 = fun (V250) -> {'Prelude.Types.Right', {'Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--fromList'(V92)), ('Idris.Idris2.Libraries.Data.StringMap':'un--fromList'(V136)), [], ('Idris.Idris2.Libraries.Data.SortedMap':'un--fromList'({'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V251) -> fun (V252) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V251, V252)) end end, fun (V253) -> fun (V254) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_ModuleIdent'(V253, V254)) end end}, fun (V255) -> fun (V256) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_ModuleIdent'(V255, V256)) end end, fun (V257) -> fun (V258) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_ModuleIdent'(V257, V258)) end end, fun (V259) -> fun (V260) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_ModuleIdent'(V259, V260)) end end, fun (V261) -> fun (V262) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_ModuleIdent'(V261, V262)) end end, fun (V263) -> fun (V264) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_ModuleIdent'(V263, V264)) end end, fun (V265) -> fun (V266) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_ModuleIdent'(V265, V266)) end end, fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_ModuleIdent'(V267, V268)) end end}, V156)), ('Idris.Idris2.Libraries.Data.SortedMap':'un--fromList'({'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V269) -> fun (V270) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V269, V270)) end end, fun (V271) -> fun (V272) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_ModuleIdent'(V271, V272)) end end}, fun (V273) -> fun (V274) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_ModuleIdent'(V273, V274)) end end, fun (V275) -> fun (V276) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_ModuleIdent'(V275, V276)) end end, fun (V277) -> fun (V278) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_ModuleIdent'(V277, V278)) end end, fun (V279) -> fun (V280) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_ModuleIdent'(V279, V280)) end end, fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_ModuleIdent'(V281, V282)) end end, fun (V283) -> fun (V284) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_ModuleIdent'(V283, V284)) end end, fun (V285) -> fun (V286) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_ModuleIdent'(V285, V286)) end end}, V188)), [], ('Idris.Idris2.Libraries.Data.ANameMap':'un--fromList'(V208)), ('Idris.Idris2.Libraries.Data.NameMap':'un--empty'()), ('Idris.Idris2.Libraries.Data.ANameMap':'un--fromList'(V228)), V236, [], V241, V249}} end), V287 end(V246)) end end end end), V288 end(V238)) end end end end), V289 end(V233)) end end end end), V290 end(V225)) end end end end), V291 end(V205)) end end end end), V292 end(V185)) end end end end), V293 end(V153)) end end end end), V294 end(V133)) end end end end), V295 end(V89)) end end end end.
'dn--un--fromBuf_TTC_Method'(V0) -> begin (V1 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V28 = begin (V6 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RigCount'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V27 = begin (V14 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_TotalReq'(V11, V12)) end end, fun (V13) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_TotalReq'(V13)) end}, V0))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V26 = begin (V19 = ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_RawImp'(V0))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V25 = fun (V24) -> {'Prelude.Types.Right', {'Idris.Syntax.MkMethod', V5, V10, V18, V23}} end), V25 end(V20)) end end end end), V26 end(V15)) end end end end), V27 end(V7)) end end end end), V28 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Import'(V0) -> begin (V1 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_FC'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V25 = begin (V6 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V24 = begin (V11 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V0))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V23 = begin (V16 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V0))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V22 = fun (V21) -> {'Prelude.Types.Right', {'Idris.Syntax.MkImport', V5, V10, V15, V20}} end), V22 end(V17)) end end end end), V23 end(V12)) end end end end), V24 end(V7)) end end end end), V25 end(V2)) end end end end.
'dn--un--fromBuf_TTC_IFaceInfo'(V0) -> begin (V1 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V76 = begin (V9 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V6, V7)) end end, fun (V8) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V8)) end}, V0))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V75 = begin (V17 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V14, V15)) end end, fun (V16) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V16)) end}, V0))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V74 = begin (V25 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V22) -> fun (V23) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_RawImp'(V22, V23)) end end, fun (V24) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_RawImp'(V24)) end}, V0))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V73 = begin (V33 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V30) -> fun (V31) -> ('dn--un--toBuf_TTC_Method'(V30, V31)) end end, fun (V32) -> ('dn--un--fromBuf_TTC_Method'(V32)) end}, V0))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V72 = begin (V65 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V40, V41)) end end, fun (V42) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V42)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V45) -> fun (V46) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V45, V46)) end end, fun (V47) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V47)) end}, V43, V44)) end end, fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V49) -> fun (V50) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V49, V50)) end end, fun (V51) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V51)) end}, V48)) end}}, V38, V39)) end end, fun (V52) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V53, V54)) end end, fun (V55) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V55)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V58) -> fun (V59) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V58, V59)) end end, fun (V60) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V60)) end}, V56, V57)) end end, fun (V61) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V62) -> fun (V63) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--toBuf_TTC_ImpClause'(V62, V63)) end end, fun (V64) -> ('Idris.Idris2.TTImp.TTImp.TTC':'dn--un--fromBuf_TTC_ImpClause'(V64)) end}, V61)) end}}, V52)) end}, V0))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V71 = fun (V70) -> {'Prelude.Types.Right', {'Idris.Syntax.MkIFaceInfo', V5, V13, V21, V29, V37, V69}} end), V71 end(V66)) end end end end), V72 end(V34)) end end end end), V73 end(V26)) end end end end), V74 end(V18)) end end end end), V75 end(V10)) end end end end), V76 end(V2)) end end end end.
'dn--un--fromBuf_TTC_Fixity'(V0) -> begin (V1 = ('Idris.Idris2.Core.Binary.Prims':'un--getTag'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V7 = fun (V6) -> case V5 of 0 -> {'Prelude.Types.Right', 0}; 1 -> {'Prelude.Types.Right', 1}; 2 -> {'Prelude.Types.Right', 2}; 3 -> {'Prelude.Types.Right', 3}; _ -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<"Fixity"/utf8>>, V6)) end end), V7 end(V2)) end end end end.
'dn--un--__Impl_TTC_SyntaxInfo'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_SyntaxInfo'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_SyntaxInfo'(V2)) end}.
'dn--un--__Impl_TTC_Method'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Method'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Method'(V2)) end}.
'dn--un--__Impl_TTC_Import'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Import'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Import'(V2)) end}.
'dn--un--__Impl_TTC_IFaceInfo'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_IFaceInfo'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_IFaceInfo'(V2)) end}.
'dn--un--__Impl_TTC_Fixity'() -> {'Core.Binary.Prims.dn--un--__mkTTC', fun (V0) -> fun (V1) -> ('dn--un--toBuf_TTC_Fixity'(V0, V1)) end end, fun (V2) -> ('dn--un--fromBuf_TTC_Fixity'(V2)) end}.
