-module('Idris.Idris2.Idris.IDEMode.SyntaxHighlight').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--printOutput'/3,
  'un--outputSyntaxHighlighting'/6,
  'un--outputNameSyntax'/4,
  'un--outputHighlight'/3,
  'un--lwOutputHighlight'/3
]).
'un--printOutput'(V0, V1, V2) -> begin (V8 = begin (V3 = V1), fun (V4) -> begin (V7 = (begin (V5 = V3), fun (V6) -> ('erlang':'get'(V5)) end end(V4))), {'Prelude.Types.Right', V7} end end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V35 = case V12 of {'Idris.REPL.Opts.MkREPLOpts', V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} -> case V21 of {'Idris.REPL.Opts.REPL', V30} -> fun (V31) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; {'Idris.REPL.Opts.IDEMode', V32, V33, V34} -> ('Idris.Idris2.Idris.IDEMode.Commands':'un--send'(V0, V34, {'Protocol.IDE.Intermediate', {'Protocol.IDE.HighlightSource', [V2 | []]}, V32})) end end), V35 end(V9)) end end end end.
'un--outputSyntaxHighlighting'(V0, V1, V2, V3, V4, V5) -> begin (V11 = begin (V6 = V3), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V70 = begin (V63 = case case V15 of {'Idris.REPL.Opts.MkREPLOpts', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32} -> V32 end of 1 -> begin (V38 = begin (V33 = V1), fun (V34) -> begin (V37 = (begin (V35 = V33), fun (V36) -> ('erlang':'get'(V35)) end end(V34))), {'Prelude.Types.Right', V37} end end end), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V61 = begin (V43 = ('Idris.Idris2.Core.Directory':'un--ctxtPathToNS'(V0, V4))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V60 = begin (V48 = ('Idris.Idris2.Core.Metadata':'un--allSemanticHighlighting'(V0, V42))), fun (V49) -> begin (V50 = (V48(V49))), case V50 of {'Prelude.Types.Left', V51} -> {'Prelude.Types.Left', V51}; {'Prelude.Types.Right', V52} -> (begin (V59 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V53) -> case V53 of {'Builtin.MkPair', V54, V55} -> case V55 of {'Builtin.MkPair', V56, V57} -> case V57 of {'Prelude.Types.Nothing'} -> ('un--lwOutputHighlight'(V0, V3, {'Builtin.MkPair', V4, {'Builtin.MkPair', V54, V56}})); {'Prelude.Types.Just', V58} -> ('un--outputNameSyntax'(V0, V2, V3, {'Builtin.MkPair', V4, {'Builtin.MkPair', V54, {'Builtin.MkPair', V56, V58}}})) end end end end, ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--toList_Foldable_PosMap'(V52))))), V59 end(V49)) end end end end), V60 end(V44)) end end end end), V61 end(V39)) end end end end; 0 -> fun (V62) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V69 = fun (V68) -> {'Prelude.Types.Right', V5} end), V69 end(V64)) end end end end), V70 end(V12)) end end end end.
'un--outputNameSyntax'(V0, V1, V2, V3) -> case V3 of {'Builtin.MkPair', V4, V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> case V7 of {'Builtin.MkPair', V8, V9} -> begin (V15 = begin (V10 = V0), fun (V11) -> begin (V14 = (begin (V12 = V10), fun (V13) -> ('erlang':'get'(V12)) end end(V11))), {'Prelude.Types.Right', V14} end end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V98 = begin (V86 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"ide-mode.highlight"/utf8>>, 20, fun () -> <<<<"highlighting at "/utf8>>/binary, <<('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V20) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_OriginDesc'(V20)) end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_OriginDesc'(V21, V22)) end end}, {'Prelude.Show.MkShow', fun (V23) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V24) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V25) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V25)) end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V26, V27)) end end}, {'Prelude.Show.MkShow', fun (V28) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V28)) end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V29, V30)) end end}}, V24)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V34, V35)) end end}, {'Prelude.Show.MkShow', fun (V36) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V36)) end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V37, V38)) end end}}, V31, V32)) end end}, {'Prelude.Show.MkShow', fun (V39) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V40) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V41, V42)) end end}, {'Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V44, V45)) end end}}, V39)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V49, V50)) end end}, {'Prelude.Show.MkShow', fun (V51) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V52, V53)) end end}}, V46, V47)) end end}}, V23)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V56) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V57) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V57)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V58, V59)) end end}, {'Prelude.Show.MkShow', fun (V60) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V61, V62)) end end}}, V56)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V65) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V65)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V66, V67)) end end}, {'Prelude.Show.MkShow', fun (V68) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V69, V70)) end end}}, V63, V64)) end end}, {'Prelude.Show.MkShow', fun (V71) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V72) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V73, V74)) end end}, {'Prelude.Show.MkShow', fun (V75) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V75)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V76, V77)) end end}}, V71)) end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V80) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V80)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V81, V82)) end end}, {'Prelude.Show.MkShow', fun (V83) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V84, V85)) end end}}, V78, V79)) end end}}, V54, V55)) end end}}, V6))/binary, <<<<": "/utf8>>/binary, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V9))/binary, <<<<"\x{a}As: "/utf8>>/binary, ('Idris.Idris2.Protocol.IDE.Decoration':'dn--un--show_Show_Decoration'(V8))/binary>>/binary>>/binary>>/binary>>/binary>> end))), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V97 = case ('Idris.Idris2.Core.Name':'un--displayName'(V9)) of {'Builtin.MkPair', V91, V92} -> ('un--outputHighlight'(V0, V2, {'Protocol.IDE.Highlight.MkHighlight', (begin (V94 = fun (V93) -> ('Idris.Idris2.Idris.IDEMode.Commands':'dn--un--cast_Cast_(|((Builtin.Pair FileName) NonEmptyFC),((Builtin.MkPair FileName) NonEmptyFC)|)_FileContext'(V93)) end), fun (V95) -> (V94(V95)) end end({'Builtin.MkPair', V4, V6})), V92, 0, <<""/utf8>>, V8, <<""/utf8>>, <<""/utf8>>, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> <<""/utf8>> end, fun () -> fun (V96) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_Namespace'(V96)) end end, V91))})) end), V97 end(V87)) end end end end), V98 end(V16)) end end end end end end end.
'un--outputHighlight'(V0, V1, V2) -> ('un--printOutput'(V0, V1, {'Protocol.IDE.Highlight.Full', V2})).
'un--lwOutputHighlight'(V0, V1, V2) -> case V2 of {'Builtin.MkPair', V3, V4} -> case V4 of {'Builtin.MkPair', V5, V6} -> ('un--printOutput'(V0, V1, {'Protocol.IDE.Highlight.Lw', {'Protocol.IDE.Highlight.MkLwHighlight', (begin (V8 = fun (V7) -> ('Idris.Idris2.Idris.IDEMode.Commands':'dn--un--cast_Cast_(|((Builtin.Pair FileName) NonEmptyFC),((Builtin.MkPair FileName) NonEmptyFC)|)_FileContext'(V7)) end), fun (V9) -> (V8(V9)) end end({'Builtin.MkPair', V3, V5})), V6}})) end end.
