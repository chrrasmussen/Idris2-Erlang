-module('Idris.Idris2.TTImp.Elab.Hole').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--mkPrecise'/2,
  'un--checkHole'/12
]).
'un--mkPrecise'(V0, V1) -> case V1 of {'Core.Value.NApp', V2, V3, V4} -> case V3 of {'Core.Value.NMeta', V5, V6, V7} -> ('Idris.Idris2.Core.Context':'un--updateDef'(V0, {'Core.Name.Resolved', V6}, fun (V8) -> case V8 of {'Core.Context.Context.Hole', V9, V10} -> {'Prelude.Types.Just', {'Core.Context.Context.Hole', V9, case V10 of {'Core.Context.Context.MkHoleFlags', V11, V12} -> {'Core.Context.Context.MkHoleFlags', V11, 1} end}}; _ -> {'Prelude.Types.Nothing'} end end)); _ -> fun (V13) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end; _ -> fun (V14) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end.
'un--checkHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Prelude.Types.Just', V12} -> begin (V13 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, {'Core.Name.UN', V10}))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V126 = begin (V23 = begin (V18 = V1), fun (V19) -> begin (V22 = (begin (V20 = V18), fun (V21) -> ('erlang':'get'(V20)) end end(V19))), {'Prelude.Types.Right', V22} end end end), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V125 = begin (V60 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V17, case V27 of {'Core.Context.MkDefs', V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59} -> V28 end))), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V124 = case V64 of {'Prelude.Types.Nothing'} -> begin (V65 = ('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V12))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V116 = begin (V70 = ('Idris.Idris2.Core.Env':'un--letToLam'(V8))), begin (V71 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVarI'(V0, V1, V3, V9, V5, V70, V17, V69))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V115 = case V75 of {'Builtin.MkPair', V76, V77} -> begin (V84 = begin (V78 = ('Idris.Idris2.Core.Normalise.Eval':'un--getNF'(V1, V12))), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V83 = ('un--mkPrecise'(V1, V82))), V83 end(V79)) end end end end), fun (V85) -> begin (V86 = (V84(V85))), case V86 of {'Prelude.Types.Left', V87} -> {'Prelude.Types.Left', V87}; {'Prelude.Types.Right', V88} -> (begin (V114 = begin (V89 = ('Idris.Idris2.Core.Metadata':'un--withCurrentLHS'(V1, V2, {'Core.Name.Resolved', V76}))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V113 = begin (V94 = ('Idris.Idris2.Core.Metadata':'un--addNameLoc'(V2, V1, V9, V17))), fun (V95) -> begin (V96 = (V94(V95))), case V96 of {'Prelude.Types.Left', V97} -> {'Prelude.Types.Left', V97}; {'Prelude.Types.Right', V98} -> (begin (V112 = begin (V99 = ('Idris.Idris2.Core.Context':'un--addUserHole'(V1, 0, V17))), fun (V100) -> begin (V101 = (V99(V100))), case V101 of {'Prelude.Types.Left', V102} -> {'Prelude.Types.Left', V102}; {'Prelude.Types.Right', V103} -> (begin (V111 = begin (V104 = ('Idris.Idris2.TTImp.Elab.Check':'un--saveHole'(V4, V17))), fun (V105) -> begin (V106 = (V104(V105))), case V106 of {'Prelude.Types.Left', V107} -> {'Prelude.Types.Left', V107}; {'Prelude.Types.Right', V108} -> (begin (V110 = fun (V109) -> {'Prelude.Types.Right', {'Builtin.MkPair', V77, V12}} end), V110 end(V105)) end end end end), V111 end(V100)) end end end end), V112 end(V95)) end end end end), V113 end(V90)) end end end end), V114 end(V85)) end end end end end), V115 end(V72)) end end end end end), V116 end(V66)) end end end end; _ -> begin (V117 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"elab.hole"/utf8>>, 1, fun () -> <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V17))/binary, <<" already defined"/utf8>>/binary>> end))), fun (V118) -> begin (V119 = (V117(V118))), case V119 of {'Prelude.Types.Left', V120} -> {'Prelude.Types.Left', V120}; {'Prelude.Types.Right', V121} -> (begin (V123 = fun (V122) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.AlreadyDefined', V9, V17}, V122)) end), V123 end(V118)) end end end end end), V124 end(V61)) end end end end), V125 end(V24)) end end end end), V126 end(V14)) end end end end; _ -> begin (V127 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<<<"type_of_"/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_UserName'(V10))/binary>>))), fun (V128) -> begin (V129 = (V127(V128))), case V129 of {'Prelude.Types.Left', V130} -> {'Prelude.Types.Left', V130}; {'Prelude.Types.Right', V131} -> (begin (V256 = begin (V132 = ('Idris.Idris2.Core.Env':'un--letToLam'(V8))), begin (V133 = ('Idris.Idris2.TTImp.Elab.Check':'un--uniVar'(V1, V3, V9))), fun (V134) -> begin (V135 = (V133(V134))), case V135 of {'Prelude.Types.Left', V136} -> {'Prelude.Types.Left', V136}; {'Prelude.Types.Right', V137} -> (begin (V255 = begin (V142 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V1, V3, V9, ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V138) -> fun (V139) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V138, V139)) end end, 0, fun (V140) -> fun (V141) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V140, V141)) end end, 1})), V132, V131, {'Core.TT.TType', V9, V137}))), fun (V143) -> begin (V144 = (V142(V143))), case V144 of {'Prelude.Types.Left', V145} -> {'Prelude.Types.Left', V145}; {'Prelude.Types.Right', V146} -> (begin (V254 = begin (V147 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, {'Core.Name.UN', V10}))), fun (V148) -> begin (V149 = (V147(V148))), case V149 of {'Prelude.Types.Left', V150} -> {'Prelude.Types.Left', V150}; {'Prelude.Types.Right', V151} -> (begin (V253 = begin (V157 = begin (V152 = V1), fun (V153) -> begin (V156 = (begin (V154 = V152), fun (V155) -> ('erlang':'get'(V154)) end end(V153))), {'Prelude.Types.Right', V156} end end end), fun (V158) -> begin (V159 = (V157(V158))), case V159 of {'Prelude.Types.Left', V160} -> {'Prelude.Types.Left', V160}; {'Prelude.Types.Right', V161} -> (begin (V252 = begin (V168 = begin (V162 = ('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V161, V132, V146))), fun (V163) -> begin (V164 = (V162(V163))), case V164 of {'Prelude.Types.Left', V165} -> {'Prelude.Types.Left', V165}; {'Prelude.Types.Right', V166} -> (begin (V167 = ('un--mkPrecise'(V1, V166))), V167 end(V163)) end end end end), fun (V169) -> begin (V170 = (V168(V169))), case V170 of {'Prelude.Types.Left', V171} -> {'Prelude.Types.Left', V171}; {'Prelude.Types.Right', V172} -> (begin (V251 = begin (V205 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V151, case V161 of {'Core.Context.MkDefs', V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204} -> V173 end))), fun (V206) -> begin (V207 = (V205(V206))), case V207 of {'Prelude.Types.Left', V208} -> {'Prelude.Types.Left', V208}; {'Prelude.Types.Right', V209} -> (begin (V250 = case V209 of {'Prelude.Types.Nothing'} -> begin (V210 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVarI'(V0, V1, V3, V9, V5, V132, V151, V146))), fun (V211) -> begin (V212 = (V210(V211))), case V212 of {'Prelude.Types.Left', V213} -> {'Prelude.Types.Left', V213}; {'Prelude.Types.Right', V214} -> (begin (V242 = case V214 of {'Builtin.MkPair', V215, V216} -> begin (V217 = ('Idris.Idris2.Core.Metadata':'un--withCurrentLHS'(V1, V2, {'Core.Name.Resolved', V215}))), fun (V218) -> begin (V219 = (V217(V218))), case V219 of {'Prelude.Types.Left', V220} -> {'Prelude.Types.Left', V220}; {'Prelude.Types.Right', V221} -> (begin (V241 = begin (V222 = ('Idris.Idris2.Core.Metadata':'un--addNameLoc'(V2, V1, V9, V151))), fun (V223) -> begin (V224 = (V222(V223))), case V224 of {'Prelude.Types.Left', V225} -> {'Prelude.Types.Left', V225}; {'Prelude.Types.Right', V226} -> (begin (V240 = begin (V227 = ('Idris.Idris2.Core.Context':'un--addUserHole'(V1, 0, V151))), fun (V228) -> begin (V229 = (V227(V228))), case V229 of {'Prelude.Types.Left', V230} -> {'Prelude.Types.Left', V230}; {'Prelude.Types.Right', V231} -> (begin (V239 = begin (V232 = ('Idris.Idris2.TTImp.Elab.Check':'un--saveHole'(V4, V151))), fun (V233) -> begin (V234 = (V232(V233))), case V234 of {'Prelude.Types.Left', V235} -> {'Prelude.Types.Left', V235}; {'Prelude.Types.Right', V236} -> (begin (V238 = fun (V237) -> {'Prelude.Types.Right', {'Builtin.MkPair', V216, ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(V0, V8, V146))}} end), V238 end(V233)) end end end end), V239 end(V228)) end end end end), V240 end(V223)) end end end end), V241 end(V218)) end end end end end), V242 end(V211)) end end end end; _ -> begin (V243 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"elab.hole"/utf8>>, 1, fun () -> <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V151))/binary, <<" already defined"/utf8>>/binary>> end))), fun (V244) -> begin (V245 = (V243(V244))), case V245 of {'Prelude.Types.Left', V246} -> {'Prelude.Types.Left', V246}; {'Prelude.Types.Right', V247} -> (begin (V249 = fun (V248) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.AlreadyDefined', V9, V151}, V248)) end), V249 end(V244)) end end end end end), V250 end(V206)) end end end end), V251 end(V169)) end end end end), V252 end(V158)) end end end end), V253 end(V148)) end end end end), V254 end(V143)) end end end end), V255 end(V134)) end end end end end), V256 end(V128)) end end end end end.
