-module('Idris.Idris2.Idris.REPL.FuzzySearch').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--11330-7839--in--un--toFullNames\x{27}'/7,
  'nested--11330-7841--in--un--predicate'/9,
  'nested--11330-7833--in--un--parseNameOrConst'/7,
  'nested--11330-7834--in--un--parseExpr\x{27}'/7,
  'nested--11330-7835--in--un--parseExpr'/7,
  'nested--11330-7837--in--un--isApproximationOf\x{27}'/8,
  'nested--11330-7836--in--un--isApproximationOf'/8,
  'nested--11330-7840--in--un--fuzzyMatch'/9,
  'nested--11330-7832--in--un--eqConst'/8,
  'nested--11330-7838--in--un--doFind'/8,
  'un--fuzzySearch'/6
]).
'nested--11330-7839--in--un--toFullNames\x{27}'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.REPL.FuzzySearch.nested--11330-7829--in--un--AName', V7, V8, V9, V10, V11, V12, V13} -> begin (V19 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V5, {'Core.Context.dn--un--__mkHasNames', fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V14, V15)) end end, fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V16, V17, V18)) end end end}, V13))), ((begin (V35 = fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V32, V33, V34)) end end end end end), fun (V36) -> fun (V37) -> ((((V35('erased'))('erased'))(V36))(V37)) end end end((begin (V27 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> {'Prelude.Types.Right', (V23(V26))} end end end end end), fun (V28) -> fun (V29) -> ((((V27('erased'))('erased'))(V28))(V29)) end end end(fun (V20) -> {'Idris.REPL.FuzzySearch.nested--11330-7829--in--un--AName', V0, V1, V2, V3, V4, V5, V20} end))))(V19)) end; _ -> fun (V38) -> {'Prelude.Types.Right', V6} end end.
'nested--11330-7841--in--un--predicate'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Core.Context.Context.MkGlobalDef', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} -> case V26 of {'Core.Context.Context.Hole', V31, V32} -> fun (V33) -> {'Prelude.Types.Right', 0} end; _ -> ('nested--11330-7840--in--un--fuzzyMatch'(V0, V1, V2, V3, V4, V5, V6, V7, case V8 of {'Core.Context.Context.MkGlobalDef', V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55} -> V36 end)) end end.
'nested--11330-7833--in--un--parseNameOrConst'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Syntax.PRef', V7, V8} -> {'Prelude.Types.Just', {'Idris.REPL.FuzzySearch.nested--11330-7829--in--un--AName', V0, V1, V2, V3, V4, V5, V8}}; {'Idris.Syntax.PPrimVal', V9, V10} -> case V10 of {'Core.TT.PrT', V11} -> {'Prelude.Types.Just', {'Idris.REPL.FuzzySearch.nested--11330-7830--in--un--APrimType', V0, V1, V2, V3, V4, V5, V11}}; _ -> {'Prelude.Types.Nothing'} end; {'Idris.Syntax.PType', V12} -> {'Prelude.Types.Just', {'Idris.REPL.FuzzySearch.nested--11330-7831--in--un--AType', V0, V1, V2, V3, V4, V5}}; _ -> {'Prelude.Types.Nothing'} end.
'nested--11330-7834--in--un--parseExpr\x{27}'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Syntax.PApp', V7, V8, V9} -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'({'Prelude.Types.Just', fun (V10) -> fun (V11) -> [V10 | V11] end end}, ('nested--11330-7833--in--un--parseNameOrConst'(V0, V1, V2, V3, V4, V5, V9)))), ('nested--11330-7834--in--un--parseExpr\x{27}'(V0, V1, V2, V3, V4, V5, V8)))); _ -> ((begin (V17 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V15, V16)) end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V12) -> [V12 | []] end))(('nested--11330-7833--in--un--parseNameOrConst'(V0, V1, V2, V3, V4, V5, V6)))) end.
'nested--11330-7835--in--un--parseExpr'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Syntax.PPi', V7, V8, V9, V10, V11, V12} -> case V12 of {'Idris.Syntax.PImplicit', V13} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11330-7834--in--un--parseExpr\x{27}'(V0, V1, V2, V3, V4, V5, V11)), fun (V14) -> {'Prelude.Types.Just', {'Builtin.MkPair', V14, []}} end)); _ -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11330-7834--in--un--parseExpr\x{27}'(V0, V1, V2, V3, V4, V5, V11)), fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11330-7834--in--un--parseExpr\x{27}'(V0, V1, V2, V3, V4, V5, V12)), fun (V16) -> {'Prelude.Types.Just', {'Builtin.MkPair', V15, V16}} end)) end)) end; _ -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--11330-7834--in--un--parseExpr\x{27}'(V0, V1, V2, V3, V4, V5, V6)), fun (V17) -> {'Prelude.Types.Just', {'Builtin.MkPair', [], V17}} end)) end.
'nested--11330-7837--in--un--isApproximationOf\x{27}'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.REPL.FuzzySearch.nested--11330-7829--in--un--AName', V8, V9, V10, V11, V12, V13, V14} -> case V7 of {'Idris.REPL.FuzzySearch.nested--11330-7829--in--un--AName', V15, V16, V17, V18, V19, V20, V21} -> ('nested--11330-7836--in--un--isApproximationOf'(V0, V1, V2, V3, V4, V5, V14, V21)); _ -> ('nested--11330-7832--in--un--eqConst'(V0, V1, V2, V3, V4, V5, V6, V7)) end; _ -> ('nested--11330-7832--in--un--eqConst'(V0, V1, V2, V3, V4, V5, V6, V7)) end.
'nested--11330-7836--in--un--isApproximationOf'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Core.Name.NS', V8, V9} -> case V7 of {'Core.Name.NS', V10, V11} -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V9, V11)) of 1 -> ('Idris.Idris2.Core.Name.Namespace':'un--isApproximationOf'(V8, V10)); 0 -> 0 end; _ -> 0 end; {'Core.Name.UN', V12} -> case V7 of {'Core.Name.NS', V13, V14} -> case V14 of {'Core.Name.UN', V15} -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_UserName'(V12, V15)); _ -> 0 end; {'Core.Name.UN', V16} -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_UserName'(V12, V16)); _ -> 0 end; _ -> 0 end.
'nested--11330-7840--in--un--fuzzyMatch'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Core.TT.Bind', V9, V10, V11, V12} -> begin (V13 = ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, [], ('Idris.Idris2.Core.TT':'un--binderType'(V11))))), begin (V15 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V14) -> ('nested--11330-7839--in--un--toFullNames\x{27}'(V0, V1, V2, V3, V4, V5, V14)) end, V13, []))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V23 = begin (V22 = ('Idris.Idris2.Libraries.Data.List.Extra':'un--diffBy'(fun (V20) -> fun (V21) -> ('nested--11330-7837--in--un--isApproximationOf\x{27}'(V0, V1, V2, V3, V4, V5, V20, V21)) end end, V6, V19))), ('nested--11330-7840--in--un--fuzzyMatch'(V0, V1, V2, V3, V4, V5, V22, V7, V12)) end), V23 end(V16)) end end end end end; _ -> case V6 of [E0 | E1] -> (fun (V24, V25) -> fun (V26) -> {'Prelude.Types.Right', 0} end end(E0, E1)); [] -> begin (V27 = ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, [], V8))), begin (V29 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V28) -> ('nested--11330-7839--in--un--toFullNames\x{27}'(V0, V1, V2, V3, V4, V5, V28)) end, V27, []))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V37 = fun (V34) -> {'Prelude.Types.Right', ('Idris.Idris2.Data.List':'un--isNil'(('Idris.Idris2.Libraries.Data.List.Extra':'un--diffBy'(fun (V35) -> fun (V36) -> ('nested--11330-7837--in--un--isApproximationOf\x{27}'(V0, V1, V2, V3, V4, V5, V35, V36)) end end, V7, V33))))} end), V37 end(V30)) end end end end end end end.
'nested--11330-7832--in--un--eqConst'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.REPL.FuzzySearch.nested--11330-7830--in--un--APrimType', V8, V9, V10, V11, V12, V13, V14} -> case V7 of {'Idris.REPL.FuzzySearch.nested--11330-7830--in--un--APrimType', V15, V16, V17, V18, V19, V20, V21} -> ('Idris.Idris2.Core.TT':'dn--un--==_Eq_PrimType'(V14, V21)); _ -> 0 end; {'Idris.REPL.FuzzySearch.nested--11330-7831--in--un--AType', V22, V23, V24, V25, V26, V27} -> case V7 of {'Idris.REPL.FuzzySearch.nested--11330-7831--in--un--AType', V28, V29, V30, V31, V32, V33} -> 1; _ -> 0 end; _ -> 0 end.
'nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Core.TT.Local', V8, V9, V10} -> V6; {'Core.TT.Ref', V11, V12, V13} -> [{'Idris.REPL.FuzzySearch.nested--11330-7829--in--un--AName', V0, V1, V2, V3, V4, V5, V13} | V6]; {'Core.TT.Meta', V14, V15, V16, V17} -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V18) -> fun (V19) -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V18, V19)) end end, V6, V17)); {'Core.TT.Bind', V20, V21, V22, V23} -> case V22 of {'Core.TT.Let', V24, V25, V26, V27} -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, V26)), V27)), V23)); _ -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Core.TT':'un--binderType'(V22)))), V23)) end; {'Core.TT.App', V28, V29, V30} -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, V29)), V30)); {'Core.TT.As', V31, V32, V33, V34} -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, V34)); {'Core.TT.TDelayed', V35, V36, V37} -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, V37)); {'Core.TT.TDelay', V38, V39, V40, V41} -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, V40)), V41)); {'Core.TT.TForce', V42, V43, V44} -> ('nested--11330-7838--in--un--doFind'(V0, V1, V2, V3, V4, V5, V6, V44)); {'Core.TT.PrimVal', V45, V46} -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> [] end, ((begin (V52 = fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V50, V51)) end end end end), fun (V53) -> fun (V54) -> ((((V52('erased'))('erased'))(V53))(V54)) end end end(fun (V47) -> [V47 | []] end))(('nested--11330-7833--in--un--parseNameOrConst'(V0, V1, V2, V3, V4, V5, {'Idris.Syntax.PPrimVal', V45, V46})))))), V6)); {'Core.TT.Erased', V55, V56} -> V6; {'Core.TT.TType', V57, V58} -> [{'Idris.REPL.FuzzySearch.nested--11330-7831--in--un--AType', V0, V1, V2, V3, V4, V5} | V6] end.
'un--fuzzySearch'(V0, V1, V2, V3, V4, V5) -> case ('nested--11330-7835--in--un--parseExpr'(V5, V4, V3, V2, V1, V0, V5)) of {'Prelude.Types.Just', V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> begin (V9 = ('Idris.Idris2.Core.Context':'un--branch'(V0))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V259 = begin (V46 = case V13 of {'Core.Context.MkDefs', V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45} -> V16 end), begin (V79 = case V13 of {'Core.Context.MkDefs', V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78} -> V47 end), begin (V204 = begin (V80 = ('Idris.Idris2.Core.Context':'un--allNames'(V79))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V203 = begin (V88 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V85) -> ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V86, V87)) end end, V79, V85)) end, V84, []))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V202 = begin (V193 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Types.List':'un--mapMaybeAppend'({'Prelude.Basics.Lin'}, V93, V94)) end end, V92, fun (V95) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V95, fun (V96) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V99, V100)) end end end end, fun (V101) -> fun (V102) -> {'Prelude.Types.Just', V102} end end, fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V105, V106)) end end end end}, fun (V107) -> {'Prelude.Types.Nothing'} end, fun (V108) -> fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V109, V110)) end end end}, ('Idris.Idris2.Core.Context':'un--visibleIn'(V46, case V96 of {'Core.Context.Context.MkGlobalDef', V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132} -> V112 end, case V96 of {'Core.Context.Context.MkGlobalDef', V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154} -> V142 end)))), fun (V155) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V158, V159)) end end end end, fun (V160) -> fun (V161) -> {'Prelude.Types.Just', V161} end end, fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V164, V165)) end end end end}, fun (V166) -> {'Prelude.Types.Nothing'} end, fun (V167) -> fun (V168) -> fun (V169) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V168, V169)) end end end}, ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Core.Name':'un--userNameRoot'(case V96 of {'Core.Context.Context.MkGlobalDef', V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191} -> V171 end)))))), fun (V192) -> {'Prelude.Types.Just', V96} end)) end)) end)) end))), begin (V195 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V194) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_GlobalDef'(V79, V194)) end, V193, []))), fun (V196) -> begin (V197 = (V195(V196))), case V197 of {'Prelude.Types.Left', V198} -> {'Prelude.Types.Left', V198}; {'Prelude.Types.Right', V199} -> (begin (V201 = ('Idris.Idris2.Core.Core':'un--filterM'(fun (V200) -> ('nested--11330-7841--in--un--predicate'(V5, V4, V3, V2, V1, V0, V7, V8, V200)) end, V199))), V201 end(V196)) end end end end end), V202 end(V89)) end end end end), V203 end(V81)) end end end end), fun (V205) -> begin (V206 = (V204(V205))), case V206 of {'Prelude.Types.Left', V207} -> {'Prelude.Types.Left', V207}; {'Prelude.Types.Right', V208} -> (begin (V258 = begin (V214 = begin (V209 = V0), fun (V210) -> begin (V213 = (begin (V211 = V209), fun (V212) -> ('erlang':'put'(V211, V13)) end end(V210))), {'Prelude.Types.Right', V213} end end end), fun (V215) -> begin (V216 = (V214(V215))), case V216 of {'Prelude.Types.Left', V217} -> {'Prelude.Types.Left', V217}; {'Prelude.Types.Right', V218} -> (begin (V257 = begin (V250 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V219) -> ('Idris.Idris2.Idris.REPL.Common':'un--docsOrSignature'(V4, V0, V2, {'Core.FC.EmptyFC'}, V219)) end, ((begin (V247 = fun (V243) -> fun (V244) -> fun (V245) -> fun (V246) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V245, V246)) end end end end), fun (V248) -> fun (V249) -> ((((V247('erased'))('erased'))(V248))(V249)) end end end(fun (V220) -> case V220 of {'Core.Context.Context.MkGlobalDef', V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242} -> V222 end end))(V208)), []))), fun (V251) -> begin (V252 = (V250(V251))), case V252 of {'Prelude.Types.Left', V253} -> {'Prelude.Types.Left', V253}; {'Prelude.Types.Right', V254} -> (begin (V256 = fun (V255) -> {'Prelude.Types.Right', {'Idris.REPL.Common.PrintedDoc', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V254))}} end), V256 end(V251)) end end end end), V257 end(V215)) end end end end), V258 end(V205)) end end end end end end), V259 end(V10)) end end end end; _ -> fun (V260) -> {'Prelude.Types.Right', {'Idris.REPL.Common.REPLError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V262 = fun (V261) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V261)) end), fun (V263) -> (V262(V263)) end end(<<"Bad expression, expected"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V264) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V265) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V265)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V266) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V266)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V267) -> fun (V268) -> case case (V267 =:= V268) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V264)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V269} -> case V269 of {'Builtin.MkPair', V270, V271} -> [V270 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V271))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V264)); 0 -> V264 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V272} -> case V272 of {'Builtin.MkPair', V273, V274} -> [V273 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V274))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V275) -> fun (V276) -> case case (V275 =:= V276) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V264)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V277} -> case V277 of {'Builtin.MkPair', V278, V279} -> [V278 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V279))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V264)); 0 -> V264 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V280} -> case V280 of {'Builtin.MkPair', V281, V282} -> [V281 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V282))] end end)))))))) end, fun (V283) -> fun (V284) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V285) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V285)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V286) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V286)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V287) -> fun (V288) -> case case (V287 =:= V288) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V284)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V289} -> case V289 of {'Builtin.MkPair', V290, V291} -> [V290 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V291))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V284)); 0 -> V284 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V292} -> case V292 of {'Builtin.MkPair', V293, V294} -> [V293 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V294))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V295) -> fun (V296) -> case case (V295 =:= V296) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V284)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V297} -> case V297 of {'Builtin.MkPair', V298, V299} -> [V298 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V299))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V284)); 0 -> V284 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V300} -> case V300 of {'Builtin.MkPair', V301, V302} -> [V301 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V302))] end end)))))))) end end}, <<"B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"or"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V303) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V304) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V304)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V305) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V305)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V306) -> fun (V307) -> case case (V306 =:= V307) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V303)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V308} -> case V308 of {'Builtin.MkPair', V309, V310} -> [V309 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V310))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V303)); 0 -> V303 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V311} -> case V311 of {'Builtin.MkPair', V312, V313} -> [V312 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V313))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V314) -> fun (V315) -> case case (V314 =:= V315) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V303)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V316} -> case V316 of {'Builtin.MkPair', V317, V318} -> [V317 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V318))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V303)); 0 -> V303 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V319} -> case V319 of {'Builtin.MkPair', V320, V321} -> [V320 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V321))] end end)))))))) end, fun (V322) -> fun (V323) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V324) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V324)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V325) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V325)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V326) -> fun (V327) -> case case (V326 =:= V327) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V323)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V328} -> case V328 of {'Builtin.MkPair', V329, V330} -> [V329 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V330))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V323)); 0 -> V323 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V331} -> case V331 of {'Builtin.MkPair', V332, V333} -> [V332 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V333))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V334) -> fun (V335) -> case case (V334 =:= V335) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V323)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V336} -> case V336 of {'Builtin.MkPair', V337, V338} -> [V337 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V338))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V323)); 0 -> V323 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V339} -> case V339 of {'Builtin.MkPair', V340, V341} -> [V340 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V341))] end end)))))))) end end}, <<"_ -> B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"or"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V342) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V343) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V343)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V344) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V344)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V345) -> fun (V346) -> case case (V345 =:= V346) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V342)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V347} -> case V347 of {'Builtin.MkPair', V348, V349} -> [V348 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V349))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V342)); 0 -> V342 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V350} -> case V350 of {'Builtin.MkPair', V351, V352} -> [V351 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V352))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V353) -> fun (V354) -> case case (V353 =:= V354) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V342)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V355} -> case V355 of {'Builtin.MkPair', V356, V357} -> [V356 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V357))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V342)); 0 -> V342 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V358} -> case V358 of {'Builtin.MkPair', V359, V360} -> [V359 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V360))] end end)))))))) end, fun (V361) -> fun (V362) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V363) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V363)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V364) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V364)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V365) -> fun (V366) -> case case (V365 =:= V366) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V362)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V367} -> case V367 of {'Builtin.MkPair', V368, V369} -> [V368 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V369))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V362)); 0 -> V362 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V370} -> case V370 of {'Builtin.MkPair', V371, V372} -> [V371 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V372))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V373) -> fun (V374) -> case case (V373 =:= V374) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V362)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V375} -> case V375 of {'Builtin.MkPair', V376, V377} -> [V376 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V377))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V362)); 0 -> V362 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V378} -> case V378 of {'Builtin.MkPair', V379, V380} -> [V379 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V380))] end end)))))))) end end}, <<"A -> B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V381) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V382) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V382)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V383) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V383)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V384) -> fun (V385) -> case case (V384 =:= V385) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V381)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V386} -> case V386 of {'Builtin.MkPair', V387, V388} -> [V387 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V388))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V381)); 0 -> V381 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V389} -> case V389 of {'Builtin.MkPair', V390, V391} -> [V390 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V391))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V392) -> fun (V393) -> case case (V392 =:= V393) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V381)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V394} -> case V394 of {'Builtin.MkPair', V395, V396} -> [V395 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V396))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V381)); 0 -> V381 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V397} -> case V397 of {'Builtin.MkPair', V398, V399} -> [V398 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V399))] end end)))))))) end, fun (V400) -> fun (V401) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V402) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V402)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V403) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V403)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V404) -> fun (V405) -> case case (V404 =:= V405) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V401)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V406} -> case V406 of {'Builtin.MkPair', V407, V408} -> [V407 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V408))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V401)); 0 -> V401 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V409} -> case V409 of {'Builtin.MkPair', V410, V411} -> [V410 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V411))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V412) -> fun (V413) -> case case (V412 =:= V413) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V401)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V414} -> case V414 of {'Builtin.MkPair', V415, V416} -> [V415 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V416))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V401)); 0 -> V401 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V417} -> case V417 of {'Builtin.MkPair', V418, V419} -> [V418 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V419))] end end)))))))) end end}, <<", where"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V420) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V421) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V421)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V422) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V422)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V423) -> fun (V424) -> case case (V423 =:= V424) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V420)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V425} -> case V425 of {'Builtin.MkPair', V426, V427} -> [V426 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V427))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V420)); 0 -> V420 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V428} -> case V428 of {'Builtin.MkPair', V429, V430} -> [V429 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V430))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V431) -> fun (V432) -> case case (V431 =:= V432) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V420)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V433} -> case V433 of {'Builtin.MkPair', V434, V435} -> [V434 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V435))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V420)); 0 -> V420 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V436} -> case V436 of {'Builtin.MkPair', V437, V438} -> [V437 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V438))] end end)))))))) end, fun (V439) -> fun (V440) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V441) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V441)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V442) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V442)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V443) -> fun (V444) -> case case (V443 =:= V444) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V440)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V445} -> case V445 of {'Builtin.MkPair', V446, V447} -> [V446 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V447))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V440)); 0 -> V440 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V448} -> case V448 of {'Builtin.MkPair', V449, V450} -> [V449 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V450))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V451) -> fun (V452) -> case case (V451 =:= V452) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V440)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V453} -> case V453 of {'Builtin.MkPair', V454, V455} -> [V454 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V455))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V440)); 0 -> V440 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V456} -> case V456 of {'Builtin.MkPair', V457, V458} -> [V457 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V458))] end end)))))))) end end}, <<"A"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"and"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V459) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V460) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V460)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V461) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V461)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V462) -> fun (V463) -> case case (V462 =:= V463) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V459)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V464} -> case V464 of {'Builtin.MkPair', V465, V466} -> [V465 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V466))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V459)); 0 -> V459 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V467} -> case V467 of {'Builtin.MkPair', V468, V469} -> [V468 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V469))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V470) -> fun (V471) -> case case (V470 =:= V471) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V459)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V472} -> case V472 of {'Builtin.MkPair', V473, V474} -> [V473 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V474))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V459)); 0 -> V459 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V475} -> case V475 of {'Builtin.MkPair', V476, V477} -> [V476 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V477))] end end)))))))) end, fun (V478) -> fun (V479) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V480) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V480)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V481) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V481)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V482) -> fun (V483) -> case case (V482 =:= V483) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V479)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V484} -> case V484 of {'Builtin.MkPair', V485, V486} -> [V485 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V486))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V479)); 0 -> V479 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V487} -> case V487 of {'Builtin.MkPair', V488, V489} -> [V488 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V489))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V490) -> fun (V491) -> case case (V490 =:= V491) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V479)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V492} -> case V492 of {'Builtin.MkPair', V493, V494} -> [V493 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V494))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V479)); 0 -> V479 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V495} -> case V495 of {'Builtin.MkPair', V496, V497} -> [V496 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V497))] end end)))))))) end end}, <<"B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"are spines of global names"/utf8>>))))))))))))))))))))}} end end; _ -> fun (V498) -> {'Prelude.Types.Right', {'Idris.REPL.Common.REPLError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V500 = fun (V499) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V499)) end), fun (V501) -> (V500(V501)) end end(<<"Bad expression, expected"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V502) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V503) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V503)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V504) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V504)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V505) -> fun (V506) -> case case (V505 =:= V506) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V502)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V507} -> case V507 of {'Builtin.MkPair', V508, V509} -> [V508 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V509))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V502)); 0 -> V502 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V510} -> case V510 of {'Builtin.MkPair', V511, V512} -> [V511 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V512))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V513) -> fun (V514) -> case case (V513 =:= V514) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V502)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V515} -> case V515 of {'Builtin.MkPair', V516, V517} -> [V516 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V517))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V502)); 0 -> V502 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V518} -> case V518 of {'Builtin.MkPair', V519, V520} -> [V519 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V520))] end end)))))))) end, fun (V521) -> fun (V522) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V523) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V523)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V524) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V524)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V525) -> fun (V526) -> case case (V525 =:= V526) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V522)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V527} -> case V527 of {'Builtin.MkPair', V528, V529} -> [V528 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V529))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V522)); 0 -> V522 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V530} -> case V530 of {'Builtin.MkPair', V531, V532} -> [V531 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V532))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V533) -> fun (V534) -> case case (V533 =:= V534) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V522)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V535} -> case V535 of {'Builtin.MkPair', V536, V537} -> [V536 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V537))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V522)); 0 -> V522 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V538} -> case V538 of {'Builtin.MkPair', V539, V540} -> [V539 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V540))] end end)))))))) end end}, <<"B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"or"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V541) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V542) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V542)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V543) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V543)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V544) -> fun (V545) -> case case (V544 =:= V545) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V541)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V546} -> case V546 of {'Builtin.MkPair', V547, V548} -> [V547 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V548))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V541)); 0 -> V541 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V549} -> case V549 of {'Builtin.MkPair', V550, V551} -> [V550 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V551))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V552) -> fun (V553) -> case case (V552 =:= V553) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V541)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V554} -> case V554 of {'Builtin.MkPair', V555, V556} -> [V555 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V556))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V541)); 0 -> V541 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V557} -> case V557 of {'Builtin.MkPair', V558, V559} -> [V558 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V559))] end end)))))))) end, fun (V560) -> fun (V561) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V562) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V562)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V563) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V563)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V564) -> fun (V565) -> case case (V564 =:= V565) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V561)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V566} -> case V566 of {'Builtin.MkPair', V567, V568} -> [V567 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V568))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V561)); 0 -> V561 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V569} -> case V569 of {'Builtin.MkPair', V570, V571} -> [V570 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V571))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V572) -> fun (V573) -> case case (V572 =:= V573) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V561)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V574} -> case V574 of {'Builtin.MkPair', V575, V576} -> [V575 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V576))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V561)); 0 -> V561 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V577} -> case V577 of {'Builtin.MkPair', V578, V579} -> [V578 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V579))] end end)))))))) end end}, <<"_ -> B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"or"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V580) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V581) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V581)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V582) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V582)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V583) -> fun (V584) -> case case (V583 =:= V584) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V580)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V585} -> case V585 of {'Builtin.MkPair', V586, V587} -> [V586 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V587))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V580)); 0 -> V580 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V588} -> case V588 of {'Builtin.MkPair', V589, V590} -> [V589 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V590))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V591) -> fun (V592) -> case case (V591 =:= V592) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V580)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V593} -> case V593 of {'Builtin.MkPair', V594, V595} -> [V594 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V595))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V580)); 0 -> V580 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V596} -> case V596 of {'Builtin.MkPair', V597, V598} -> [V597 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V598))] end end)))))))) end, fun (V599) -> fun (V600) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V601) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V601)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V602) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V602)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V603) -> fun (V604) -> case case (V603 =:= V604) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V600)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V605} -> case V605 of {'Builtin.MkPair', V606, V607} -> [V606 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V607))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V600)); 0 -> V600 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V608} -> case V608 of {'Builtin.MkPair', V609, V610} -> [V609 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V610))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V611) -> fun (V612) -> case case (V611 =:= V612) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V600)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V613} -> case V613 of {'Builtin.MkPair', V614, V615} -> [V614 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V615))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V600)); 0 -> V600 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V616} -> case V616 of {'Builtin.MkPair', V617, V618} -> [V617 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V618))] end end)))))))) end end}, <<"A -> B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V619) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V620) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V620)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V621) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V621)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V622) -> fun (V623) -> case case (V622 =:= V623) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V619)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V624} -> case V624 of {'Builtin.MkPair', V625, V626} -> [V625 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V626))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V619)); 0 -> V619 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V627} -> case V627 of {'Builtin.MkPair', V628, V629} -> [V628 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V629))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V630) -> fun (V631) -> case case (V630 =:= V631) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V619)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V632} -> case V632 of {'Builtin.MkPair', V633, V634} -> [V633 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V634))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V619)); 0 -> V619 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V635} -> case V635 of {'Builtin.MkPair', V636, V637} -> [V636 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V637))] end end)))))))) end, fun (V638) -> fun (V639) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V640) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V640)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V641) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V641)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V642) -> fun (V643) -> case case (V642 =:= V643) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V639)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V644} -> case V644 of {'Builtin.MkPair', V645, V646} -> [V645 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V646))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V639)); 0 -> V639 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V647} -> case V647 of {'Builtin.MkPair', V648, V649} -> [V648 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V649))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V650) -> fun (V651) -> case case (V650 =:= V651) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V639)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V652} -> case V652 of {'Builtin.MkPair', V653, V654} -> [V653 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V654))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V639)); 0 -> V639 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V655} -> case V655 of {'Builtin.MkPair', V656, V657} -> [V656 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V657))] end end)))))))) end end}, <<", where"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V658) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V659) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V659)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V660) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V660)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V661) -> fun (V662) -> case case (V661 =:= V662) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V658)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V663} -> case V663 of {'Builtin.MkPair', V664, V665} -> [V664 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V665))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V658)); 0 -> V658 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V666} -> case V666 of {'Builtin.MkPair', V667, V668} -> [V667 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V668))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V669) -> fun (V670) -> case case (V669 =:= V670) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V658)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V671} -> case V671 of {'Builtin.MkPair', V672, V673} -> [V672 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V673))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V658)); 0 -> V658 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V674} -> case V674 of {'Builtin.MkPair', V675, V676} -> [V675 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V676))] end end)))))))) end, fun (V677) -> fun (V678) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V679) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V679)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V680) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V680)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V681) -> fun (V682) -> case case (V681 =:= V682) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V678)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V683} -> case V683 of {'Builtin.MkPair', V684, V685} -> [V684 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V685))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V678)); 0 -> V678 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V686} -> case V686 of {'Builtin.MkPair', V687, V688} -> [V687 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V688))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V689) -> fun (V690) -> case case (V689 =:= V690) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V678)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V691} -> case V691 of {'Builtin.MkPair', V692, V693} -> [V692 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V693))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V678)); 0 -> V678 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V694} -> case V694 of {'Builtin.MkPair', V695, V696} -> [V695 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V696))] end end)))))))) end end}, <<"A"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"and"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V697) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V698) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V698)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V699) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V699)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V700) -> fun (V701) -> case case (V700 =:= V701) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V697)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V702} -> case V702 of {'Builtin.MkPair', V703, V704} -> [V703 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V704))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V697)); 0 -> V697 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V705} -> case V705 of {'Builtin.MkPair', V706, V707} -> [V706 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V707))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V708) -> fun (V709) -> case case (V708 =:= V709) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V697)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V710} -> case V710 of {'Builtin.MkPair', V711, V712} -> [V711 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V712))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V697)); 0 -> V697 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V713} -> case V713 of {'Builtin.MkPair', V714, V715} -> [V714 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V715))] end end)))))))) end, fun (V716) -> fun (V717) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V718) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V718)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V719) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V719)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V720) -> fun (V721) -> case case (V720 =:= V721) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V717)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V722} -> case V722 of {'Builtin.MkPair', V723, V724} -> [V723 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V724))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V717)); 0 -> V717 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V725} -> case V725 of {'Builtin.MkPair', V726, V727} -> [V726 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V727))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V728) -> fun (V729) -> case case (V728 =:= V729) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V717)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V730} -> case V730 of {'Builtin.MkPair', V731, V732} -> [V731 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V732))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V717)); 0 -> V717 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V733} -> case V733 of {'Builtin.MkPair', V734, V735} -> [V734 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V735))] end end)))))))) end end}, <<"B"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"are spines of global names"/utf8>>))))))))))))))))))))}} end end.
