-module('Idris.Idris2.TTImp.Reflect').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--reify_Reify_WithFlag'/4,
  'dn--un--reify_Reify_UseSide'/4,
  'dn--un--reify_Reify_RawImp'/4,
  'dn--un--reify_Reify_ImpTy'/4,
  'dn--un--reify_Reify_ImpRecord'/4,
  'dn--un--reify_Reify_ImpDecl'/4,
  'dn--un--reify_Reify_ImpData'/4,
  'dn--un--reify_Reify_ImpClause'/4,
  'dn--un--reify_Reify_IFieldUpdate'/4,
  'dn--un--reify_Reify_IField'/4,
  'dn--un--reify_Reify_FnOpt'/4,
  'dn--un--reify_Reify_DotReason'/4,
  'dn--un--reify_Reify_DataOpt'/4,
  'dn--un--reify_Reify_BindMode'/4,
  'dn--un--reify_Reify_AltType'/4,
  'dn--un--reflect_Reflect_WithFlag'/6,
  'dn--un--reflect_Reflect_UseSide'/6,
  'dn--un--reflect_Reflect_RawImp'/6,
  'dn--un--reflect_Reflect_ImpTy'/6,
  'dn--un--reflect_Reflect_ImpRecord'/6,
  'dn--un--reflect_Reflect_ImpDecl'/6,
  'dn--un--reflect_Reflect_ImpData'/6,
  'dn--un--reflect_Reflect_ImpClause'/6,
  'dn--un--reflect_Reflect_IFieldUpdate'/6,
  'dn--un--reflect_Reflect_IField'/6,
  'dn--un--reflect_Reflect_FnOpt'/6,
  'dn--un--reflect_Reflect_DotReason'/6,
  'dn--un--reflect_Reflect_DataOpt'/6,
  'dn--un--reflect_Reflect_BindMode'/6,
  'dn--un--reflect_Reflect_AltType'/6,
  'dn--un--__Impl_Reify_WithFlag'/4,
  'dn--un--__Impl_Reify_UseSide'/4,
  'dn--un--__Impl_Reify_RawImp'/4,
  'dn--un--__Impl_Reify_ImpTy'/4,
  'dn--un--__Impl_Reify_ImpRecord'/4,
  'dn--un--__Impl_Reify_ImpDecl'/4,
  'dn--un--__Impl_Reify_ImpData'/4,
  'dn--un--__Impl_Reify_ImpClause'/4,
  'dn--un--__Impl_Reify_IFieldUpdate'/4,
  'dn--un--__Impl_Reify_IField'/4,
  'dn--un--__Impl_Reify_FnOpt'/4,
  'dn--un--__Impl_Reify_DotReason'/4,
  'dn--un--__Impl_Reify_DataOpt'/4,
  'dn--un--__Impl_Reify_BindMode'/4,
  'dn--un--__Impl_Reify_AltType'/4,
  'dn--un--__Impl_Reflect_WithFlag'/6,
  'dn--un--__Impl_Reflect_UseSide'/6,
  'dn--un--__Impl_Reflect_RawImp'/6,
  'dn--un--__Impl_Reflect_ImpTy'/6,
  'dn--un--__Impl_Reflect_ImpRecord'/6,
  'dn--un--__Impl_Reflect_ImpDecl'/6,
  'dn--un--__Impl_Reflect_ImpData'/6,
  'dn--un--__Impl_Reflect_ImpClause'/6,
  'dn--un--__Impl_Reflect_IFieldUpdate'/6,
  'dn--un--__Impl_Reflect_IField'/6,
  'dn--un--__Impl_Reflect_FnOpt'/6,
  'dn--un--__Impl_Reflect_DotReason'/6,
  'dn--un--__Impl_Reflect_DataOpt'/6,
  'dn--un--__Impl_Reflect_BindMode'/6,
  'dn--un--__Impl_Reflect_AltType'/6
]).
'dn--un--reify_Reify_WithFlag'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V58 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"Syntactic"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [] -> fun (V57) -> {'Prelude.Types.Right', {'TTImp.TTImp.Syntactic'}} end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"WithFlag"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"WithFlag"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"WithFlag"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"WithFlag"/utf8>>)) end end), V58 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"WithFlag"/utf8>>)) end.
'dn--un--reify_Reify_UseSide'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V51 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"UseLeft"/utf8>> -> fun (V49) -> {'Prelude.Types.Right', 0} end; <<"UseRight"/utf8>> -> fun (V50) -> {'Prelude.Types.Right', 1} end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"UseSide"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"UseSide"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"UseSide"/utf8>>)) end end), V51 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"UseSide"/utf8>>)) end.
'dn--un--reify_Reify_RawImp'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V1935 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"IVar"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [E0 | E1] -> (fun (V57, V58) -> case V58 of [E2 | E3] -> (fun (V59, V60) -> case V60 of [] -> begin (V67 = begin (V61 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V57))), fun (V62) -> begin (V63 = (V61(V62))), case V63 of {'Prelude.Types.Left', V64} -> {'Prelude.Types.Left', V64}; {'Prelude.Types.Right', V65} -> (begin (V66 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V65))), V66 end(V62)) end end end end), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V85 = begin (V78 = begin (V72 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V77 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V76))), V77 end(V73)) end end end end), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V84 = fun (V83) -> {'Prelude.Types.Right', {'TTImp.TTImp.IVar', V71, V82}} end), V84 end(V79)) end end end end), V85 end(V68)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IPi"/utf8>> -> case ((begin (V91 = fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V89, V90)) end end end end), fun (V92) -> fun (V93) -> ((((V91('erased'))('erased'))(V92))(V93)) end end end(fun (V86) -> ('Idris.Idris2.Builtin':'un--snd'(V86)) end))(V8)) of [E4 | E5] -> (fun (V94, V95) -> case V95 of [E6 | E7] -> (fun (V96, V97) -> case V97 of [E8 | E9] -> (fun (V98, V99) -> case V99 of [E10 | E11] -> (fun (V100, V101) -> case V101 of [E12 | E13] -> (fun (V102, V103) -> case V103 of [E14 | E15] -> (fun (V104, V105) -> case V105 of [] -> begin (V112 = begin (V106 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V94))), fun (V107) -> begin (V108 = (V106(V107))), case V108 of {'Prelude.Types.Left', V109} -> {'Prelude.Types.Left', V109}; {'Prelude.Types.Right', V110} -> (begin (V111 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V110))), V111 end(V107)) end end end end), fun (V113) -> begin (V114 = (V112(V113))), case V114 of {'Prelude.Types.Left', V115} -> {'Prelude.Types.Left', V115}; {'Prelude.Types.Right', V116} -> (begin (V221 = begin (V130 = begin (V117 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V96))), fun (V118) -> begin (V119 = (V117(V118))), case V119 of {'Prelude.Types.Left', V120} -> {'Prelude.Types.Left', V120}; {'Prelude.Types.Right', V121} -> (begin (V129 = ((begin (V126 = fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V122, V123, V124, V125)) end end end end), fun (V127) -> fun (V128) -> ((((V126(V0))(V1))(V127))(V128)) end end end(V2))(V121))), V129 end(V118)) end end end end), fun (V131) -> begin (V132 = (V130(V131))), case V132 of {'Prelude.Types.Left', V133} -> {'Prelude.Types.Left', V133}; {'Prelude.Types.Right', V134} -> (begin (V220 = begin (V152 = begin (V135 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V98))), fun (V136) -> begin (V137 = (V135(V136))), case V137 of {'Prelude.Types.Left', V138} -> {'Prelude.Types.Left', V138}; {'Prelude.Types.Right', V139} -> (begin (V151 = ((begin (V148 = fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> ('dn--un--reify_Reify_RawImp'(V144, V145, V146, V147)) end end end end, V140, V141, V142, V143)) end end end end), fun (V149) -> fun (V150) -> ((((V148(V0))(V1))(V149))(V150)) end end end(V2))(V139))), V151 end(V136)) end end end end), fun (V153) -> begin (V154 = (V152(V153))), case V154 of {'Prelude.Types.Left', V155} -> {'Prelude.Types.Left', V155}; {'Prelude.Types.Right', V156} -> (begin (V219 = begin (V174 = begin (V157 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V100))), fun (V158) -> begin (V159 = (V157(V158))), case V159 of {'Prelude.Types.Left', V160} -> {'Prelude.Types.Left', V160}; {'Prelude.Types.Right', V161} -> (begin (V173 = ((begin (V170 = fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V166, V167, V168, V169)) end end end end, V162, V163, V164, V165)) end end end end), fun (V171) -> fun (V172) -> ((((V170(V0))(V1))(V171))(V172)) end end end(V2))(V161))), V173 end(V158)) end end end end), fun (V175) -> begin (V176 = (V174(V175))), case V176 of {'Prelude.Types.Left', V177} -> {'Prelude.Types.Left', V177}; {'Prelude.Types.Right', V178} -> (begin (V218 = begin (V192 = begin (V179 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V102))), fun (V180) -> begin (V181 = (V179(V180))), case V181 of {'Prelude.Types.Left', V182} -> {'Prelude.Types.Left', V182}; {'Prelude.Types.Right', V183} -> (begin (V191 = ((begin (V188 = fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> ('dn--un--reify_Reify_RawImp'(V184, V185, V186, V187)) end end end end), fun (V189) -> fun (V190) -> ((((V188(V0))(V1))(V189))(V190)) end end end(V2))(V183))), V191 end(V180)) end end end end), fun (V193) -> begin (V194 = (V192(V193))), case V194 of {'Prelude.Types.Left', V195} -> {'Prelude.Types.Left', V195}; {'Prelude.Types.Right', V196} -> (begin (V217 = begin (V210 = begin (V197 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V104))), fun (V198) -> begin (V199 = (V197(V198))), case V199 of {'Prelude.Types.Left', V200} -> {'Prelude.Types.Left', V200}; {'Prelude.Types.Right', V201} -> (begin (V209 = ((begin (V206 = fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('dn--un--reify_Reify_RawImp'(V202, V203, V204, V205)) end end end end), fun (V207) -> fun (V208) -> ((((V206(V0))(V1))(V207))(V208)) end end end(V2))(V201))), V209 end(V198)) end end end end), fun (V211) -> begin (V212 = (V210(V211))), case V212 of {'Prelude.Types.Left', V213} -> {'Prelude.Types.Left', V213}; {'Prelude.Types.Right', V214} -> (begin (V216 = fun (V215) -> {'Prelude.Types.Right', {'TTImp.TTImp.IPi', V116, V134, V156, V178, V196, V214}} end), V216 end(V211)) end end end end), V217 end(V193)) end end end end), V218 end(V175)) end end end end), V219 end(V153)) end end end end), V220 end(V131)) end end end end), V221 end(V113)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E14, E15)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E12, E13)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E10, E11)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E8, E9)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"ILam"/utf8>> -> case ((begin (V227 = fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V225, V226)) end end end end), fun (V228) -> fun (V229) -> ((((V227('erased'))('erased'))(V228))(V229)) end end end(fun (V222) -> ('Idris.Idris2.Builtin':'un--snd'(V222)) end))(V8)) of [E16 | E17] -> (fun (V230, V231) -> case V231 of [E18 | E19] -> (fun (V232, V233) -> case V233 of [E20 | E21] -> (fun (V234, V235) -> case V235 of [E22 | E23] -> (fun (V236, V237) -> case V237 of [E24 | E25] -> (fun (V238, V239) -> case V239 of [E26 | E27] -> (fun (V240, V241) -> case V241 of [] -> begin (V248 = begin (V242 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V230))), fun (V243) -> begin (V244 = (V242(V243))), case V244 of {'Prelude.Types.Left', V245} -> {'Prelude.Types.Left', V245}; {'Prelude.Types.Right', V246} -> (begin (V247 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V246))), V247 end(V243)) end end end end), fun (V249) -> begin (V250 = (V248(V249))), case V250 of {'Prelude.Types.Left', V251} -> {'Prelude.Types.Left', V251}; {'Prelude.Types.Right', V252} -> (begin (V357 = begin (V266 = begin (V253 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V232))), fun (V254) -> begin (V255 = (V253(V254))), case V255 of {'Prelude.Types.Left', V256} -> {'Prelude.Types.Left', V256}; {'Prelude.Types.Right', V257} -> (begin (V265 = ((begin (V262 = fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V258, V259, V260, V261)) end end end end), fun (V263) -> fun (V264) -> ((((V262(V0))(V1))(V263))(V264)) end end end(V2))(V257))), V265 end(V254)) end end end end), fun (V267) -> begin (V268 = (V266(V267))), case V268 of {'Prelude.Types.Left', V269} -> {'Prelude.Types.Left', V269}; {'Prelude.Types.Right', V270} -> (begin (V356 = begin (V288 = begin (V271 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V234))), fun (V272) -> begin (V273 = (V271(V272))), case V273 of {'Prelude.Types.Left', V274} -> {'Prelude.Types.Left', V274}; {'Prelude.Types.Right', V275} -> (begin (V287 = ((begin (V284 = fun (V276) -> fun (V277) -> fun (V278) -> fun (V279) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> ('dn--un--reify_Reify_RawImp'(V280, V281, V282, V283)) end end end end, V276, V277, V278, V279)) end end end end), fun (V285) -> fun (V286) -> ((((V284(V0))(V1))(V285))(V286)) end end end(V2))(V275))), V287 end(V272)) end end end end), fun (V289) -> begin (V290 = (V288(V289))), case V290 of {'Prelude.Types.Left', V291} -> {'Prelude.Types.Left', V291}; {'Prelude.Types.Right', V292} -> (begin (V355 = begin (V310 = begin (V293 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V236))), fun (V294) -> begin (V295 = (V293(V294))), case V295 of {'Prelude.Types.Left', V296} -> {'Prelude.Types.Left', V296}; {'Prelude.Types.Right', V297} -> (begin (V309 = ((begin (V306 = fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V302) -> fun (V303) -> fun (V304) -> fun (V305) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V302, V303, V304, V305)) end end end end, V298, V299, V300, V301)) end end end end), fun (V307) -> fun (V308) -> ((((V306(V0))(V1))(V307))(V308)) end end end(V2))(V297))), V309 end(V294)) end end end end), fun (V311) -> begin (V312 = (V310(V311))), case V312 of {'Prelude.Types.Left', V313} -> {'Prelude.Types.Left', V313}; {'Prelude.Types.Right', V314} -> (begin (V354 = begin (V328 = begin (V315 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V238))), fun (V316) -> begin (V317 = (V315(V316))), case V317 of {'Prelude.Types.Left', V318} -> {'Prelude.Types.Left', V318}; {'Prelude.Types.Right', V319} -> (begin (V327 = ((begin (V324 = fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> ('dn--un--reify_Reify_RawImp'(V320, V321, V322, V323)) end end end end), fun (V325) -> fun (V326) -> ((((V324(V0))(V1))(V325))(V326)) end end end(V2))(V319))), V327 end(V316)) end end end end), fun (V329) -> begin (V330 = (V328(V329))), case V330 of {'Prelude.Types.Left', V331} -> {'Prelude.Types.Left', V331}; {'Prelude.Types.Right', V332} -> (begin (V353 = begin (V346 = begin (V333 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V240))), fun (V334) -> begin (V335 = (V333(V334))), case V335 of {'Prelude.Types.Left', V336} -> {'Prelude.Types.Left', V336}; {'Prelude.Types.Right', V337} -> (begin (V345 = ((begin (V342 = fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> ('dn--un--reify_Reify_RawImp'(V338, V339, V340, V341)) end end end end), fun (V343) -> fun (V344) -> ((((V342(V0))(V1))(V343))(V344)) end end end(V2))(V337))), V345 end(V334)) end end end end), fun (V347) -> begin (V348 = (V346(V347))), case V348 of {'Prelude.Types.Left', V349} -> {'Prelude.Types.Left', V349}; {'Prelude.Types.Right', V350} -> (begin (V352 = fun (V351) -> {'Prelude.Types.Right', {'TTImp.TTImp.ILam', V252, V270, V292, V314, V332, V350}} end), V352 end(V347)) end end end end), V353 end(V329)) end end end end), V354 end(V311)) end end end end), V355 end(V289)) end end end end), V356 end(V267)) end end end end), V357 end(V249)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E26, E27)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E24, E25)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E22, E23)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E20, E21)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E18, E19)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E16, E17)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"ILet"/utf8>> -> case ((begin (V363 = fun (V359) -> fun (V360) -> fun (V361) -> fun (V362) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V361, V362)) end end end end), fun (V364) -> fun (V365) -> ((((V363('erased'))('erased'))(V364))(V365)) end end end(fun (V358) -> ('Idris.Idris2.Builtin':'un--snd'(V358)) end))(V8)) of [E28 | E29] -> (fun (V366, V367) -> case V367 of [E30 | E31] -> (fun (V368, V369) -> case V369 of [E32 | E33] -> (fun (V370, V371) -> case V371 of [E34 | E35] -> (fun (V372, V373) -> case V373 of [E36 | E37] -> (fun (V374, V375) -> case V375 of [E38 | E39] -> (fun (V376, V377) -> case V377 of [E40 | E41] -> (fun (V378, V379) -> case V379 of [] -> begin (V386 = begin (V380 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V366))), fun (V381) -> begin (V382 = (V380(V381))), case V382 of {'Prelude.Types.Left', V383} -> {'Prelude.Types.Left', V383}; {'Prelude.Types.Right', V384} -> (begin (V385 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V384))), V385 end(V381)) end end end end), fun (V387) -> begin (V388 = (V386(V387))), case V388 of {'Prelude.Types.Left', V389} -> {'Prelude.Types.Left', V389}; {'Prelude.Types.Right', V390} -> (begin (V492 = begin (V397 = begin (V391 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V368))), fun (V392) -> begin (V393 = (V391(V392))), case V393 of {'Prelude.Types.Left', V394} -> {'Prelude.Types.Left', V394}; {'Prelude.Types.Right', V395} -> (begin (V396 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V395))), V396 end(V392)) end end end end), fun (V398) -> begin (V399 = (V397(V398))), case V399 of {'Prelude.Types.Left', V400} -> {'Prelude.Types.Left', V400}; {'Prelude.Types.Right', V401} -> (begin (V491 = begin (V415 = begin (V402 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V370))), fun (V403) -> begin (V404 = (V402(V403))), case V404 of {'Prelude.Types.Left', V405} -> {'Prelude.Types.Left', V405}; {'Prelude.Types.Right', V406} -> (begin (V414 = ((begin (V411 = fun (V407) -> fun (V408) -> fun (V409) -> fun (V410) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V407, V408, V409, V410)) end end end end), fun (V412) -> fun (V413) -> ((((V411(V0))(V1))(V412))(V413)) end end end(V2))(V406))), V414 end(V403)) end end end end), fun (V416) -> begin (V417 = (V415(V416))), case V417 of {'Prelude.Types.Left', V418} -> {'Prelude.Types.Left', V418}; {'Prelude.Types.Right', V419} -> (begin (V490 = begin (V426 = begin (V420 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V372))), fun (V421) -> begin (V422 = (V420(V421))), case V422 of {'Prelude.Types.Left', V423} -> {'Prelude.Types.Left', V423}; {'Prelude.Types.Right', V424} -> (begin (V425 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V424))), V425 end(V421)) end end end end), fun (V427) -> begin (V428 = (V426(V427))), case V428 of {'Prelude.Types.Left', V429} -> {'Prelude.Types.Left', V429}; {'Prelude.Types.Right', V430} -> (begin (V489 = begin (V444 = begin (V431 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V374))), fun (V432) -> begin (V433 = (V431(V432))), case V433 of {'Prelude.Types.Left', V434} -> {'Prelude.Types.Left', V434}; {'Prelude.Types.Right', V435} -> (begin (V443 = ((begin (V440 = fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> ('dn--un--reify_Reify_RawImp'(V436, V437, V438, V439)) end end end end), fun (V441) -> fun (V442) -> ((((V440(V0))(V1))(V441))(V442)) end end end(V2))(V435))), V443 end(V432)) end end end end), fun (V445) -> begin (V446 = (V444(V445))), case V446 of {'Prelude.Types.Left', V447} -> {'Prelude.Types.Left', V447}; {'Prelude.Types.Right', V448} -> (begin (V488 = begin (V462 = begin (V449 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V376))), fun (V450) -> begin (V451 = (V449(V450))), case V451 of {'Prelude.Types.Left', V452} -> {'Prelude.Types.Left', V452}; {'Prelude.Types.Right', V453} -> (begin (V461 = ((begin (V458 = fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> ('dn--un--reify_Reify_RawImp'(V454, V455, V456, V457)) end end end end), fun (V459) -> fun (V460) -> ((((V458(V0))(V1))(V459))(V460)) end end end(V2))(V453))), V461 end(V450)) end end end end), fun (V463) -> begin (V464 = (V462(V463))), case V464 of {'Prelude.Types.Left', V465} -> {'Prelude.Types.Left', V465}; {'Prelude.Types.Right', V466} -> (begin (V487 = begin (V480 = begin (V467 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V378))), fun (V468) -> begin (V469 = (V467(V468))), case V469 of {'Prelude.Types.Left', V470} -> {'Prelude.Types.Left', V470}; {'Prelude.Types.Right', V471} -> (begin (V479 = ((begin (V476 = fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> ('dn--un--reify_Reify_RawImp'(V472, V473, V474, V475)) end end end end), fun (V477) -> fun (V478) -> ((((V476(V0))(V1))(V477))(V478)) end end end(V2))(V471))), V479 end(V468)) end end end end), fun (V481) -> begin (V482 = (V480(V481))), case V482 of {'Prelude.Types.Left', V483} -> {'Prelude.Types.Left', V483}; {'Prelude.Types.Right', V484} -> (begin (V486 = fun (V485) -> {'Prelude.Types.Right', {'TTImp.TTImp.ILet', V390, V401, V419, V430, V448, V466, V484}} end), V486 end(V481)) end end end end), V487 end(V463)) end end end end), V488 end(V445)) end end end end), V489 end(V427)) end end end end), V490 end(V416)) end end end end), V491 end(V398)) end end end end), V492 end(V387)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E36, E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E34, E35)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E32, E33)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E30, E31)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E28, E29)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"ICase"/utf8>> -> case ((begin (V498 = fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V496, V497)) end end end end), fun (V499) -> fun (V500) -> ((((V498('erased'))('erased'))(V499))(V500)) end end end(fun (V493) -> ('Idris.Idris2.Builtin':'un--snd'(V493)) end))(V8)) of [E42 | E43] -> (fun (V501, V502) -> case V502 of [E44 | E45] -> (fun (V503, V504) -> case V504 of [E46 | E47] -> (fun (V505, V506) -> case V506 of [E48 | E49] -> (fun (V507, V508) -> case V508 of [] -> begin (V515 = begin (V509 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V501))), fun (V510) -> begin (V511 = (V509(V510))), case V511 of {'Prelude.Types.Left', V512} -> {'Prelude.Types.Left', V512}; {'Prelude.Types.Right', V513} -> (begin (V514 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V513))), V514 end(V510)) end end end end), fun (V516) -> begin (V517 = (V515(V516))), case V517 of {'Prelude.Types.Left', V518} -> {'Prelude.Types.Left', V518}; {'Prelude.Types.Right', V519} -> (begin (V582 = begin (V533 = begin (V520 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V503))), fun (V521) -> begin (V522 = (V520(V521))), case V522 of {'Prelude.Types.Left', V523} -> {'Prelude.Types.Left', V523}; {'Prelude.Types.Right', V524} -> (begin (V532 = ((begin (V529 = fun (V525) -> fun (V526) -> fun (V527) -> fun (V528) -> ('dn--un--reify_Reify_RawImp'(V525, V526, V527, V528)) end end end end), fun (V530) -> fun (V531) -> ((((V529(V0))(V1))(V530))(V531)) end end end(V2))(V524))), V532 end(V521)) end end end end), fun (V534) -> begin (V535 = (V533(V534))), case V535 of {'Prelude.Types.Left', V536} -> {'Prelude.Types.Left', V536}; {'Prelude.Types.Right', V537} -> (begin (V581 = begin (V551 = begin (V538 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V505))), fun (V539) -> begin (V540 = (V538(V539))), case V540 of {'Prelude.Types.Left', V541} -> {'Prelude.Types.Left', V541}; {'Prelude.Types.Right', V542} -> (begin (V550 = ((begin (V547 = fun (V543) -> fun (V544) -> fun (V545) -> fun (V546) -> ('dn--un--reify_Reify_RawImp'(V543, V544, V545, V546)) end end end end), fun (V548) -> fun (V549) -> ((((V547(V0))(V1))(V548))(V549)) end end end(V2))(V542))), V550 end(V539)) end end end end), fun (V552) -> begin (V553 = (V551(V552))), case V553 of {'Prelude.Types.Left', V554} -> {'Prelude.Types.Left', V554}; {'Prelude.Types.Right', V555} -> (begin (V580 = begin (V573 = begin (V556 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V507))), fun (V557) -> begin (V558 = (V556(V557))), case V558 of {'Prelude.Types.Left', V559} -> {'Prelude.Types.Left', V559}; {'Prelude.Types.Right', V560} -> (begin (V572 = ((begin (V569 = fun (V561) -> fun (V562) -> fun (V563) -> fun (V564) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V565) -> fun (V566) -> fun (V567) -> fun (V568) -> ('dn--un--reify_Reify_ImpClause'(V565, V566, V567, V568)) end end end end, V561, V562, V563, V564)) end end end end), fun (V570) -> fun (V571) -> ((((V569(V0))(V1))(V570))(V571)) end end end(V2))(V560))), V572 end(V557)) end end end end), fun (V574) -> begin (V575 = (V573(V574))), case V575 of {'Prelude.Types.Left', V576} -> {'Prelude.Types.Left', V576}; {'Prelude.Types.Right', V577} -> (begin (V579 = fun (V578) -> {'Prelude.Types.Right', {'TTImp.TTImp.ICase', V519, V537, V555, V577}} end), V579 end(V574)) end end end end), V580 end(V552)) end end end end), V581 end(V534)) end end end end), V582 end(V516)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E48, E49)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E46, E47)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"ILocal"/utf8>> -> case ((begin (V588 = fun (V584) -> fun (V585) -> fun (V586) -> fun (V587) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V586, V587)) end end end end), fun (V589) -> fun (V590) -> ((((V588('erased'))('erased'))(V589))(V590)) end end end(fun (V583) -> ('Idris.Idris2.Builtin':'un--snd'(V583)) end))(V8)) of [E50 | E51] -> (fun (V591, V592) -> case V592 of [E52 | E53] -> (fun (V593, V594) -> case V594 of [E54 | E55] -> (fun (V595, V596) -> case V596 of [] -> begin (V603 = begin (V597 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V591))), fun (V598) -> begin (V599 = (V597(V598))), case V599 of {'Prelude.Types.Left', V600} -> {'Prelude.Types.Left', V600}; {'Prelude.Types.Right', V601} -> (begin (V602 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V601))), V602 end(V598)) end end end end), fun (V604) -> begin (V605 = (V603(V604))), case V605 of {'Prelude.Types.Left', V606} -> {'Prelude.Types.Left', V606}; {'Prelude.Types.Right', V607} -> (begin (V651 = begin (V625 = begin (V608 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V593))), fun (V609) -> begin (V610 = (V608(V609))), case V610 of {'Prelude.Types.Left', V611} -> {'Prelude.Types.Left', V611}; {'Prelude.Types.Right', V612} -> (begin (V624 = ((begin (V621 = fun (V613) -> fun (V614) -> fun (V615) -> fun (V616) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V617) -> fun (V618) -> fun (V619) -> fun (V620) -> ('dn--un--reify_Reify_ImpDecl'(V617, V618, V619, V620)) end end end end, V613, V614, V615, V616)) end end end end), fun (V622) -> fun (V623) -> ((((V621(V0))(V1))(V622))(V623)) end end end(V2))(V612))), V624 end(V609)) end end end end), fun (V626) -> begin (V627 = (V625(V626))), case V627 of {'Prelude.Types.Left', V628} -> {'Prelude.Types.Left', V628}; {'Prelude.Types.Right', V629} -> (begin (V650 = begin (V643 = begin (V630 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V595))), fun (V631) -> begin (V632 = (V630(V631))), case V632 of {'Prelude.Types.Left', V633} -> {'Prelude.Types.Left', V633}; {'Prelude.Types.Right', V634} -> (begin (V642 = ((begin (V639 = fun (V635) -> fun (V636) -> fun (V637) -> fun (V638) -> ('dn--un--reify_Reify_RawImp'(V635, V636, V637, V638)) end end end end), fun (V640) -> fun (V641) -> ((((V639(V0))(V1))(V640))(V641)) end end end(V2))(V634))), V642 end(V631)) end end end end), fun (V644) -> begin (V645 = (V643(V644))), case V645 of {'Prelude.Types.Left', V646} -> {'Prelude.Types.Left', V646}; {'Prelude.Types.Right', V647} -> (begin (V649 = fun (V648) -> {'Prelude.Types.Right', {'TTImp.TTImp.ILocal', V607, V629, V647}} end), V649 end(V644)) end end end end), V650 end(V626)) end end end end), V651 end(V604)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E54, E55)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E52, E53)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E50, E51)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IUpdate"/utf8>> -> case ((begin (V657 = fun (V653) -> fun (V654) -> fun (V655) -> fun (V656) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V655, V656)) end end end end), fun (V658) -> fun (V659) -> ((((V657('erased'))('erased'))(V658))(V659)) end end end(fun (V652) -> ('Idris.Idris2.Builtin':'un--snd'(V652)) end))(V8)) of [E56 | E57] -> (fun (V660, V661) -> case V661 of [E58 | E59] -> (fun (V662, V663) -> case V663 of [E60 | E61] -> (fun (V664, V665) -> case V665 of [] -> begin (V672 = begin (V666 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V660))), fun (V667) -> begin (V668 = (V666(V667))), case V668 of {'Prelude.Types.Left', V669} -> {'Prelude.Types.Left', V669}; {'Prelude.Types.Right', V670} -> (begin (V671 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V670))), V671 end(V667)) end end end end), fun (V673) -> begin (V674 = (V672(V673))), case V674 of {'Prelude.Types.Left', V675} -> {'Prelude.Types.Left', V675}; {'Prelude.Types.Right', V676} -> (begin (V720 = begin (V694 = begin (V677 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V662))), fun (V678) -> begin (V679 = (V677(V678))), case V679 of {'Prelude.Types.Left', V680} -> {'Prelude.Types.Left', V680}; {'Prelude.Types.Right', V681} -> (begin (V693 = ((begin (V690 = fun (V682) -> fun (V683) -> fun (V684) -> fun (V685) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V686) -> fun (V687) -> fun (V688) -> fun (V689) -> ('dn--un--reify_Reify_IFieldUpdate'(V686, V687, V688, V689)) end end end end, V682, V683, V684, V685)) end end end end), fun (V691) -> fun (V692) -> ((((V690(V0))(V1))(V691))(V692)) end end end(V2))(V681))), V693 end(V678)) end end end end), fun (V695) -> begin (V696 = (V694(V695))), case V696 of {'Prelude.Types.Left', V697} -> {'Prelude.Types.Left', V697}; {'Prelude.Types.Right', V698} -> (begin (V719 = begin (V712 = begin (V699 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V664))), fun (V700) -> begin (V701 = (V699(V700))), case V701 of {'Prelude.Types.Left', V702} -> {'Prelude.Types.Left', V702}; {'Prelude.Types.Right', V703} -> (begin (V711 = ((begin (V708 = fun (V704) -> fun (V705) -> fun (V706) -> fun (V707) -> ('dn--un--reify_Reify_RawImp'(V704, V705, V706, V707)) end end end end), fun (V709) -> fun (V710) -> ((((V708(V0))(V1))(V709))(V710)) end end end(V2))(V703))), V711 end(V700)) end end end end), fun (V713) -> begin (V714 = (V712(V713))), case V714 of {'Prelude.Types.Left', V715} -> {'Prelude.Types.Left', V715}; {'Prelude.Types.Right', V716} -> (begin (V718 = fun (V717) -> {'Prelude.Types.Right', {'TTImp.TTImp.IUpdate', V676, V698, V716}} end), V718 end(V713)) end end end end), V719 end(V695)) end end end end), V720 end(V673)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E60, E61)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E58, E59)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E56, E57)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IApp"/utf8>> -> case ((begin (V726 = fun (V722) -> fun (V723) -> fun (V724) -> fun (V725) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V724, V725)) end end end end), fun (V727) -> fun (V728) -> ((((V726('erased'))('erased'))(V727))(V728)) end end end(fun (V721) -> ('Idris.Idris2.Builtin':'un--snd'(V721)) end))(V8)) of [E62 | E63] -> (fun (V729, V730) -> case V730 of [E64 | E65] -> (fun (V731, V732) -> case V732 of [E66 | E67] -> (fun (V733, V734) -> case V734 of [] -> begin (V741 = begin (V735 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V729))), fun (V736) -> begin (V737 = (V735(V736))), case V737 of {'Prelude.Types.Left', V738} -> {'Prelude.Types.Left', V738}; {'Prelude.Types.Right', V739} -> (begin (V740 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V739))), V740 end(V736)) end end end end), fun (V742) -> begin (V743 = (V741(V742))), case V743 of {'Prelude.Types.Left', V744} -> {'Prelude.Types.Left', V744}; {'Prelude.Types.Right', V745} -> (begin (V785 = begin (V759 = begin (V746 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V731))), fun (V747) -> begin (V748 = (V746(V747))), case V748 of {'Prelude.Types.Left', V749} -> {'Prelude.Types.Left', V749}; {'Prelude.Types.Right', V750} -> (begin (V758 = ((begin (V755 = fun (V751) -> fun (V752) -> fun (V753) -> fun (V754) -> ('dn--un--reify_Reify_RawImp'(V751, V752, V753, V754)) end end end end), fun (V756) -> fun (V757) -> ((((V755(V0))(V1))(V756))(V757)) end end end(V2))(V750))), V758 end(V747)) end end end end), fun (V760) -> begin (V761 = (V759(V760))), case V761 of {'Prelude.Types.Left', V762} -> {'Prelude.Types.Left', V762}; {'Prelude.Types.Right', V763} -> (begin (V784 = begin (V777 = begin (V764 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V733))), fun (V765) -> begin (V766 = (V764(V765))), case V766 of {'Prelude.Types.Left', V767} -> {'Prelude.Types.Left', V767}; {'Prelude.Types.Right', V768} -> (begin (V776 = ((begin (V773 = fun (V769) -> fun (V770) -> fun (V771) -> fun (V772) -> ('dn--un--reify_Reify_RawImp'(V769, V770, V771, V772)) end end end end), fun (V774) -> fun (V775) -> ((((V773(V0))(V1))(V774))(V775)) end end end(V2))(V768))), V776 end(V765)) end end end end), fun (V778) -> begin (V779 = (V777(V778))), case V779 of {'Prelude.Types.Left', V780} -> {'Prelude.Types.Left', V780}; {'Prelude.Types.Right', V781} -> (begin (V783 = fun (V782) -> {'Prelude.Types.Right', {'TTImp.TTImp.IApp', V745, V763, V781}} end), V783 end(V778)) end end end end), V784 end(V760)) end end end end), V785 end(V742)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E66, E67)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E64, E65)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E62, E63)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"INamedApp"/utf8>> -> case ((begin (V791 = fun (V787) -> fun (V788) -> fun (V789) -> fun (V790) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V789, V790)) end end end end), fun (V792) -> fun (V793) -> ((((V791('erased'))('erased'))(V792))(V793)) end end end(fun (V786) -> ('Idris.Idris2.Builtin':'un--snd'(V786)) end))(V8)) of [E68 | E69] -> (fun (V794, V795) -> case V795 of [E70 | E71] -> (fun (V796, V797) -> case V797 of [E72 | E73] -> (fun (V798, V799) -> case V799 of [E74 | E75] -> (fun (V800, V801) -> case V801 of [] -> begin (V808 = begin (V802 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V794))), fun (V803) -> begin (V804 = (V802(V803))), case V804 of {'Prelude.Types.Left', V805} -> {'Prelude.Types.Left', V805}; {'Prelude.Types.Right', V806} -> (begin (V807 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V806))), V807 end(V803)) end end end end), fun (V809) -> begin (V810 = (V808(V809))), case V810 of {'Prelude.Types.Left', V811} -> {'Prelude.Types.Left', V811}; {'Prelude.Types.Right', V812} -> (begin (V864 = begin (V826 = begin (V813 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V796))), fun (V814) -> begin (V815 = (V813(V814))), case V815 of {'Prelude.Types.Left', V816} -> {'Prelude.Types.Left', V816}; {'Prelude.Types.Right', V817} -> (begin (V825 = ((begin (V822 = fun (V818) -> fun (V819) -> fun (V820) -> fun (V821) -> ('dn--un--reify_Reify_RawImp'(V818, V819, V820, V821)) end end end end), fun (V823) -> fun (V824) -> ((((V822(V0))(V1))(V823))(V824)) end end end(V2))(V817))), V825 end(V814)) end end end end), fun (V827) -> begin (V828 = (V826(V827))), case V828 of {'Prelude.Types.Left', V829} -> {'Prelude.Types.Left', V829}; {'Prelude.Types.Right', V830} -> (begin (V863 = begin (V837 = begin (V831 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V798))), fun (V832) -> begin (V833 = (V831(V832))), case V833 of {'Prelude.Types.Left', V834} -> {'Prelude.Types.Left', V834}; {'Prelude.Types.Right', V835} -> (begin (V836 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V835))), V836 end(V832)) end end end end), fun (V838) -> begin (V839 = (V837(V838))), case V839 of {'Prelude.Types.Left', V840} -> {'Prelude.Types.Left', V840}; {'Prelude.Types.Right', V841} -> (begin (V862 = begin (V855 = begin (V842 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V800))), fun (V843) -> begin (V844 = (V842(V843))), case V844 of {'Prelude.Types.Left', V845} -> {'Prelude.Types.Left', V845}; {'Prelude.Types.Right', V846} -> (begin (V854 = ((begin (V851 = fun (V847) -> fun (V848) -> fun (V849) -> fun (V850) -> ('dn--un--reify_Reify_RawImp'(V847, V848, V849, V850)) end end end end), fun (V852) -> fun (V853) -> ((((V851(V0))(V1))(V852))(V853)) end end end(V2))(V846))), V854 end(V843)) end end end end), fun (V856) -> begin (V857 = (V855(V856))), case V857 of {'Prelude.Types.Left', V858} -> {'Prelude.Types.Left', V858}; {'Prelude.Types.Right', V859} -> (begin (V861 = fun (V860) -> {'Prelude.Types.Right', {'TTImp.TTImp.INamedApp', V812, V830, V841, V859}} end), V861 end(V856)) end end end end), V862 end(V838)) end end end end), V863 end(V827)) end end end end), V864 end(V809)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E74, E75)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E72, E73)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E70, E71)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E68, E69)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IAutoApp"/utf8>> -> case ((begin (V870 = fun (V866) -> fun (V867) -> fun (V868) -> fun (V869) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V868, V869)) end end end end), fun (V871) -> fun (V872) -> ((((V870('erased'))('erased'))(V871))(V872)) end end end(fun (V865) -> ('Idris.Idris2.Builtin':'un--snd'(V865)) end))(V8)) of [E76 | E77] -> (fun (V873, V874) -> case V874 of [E78 | E79] -> (fun (V875, V876) -> case V876 of [E80 | E81] -> (fun (V877, V878) -> case V878 of [] -> begin (V885 = begin (V879 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V873))), fun (V880) -> begin (V881 = (V879(V880))), case V881 of {'Prelude.Types.Left', V882} -> {'Prelude.Types.Left', V882}; {'Prelude.Types.Right', V883} -> (begin (V884 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V883))), V884 end(V880)) end end end end), fun (V886) -> begin (V887 = (V885(V886))), case V887 of {'Prelude.Types.Left', V888} -> {'Prelude.Types.Left', V888}; {'Prelude.Types.Right', V889} -> (begin (V929 = begin (V903 = begin (V890 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V875))), fun (V891) -> begin (V892 = (V890(V891))), case V892 of {'Prelude.Types.Left', V893} -> {'Prelude.Types.Left', V893}; {'Prelude.Types.Right', V894} -> (begin (V902 = ((begin (V899 = fun (V895) -> fun (V896) -> fun (V897) -> fun (V898) -> ('dn--un--reify_Reify_RawImp'(V895, V896, V897, V898)) end end end end), fun (V900) -> fun (V901) -> ((((V899(V0))(V1))(V900))(V901)) end end end(V2))(V894))), V902 end(V891)) end end end end), fun (V904) -> begin (V905 = (V903(V904))), case V905 of {'Prelude.Types.Left', V906} -> {'Prelude.Types.Left', V906}; {'Prelude.Types.Right', V907} -> (begin (V928 = begin (V921 = begin (V908 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V877))), fun (V909) -> begin (V910 = (V908(V909))), case V910 of {'Prelude.Types.Left', V911} -> {'Prelude.Types.Left', V911}; {'Prelude.Types.Right', V912} -> (begin (V920 = ((begin (V917 = fun (V913) -> fun (V914) -> fun (V915) -> fun (V916) -> ('dn--un--reify_Reify_RawImp'(V913, V914, V915, V916)) end end end end), fun (V918) -> fun (V919) -> ((((V917(V0))(V1))(V918))(V919)) end end end(V2))(V912))), V920 end(V909)) end end end end), fun (V922) -> begin (V923 = (V921(V922))), case V923 of {'Prelude.Types.Left', V924} -> {'Prelude.Types.Left', V924}; {'Prelude.Types.Right', V925} -> (begin (V927 = fun (V926) -> {'Prelude.Types.Right', {'TTImp.TTImp.IAutoApp', V889, V907, V925}} end), V927 end(V922)) end end end end), V928 end(V904)) end end end end), V929 end(V886)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E80, E81)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E78, E79)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E76, E77)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IWithApp"/utf8>> -> case ((begin (V935 = fun (V931) -> fun (V932) -> fun (V933) -> fun (V934) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V933, V934)) end end end end), fun (V936) -> fun (V937) -> ((((V935('erased'))('erased'))(V936))(V937)) end end end(fun (V930) -> ('Idris.Idris2.Builtin':'un--snd'(V930)) end))(V8)) of [E82 | E83] -> (fun (V938, V939) -> case V939 of [E84 | E85] -> (fun (V940, V941) -> case V941 of [E86 | E87] -> (fun (V942, V943) -> case V943 of [] -> begin (V950 = begin (V944 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V938))), fun (V945) -> begin (V946 = (V944(V945))), case V946 of {'Prelude.Types.Left', V947} -> {'Prelude.Types.Left', V947}; {'Prelude.Types.Right', V948} -> (begin (V949 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V948))), V949 end(V945)) end end end end), fun (V951) -> begin (V952 = (V950(V951))), case V952 of {'Prelude.Types.Left', V953} -> {'Prelude.Types.Left', V953}; {'Prelude.Types.Right', V954} -> (begin (V994 = begin (V968 = begin (V955 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V940))), fun (V956) -> begin (V957 = (V955(V956))), case V957 of {'Prelude.Types.Left', V958} -> {'Prelude.Types.Left', V958}; {'Prelude.Types.Right', V959} -> (begin (V967 = ((begin (V964 = fun (V960) -> fun (V961) -> fun (V962) -> fun (V963) -> ('dn--un--reify_Reify_RawImp'(V960, V961, V962, V963)) end end end end), fun (V965) -> fun (V966) -> ((((V964(V0))(V1))(V965))(V966)) end end end(V2))(V959))), V967 end(V956)) end end end end), fun (V969) -> begin (V970 = (V968(V969))), case V970 of {'Prelude.Types.Left', V971} -> {'Prelude.Types.Left', V971}; {'Prelude.Types.Right', V972} -> (begin (V993 = begin (V986 = begin (V973 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V942))), fun (V974) -> begin (V975 = (V973(V974))), case V975 of {'Prelude.Types.Left', V976} -> {'Prelude.Types.Left', V976}; {'Prelude.Types.Right', V977} -> (begin (V985 = ((begin (V982 = fun (V978) -> fun (V979) -> fun (V980) -> fun (V981) -> ('dn--un--reify_Reify_RawImp'(V978, V979, V980, V981)) end end end end), fun (V983) -> fun (V984) -> ((((V982(V0))(V1))(V983))(V984)) end end end(V2))(V977))), V985 end(V974)) end end end end), fun (V987) -> begin (V988 = (V986(V987))), case V988 of {'Prelude.Types.Left', V989} -> {'Prelude.Types.Left', V989}; {'Prelude.Types.Right', V990} -> (begin (V992 = fun (V991) -> {'Prelude.Types.Right', {'TTImp.TTImp.IWithApp', V954, V972, V990}} end), V992 end(V987)) end end end end), V993 end(V969)) end end end end), V994 end(V951)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E86, E87)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E84, E85)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E82, E83)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"ISearch"/utf8>> -> case ((begin (V1000 = fun (V996) -> fun (V997) -> fun (V998) -> fun (V999) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V998, V999)) end end end end), fun (V1001) -> fun (V1002) -> ((((V1000('erased'))('erased'))(V1001))(V1002)) end end end(fun (V995) -> ('Idris.Idris2.Builtin':'un--snd'(V995)) end))(V8)) of [E88 | E89] -> (fun (V1003, V1004) -> case V1004 of [E90 | E91] -> (fun (V1005, V1006) -> case V1006 of [] -> begin (V1013 = begin (V1007 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1003))), fun (V1008) -> begin (V1009 = (V1007(V1008))), case V1009 of {'Prelude.Types.Left', V1010} -> {'Prelude.Types.Left', V1010}; {'Prelude.Types.Right', V1011} -> (begin (V1012 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1011))), V1012 end(V1008)) end end end end), fun (V1014) -> begin (V1015 = (V1013(V1014))), case V1015 of {'Prelude.Types.Left', V1016} -> {'Prelude.Types.Left', V1016}; {'Prelude.Types.Right', V1017} -> (begin (V1031 = begin (V1024 = begin (V1018 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1005))), fun (V1019) -> begin (V1020 = (V1018(V1019))), case V1020 of {'Prelude.Types.Left', V1021} -> {'Prelude.Types.Left', V1021}; {'Prelude.Types.Right', V1022} -> (begin (V1023 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V0, V1, V2, V1022))), V1023 end(V1019)) end end end end), fun (V1025) -> begin (V1026 = (V1024(V1025))), case V1026 of {'Prelude.Types.Left', V1027} -> {'Prelude.Types.Left', V1027}; {'Prelude.Types.Right', V1028} -> (begin (V1030 = fun (V1029) -> {'Prelude.Types.Right', {'TTImp.TTImp.ISearch', V1017, V1028}} end), V1030 end(V1025)) end end end end), V1031 end(V1014)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E90, E91)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E88, E89)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IAlternative"/utf8>> -> case ((begin (V1037 = fun (V1033) -> fun (V1034) -> fun (V1035) -> fun (V1036) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1035, V1036)) end end end end), fun (V1038) -> fun (V1039) -> ((((V1037('erased'))('erased'))(V1038))(V1039)) end end end(fun (V1032) -> ('Idris.Idris2.Builtin':'un--snd'(V1032)) end))(V8)) of [E92 | E93] -> (fun (V1040, V1041) -> case V1041 of [E94 | E95] -> (fun (V1042, V1043) -> case V1043 of [E96 | E97] -> (fun (V1044, V1045) -> case V1045 of [] -> begin (V1052 = begin (V1046 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1040))), fun (V1047) -> begin (V1048 = (V1046(V1047))), case V1048 of {'Prelude.Types.Left', V1049} -> {'Prelude.Types.Left', V1049}; {'Prelude.Types.Right', V1050} -> (begin (V1051 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1050))), V1051 end(V1047)) end end end end), fun (V1053) -> begin (V1054 = (V1052(V1053))), case V1054 of {'Prelude.Types.Left', V1055} -> {'Prelude.Types.Left', V1055}; {'Prelude.Types.Right', V1056} -> (begin (V1100 = begin (V1070 = begin (V1057 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1042))), fun (V1058) -> begin (V1059 = (V1057(V1058))), case V1059 of {'Prelude.Types.Left', V1060} -> {'Prelude.Types.Left', V1060}; {'Prelude.Types.Right', V1061} -> (begin (V1069 = ((begin (V1066 = fun (V1062) -> fun (V1063) -> fun (V1064) -> fun (V1065) -> ('dn--un--reify_Reify_AltType'(V1062, V1063, V1064, V1065)) end end end end), fun (V1067) -> fun (V1068) -> ((((V1066(V0))(V1))(V1067))(V1068)) end end end(V2))(V1061))), V1069 end(V1058)) end end end end), fun (V1071) -> begin (V1072 = (V1070(V1071))), case V1072 of {'Prelude.Types.Left', V1073} -> {'Prelude.Types.Left', V1073}; {'Prelude.Types.Right', V1074} -> (begin (V1099 = begin (V1092 = begin (V1075 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1044))), fun (V1076) -> begin (V1077 = (V1075(V1076))), case V1077 of {'Prelude.Types.Left', V1078} -> {'Prelude.Types.Left', V1078}; {'Prelude.Types.Right', V1079} -> (begin (V1091 = ((begin (V1088 = fun (V1080) -> fun (V1081) -> fun (V1082) -> fun (V1083) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V1084) -> fun (V1085) -> fun (V1086) -> fun (V1087) -> ('dn--un--reify_Reify_RawImp'(V1084, V1085, V1086, V1087)) end end end end, V1080, V1081, V1082, V1083)) end end end end), fun (V1089) -> fun (V1090) -> ((((V1088(V0))(V1))(V1089))(V1090)) end end end(V2))(V1079))), V1091 end(V1076)) end end end end), fun (V1093) -> begin (V1094 = (V1092(V1093))), case V1094 of {'Prelude.Types.Left', V1095} -> {'Prelude.Types.Left', V1095}; {'Prelude.Types.Right', V1096} -> (begin (V1098 = fun (V1097) -> {'Prelude.Types.Right', {'TTImp.TTImp.IAlternative', V1056, V1074, V1096}} end), V1098 end(V1093)) end end end end), V1099 end(V1071)) end end end end), V1100 end(V1053)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E96, E97)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E94, E95)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E92, E93)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IRewrite"/utf8>> -> case ((begin (V1106 = fun (V1102) -> fun (V1103) -> fun (V1104) -> fun (V1105) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1104, V1105)) end end end end), fun (V1107) -> fun (V1108) -> ((((V1106('erased'))('erased'))(V1107))(V1108)) end end end(fun (V1101) -> ('Idris.Idris2.Builtin':'un--snd'(V1101)) end))(V8)) of [E98 | E99] -> (fun (V1109, V1110) -> case V1110 of [E100 | E101] -> (fun (V1111, V1112) -> case V1112 of [E102 | E103] -> (fun (V1113, V1114) -> case V1114 of [] -> begin (V1121 = begin (V1115 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1109))), fun (V1116) -> begin (V1117 = (V1115(V1116))), case V1117 of {'Prelude.Types.Left', V1118} -> {'Prelude.Types.Left', V1118}; {'Prelude.Types.Right', V1119} -> (begin (V1120 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1119))), V1120 end(V1116)) end end end end), fun (V1122) -> begin (V1123 = (V1121(V1122))), case V1123 of {'Prelude.Types.Left', V1124} -> {'Prelude.Types.Left', V1124}; {'Prelude.Types.Right', V1125} -> (begin (V1165 = begin (V1139 = begin (V1126 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1111))), fun (V1127) -> begin (V1128 = (V1126(V1127))), case V1128 of {'Prelude.Types.Left', V1129} -> {'Prelude.Types.Left', V1129}; {'Prelude.Types.Right', V1130} -> (begin (V1138 = ((begin (V1135 = fun (V1131) -> fun (V1132) -> fun (V1133) -> fun (V1134) -> ('dn--un--reify_Reify_RawImp'(V1131, V1132, V1133, V1134)) end end end end), fun (V1136) -> fun (V1137) -> ((((V1135(V0))(V1))(V1136))(V1137)) end end end(V2))(V1130))), V1138 end(V1127)) end end end end), fun (V1140) -> begin (V1141 = (V1139(V1140))), case V1141 of {'Prelude.Types.Left', V1142} -> {'Prelude.Types.Left', V1142}; {'Prelude.Types.Right', V1143} -> (begin (V1164 = begin (V1157 = begin (V1144 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1113))), fun (V1145) -> begin (V1146 = (V1144(V1145))), case V1146 of {'Prelude.Types.Left', V1147} -> {'Prelude.Types.Left', V1147}; {'Prelude.Types.Right', V1148} -> (begin (V1156 = ((begin (V1153 = fun (V1149) -> fun (V1150) -> fun (V1151) -> fun (V1152) -> ('dn--un--reify_Reify_RawImp'(V1149, V1150, V1151, V1152)) end end end end), fun (V1154) -> fun (V1155) -> ((((V1153(V0))(V1))(V1154))(V1155)) end end end(V2))(V1148))), V1156 end(V1145)) end end end end), fun (V1158) -> begin (V1159 = (V1157(V1158))), case V1159 of {'Prelude.Types.Left', V1160} -> {'Prelude.Types.Left', V1160}; {'Prelude.Types.Right', V1161} -> (begin (V1163 = fun (V1162) -> {'Prelude.Types.Right', {'TTImp.TTImp.IRewrite', V1125, V1143, V1161}} end), V1163 end(V1158)) end end end end), V1164 end(V1140)) end end end end), V1165 end(V1122)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E102, E103)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E100, E101)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E98, E99)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IBindHere"/utf8>> -> case ((begin (V1171 = fun (V1167) -> fun (V1168) -> fun (V1169) -> fun (V1170) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1169, V1170)) end end end end), fun (V1172) -> fun (V1173) -> ((((V1171('erased'))('erased'))(V1172))(V1173)) end end end(fun (V1166) -> ('Idris.Idris2.Builtin':'un--snd'(V1166)) end))(V8)) of [E104 | E105] -> (fun (V1174, V1175) -> case V1175 of [E106 | E107] -> (fun (V1176, V1177) -> case V1177 of [E108 | E109] -> (fun (V1178, V1179) -> case V1179 of [] -> begin (V1186 = begin (V1180 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1174))), fun (V1181) -> begin (V1182 = (V1180(V1181))), case V1182 of {'Prelude.Types.Left', V1183} -> {'Prelude.Types.Left', V1183}; {'Prelude.Types.Right', V1184} -> (begin (V1185 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1184))), V1185 end(V1181)) end end end end), fun (V1187) -> begin (V1188 = (V1186(V1187))), case V1188 of {'Prelude.Types.Left', V1189} -> {'Prelude.Types.Left', V1189}; {'Prelude.Types.Right', V1190} -> (begin (V1223 = begin (V1197 = begin (V1191 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1176))), fun (V1192) -> begin (V1193 = (V1191(V1192))), case V1193 of {'Prelude.Types.Left', V1194} -> {'Prelude.Types.Left', V1194}; {'Prelude.Types.Right', V1195} -> (begin (V1196 = ('dn--un--reify_Reify_BindMode'(V0, V1, V2, V1195))), V1196 end(V1192)) end end end end), fun (V1198) -> begin (V1199 = (V1197(V1198))), case V1199 of {'Prelude.Types.Left', V1200} -> {'Prelude.Types.Left', V1200}; {'Prelude.Types.Right', V1201} -> (begin (V1222 = begin (V1215 = begin (V1202 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1178))), fun (V1203) -> begin (V1204 = (V1202(V1203))), case V1204 of {'Prelude.Types.Left', V1205} -> {'Prelude.Types.Left', V1205}; {'Prelude.Types.Right', V1206} -> (begin (V1214 = ((begin (V1211 = fun (V1207) -> fun (V1208) -> fun (V1209) -> fun (V1210) -> ('dn--un--reify_Reify_RawImp'(V1207, V1208, V1209, V1210)) end end end end), fun (V1212) -> fun (V1213) -> ((((V1211(V0))(V1))(V1212))(V1213)) end end end(V2))(V1206))), V1214 end(V1203)) end end end end), fun (V1216) -> begin (V1217 = (V1215(V1216))), case V1217 of {'Prelude.Types.Left', V1218} -> {'Prelude.Types.Left', V1218}; {'Prelude.Types.Right', V1219} -> (begin (V1221 = fun (V1220) -> {'Prelude.Types.Right', {'TTImp.TTImp.IBindHere', V1190, V1201, V1219}} end), V1221 end(V1216)) end end end end), V1222 end(V1198)) end end end end), V1223 end(V1187)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E108, E109)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E106, E107)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E104, E105)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IBindVar"/utf8>> -> case ((begin (V1229 = fun (V1225) -> fun (V1226) -> fun (V1227) -> fun (V1228) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1227, V1228)) end end end end), fun (V1230) -> fun (V1231) -> ((((V1229('erased'))('erased'))(V1230))(V1231)) end end end(fun (V1224) -> ('Idris.Idris2.Builtin':'un--snd'(V1224)) end))(V8)) of [E110 | E111] -> (fun (V1232, V1233) -> case V1233 of [E112 | E113] -> (fun (V1234, V1235) -> case V1235 of [] -> begin (V1242 = begin (V1236 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1232))), fun (V1237) -> begin (V1238 = (V1236(V1237))), case V1238 of {'Prelude.Types.Left', V1239} -> {'Prelude.Types.Left', V1239}; {'Prelude.Types.Right', V1240} -> (begin (V1241 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1240))), V1241 end(V1237)) end end end end), fun (V1243) -> begin (V1244 = (V1242(V1243))), case V1244 of {'Prelude.Types.Left', V1245} -> {'Prelude.Types.Left', V1245}; {'Prelude.Types.Right', V1246} -> (begin (V1260 = begin (V1253 = begin (V1247 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1234))), fun (V1248) -> begin (V1249 = (V1247(V1248))), case V1249 of {'Prelude.Types.Left', V1250} -> {'Prelude.Types.Left', V1250}; {'Prelude.Types.Right', V1251} -> (begin (V1252 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V0, V1, V2, V1251))), V1252 end(V1248)) end end end end), fun (V1254) -> begin (V1255 = (V1253(V1254))), case V1255 of {'Prelude.Types.Left', V1256} -> {'Prelude.Types.Left', V1256}; {'Prelude.Types.Right', V1257} -> (begin (V1259 = fun (V1258) -> {'Prelude.Types.Right', {'TTImp.TTImp.IBindVar', V1246, V1257}} end), V1259 end(V1254)) end end end end), V1260 end(V1243)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E112, E113)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E110, E111)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IAs"/utf8>> -> case ((begin (V1266 = fun (V1262) -> fun (V1263) -> fun (V1264) -> fun (V1265) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1264, V1265)) end end end end), fun (V1267) -> fun (V1268) -> ((((V1266('erased'))('erased'))(V1267))(V1268)) end end end(fun (V1261) -> ('Idris.Idris2.Builtin':'un--snd'(V1261)) end))(V8)) of [E114 | E115] -> (fun (V1269, V1270) -> case V1270 of [E116 | E117] -> (fun (V1271, V1272) -> case V1272 of [E118 | E119] -> (fun (V1273, V1274) -> case V1274 of [E120 | E121] -> (fun (V1275, V1276) -> case V1276 of [E122 | E123] -> (fun (V1277, V1278) -> case V1278 of [] -> begin (V1285 = begin (V1279 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1269))), fun (V1280) -> begin (V1281 = (V1279(V1280))), case V1281 of {'Prelude.Types.Left', V1282} -> {'Prelude.Types.Left', V1282}; {'Prelude.Types.Right', V1283} -> (begin (V1284 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1283))), V1284 end(V1280)) end end end end), fun (V1286) -> begin (V1287 = (V1285(V1286))), case V1287 of {'Prelude.Types.Left', V1288} -> {'Prelude.Types.Left', V1288}; {'Prelude.Types.Right', V1289} -> (begin (V1346 = begin (V1296 = begin (V1290 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1271))), fun (V1291) -> begin (V1292 = (V1290(V1291))), case V1292 of {'Prelude.Types.Left', V1293} -> {'Prelude.Types.Left', V1293}; {'Prelude.Types.Right', V1294} -> (begin (V1295 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1294))), V1295 end(V1291)) end end end end), fun (V1297) -> begin (V1298 = (V1296(V1297))), case V1298 of {'Prelude.Types.Left', V1299} -> {'Prelude.Types.Left', V1299}; {'Prelude.Types.Right', V1300} -> (begin (V1345 = begin (V1307 = begin (V1301 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1273))), fun (V1302) -> begin (V1303 = (V1301(V1302))), case V1303 of {'Prelude.Types.Left', V1304} -> {'Prelude.Types.Left', V1304}; {'Prelude.Types.Right', V1305} -> (begin (V1306 = ('dn--un--reify_Reify_UseSide'(V0, V1, V2, V1305))), V1306 end(V1302)) end end end end), fun (V1308) -> begin (V1309 = (V1307(V1308))), case V1309 of {'Prelude.Types.Left', V1310} -> {'Prelude.Types.Left', V1310}; {'Prelude.Types.Right', V1311} -> (begin (V1344 = begin (V1318 = begin (V1312 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1275))), fun (V1313) -> begin (V1314 = (V1312(V1313))), case V1314 of {'Prelude.Types.Left', V1315} -> {'Prelude.Types.Left', V1315}; {'Prelude.Types.Right', V1316} -> (begin (V1317 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V1316))), V1317 end(V1313)) end end end end), fun (V1319) -> begin (V1320 = (V1318(V1319))), case V1320 of {'Prelude.Types.Left', V1321} -> {'Prelude.Types.Left', V1321}; {'Prelude.Types.Right', V1322} -> (begin (V1343 = begin (V1336 = begin (V1323 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1277))), fun (V1324) -> begin (V1325 = (V1323(V1324))), case V1325 of {'Prelude.Types.Left', V1326} -> {'Prelude.Types.Left', V1326}; {'Prelude.Types.Right', V1327} -> (begin (V1335 = ((begin (V1332 = fun (V1328) -> fun (V1329) -> fun (V1330) -> fun (V1331) -> ('dn--un--reify_Reify_RawImp'(V1328, V1329, V1330, V1331)) end end end end), fun (V1333) -> fun (V1334) -> ((((V1332(V0))(V1))(V1333))(V1334)) end end end(V2))(V1327))), V1335 end(V1324)) end end end end), fun (V1337) -> begin (V1338 = (V1336(V1337))), case V1338 of {'Prelude.Types.Left', V1339} -> {'Prelude.Types.Left', V1339}; {'Prelude.Types.Right', V1340} -> (begin (V1342 = fun (V1341) -> {'Prelude.Types.Right', {'TTImp.TTImp.IAs', V1289, V1300, V1311, V1322, V1340}} end), V1342 end(V1337)) end end end end), V1343 end(V1319)) end end end end), V1344 end(V1308)) end end end end), V1345 end(V1297)) end end end end), V1346 end(V1286)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E122, E123)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E120, E121)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E118, E119)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E116, E117)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E114, E115)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IMustUnify"/utf8>> -> case ((begin (V1352 = fun (V1348) -> fun (V1349) -> fun (V1350) -> fun (V1351) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1350, V1351)) end end end end), fun (V1353) -> fun (V1354) -> ((((V1352('erased'))('erased'))(V1353))(V1354)) end end end(fun (V1347) -> ('Idris.Idris2.Builtin':'un--snd'(V1347)) end))(V8)) of [E124 | E125] -> (fun (V1355, V1356) -> case V1356 of [E126 | E127] -> (fun (V1357, V1358) -> case V1358 of [E128 | E129] -> (fun (V1359, V1360) -> case V1360 of [] -> begin (V1367 = begin (V1361 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1355))), fun (V1362) -> begin (V1363 = (V1361(V1362))), case V1363 of {'Prelude.Types.Left', V1364} -> {'Prelude.Types.Left', V1364}; {'Prelude.Types.Right', V1365} -> (begin (V1366 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1365))), V1366 end(V1362)) end end end end), fun (V1368) -> begin (V1369 = (V1367(V1368))), case V1369 of {'Prelude.Types.Left', V1370} -> {'Prelude.Types.Left', V1370}; {'Prelude.Types.Right', V1371} -> (begin (V1404 = begin (V1378 = begin (V1372 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1357))), fun (V1373) -> begin (V1374 = (V1372(V1373))), case V1374 of {'Prelude.Types.Left', V1375} -> {'Prelude.Types.Left', V1375}; {'Prelude.Types.Right', V1376} -> (begin (V1377 = ('dn--un--reify_Reify_DotReason'(V0, V1, V2, V1376))), V1377 end(V1373)) end end end end), fun (V1379) -> begin (V1380 = (V1378(V1379))), case V1380 of {'Prelude.Types.Left', V1381} -> {'Prelude.Types.Left', V1381}; {'Prelude.Types.Right', V1382} -> (begin (V1403 = begin (V1396 = begin (V1383 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1359))), fun (V1384) -> begin (V1385 = (V1383(V1384))), case V1385 of {'Prelude.Types.Left', V1386} -> {'Prelude.Types.Left', V1386}; {'Prelude.Types.Right', V1387} -> (begin (V1395 = ((begin (V1392 = fun (V1388) -> fun (V1389) -> fun (V1390) -> fun (V1391) -> ('dn--un--reify_Reify_RawImp'(V1388, V1389, V1390, V1391)) end end end end), fun (V1393) -> fun (V1394) -> ((((V1392(V0))(V1))(V1393))(V1394)) end end end(V2))(V1387))), V1395 end(V1384)) end end end end), fun (V1397) -> begin (V1398 = (V1396(V1397))), case V1398 of {'Prelude.Types.Left', V1399} -> {'Prelude.Types.Left', V1399}; {'Prelude.Types.Right', V1400} -> (begin (V1402 = fun (V1401) -> {'Prelude.Types.Right', {'TTImp.TTImp.IMustUnify', V1371, V1382, V1400}} end), V1402 end(V1397)) end end end end), V1403 end(V1379)) end end end end), V1404 end(V1368)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E128, E129)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E126, E127)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E124, E125)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IDelayed"/utf8>> -> case ((begin (V1410 = fun (V1406) -> fun (V1407) -> fun (V1408) -> fun (V1409) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1408, V1409)) end end end end), fun (V1411) -> fun (V1412) -> ((((V1410('erased'))('erased'))(V1411))(V1412)) end end end(fun (V1405) -> ('Idris.Idris2.Builtin':'un--snd'(V1405)) end))(V8)) of [E130 | E131] -> (fun (V1413, V1414) -> case V1414 of [E132 | E133] -> (fun (V1415, V1416) -> case V1416 of [E134 | E135] -> (fun (V1417, V1418) -> case V1418 of [] -> begin (V1425 = begin (V1419 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1413))), fun (V1420) -> begin (V1421 = (V1419(V1420))), case V1421 of {'Prelude.Types.Left', V1422} -> {'Prelude.Types.Left', V1422}; {'Prelude.Types.Right', V1423} -> (begin (V1424 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1423))), V1424 end(V1420)) end end end end), fun (V1426) -> begin (V1427 = (V1425(V1426))), case V1427 of {'Prelude.Types.Left', V1428} -> {'Prelude.Types.Left', V1428}; {'Prelude.Types.Right', V1429} -> (begin (V1462 = begin (V1436 = begin (V1430 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1415))), fun (V1431) -> begin (V1432 = (V1430(V1431))), case V1432 of {'Prelude.Types.Left', V1433} -> {'Prelude.Types.Left', V1433}; {'Prelude.Types.Right', V1434} -> (begin (V1435 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_LazyReason'(V0, V1, V2, V1434))), V1435 end(V1431)) end end end end), fun (V1437) -> begin (V1438 = (V1436(V1437))), case V1438 of {'Prelude.Types.Left', V1439} -> {'Prelude.Types.Left', V1439}; {'Prelude.Types.Right', V1440} -> (begin (V1461 = begin (V1454 = begin (V1441 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1417))), fun (V1442) -> begin (V1443 = (V1441(V1442))), case V1443 of {'Prelude.Types.Left', V1444} -> {'Prelude.Types.Left', V1444}; {'Prelude.Types.Right', V1445} -> (begin (V1453 = ((begin (V1450 = fun (V1446) -> fun (V1447) -> fun (V1448) -> fun (V1449) -> ('dn--un--reify_Reify_RawImp'(V1446, V1447, V1448, V1449)) end end end end), fun (V1451) -> fun (V1452) -> ((((V1450(V0))(V1))(V1451))(V1452)) end end end(V2))(V1445))), V1453 end(V1442)) end end end end), fun (V1455) -> begin (V1456 = (V1454(V1455))), case V1456 of {'Prelude.Types.Left', V1457} -> {'Prelude.Types.Left', V1457}; {'Prelude.Types.Right', V1458} -> (begin (V1460 = fun (V1459) -> {'Prelude.Types.Right', {'TTImp.TTImp.IDelayed', V1429, V1440, V1458}} end), V1460 end(V1455)) end end end end), V1461 end(V1437)) end end end end), V1462 end(V1426)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E134, E135)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E132, E133)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E130, E131)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IDelay"/utf8>> -> case ((begin (V1468 = fun (V1464) -> fun (V1465) -> fun (V1466) -> fun (V1467) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1466, V1467)) end end end end), fun (V1469) -> fun (V1470) -> ((((V1468('erased'))('erased'))(V1469))(V1470)) end end end(fun (V1463) -> ('Idris.Idris2.Builtin':'un--snd'(V1463)) end))(V8)) of [E136 | E137] -> (fun (V1471, V1472) -> case V1472 of [E138 | E139] -> (fun (V1473, V1474) -> case V1474 of [] -> begin (V1481 = begin (V1475 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1471))), fun (V1476) -> begin (V1477 = (V1475(V1476))), case V1477 of {'Prelude.Types.Left', V1478} -> {'Prelude.Types.Left', V1478}; {'Prelude.Types.Right', V1479} -> (begin (V1480 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1479))), V1480 end(V1476)) end end end end), fun (V1482) -> begin (V1483 = (V1481(V1482))), case V1483 of {'Prelude.Types.Left', V1484} -> {'Prelude.Types.Left', V1484}; {'Prelude.Types.Right', V1485} -> (begin (V1506 = begin (V1499 = begin (V1486 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1473))), fun (V1487) -> begin (V1488 = (V1486(V1487))), case V1488 of {'Prelude.Types.Left', V1489} -> {'Prelude.Types.Left', V1489}; {'Prelude.Types.Right', V1490} -> (begin (V1498 = ((begin (V1495 = fun (V1491) -> fun (V1492) -> fun (V1493) -> fun (V1494) -> ('dn--un--reify_Reify_RawImp'(V1491, V1492, V1493, V1494)) end end end end), fun (V1496) -> fun (V1497) -> ((((V1495(V0))(V1))(V1496))(V1497)) end end end(V2))(V1490))), V1498 end(V1487)) end end end end), fun (V1500) -> begin (V1501 = (V1499(V1500))), case V1501 of {'Prelude.Types.Left', V1502} -> {'Prelude.Types.Left', V1502}; {'Prelude.Types.Right', V1503} -> (begin (V1505 = fun (V1504) -> {'Prelude.Types.Right', {'TTImp.TTImp.IDelay', V1485, V1503}} end), V1505 end(V1500)) end end end end), V1506 end(V1482)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E138, E139)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E136, E137)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IForce"/utf8>> -> case ((begin (V1512 = fun (V1508) -> fun (V1509) -> fun (V1510) -> fun (V1511) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1510, V1511)) end end end end), fun (V1513) -> fun (V1514) -> ((((V1512('erased'))('erased'))(V1513))(V1514)) end end end(fun (V1507) -> ('Idris.Idris2.Builtin':'un--snd'(V1507)) end))(V8)) of [E140 | E141] -> (fun (V1515, V1516) -> case V1516 of [E142 | E143] -> (fun (V1517, V1518) -> case V1518 of [] -> begin (V1525 = begin (V1519 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1515))), fun (V1520) -> begin (V1521 = (V1519(V1520))), case V1521 of {'Prelude.Types.Left', V1522} -> {'Prelude.Types.Left', V1522}; {'Prelude.Types.Right', V1523} -> (begin (V1524 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1523))), V1524 end(V1520)) end end end end), fun (V1526) -> begin (V1527 = (V1525(V1526))), case V1527 of {'Prelude.Types.Left', V1528} -> {'Prelude.Types.Left', V1528}; {'Prelude.Types.Right', V1529} -> (begin (V1550 = begin (V1543 = begin (V1530 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1517))), fun (V1531) -> begin (V1532 = (V1530(V1531))), case V1532 of {'Prelude.Types.Left', V1533} -> {'Prelude.Types.Left', V1533}; {'Prelude.Types.Right', V1534} -> (begin (V1542 = ((begin (V1539 = fun (V1535) -> fun (V1536) -> fun (V1537) -> fun (V1538) -> ('dn--un--reify_Reify_RawImp'(V1535, V1536, V1537, V1538)) end end end end), fun (V1540) -> fun (V1541) -> ((((V1539(V0))(V1))(V1540))(V1541)) end end end(V2))(V1534))), V1542 end(V1531)) end end end end), fun (V1544) -> begin (V1545 = (V1543(V1544))), case V1545 of {'Prelude.Types.Left', V1546} -> {'Prelude.Types.Left', V1546}; {'Prelude.Types.Right', V1547} -> (begin (V1549 = fun (V1548) -> {'Prelude.Types.Right', {'TTImp.TTImp.IForce', V1529, V1547}} end), V1549 end(V1544)) end end end end), V1550 end(V1526)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E142, E143)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E140, E141)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IQuote"/utf8>> -> case ((begin (V1556 = fun (V1552) -> fun (V1553) -> fun (V1554) -> fun (V1555) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1554, V1555)) end end end end), fun (V1557) -> fun (V1558) -> ((((V1556('erased'))('erased'))(V1557))(V1558)) end end end(fun (V1551) -> ('Idris.Idris2.Builtin':'un--snd'(V1551)) end))(V8)) of [E144 | E145] -> (fun (V1559, V1560) -> case V1560 of [E146 | E147] -> (fun (V1561, V1562) -> case V1562 of [] -> begin (V1569 = begin (V1563 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1559))), fun (V1564) -> begin (V1565 = (V1563(V1564))), case V1565 of {'Prelude.Types.Left', V1566} -> {'Prelude.Types.Left', V1566}; {'Prelude.Types.Right', V1567} -> (begin (V1568 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1567))), V1568 end(V1564)) end end end end), fun (V1570) -> begin (V1571 = (V1569(V1570))), case V1571 of {'Prelude.Types.Left', V1572} -> {'Prelude.Types.Left', V1572}; {'Prelude.Types.Right', V1573} -> (begin (V1594 = begin (V1587 = begin (V1574 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1561))), fun (V1575) -> begin (V1576 = (V1574(V1575))), case V1576 of {'Prelude.Types.Left', V1577} -> {'Prelude.Types.Left', V1577}; {'Prelude.Types.Right', V1578} -> (begin (V1586 = ((begin (V1583 = fun (V1579) -> fun (V1580) -> fun (V1581) -> fun (V1582) -> ('dn--un--reify_Reify_RawImp'(V1579, V1580, V1581, V1582)) end end end end), fun (V1584) -> fun (V1585) -> ((((V1583(V0))(V1))(V1584))(V1585)) end end end(V2))(V1578))), V1586 end(V1575)) end end end end), fun (V1588) -> begin (V1589 = (V1587(V1588))), case V1589 of {'Prelude.Types.Left', V1590} -> {'Prelude.Types.Left', V1590}; {'Prelude.Types.Right', V1591} -> (begin (V1593 = fun (V1592) -> {'Prelude.Types.Right', {'TTImp.TTImp.IQuote', V1573, V1591}} end), V1593 end(V1588)) end end end end), V1594 end(V1570)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E146, E147)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E144, E145)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IQuoteName"/utf8>> -> case ((begin (V1600 = fun (V1596) -> fun (V1597) -> fun (V1598) -> fun (V1599) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1598, V1599)) end end end end), fun (V1601) -> fun (V1602) -> ((((V1600('erased'))('erased'))(V1601))(V1602)) end end end(fun (V1595) -> ('Idris.Idris2.Builtin':'un--snd'(V1595)) end))(V8)) of [E148 | E149] -> (fun (V1603, V1604) -> case V1604 of [E150 | E151] -> (fun (V1605, V1606) -> case V1606 of [] -> begin (V1613 = begin (V1607 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1603))), fun (V1608) -> begin (V1609 = (V1607(V1608))), case V1609 of {'Prelude.Types.Left', V1610} -> {'Prelude.Types.Left', V1610}; {'Prelude.Types.Right', V1611} -> (begin (V1612 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1611))), V1612 end(V1608)) end end end end), fun (V1614) -> begin (V1615 = (V1613(V1614))), case V1615 of {'Prelude.Types.Left', V1616} -> {'Prelude.Types.Left', V1616}; {'Prelude.Types.Right', V1617} -> (begin (V1631 = begin (V1624 = begin (V1618 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1605))), fun (V1619) -> begin (V1620 = (V1618(V1619))), case V1620 of {'Prelude.Types.Left', V1621} -> {'Prelude.Types.Left', V1621}; {'Prelude.Types.Right', V1622} -> (begin (V1623 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V1622))), V1623 end(V1619)) end end end end), fun (V1625) -> begin (V1626 = (V1624(V1625))), case V1626 of {'Prelude.Types.Left', V1627} -> {'Prelude.Types.Left', V1627}; {'Prelude.Types.Right', V1628} -> (begin (V1630 = fun (V1629) -> {'Prelude.Types.Right', {'TTImp.TTImp.IQuoteName', V1617, V1628}} end), V1630 end(V1625)) end end end end), V1631 end(V1614)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E150, E151)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E148, E149)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IQuoteDecl"/utf8>> -> case ((begin (V1637 = fun (V1633) -> fun (V1634) -> fun (V1635) -> fun (V1636) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1635, V1636)) end end end end), fun (V1638) -> fun (V1639) -> ((((V1637('erased'))('erased'))(V1638))(V1639)) end end end(fun (V1632) -> ('Idris.Idris2.Builtin':'un--snd'(V1632)) end))(V8)) of [E152 | E153] -> (fun (V1640, V1641) -> case V1641 of [E154 | E155] -> (fun (V1642, V1643) -> case V1643 of [] -> begin (V1650 = begin (V1644 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1640))), fun (V1645) -> begin (V1646 = (V1644(V1645))), case V1646 of {'Prelude.Types.Left', V1647} -> {'Prelude.Types.Left', V1647}; {'Prelude.Types.Right', V1648} -> (begin (V1649 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1648))), V1649 end(V1645)) end end end end), fun (V1651) -> begin (V1652 = (V1650(V1651))), case V1652 of {'Prelude.Types.Left', V1653} -> {'Prelude.Types.Left', V1653}; {'Prelude.Types.Right', V1654} -> (begin (V1679 = begin (V1672 = begin (V1655 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1642))), fun (V1656) -> begin (V1657 = (V1655(V1656))), case V1657 of {'Prelude.Types.Left', V1658} -> {'Prelude.Types.Left', V1658}; {'Prelude.Types.Right', V1659} -> (begin (V1671 = ((begin (V1668 = fun (V1660) -> fun (V1661) -> fun (V1662) -> fun (V1663) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V1664) -> fun (V1665) -> fun (V1666) -> fun (V1667) -> ('dn--un--reify_Reify_ImpDecl'(V1664, V1665, V1666, V1667)) end end end end, V1660, V1661, V1662, V1663)) end end end end), fun (V1669) -> fun (V1670) -> ((((V1668(V0))(V1))(V1669))(V1670)) end end end(V2))(V1659))), V1671 end(V1656)) end end end end), fun (V1673) -> begin (V1674 = (V1672(V1673))), case V1674 of {'Prelude.Types.Left', V1675} -> {'Prelude.Types.Left', V1675}; {'Prelude.Types.Right', V1676} -> (begin (V1678 = fun (V1677) -> {'Prelude.Types.Right', {'TTImp.TTImp.IQuoteDecl', V1654, V1676}} end), V1678 end(V1673)) end end end end), V1679 end(V1651)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E154, E155)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E152, E153)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IUnquote"/utf8>> -> case ((begin (V1685 = fun (V1681) -> fun (V1682) -> fun (V1683) -> fun (V1684) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1683, V1684)) end end end end), fun (V1686) -> fun (V1687) -> ((((V1685('erased'))('erased'))(V1686))(V1687)) end end end(fun (V1680) -> ('Idris.Idris2.Builtin':'un--snd'(V1680)) end))(V8)) of [E156 | E157] -> (fun (V1688, V1689) -> case V1689 of [E158 | E159] -> (fun (V1690, V1691) -> case V1691 of [] -> begin (V1698 = begin (V1692 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1688))), fun (V1693) -> begin (V1694 = (V1692(V1693))), case V1694 of {'Prelude.Types.Left', V1695} -> {'Prelude.Types.Left', V1695}; {'Prelude.Types.Right', V1696} -> (begin (V1697 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1696))), V1697 end(V1693)) end end end end), fun (V1699) -> begin (V1700 = (V1698(V1699))), case V1700 of {'Prelude.Types.Left', V1701} -> {'Prelude.Types.Left', V1701}; {'Prelude.Types.Right', V1702} -> (begin (V1723 = begin (V1716 = begin (V1703 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1690))), fun (V1704) -> begin (V1705 = (V1703(V1704))), case V1705 of {'Prelude.Types.Left', V1706} -> {'Prelude.Types.Left', V1706}; {'Prelude.Types.Right', V1707} -> (begin (V1715 = ((begin (V1712 = fun (V1708) -> fun (V1709) -> fun (V1710) -> fun (V1711) -> ('dn--un--reify_Reify_RawImp'(V1708, V1709, V1710, V1711)) end end end end), fun (V1713) -> fun (V1714) -> ((((V1712(V0))(V1))(V1713))(V1714)) end end end(V2))(V1707))), V1715 end(V1704)) end end end end), fun (V1717) -> begin (V1718 = (V1716(V1717))), case V1718 of {'Prelude.Types.Left', V1719} -> {'Prelude.Types.Left', V1719}; {'Prelude.Types.Right', V1720} -> (begin (V1722 = fun (V1721) -> {'Prelude.Types.Right', {'TTImp.TTImp.IUnquote', V1702, V1720}} end), V1722 end(V1717)) end end end end), V1723 end(V1699)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E158, E159)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E156, E157)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IPrimVal"/utf8>> -> case ((begin (V1729 = fun (V1725) -> fun (V1726) -> fun (V1727) -> fun (V1728) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1727, V1728)) end end end end), fun (V1730) -> fun (V1731) -> ((((V1729('erased'))('erased'))(V1730))(V1731)) end end end(fun (V1724) -> ('Idris.Idris2.Builtin':'un--snd'(V1724)) end))(V8)) of [E160 | E161] -> (fun (V1732, V1733) -> case V1733 of [E162 | E163] -> (fun (V1734, V1735) -> case V1735 of [] -> begin (V1742 = begin (V1736 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1732))), fun (V1737) -> begin (V1738 = (V1736(V1737))), case V1738 of {'Prelude.Types.Left', V1739} -> {'Prelude.Types.Left', V1739}; {'Prelude.Types.Right', V1740} -> (begin (V1741 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1740))), V1741 end(V1737)) end end end end), fun (V1743) -> begin (V1744 = (V1742(V1743))), case V1744 of {'Prelude.Types.Left', V1745} -> {'Prelude.Types.Left', V1745}; {'Prelude.Types.Right', V1746} -> (begin (V1760 = begin (V1753 = begin (V1747 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1734))), fun (V1748) -> begin (V1749 = (V1747(V1748))), case V1749 of {'Prelude.Types.Left', V1750} -> {'Prelude.Types.Left', V1750}; {'Prelude.Types.Right', V1751} -> (begin (V1752 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Constant'(V0, V1, V2, V1751))), V1752 end(V1748)) end end end end), fun (V1754) -> begin (V1755 = (V1753(V1754))), case V1755 of {'Prelude.Types.Left', V1756} -> {'Prelude.Types.Left', V1756}; {'Prelude.Types.Right', V1757} -> (begin (V1759 = fun (V1758) -> {'Prelude.Types.Right', {'TTImp.TTImp.IPrimVal', V1746, V1757}} end), V1759 end(V1754)) end end end end), V1760 end(V1743)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E162, E163)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E160, E161)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IType"/utf8>> -> case ((begin (V1766 = fun (V1762) -> fun (V1763) -> fun (V1764) -> fun (V1765) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1764, V1765)) end end end end), fun (V1767) -> fun (V1768) -> ((((V1766('erased'))('erased'))(V1767))(V1768)) end end end(fun (V1761) -> ('Idris.Idris2.Builtin':'un--snd'(V1761)) end))(V8)) of [E164 | E165] -> (fun (V1769, V1770) -> case V1770 of [] -> begin (V1777 = begin (V1771 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1769))), fun (V1772) -> begin (V1773 = (V1771(V1772))), case V1773 of {'Prelude.Types.Left', V1774} -> {'Prelude.Types.Left', V1774}; {'Prelude.Types.Right', V1775} -> (begin (V1776 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1775))), V1776 end(V1772)) end end end end), fun (V1778) -> begin (V1779 = (V1777(V1778))), case V1779 of {'Prelude.Types.Left', V1780} -> {'Prelude.Types.Left', V1780}; {'Prelude.Types.Right', V1781} -> (begin (V1783 = fun (V1782) -> {'Prelude.Types.Right', {'TTImp.TTImp.IType', V1781}} end), V1783 end(V1778)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E164, E165)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IHole"/utf8>> -> case ((begin (V1789 = fun (V1785) -> fun (V1786) -> fun (V1787) -> fun (V1788) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1787, V1788)) end end end end), fun (V1790) -> fun (V1791) -> ((((V1789('erased'))('erased'))(V1790))(V1791)) end end end(fun (V1784) -> ('Idris.Idris2.Builtin':'un--snd'(V1784)) end))(V8)) of [E166 | E167] -> (fun (V1792, V1793) -> case V1793 of [E168 | E169] -> (fun (V1794, V1795) -> case V1795 of [] -> begin (V1802 = begin (V1796 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1792))), fun (V1797) -> begin (V1798 = (V1796(V1797))), case V1798 of {'Prelude.Types.Left', V1799} -> {'Prelude.Types.Left', V1799}; {'Prelude.Types.Right', V1800} -> (begin (V1801 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1800))), V1801 end(V1797)) end end end end), fun (V1803) -> begin (V1804 = (V1802(V1803))), case V1804 of {'Prelude.Types.Left', V1805} -> {'Prelude.Types.Left', V1805}; {'Prelude.Types.Right', V1806} -> (begin (V1820 = begin (V1813 = begin (V1807 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1794))), fun (V1808) -> begin (V1809 = (V1807(V1808))), case V1809 of {'Prelude.Types.Left', V1810} -> {'Prelude.Types.Left', V1810}; {'Prelude.Types.Right', V1811} -> (begin (V1812 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V0, V1, V2, V1811))), V1812 end(V1808)) end end end end), fun (V1814) -> begin (V1815 = (V1813(V1814))), case V1815 of {'Prelude.Types.Left', V1816} -> {'Prelude.Types.Left', V1816}; {'Prelude.Types.Right', V1817} -> (begin (V1819 = fun (V1818) -> {'Prelude.Types.Right', {'TTImp.TTImp.IHole', V1806, V1817}} end), V1819 end(V1814)) end end end end), V1820 end(V1803)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E168, E169)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E166, E167)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"Implicit"/utf8>> -> case ((begin (V1826 = fun (V1822) -> fun (V1823) -> fun (V1824) -> fun (V1825) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1824, V1825)) end end end end), fun (V1827) -> fun (V1828) -> ((((V1826('erased'))('erased'))(V1827))(V1828)) end end end(fun (V1821) -> ('Idris.Idris2.Builtin':'un--snd'(V1821)) end))(V8)) of [E170 | E171] -> (fun (V1829, V1830) -> case V1830 of [E172 | E173] -> (fun (V1831, V1832) -> case V1832 of [] -> begin (V1839 = begin (V1833 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1829))), fun (V1834) -> begin (V1835 = (V1833(V1834))), case V1835 of {'Prelude.Types.Left', V1836} -> {'Prelude.Types.Left', V1836}; {'Prelude.Types.Right', V1837} -> (begin (V1838 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1837))), V1838 end(V1834)) end end end end), fun (V1840) -> begin (V1841 = (V1839(V1840))), case V1841 of {'Prelude.Types.Left', V1842} -> {'Prelude.Types.Left', V1842}; {'Prelude.Types.Right', V1843} -> (begin (V1857 = begin (V1850 = begin (V1844 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1831))), fun (V1845) -> begin (V1846 = (V1844(V1845))), case V1846 of {'Prelude.Types.Left', V1847} -> {'Prelude.Types.Left', V1847}; {'Prelude.Types.Right', V1848} -> (begin (V1849 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V1848))), V1849 end(V1845)) end end end end), fun (V1851) -> begin (V1852 = (V1850(V1851))), case V1852 of {'Prelude.Types.Left', V1853} -> {'Prelude.Types.Left', V1853}; {'Prelude.Types.Right', V1854} -> (begin (V1856 = fun (V1855) -> {'Prelude.Types.Right', {'TTImp.TTImp.Implicit', V1843, V1854}} end), V1856 end(V1851)) end end end end), V1857 end(V1840)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E172, E173)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E170, E171)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; <<"IWithUnambigNames"/utf8>> -> case ((begin (V1863 = fun (V1859) -> fun (V1860) -> fun (V1861) -> fun (V1862) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1861, V1862)) end end end end), fun (V1864) -> fun (V1865) -> ((((V1863('erased'))('erased'))(V1864))(V1865)) end end end(fun (V1858) -> ('Idris.Idris2.Builtin':'un--snd'(V1858)) end))(V8)) of [E174 | E175] -> (fun (V1866, V1867) -> case V1867 of [E176 | E177] -> (fun (V1868, V1869) -> case V1869 of [E178 | E179] -> (fun (V1870, V1871) -> case V1871 of [] -> begin (V1878 = begin (V1872 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1866))), fun (V1873) -> begin (V1874 = (V1872(V1873))), case V1874 of {'Prelude.Types.Left', V1875} -> {'Prelude.Types.Left', V1875}; {'Prelude.Types.Right', V1876} -> (begin (V1877 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V1876))), V1877 end(V1873)) end end end end), fun (V1879) -> begin (V1880 = (V1878(V1879))), case V1880 of {'Prelude.Types.Left', V1881} -> {'Prelude.Types.Left', V1881}; {'Prelude.Types.Right', V1882} -> (begin (V1934 = begin (V1908 = begin (V1883 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1868))), fun (V1884) -> begin (V1885 = (V1883(V1884))), case V1885 of {'Prelude.Types.Left', V1886} -> {'Prelude.Types.Left', V1886}; {'Prelude.Types.Right', V1887} -> (begin (V1907 = ((begin (V1904 = fun (V1888) -> fun (V1889) -> fun (V1890) -> fun (V1891) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V1892) -> fun (V1893) -> fun (V1894) -> fun (V1895) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V1896) -> fun (V1897) -> fun (V1898) -> fun (V1899) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V1896, V1897, V1898, V1899)) end end end end, fun (V1900) -> fun (V1901) -> fun (V1902) -> fun (V1903) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V1900, V1901, V1902, V1903)) end end end end}, V1892, V1893, V1894, V1895)) end end end end, V1888, V1889, V1890, V1891)) end end end end), fun (V1905) -> fun (V1906) -> ((((V1904(V0))(V1))(V1905))(V1906)) end end end(V2))(V1887))), V1907 end(V1884)) end end end end), fun (V1909) -> begin (V1910 = (V1908(V1909))), case V1910 of {'Prelude.Types.Left', V1911} -> {'Prelude.Types.Left', V1911}; {'Prelude.Types.Right', V1912} -> (begin (V1933 = begin (V1926 = begin (V1913 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V1870))), fun (V1914) -> begin (V1915 = (V1913(V1914))), case V1915 of {'Prelude.Types.Left', V1916} -> {'Prelude.Types.Left', V1916}; {'Prelude.Types.Right', V1917} -> (begin (V1925 = ((begin (V1922 = fun (V1918) -> fun (V1919) -> fun (V1920) -> fun (V1921) -> ('dn--un--reify_Reify_RawImp'(V1918, V1919, V1920, V1921)) end end end end), fun (V1923) -> fun (V1924) -> ((((V1922(V0))(V1))(V1923))(V1924)) end end end(V2))(V1917))), V1925 end(V1914)) end end end end), fun (V1927) -> begin (V1928 = (V1926(V1927))), case V1928 of {'Prelude.Types.Left', V1929} -> {'Prelude.Types.Left', V1929}; {'Prelude.Types.Right', V1930} -> (begin (V1932 = fun (V1931) -> {'Prelude.Types.Right', {'TTImp.TTImp.IWithUnambigNames', V1882, V1912, V1930}} end), V1932 end(V1927)) end end end end), V1933 end(V1909)) end end end end), V1934 end(V1879)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E178, E179)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E176, E177)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end(E174, E175)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"TTImp"/utf8>>)) end end), V1935 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"TTImp"/utf8>>)) end.
'dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V121 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"MkTy"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [E0 | E1] -> (fun (V57, V58) -> case V58 of [E2 | E3] -> (fun (V59, V60) -> case V60 of [E4 | E5] -> (fun (V61, V62) -> case V62 of [E6 | E7] -> (fun (V63, V64) -> case V64 of [] -> begin (V71 = begin (V65 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V57))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V70 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V69))), V70 end(V66)) end end end end), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V120 = begin (V82 = begin (V76 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))), fun (V77) -> begin (V78 = (V76(V77))), case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> (begin (V81 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V80))), V81 end(V77)) end end end end), fun (V83) -> begin (V84 = (V82(V83))), case V84 of {'Prelude.Types.Left', V85} -> {'Prelude.Types.Left', V85}; {'Prelude.Types.Right', V86} -> (begin (V119 = begin (V93 = begin (V87 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V61))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V92 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V91))), V92 end(V88)) end end end end), fun (V94) -> begin (V95 = (V93(V94))), case V95 of {'Prelude.Types.Left', V96} -> {'Prelude.Types.Left', V96}; {'Prelude.Types.Right', V97} -> (begin (V118 = begin (V111 = begin (V98 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V63))), fun (V99) -> begin (V100 = (V98(V99))), case V100 of {'Prelude.Types.Left', V101} -> {'Prelude.Types.Left', V101}; {'Prelude.Types.Right', V102} -> (begin (V110 = ((begin (V107 = fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> ('dn--un--reify_Reify_RawImp'(V103, V104, V105, V106)) end end end end), fun (V108) -> fun (V109) -> ((((V107(V0))(V1))(V108))(V109)) end end end(V2))(V102))), V110 end(V99)) end end end end), fun (V112) -> begin (V113 = (V111(V112))), case V113 of {'Prelude.Types.Left', V114} -> {'Prelude.Types.Left', V114}; {'Prelude.Types.Right', V115} -> (begin (V117 = fun (V116) -> {'Prelude.Types.Right', {'TTImp.TTImp.MkImpTy', V75, V86, V97, V115}} end), V117 end(V112)) end end end end), V118 end(V94)) end end end end), V119 end(V83)) end end end end), V120 end(V72)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"ITy"/utf8>>)) end end), V121 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"ITy"/utf8>>)) end.
'dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V203 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"MkRecord"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [E0 | E1] -> (fun (V57, V58) -> case V58 of [E2 | E3] -> (fun (V59, V60) -> case V60 of [E4 | E5] -> (fun (V61, V62) -> case V62 of [E6 | E7] -> (fun (V63, V64) -> case V64 of [E8 | E9] -> (fun (V65, V66) -> case V66 of [E10 | E11] -> (fun (V67, V68) -> case V68 of [] -> begin (V75 = begin (V69 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V57))), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V74 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V73))), V74 end(V70)) end end end end), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V202 = begin (V86 = begin (V80 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V85 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V84))), V85 end(V81)) end end end end), fun (V87) -> begin (V88 = (V86(V87))), case V88 of {'Prelude.Types.Left', V89} -> {'Prelude.Types.Left', V89}; {'Prelude.Types.Right', V90} -> (begin (V201 = begin (V136 = begin (V91 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V61))), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V135 = ((begin (V132 = fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V104, V105, V106, V107)) end end end end, fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V112, V113, V114, V115)) end end end end, fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> ('dn--un--reify_Reify_RawImp'(V124, V125, V126, V127)) end end end end, V120, V121, V122, V123)) end end end end, fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--reify_Reify_RawImp'(V128, V129, V130, V131)) end end end end}, V116, V117, V118, V119)) end end end end}, V108, V109, V110, V111)) end end end end}, V100, V101, V102, V103)) end end end end, V96, V97, V98, V99)) end end end end), fun (V133) -> fun (V134) -> ((((V132(V0))(V1))(V133))(V134)) end end end(V2))(V95))), V135 end(V92)) end end end end), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V200 = begin (V158 = begin (V141 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V63))), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V157 = ((begin (V154 = fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> ('dn--un--reify_Reify_DataOpt'(V150, V151, V152, V153)) end end end end, V146, V147, V148, V149)) end end end end), fun (V155) -> fun (V156) -> ((((V154(V0))(V1))(V155))(V156)) end end end(V2))(V145))), V157 end(V142)) end end end end), fun (V159) -> begin (V160 = (V158(V159))), case V160 of {'Prelude.Types.Left', V161} -> {'Prelude.Types.Left', V161}; {'Prelude.Types.Right', V162} -> (begin (V199 = begin (V169 = begin (V163 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V65))), fun (V164) -> begin (V165 = (V163(V164))), case V165 of {'Prelude.Types.Left', V166} -> {'Prelude.Types.Left', V166}; {'Prelude.Types.Right', V167} -> (begin (V168 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V167))), V168 end(V164)) end end end end), fun (V170) -> begin (V171 = (V169(V170))), case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> (begin (V198 = begin (V191 = begin (V174 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V67))), fun (V175) -> begin (V176 = (V174(V175))), case V176 of {'Prelude.Types.Left', V177} -> {'Prelude.Types.Left', V177}; {'Prelude.Types.Right', V178} -> (begin (V190 = ((begin (V187 = fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> ('dn--un--reify_Reify_IField'(V183, V184, V185, V186)) end end end end, V179, V180, V181, V182)) end end end end), fun (V188) -> fun (V189) -> ((((V187(V0))(V1))(V188))(V189)) end end end(V2))(V178))), V190 end(V175)) end end end end), fun (V192) -> begin (V193 = (V191(V192))), case V193 of {'Prelude.Types.Left', V194} -> {'Prelude.Types.Left', V194}; {'Prelude.Types.Right', V195} -> (begin (V197 = fun (V196) -> {'Prelude.Types.Right', {'TTImp.TTImp.MkImpRecord', V79, V90, V140, V162, V173, V195}} end), V197 end(V192)) end end end end), V198 end(V170)) end end end end), V199 end(V159)) end end end end), V200 end(V137)) end end end end), V201 end(V87)) end end end end), V202 end(V76)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end end(E10, E11)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end end(E8, E9)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Record"/utf8>>)) end end), V203 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"Record"/utf8>>)) end.
'dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V767 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"IClaim"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [E0 | E1] -> (fun (V57, V58) -> case V58 of [E2 | E3] -> (fun (V59, V60) -> case V60 of [E4 | E5] -> (fun (V61, V62) -> case V62 of [E6 | E7] -> (fun (V63, V64) -> case V64 of [E8 | E9] -> (fun (V65, V66) -> case V66 of [] -> begin (V73 = begin (V67 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V57))), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V72 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V71))), V72 end(V68)) end end end end), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V152 = begin (V91 = begin (V78 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V90 = ((begin (V87 = fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V83, V84, V85, V86)) end end end end), fun (V88) -> fun (V89) -> ((((V87(V0))(V1))(V88))(V89)) end end end(V2))(V82))), V90 end(V79)) end end end end), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V151 = begin (V102 = begin (V96 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V61))), fun (V97) -> begin (V98 = (V96(V97))), case V98 of {'Prelude.Types.Left', V99} -> {'Prelude.Types.Left', V99}; {'Prelude.Types.Right', V100} -> (begin (V101 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V100))), V101 end(V97)) end end end end), fun (V103) -> begin (V104 = (V102(V103))), case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> (begin (V150 = begin (V124 = begin (V107 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V63))), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V123 = ((begin (V120 = fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('dn--un--reify_Reify_FnOpt'(V116, V117, V118, V119)) end end end end, V112, V113, V114, V115)) end end end end), fun (V121) -> fun (V122) -> ((((V120(V0))(V1))(V121))(V122)) end end end(V2))(V111))), V123 end(V108)) end end end end), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V149 = begin (V142 = begin (V129 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V65))), fun (V130) -> begin (V131 = (V129(V130))), case V131 of {'Prelude.Types.Left', V132} -> {'Prelude.Types.Left', V132}; {'Prelude.Types.Right', V133} -> (begin (V141 = ((begin (V138 = fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> ('dn--un--reify_Reify_ImpTy'(V134, V135, V136, V137)) end end end end), fun (V139) -> fun (V140) -> ((((V138(V0))(V1))(V139))(V140)) end end end(V2))(V133))), V141 end(V130)) end end end end), fun (V143) -> begin (V144 = (V142(V143))), case V144 of {'Prelude.Types.Left', V145} -> {'Prelude.Types.Left', V145}; {'Prelude.Types.Right', V146} -> (begin (V148 = fun (V147) -> {'Prelude.Types.Right', {'TTImp.TTImp.IClaim', V77, V95, V106, V128, V146}} end), V148 end(V143)) end end end end), V149 end(V125)) end end end end), V150 end(V103)) end end end end), V151 end(V92)) end end end end), V152 end(V74)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E8, E9)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"IData"/utf8>> -> case ((begin (V158 = fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V156, V157)) end end end end), fun (V159) -> fun (V160) -> ((((V158('erased'))('erased'))(V159))(V160)) end end end(fun (V153) -> ('Idris.Idris2.Builtin':'un--snd'(V153)) end))(V8)) of [E10 | E11] -> (fun (V161, V162) -> case V162 of [E12 | E13] -> (fun (V163, V164) -> case V164 of [E14 | E15] -> (fun (V165, V166) -> case V166 of [E16 | E17] -> (fun (V167, V168) -> case V168 of [] -> begin (V175 = begin (V169 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V161))), fun (V170) -> begin (V171 = (V169(V170))), case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> (begin (V174 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V173))), V174 end(V170)) end end end end), fun (V176) -> begin (V177 = (V175(V176))), case V177 of {'Prelude.Types.Left', V178} -> {'Prelude.Types.Left', V178}; {'Prelude.Types.Right', V179} -> (begin (V235 = begin (V186 = begin (V180 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V163))), fun (V181) -> begin (V182 = (V180(V181))), case V182 of {'Prelude.Types.Left', V183} -> {'Prelude.Types.Left', V183}; {'Prelude.Types.Right', V184} -> (begin (V185 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V184))), V185 end(V181)) end end end end), fun (V187) -> begin (V188 = (V186(V187))), case V188 of {'Prelude.Types.Left', V189} -> {'Prelude.Types.Left', V189}; {'Prelude.Types.Right', V190} -> (begin (V234 = begin (V208 = begin (V191 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V165))), fun (V192) -> begin (V193 = (V191(V192))), case V193 of {'Prelude.Types.Left', V194} -> {'Prelude.Types.Left', V194}; {'Prelude.Types.Right', V195} -> (begin (V207 = ((begin (V204 = fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_TotalReq'(V200, V201, V202, V203)) end end end end, V196, V197, V198, V199)) end end end end), fun (V205) -> fun (V206) -> ((((V204(V0))(V1))(V205))(V206)) end end end(V2))(V195))), V207 end(V192)) end end end end), fun (V209) -> begin (V210 = (V208(V209))), case V210 of {'Prelude.Types.Left', V211} -> {'Prelude.Types.Left', V211}; {'Prelude.Types.Right', V212} -> (begin (V233 = begin (V226 = begin (V213 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V167))), fun (V214) -> begin (V215 = (V213(V214))), case V215 of {'Prelude.Types.Left', V216} -> {'Prelude.Types.Left', V216}; {'Prelude.Types.Right', V217} -> (begin (V225 = ((begin (V222 = fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> ('dn--un--reify_Reify_ImpData'(V218, V219, V220, V221)) end end end end), fun (V223) -> fun (V224) -> ((((V222(V0))(V1))(V223))(V224)) end end end(V2))(V217))), V225 end(V214)) end end end end), fun (V227) -> begin (V228 = (V226(V227))), case V228 of {'Prelude.Types.Left', V229} -> {'Prelude.Types.Left', V229}; {'Prelude.Types.Right', V230} -> (begin (V232 = fun (V231) -> {'Prelude.Types.Right', {'TTImp.TTImp.IData', V179, V190, V212, V230}} end), V232 end(V227)) end end end end), V233 end(V209)) end end end end), V234 end(V187)) end end end end), V235 end(V176)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E16, E17)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E14, E15)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E12, E13)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E10, E11)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"IDef"/utf8>> -> case ((begin (V241 = fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V239, V240)) end end end end), fun (V242) -> fun (V243) -> ((((V241('erased'))('erased'))(V242))(V243)) end end end(fun (V236) -> ('Idris.Idris2.Builtin':'un--snd'(V236)) end))(V8)) of [E18 | E19] -> (fun (V244, V245) -> case V245 of [E20 | E21] -> (fun (V246, V247) -> case V247 of [E22 | E23] -> (fun (V248, V249) -> case V249 of [] -> begin (V256 = begin (V250 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V244))), fun (V251) -> begin (V252 = (V250(V251))), case V252 of {'Prelude.Types.Left', V253} -> {'Prelude.Types.Left', V253}; {'Prelude.Types.Right', V254} -> (begin (V255 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V254))), V255 end(V251)) end end end end), fun (V257) -> begin (V258 = (V256(V257))), case V258 of {'Prelude.Types.Left', V259} -> {'Prelude.Types.Left', V259}; {'Prelude.Types.Right', V260} -> (begin (V297 = begin (V267 = begin (V261 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V246))), fun (V262) -> begin (V263 = (V261(V262))), case V263 of {'Prelude.Types.Left', V264} -> {'Prelude.Types.Left', V264}; {'Prelude.Types.Right', V265} -> (begin (V266 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V265))), V266 end(V262)) end end end end), fun (V268) -> begin (V269 = (V267(V268))), case V269 of {'Prelude.Types.Left', V270} -> {'Prelude.Types.Left', V270}; {'Prelude.Types.Right', V271} -> (begin (V296 = begin (V289 = begin (V272 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V248))), fun (V273) -> begin (V274 = (V272(V273))), case V274 of {'Prelude.Types.Left', V275} -> {'Prelude.Types.Left', V275}; {'Prelude.Types.Right', V276} -> (begin (V288 = ((begin (V285 = fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> ('dn--un--reify_Reify_ImpClause'(V281, V282, V283, V284)) end end end end, V277, V278, V279, V280)) end end end end), fun (V286) -> fun (V287) -> ((((V285(V0))(V1))(V286))(V287)) end end end(V2))(V276))), V288 end(V273)) end end end end), fun (V290) -> begin (V291 = (V289(V290))), case V291 of {'Prelude.Types.Left', V292} -> {'Prelude.Types.Left', V292}; {'Prelude.Types.Right', V293} -> (begin (V295 = fun (V294) -> {'Prelude.Types.Right', {'TTImp.TTImp.IDef', V260, V271, V293}} end), V295 end(V290)) end end end end), V296 end(V268)) end end end end), V297 end(V257)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E22, E23)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E20, E21)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E18, E19)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"IParameters"/utf8>> -> case ((begin (V303 = fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V301, V302)) end end end end), fun (V304) -> fun (V305) -> ((((V303('erased'))('erased'))(V304))(V305)) end end end(fun (V298) -> ('Idris.Idris2.Builtin':'un--snd'(V298)) end))(V8)) of [E24 | E25] -> (fun (V306, V307) -> case V307 of [E26 | E27] -> (fun (V308, V309) -> case V309 of [E28 | E29] -> (fun (V310, V311) -> case V311 of [] -> begin (V318 = begin (V312 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V306))), fun (V313) -> begin (V314 = (V312(V313))), case V314 of {'Prelude.Types.Left', V315} -> {'Prelude.Types.Left', V315}; {'Prelude.Types.Right', V316} -> (begin (V317 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V316))), V317 end(V313)) end end end end), fun (V319) -> begin (V320 = (V318(V319))), case V320 of {'Prelude.Types.Left', V321} -> {'Prelude.Types.Left', V321}; {'Prelude.Types.Right', V322} -> (begin (V398 = begin (V368 = begin (V323 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V308))), fun (V324) -> begin (V325 = (V323(V324))), case V325 of {'Prelude.Types.Left', V326} -> {'Prelude.Types.Left', V326}; {'Prelude.Types.Right', V327} -> (begin (V367 = ((begin (V364 = fun (V328) -> fun (V329) -> fun (V330) -> fun (V331) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V332) -> fun (V333) -> fun (V334) -> fun (V335) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V336) -> fun (V337) -> fun (V338) -> fun (V339) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V336, V337, V338, V339)) end end end end, fun (V340) -> fun (V341) -> fun (V342) -> fun (V343) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V344, V345, V346, V347)) end end end end, fun (V348) -> fun (V349) -> fun (V350) -> fun (V351) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V352) -> fun (V353) -> fun (V354) -> fun (V355) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V356) -> fun (V357) -> fun (V358) -> fun (V359) -> ('dn--un--reify_Reify_RawImp'(V356, V357, V358, V359)) end end end end, V352, V353, V354, V355)) end end end end, fun (V360) -> fun (V361) -> fun (V362) -> fun (V363) -> ('dn--un--reify_Reify_RawImp'(V360, V361, V362, V363)) end end end end}, V348, V349, V350, V351)) end end end end}, V340, V341, V342, V343)) end end end end}, V332, V333, V334, V335)) end end end end, V328, V329, V330, V331)) end end end end), fun (V365) -> fun (V366) -> ((((V364(V0))(V1))(V365))(V366)) end end end(V2))(V327))), V367 end(V324)) end end end end), fun (V369) -> begin (V370 = (V368(V369))), case V370 of {'Prelude.Types.Left', V371} -> {'Prelude.Types.Left', V371}; {'Prelude.Types.Right', V372} -> (begin (V397 = begin (V390 = begin (V373 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V310))), fun (V374) -> begin (V375 = (V373(V374))), case V375 of {'Prelude.Types.Left', V376} -> {'Prelude.Types.Left', V376}; {'Prelude.Types.Right', V377} -> (begin (V389 = ((begin (V386 = fun (V378) -> fun (V379) -> fun (V380) -> fun (V381) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> ('dn--un--reify_Reify_ImpDecl'(V382, V383, V384, V385)) end end end end, V378, V379, V380, V381)) end end end end), fun (V387) -> fun (V388) -> ((((V386(V0))(V1))(V387))(V388)) end end end(V2))(V377))), V389 end(V374)) end end end end), fun (V391) -> begin (V392 = (V390(V391))), case V392 of {'Prelude.Types.Left', V393} -> {'Prelude.Types.Left', V393}; {'Prelude.Types.Right', V394} -> (begin (V396 = fun (V395) -> {'Prelude.Types.Right', {'TTImp.TTImp.IParameters', V322, V372, V394}} end), V396 end(V391)) end end end end), V397 end(V369)) end end end end), V398 end(V319)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E28, E29)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E26, E27)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E24, E25)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"IRecord"/utf8>> -> case ((begin (V404 = fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V402, V403)) end end end end), fun (V405) -> fun (V406) -> ((((V404('erased'))('erased'))(V405))(V406)) end end end(fun (V399) -> ('Idris.Idris2.Builtin':'un--snd'(V399)) end))(V8)) of [E30 | E31] -> (fun (V407, V408) -> case V408 of [E32 | E33] -> (fun (V409, V410) -> case V410 of [E34 | E35] -> (fun (V411, V412) -> case V412 of [E36 | E37] -> (fun (V413, V414) -> case V414 of [E38 | E39] -> (fun (V415, V416) -> case V416 of [] -> begin (V423 = begin (V417 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V407))), fun (V418) -> begin (V419 = (V417(V418))), case V419 of {'Prelude.Types.Left', V420} -> {'Prelude.Types.Left', V420}; {'Prelude.Types.Right', V421} -> (begin (V422 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V421))), V422 end(V418)) end end end end), fun (V424) -> begin (V425 = (V423(V424))), case V425 of {'Prelude.Types.Left', V426} -> {'Prelude.Types.Left', V426}; {'Prelude.Types.Right', V427} -> (begin (V506 = begin (V445 = begin (V428 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V409))), fun (V429) -> begin (V430 = (V428(V429))), case V430 of {'Prelude.Types.Left', V431} -> {'Prelude.Types.Left', V431}; {'Prelude.Types.Right', V432} -> (begin (V444 = ((begin (V441 = fun (V433) -> fun (V434) -> fun (V435) -> fun (V436) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V437) -> fun (V438) -> fun (V439) -> fun (V440) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V437, V438, V439, V440)) end end end end, V433, V434, V435, V436)) end end end end), fun (V442) -> fun (V443) -> ((((V441(V0))(V1))(V442))(V443)) end end end(V2))(V432))), V444 end(V429)) end end end end), fun (V446) -> begin (V447 = (V445(V446))), case V447 of {'Prelude.Types.Left', V448} -> {'Prelude.Types.Left', V448}; {'Prelude.Types.Right', V449} -> (begin (V505 = begin (V456 = begin (V450 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V411))), fun (V451) -> begin (V452 = (V450(V451))), case V452 of {'Prelude.Types.Left', V453} -> {'Prelude.Types.Left', V453}; {'Prelude.Types.Right', V454} -> (begin (V455 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V454))), V455 end(V451)) end end end end), fun (V457) -> begin (V458 = (V456(V457))), case V458 of {'Prelude.Types.Left', V459} -> {'Prelude.Types.Left', V459}; {'Prelude.Types.Right', V460} -> (begin (V504 = begin (V478 = begin (V461 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V413))), fun (V462) -> begin (V463 = (V461(V462))), case V463 of {'Prelude.Types.Left', V464} -> {'Prelude.Types.Left', V464}; {'Prelude.Types.Right', V465} -> (begin (V477 = ((begin (V474 = fun (V466) -> fun (V467) -> fun (V468) -> fun (V469) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V470) -> fun (V471) -> fun (V472) -> fun (V473) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_TotalReq'(V470, V471, V472, V473)) end end end end, V466, V467, V468, V469)) end end end end), fun (V475) -> fun (V476) -> ((((V474(V0))(V1))(V475))(V476)) end end end(V2))(V465))), V477 end(V462)) end end end end), fun (V479) -> begin (V480 = (V478(V479))), case V480 of {'Prelude.Types.Left', V481} -> {'Prelude.Types.Left', V481}; {'Prelude.Types.Right', V482} -> (begin (V503 = begin (V496 = begin (V483 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V415))), fun (V484) -> begin (V485 = (V483(V484))), case V485 of {'Prelude.Types.Left', V486} -> {'Prelude.Types.Left', V486}; {'Prelude.Types.Right', V487} -> (begin (V495 = ((begin (V492 = fun (V488) -> fun (V489) -> fun (V490) -> fun (V491) -> ('dn--un--reify_Reify_ImpRecord'(V488, V489, V490, V491)) end end end end), fun (V493) -> fun (V494) -> ((((V492(V0))(V1))(V493))(V494)) end end end(V2))(V487))), V495 end(V484)) end end end end), fun (V497) -> begin (V498 = (V496(V497))), case V498 of {'Prelude.Types.Left', V499} -> {'Prelude.Types.Left', V499}; {'Prelude.Types.Right', V500} -> (begin (V502 = fun (V501) -> {'Prelude.Types.Right', {'TTImp.TTImp.IRecord', V427, V449, V460, V482, V500}} end), V502 end(V497)) end end end end), V503 end(V479)) end end end end), V504 end(V457)) end end end end), V505 end(V446)) end end end end), V506 end(V424)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E38, E39)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E36, E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E34, E35)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E32, E33)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E30, E31)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"IFail"/utf8>> -> case ((begin (V512 = fun (V508) -> fun (V509) -> fun (V510) -> fun (V511) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V510, V511)) end end end end), fun (V513) -> fun (V514) -> ((((V512('erased'))('erased'))(V513))(V514)) end end end(fun (V507) -> ('Idris.Idris2.Builtin':'un--snd'(V507)) end))(V8)) of [E40 | E41] -> (fun (V515, V516) -> case V516 of [E42 | E43] -> (fun (V517, V518) -> case V518 of [E44 | E45] -> (fun (V519, V520) -> case V520 of [] -> begin (V527 = begin (V521 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V515))), fun (V522) -> begin (V523 = (V521(V522))), case V523 of {'Prelude.Types.Left', V524} -> {'Prelude.Types.Left', V524}; {'Prelude.Types.Right', V525} -> (begin (V526 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V525))), V526 end(V522)) end end end end), fun (V528) -> begin (V529 = (V527(V528))), case V529 of {'Prelude.Types.Left', V530} -> {'Prelude.Types.Left', V530}; {'Prelude.Types.Right', V531} -> (begin (V579 = begin (V549 = begin (V532 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V517))), fun (V533) -> begin (V534 = (V532(V533))), case V534 of {'Prelude.Types.Left', V535} -> {'Prelude.Types.Left', V535}; {'Prelude.Types.Right', V536} -> (begin (V548 = ((begin (V545 = fun (V537) -> fun (V538) -> fun (V539) -> fun (V540) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V541) -> fun (V542) -> fun (V543) -> fun (V544) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V541, V542, V543, V544)) end end end end, V537, V538, V539, V540)) end end end end), fun (V546) -> fun (V547) -> ((((V545(V0))(V1))(V546))(V547)) end end end(V2))(V536))), V548 end(V533)) end end end end), fun (V550) -> begin (V551 = (V549(V550))), case V551 of {'Prelude.Types.Left', V552} -> {'Prelude.Types.Left', V552}; {'Prelude.Types.Right', V553} -> (begin (V578 = begin (V571 = begin (V554 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V519))), fun (V555) -> begin (V556 = (V554(V555))), case V556 of {'Prelude.Types.Left', V557} -> {'Prelude.Types.Left', V557}; {'Prelude.Types.Right', V558} -> (begin (V570 = ((begin (V567 = fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V563) -> fun (V564) -> fun (V565) -> fun (V566) -> ('dn--un--reify_Reify_ImpDecl'(V563, V564, V565, V566)) end end end end, V559, V560, V561, V562)) end end end end), fun (V568) -> fun (V569) -> ((((V567(V0))(V1))(V568))(V569)) end end end(V2))(V558))), V570 end(V555)) end end end end), fun (V572) -> begin (V573 = (V571(V572))), case V573 of {'Prelude.Types.Left', V574} -> {'Prelude.Types.Left', V574}; {'Prelude.Types.Right', V575} -> (begin (V577 = fun (V576) -> {'Prelude.Types.Right', {'TTImp.TTImp.IFail', V531, V553, V575}} end), V577 end(V572)) end end end end), V578 end(V550)) end end end end), V579 end(V528)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E44, E45)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E42, E43)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E40, E41)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"INamespace"/utf8>> -> case ((begin (V585 = fun (V581) -> fun (V582) -> fun (V583) -> fun (V584) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V583, V584)) end end end end), fun (V586) -> fun (V587) -> ((((V585('erased'))('erased'))(V586))(V587)) end end end(fun (V580) -> ('Idris.Idris2.Builtin':'un--snd'(V580)) end))(V8)) of [E46 | E47] -> (fun (V588, V589) -> case V589 of [E48 | E49] -> (fun (V590, V591) -> case V591 of [E50 | E51] -> (fun (V592, V593) -> case V593 of [] -> begin (V600 = begin (V594 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V588))), fun (V595) -> begin (V596 = (V594(V595))), case V596 of {'Prelude.Types.Left', V597} -> {'Prelude.Types.Left', V597}; {'Prelude.Types.Right', V598} -> (begin (V599 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V598))), V599 end(V595)) end end end end), fun (V601) -> begin (V602 = (V600(V601))), case V602 of {'Prelude.Types.Left', V603} -> {'Prelude.Types.Left', V603}; {'Prelude.Types.Right', V604} -> (begin (V641 = begin (V611 = begin (V605 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V590))), fun (V606) -> begin (V607 = (V605(V606))), case V607 of {'Prelude.Types.Left', V608} -> {'Prelude.Types.Left', V608}; {'Prelude.Types.Right', V609} -> (begin (V610 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Namespace'(V0, V1, V2, V609))), V610 end(V606)) end end end end), fun (V612) -> begin (V613 = (V611(V612))), case V613 of {'Prelude.Types.Left', V614} -> {'Prelude.Types.Left', V614}; {'Prelude.Types.Right', V615} -> (begin (V640 = begin (V633 = begin (V616 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V592))), fun (V617) -> begin (V618 = (V616(V617))), case V618 of {'Prelude.Types.Left', V619} -> {'Prelude.Types.Left', V619}; {'Prelude.Types.Right', V620} -> (begin (V632 = ((begin (V629 = fun (V621) -> fun (V622) -> fun (V623) -> fun (V624) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V625) -> fun (V626) -> fun (V627) -> fun (V628) -> ('dn--un--reify_Reify_ImpDecl'(V625, V626, V627, V628)) end end end end, V621, V622, V623, V624)) end end end end), fun (V630) -> fun (V631) -> ((((V629(V0))(V1))(V630))(V631)) end end end(V2))(V620))), V632 end(V617)) end end end end), fun (V634) -> begin (V635 = (V633(V634))), case V635 of {'Prelude.Types.Left', V636} -> {'Prelude.Types.Left', V636}; {'Prelude.Types.Right', V637} -> (begin (V639 = fun (V638) -> {'Prelude.Types.Right', {'TTImp.TTImp.INamespace', V604, V615, V637}} end), V639 end(V634)) end end end end), V640 end(V612)) end end end end), V641 end(V601)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E50, E51)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E48, E49)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E46, E47)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"ITransform"/utf8>> -> case ((begin (V647 = fun (V643) -> fun (V644) -> fun (V645) -> fun (V646) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V645, V646)) end end end end), fun (V648) -> fun (V649) -> ((((V647('erased'))('erased'))(V648))(V649)) end end end(fun (V642) -> ('Idris.Idris2.Builtin':'un--snd'(V642)) end))(V8)) of [E52 | E53] -> (fun (V650, V651) -> case V651 of [E54 | E55] -> (fun (V652, V653) -> case V653 of [E56 | E57] -> (fun (V654, V655) -> case V655 of [E58 | E59] -> (fun (V656, V657) -> case V657 of [] -> begin (V664 = begin (V658 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V650))), fun (V659) -> begin (V660 = (V658(V659))), case V660 of {'Prelude.Types.Left', V661} -> {'Prelude.Types.Left', V661}; {'Prelude.Types.Right', V662} -> (begin (V663 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V662))), V663 end(V659)) end end end end), fun (V665) -> begin (V666 = (V664(V665))), case V666 of {'Prelude.Types.Left', V667} -> {'Prelude.Types.Left', V667}; {'Prelude.Types.Right', V668} -> (begin (V720 = begin (V675 = begin (V669 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V652))), fun (V670) -> begin (V671 = (V669(V670))), case V671 of {'Prelude.Types.Left', V672} -> {'Prelude.Types.Left', V672}; {'Prelude.Types.Right', V673} -> (begin (V674 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V673))), V674 end(V670)) end end end end), fun (V676) -> begin (V677 = (V675(V676))), case V677 of {'Prelude.Types.Left', V678} -> {'Prelude.Types.Left', V678}; {'Prelude.Types.Right', V679} -> (begin (V719 = begin (V693 = begin (V680 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V654))), fun (V681) -> begin (V682 = (V680(V681))), case V682 of {'Prelude.Types.Left', V683} -> {'Prelude.Types.Left', V683}; {'Prelude.Types.Right', V684} -> (begin (V692 = ((begin (V689 = fun (V685) -> fun (V686) -> fun (V687) -> fun (V688) -> ('dn--un--reify_Reify_RawImp'(V685, V686, V687, V688)) end end end end), fun (V690) -> fun (V691) -> ((((V689(V0))(V1))(V690))(V691)) end end end(V2))(V684))), V692 end(V681)) end end end end), fun (V694) -> begin (V695 = (V693(V694))), case V695 of {'Prelude.Types.Left', V696} -> {'Prelude.Types.Left', V696}; {'Prelude.Types.Right', V697} -> (begin (V718 = begin (V711 = begin (V698 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V656))), fun (V699) -> begin (V700 = (V698(V699))), case V700 of {'Prelude.Types.Left', V701} -> {'Prelude.Types.Left', V701}; {'Prelude.Types.Right', V702} -> (begin (V710 = ((begin (V707 = fun (V703) -> fun (V704) -> fun (V705) -> fun (V706) -> ('dn--un--reify_Reify_RawImp'(V703, V704, V705, V706)) end end end end), fun (V708) -> fun (V709) -> ((((V707(V0))(V1))(V708))(V709)) end end end(V2))(V702))), V710 end(V699)) end end end end), fun (V712) -> begin (V713 = (V711(V712))), case V713 of {'Prelude.Types.Left', V714} -> {'Prelude.Types.Left', V714}; {'Prelude.Types.Right', V715} -> (begin (V717 = fun (V716) -> {'Prelude.Types.Right', {'TTImp.TTImp.ITransform', V668, V679, V697, V715}} end), V717 end(V712)) end end end end), V718 end(V694)) end end end end), V719 end(V676)) end end end end), V720 end(V665)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E58, E59)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E56, E57)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E54, E55)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E52, E53)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; <<"ILog"/utf8>> -> case ((begin (V726 = fun (V722) -> fun (V723) -> fun (V724) -> fun (V725) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V724, V725)) end end end end), fun (V727) -> fun (V728) -> ((((V726('erased'))('erased'))(V727))(V728)) end end end(fun (V721) -> ('Idris.Idris2.Builtin':'un--snd'(V721)) end))(V8)) of [E60 | E61] -> (fun (V729, V730) -> case V730 of [] -> begin (V760 = begin (V731 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V729))), fun (V732) -> begin (V733 = (V731(V732))), case V733 of {'Prelude.Types.Left', V734} -> {'Prelude.Types.Left', V734}; {'Prelude.Types.Right', V735} -> (begin (V759 = ((begin (V756 = fun (V736) -> fun (V737) -> fun (V738) -> fun (V739) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V740) -> fun (V741) -> fun (V742) -> fun (V743) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V744) -> fun (V745) -> fun (V746) -> fun (V747) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V748) -> fun (V749) -> fun (V750) -> fun (V751) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V748, V749, V750, V751)) end end end end, V744, V745, V746, V747)) end end end end, fun (V752) -> fun (V753) -> fun (V754) -> fun (V755) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V752, V753, V754, V755)) end end end end}, V740, V741, V742, V743)) end end end end, V736, V737, V738, V739)) end end end end), fun (V757) -> fun (V758) -> ((((V756(V0))(V1))(V757))(V758)) end end end(V2))(V735))), V759 end(V732)) end end end end), fun (V761) -> begin (V762 = (V760(V761))), case V762 of {'Prelude.Types.Left', V763} -> {'Prelude.Types.Left', V763}; {'Prelude.Types.Right', V764} -> (begin (V766 = fun (V765) -> {'Prelude.Types.Right', {'TTImp.TTImp.ILog', V764}} end), V766 end(V761)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end(E60, E61)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Decl"/utf8>>)) end end), V767 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"Decl"/utf8>>)) end.
'dn--un--reify_Reify_ImpData'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V215 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"MkData"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [E0 | E1] -> (fun (V57, V58) -> case V58 of [E2 | E3] -> (fun (V59, V60) -> case V60 of [E4 | E5] -> (fun (V61, V62) -> case V62 of [E6 | E7] -> (fun (V63, V64) -> case V64 of [E8 | E9] -> (fun (V65, V66) -> case V66 of [] -> begin (V73 = begin (V67 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V57))), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V72 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V71))), V72 end(V68)) end end end end), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V156 = begin (V84 = begin (V78 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V83 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V82))), V83 end(V79)) end end end end), fun (V85) -> begin (V86 = (V84(V85))), case V86 of {'Prelude.Types.Left', V87} -> {'Prelude.Types.Left', V87}; {'Prelude.Types.Right', V88} -> (begin (V155 = begin (V102 = begin (V89 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V61))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V101 = ((begin (V98 = fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('dn--un--reify_Reify_RawImp'(V94, V95, V96, V97)) end end end end), fun (V99) -> fun (V100) -> ((((V98(V0))(V1))(V99))(V100)) end end end(V2))(V93))), V101 end(V90)) end end end end), fun (V103) -> begin (V104 = (V102(V103))), case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> (begin (V154 = begin (V124 = begin (V107 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V63))), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V123 = ((begin (V120 = fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('dn--un--reify_Reify_DataOpt'(V116, V117, V118, V119)) end end end end, V112, V113, V114, V115)) end end end end), fun (V121) -> fun (V122) -> ((((V120(V0))(V1))(V121))(V122)) end end end(V2))(V111))), V123 end(V108)) end end end end), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V153 = begin (V146 = begin (V129 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V65))), fun (V130) -> begin (V131 = (V129(V130))), case V131 of {'Prelude.Types.Left', V132} -> {'Prelude.Types.Left', V132}; {'Prelude.Types.Right', V133} -> (begin (V145 = ((begin (V142 = fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> ('dn--un--reify_Reify_ImpTy'(V138, V139, V140, V141)) end end end end, V134, V135, V136, V137)) end end end end), fun (V143) -> fun (V144) -> ((((V142(V0))(V1))(V143))(V144)) end end end(V2))(V133))), V145 end(V130)) end end end end), fun (V147) -> begin (V148 = (V146(V147))), case V148 of {'Prelude.Types.Left', V149} -> {'Prelude.Types.Left', V149}; {'Prelude.Types.Right', V150} -> (begin (V152 = fun (V151) -> {'Prelude.Types.Right', {'TTImp.TTImp.MkImpData', V77, V88, V106, V128, V150}} end), V152 end(V147)) end end end end), V153 end(V125)) end end end end), V154 end(V103)) end end end end), V155 end(V85)) end end end end), V156 end(V74)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E8, E9)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end; <<"MkLater"/utf8>> -> case ((begin (V162 = fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V160, V161)) end end end end), fun (V163) -> fun (V164) -> ((((V162('erased'))('erased'))(V163))(V164)) end end end(fun (V157) -> ('Idris.Idris2.Builtin':'un--snd'(V157)) end))(V8)) of [E10 | E11] -> (fun (V165, V166) -> case V166 of [E12 | E13] -> (fun (V167, V168) -> case V168 of [E14 | E15] -> (fun (V169, V170) -> case V170 of [] -> begin (V177 = begin (V171 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V165))), fun (V172) -> begin (V173 = (V171(V172))), case V173 of {'Prelude.Types.Left', V174} -> {'Prelude.Types.Left', V174}; {'Prelude.Types.Right', V175} -> (begin (V176 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V175))), V176 end(V172)) end end end end), fun (V178) -> begin (V179 = (V177(V178))), case V179 of {'Prelude.Types.Left', V180} -> {'Prelude.Types.Left', V180}; {'Prelude.Types.Right', V181} -> (begin (V214 = begin (V188 = begin (V182 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V167))), fun (V183) -> begin (V184 = (V182(V183))), case V184 of {'Prelude.Types.Left', V185} -> {'Prelude.Types.Left', V185}; {'Prelude.Types.Right', V186} -> (begin (V187 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V186))), V187 end(V183)) end end end end), fun (V189) -> begin (V190 = (V188(V189))), case V190 of {'Prelude.Types.Left', V191} -> {'Prelude.Types.Left', V191}; {'Prelude.Types.Right', V192} -> (begin (V213 = begin (V206 = begin (V193 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V169))), fun (V194) -> begin (V195 = (V193(V194))), case V195 of {'Prelude.Types.Left', V196} -> {'Prelude.Types.Left', V196}; {'Prelude.Types.Right', V197} -> (begin (V205 = ((begin (V202 = fun (V198) -> fun (V199) -> fun (V200) -> fun (V201) -> ('dn--un--reify_Reify_RawImp'(V198, V199, V200, V201)) end end end end), fun (V203) -> fun (V204) -> ((((V202(V0))(V1))(V203))(V204)) end end end(V2))(V197))), V205 end(V194)) end end end end), fun (V207) -> begin (V208 = (V206(V207))), case V208 of {'Prelude.Types.Left', V209} -> {'Prelude.Types.Left', V209}; {'Prelude.Types.Right', V210} -> (begin (V212 = fun (V211) -> {'Prelude.Types.Right', {'TTImp.TTImp.MkImpLater', V181, V192, V210}} end), V212 end(V207)) end end end end), V213 end(V189)) end end end end), V214 end(V178)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E14, E15)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E12, E13)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end(E10, E11)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Data"/utf8>>)) end end), V215 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"Data"/utf8>>)) end.
'dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V319 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"PatClause"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [E0 | E1] -> (fun (V57, V58) -> case V58 of [E2 | E3] -> (fun (V59, V60) -> case V60 of [E4 | E5] -> (fun (V61, V62) -> case V62 of [] -> begin (V69 = begin (V63 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V57))), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V68 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V67))), V68 end(V64)) end end end end), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V113 = begin (V87 = begin (V74 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))), fun (V75) -> begin (V76 = (V74(V75))), case V76 of {'Prelude.Types.Left', V77} -> {'Prelude.Types.Left', V77}; {'Prelude.Types.Right', V78} -> (begin (V86 = ((begin (V83 = fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('dn--un--reify_Reify_RawImp'(V79, V80, V81, V82)) end end end end), fun (V84) -> fun (V85) -> ((((V83(V0))(V1))(V84))(V85)) end end end(V2))(V78))), V86 end(V75)) end end end end), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V112 = begin (V105 = begin (V92 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V61))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V104 = ((begin (V101 = fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('dn--un--reify_Reify_RawImp'(V97, V98, V99, V100)) end end end end), fun (V102) -> fun (V103) -> ((((V101(V0))(V1))(V102))(V103)) end end end(V2))(V96))), V104 end(V93)) end end end end), fun (V106) -> begin (V107 = (V105(V106))), case V107 of {'Prelude.Types.Left', V108} -> {'Prelude.Types.Left', V108}; {'Prelude.Types.Right', V109} -> (begin (V111 = fun (V110) -> {'Prelude.Types.Right', {'TTImp.TTImp.PatClause', V73, V91, V109}} end), V111 end(V106)) end end end end), V112 end(V88)) end end end end), V113 end(V70)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end; <<"WithClause"/utf8>> -> case ((begin (V119 = fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V117, V118)) end end end end), fun (V120) -> fun (V121) -> ((((V119('erased'))('erased'))(V120))(V121)) end end end(fun (V114) -> ('Idris.Idris2.Builtin':'un--snd'(V114)) end))(V8)) of [E6 | E7] -> (fun (V122, V123) -> case V123 of [E8 | E9] -> (fun (V124, V125) -> case V125 of [E10 | E11] -> (fun (V126, V127) -> case V127 of [E12 | E13] -> (fun (V128, V129) -> case V129 of [E14 | E15] -> (fun (V130, V131) -> case V131 of [E16 | E17] -> (fun (V132, V133) -> case V133 of [E18 | E19] -> (fun (V134, V135) -> case V135 of [] -> begin (V142 = begin (V136 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V122))), fun (V137) -> begin (V138 = (V136(V137))), case V138 of {'Prelude.Types.Left', V139} -> {'Prelude.Types.Left', V139}; {'Prelude.Types.Right', V140} -> (begin (V141 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V140))), V141 end(V137)) end end end end), fun (V143) -> begin (V144 = (V142(V143))), case V144 of {'Prelude.Types.Left', V145} -> {'Prelude.Types.Left', V145}; {'Prelude.Types.Right', V146} -> (begin (V274 = begin (V160 = begin (V147 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V124))), fun (V148) -> begin (V149 = (V147(V148))), case V149 of {'Prelude.Types.Left', V150} -> {'Prelude.Types.Left', V150}; {'Prelude.Types.Right', V151} -> (begin (V159 = ((begin (V156 = fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> ('dn--un--reify_Reify_RawImp'(V152, V153, V154, V155)) end end end end), fun (V157) -> fun (V158) -> ((((V156(V0))(V1))(V157))(V158)) end end end(V2))(V151))), V159 end(V148)) end end end end), fun (V161) -> begin (V162 = (V160(V161))), case V162 of {'Prelude.Types.Left', V163} -> {'Prelude.Types.Left', V163}; {'Prelude.Types.Right', V164} -> (begin (V273 = begin (V178 = begin (V165 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V126))), fun (V166) -> begin (V167 = (V165(V166))), case V167 of {'Prelude.Types.Left', V168} -> {'Prelude.Types.Left', V168}; {'Prelude.Types.Right', V169} -> (begin (V177 = ((begin (V174 = fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V170, V171, V172, V173)) end end end end), fun (V175) -> fun (V176) -> ((((V174(V0))(V1))(V175))(V176)) end end end(V2))(V169))), V177 end(V166)) end end end end), fun (V179) -> begin (V180 = (V178(V179))), case V180 of {'Prelude.Types.Left', V181} -> {'Prelude.Types.Left', V181}; {'Prelude.Types.Right', V182} -> (begin (V272 = begin (V196 = begin (V183 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V128))), fun (V184) -> begin (V185 = (V183(V184))), case V185 of {'Prelude.Types.Left', V186} -> {'Prelude.Types.Left', V186}; {'Prelude.Types.Right', V187} -> (begin (V195 = ((begin (V192 = fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> ('dn--un--reify_Reify_RawImp'(V188, V189, V190, V191)) end end end end), fun (V193) -> fun (V194) -> ((((V192(V0))(V1))(V193))(V194)) end end end(V2))(V187))), V195 end(V184)) end end end end), fun (V197) -> begin (V198 = (V196(V197))), case V198 of {'Prelude.Types.Left', V199} -> {'Prelude.Types.Left', V199}; {'Prelude.Types.Right', V200} -> (begin (V271 = begin (V218 = begin (V201 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V130))), fun (V202) -> begin (V203 = (V201(V202))), case V203 of {'Prelude.Types.Left', V204} -> {'Prelude.Types.Left', V204}; {'Prelude.Types.Right', V205} -> (begin (V217 = ((begin (V214 = fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V210, V211, V212, V213)) end end end end, V206, V207, V208, V209)) end end end end), fun (V215) -> fun (V216) -> ((((V214(V0))(V1))(V215))(V216)) end end end(V2))(V205))), V217 end(V202)) end end end end), fun (V219) -> begin (V220 = (V218(V219))), case V220 of {'Prelude.Types.Left', V221} -> {'Prelude.Types.Left', V221}; {'Prelude.Types.Right', V222} -> (begin (V270 = begin (V240 = begin (V223 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V132))), fun (V224) -> begin (V225 = (V223(V224))), case V225 of {'Prelude.Types.Left', V226} -> {'Prelude.Types.Left', V226}; {'Prelude.Types.Right', V227} -> (begin (V239 = ((begin (V236 = fun (V228) -> fun (V229) -> fun (V230) -> fun (V231) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> ('dn--un--reify_Reify_WithFlag'(V232, V233, V234, V235)) end end end end, V228, V229, V230, V231)) end end end end), fun (V237) -> fun (V238) -> ((((V236(V0))(V1))(V237))(V238)) end end end(V2))(V227))), V239 end(V224)) end end end end), fun (V241) -> begin (V242 = (V240(V241))), case V242 of {'Prelude.Types.Left', V243} -> {'Prelude.Types.Left', V243}; {'Prelude.Types.Right', V244} -> (begin (V269 = begin (V262 = begin (V245 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V134))), fun (V246) -> begin (V247 = (V245(V246))), case V247 of {'Prelude.Types.Left', V248} -> {'Prelude.Types.Left', V248}; {'Prelude.Types.Right', V249} -> (begin (V261 = ((begin (V258 = fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> ('dn--un--reify_Reify_ImpClause'(V254, V255, V256, V257)) end end end end, V250, V251, V252, V253)) end end end end), fun (V259) -> fun (V260) -> ((((V258(V0))(V1))(V259))(V260)) end end end(V2))(V249))), V261 end(V246)) end end end end), fun (V263) -> begin (V264 = (V262(V263))), case V264 of {'Prelude.Types.Left', V265} -> {'Prelude.Types.Left', V265}; {'Prelude.Types.Right', V266} -> (begin (V268 = fun (V267) -> {'Prelude.Types.Right', {'TTImp.TTImp.WithClause', V146, V164, V182, V200, V222, V244, V266}} end), V268 end(V263)) end end end end), V269 end(V241)) end end end end), V270 end(V219)) end end end end), V271 end(V197)) end end end end), V272 end(V179)) end end end end), V273 end(V161)) end end end end), V274 end(V143)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E18, E19)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E16, E17)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E14, E15)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E12, E13)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E10, E11)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E8, E9)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end; <<"ImpossibleClause"/utf8>> -> case ((begin (V280 = fun (V276) -> fun (V277) -> fun (V278) -> fun (V279) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V278, V279)) end end end end), fun (V281) -> fun (V282) -> ((((V280('erased'))('erased'))(V281))(V282)) end end end(fun (V275) -> ('Idris.Idris2.Builtin':'un--snd'(V275)) end))(V8)) of [E20 | E21] -> (fun (V283, V284) -> case V284 of [E22 | E23] -> (fun (V285, V286) -> case V286 of [] -> begin (V293 = begin (V287 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V283))), fun (V288) -> begin (V289 = (V287(V288))), case V289 of {'Prelude.Types.Left', V290} -> {'Prelude.Types.Left', V290}; {'Prelude.Types.Right', V291} -> (begin (V292 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V291))), V292 end(V288)) end end end end), fun (V294) -> begin (V295 = (V293(V294))), case V295 of {'Prelude.Types.Left', V296} -> {'Prelude.Types.Left', V296}; {'Prelude.Types.Right', V297} -> (begin (V318 = begin (V311 = begin (V298 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V285))), fun (V299) -> begin (V300 = (V298(V299))), case V300 of {'Prelude.Types.Left', V301} -> {'Prelude.Types.Left', V301}; {'Prelude.Types.Right', V302} -> (begin (V310 = ((begin (V307 = fun (V303) -> fun (V304) -> fun (V305) -> fun (V306) -> ('dn--un--reify_Reify_RawImp'(V303, V304, V305, V306)) end end end end), fun (V308) -> fun (V309) -> ((((V307(V0))(V1))(V308))(V309)) end end end(V2))(V302))), V310 end(V299)) end end end end), fun (V312) -> begin (V313 = (V311(V312))), case V313 of {'Prelude.Types.Left', V314} -> {'Prelude.Types.Left', V314}; {'Prelude.Types.Right', V315} -> (begin (V317 = fun (V316) -> {'Prelude.Types.Right', {'TTImp.TTImp.ImpossibleClause', V297, V315}} end), V317 end(V312)) end end end end), V318 end(V294)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E22, E23)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end(E20, E21)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"Clause"/utf8>>)) end end), V319 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"Clause"/utf8>>)) end.
'dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V151 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"ISetField"/utf8>> -> case V8 of [E0 | E1] -> (fun (V49, V50) -> case V49 of {'Builtin.MkPair', V51, V52} -> case V50 of [E2 | E3] -> (fun (V53, V54) -> case V53 of {'Builtin.MkPair', V55, V56} -> case V54 of [] -> begin (V74 = begin (V57 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V52))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V73 = ((begin (V70 = fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V66, V67, V68, V69)) end end end end, V62, V63, V64, V65)) end end end end), fun (V71) -> fun (V72) -> ((((V70(V0))(V1))(V71))(V72)) end end end(V2))(V61))), V73 end(V58)) end end end end), fun (V75) -> begin (V76 = (V74(V75))), case V76 of {'Prelude.Types.Left', V77} -> {'Prelude.Types.Left', V77}; {'Prelude.Types.Right', V78} -> (begin (V99 = begin (V92 = begin (V79 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V56))), fun (V80) -> begin (V81 = (V79(V80))), case V81 of {'Prelude.Types.Left', V82} -> {'Prelude.Types.Left', V82}; {'Prelude.Types.Right', V83} -> (begin (V91 = ((begin (V88 = fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> ('dn--un--reify_Reify_RawImp'(V84, V85, V86, V87)) end end end end), fun (V89) -> fun (V90) -> ((((V88(V0))(V1))(V89))(V90)) end end end(V2))(V83))), V91 end(V80)) end end end end), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V98 = fun (V97) -> {'Prelude.Types.Right', {'TTImp.TTImp.ISetField', V78, V96}} end), V98 end(V93)) end end end end), V99 end(V75)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; <<"ISetFieldApp"/utf8>> -> case V8 of [E4 | E5] -> (fun (V100, V101) -> case V100 of {'Builtin.MkPair', V102, V103} -> case V101 of [E6 | E7] -> (fun (V104, V105) -> case V104 of {'Builtin.MkPair', V106, V107} -> case V105 of [] -> begin (V125 = begin (V108 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V103))), fun (V109) -> begin (V110 = (V108(V109))), case V110 of {'Prelude.Types.Left', V111} -> {'Prelude.Types.Left', V111}; {'Prelude.Types.Right', V112} -> (begin (V124 = ((begin (V121 = fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V117, V118, V119, V120)) end end end end, V113, V114, V115, V116)) end end end end), fun (V122) -> fun (V123) -> ((((V121(V0))(V1))(V122))(V123)) end end end(V2))(V112))), V124 end(V109)) end end end end), fun (V126) -> begin (V127 = (V125(V126))), case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> (begin (V150 = begin (V143 = begin (V130 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V107))), fun (V131) -> begin (V132 = (V130(V131))), case V132 of {'Prelude.Types.Left', V133} -> {'Prelude.Types.Left', V133}; {'Prelude.Types.Right', V134} -> (begin (V142 = ((begin (V139 = fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> ('dn--un--reify_Reify_RawImp'(V135, V136, V137, V138)) end end end end), fun (V140) -> fun (V141) -> ((((V139(V0))(V1))(V140))(V141)) end end end(V2))(V134))), V142 end(V131)) end end end end), fun (V144) -> begin (V145 = (V143(V144))), case V145 of {'Prelude.Types.Left', V146} -> {'Prelude.Types.Left', V146}; {'Prelude.Types.Right', V147} -> (begin (V149 = fun (V148) -> {'Prelude.Types.Right', {'TTImp.TTImp.ISetFieldApp', V129, V147}} end), V149 end(V144)) end end end end), V150 end(V126)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IFieldUpdate"/utf8>>)) end end), V151 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"IFieldUpdate"/utf8>>)) end.
'dn--un--reify_Reify_IField'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V153 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"MkIField"/utf8>> -> case ((begin (V54 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V52, V53)) end end end end), fun (V55) -> fun (V56) -> ((((V54('erased'))('erased'))(V55))(V56)) end end end(fun (V49) -> ('Idris.Idris2.Builtin':'un--snd'(V49)) end))(V8)) of [E0 | E1] -> (fun (V57, V58) -> case V58 of [E2 | E3] -> (fun (V59, V60) -> case V60 of [E4 | E5] -> (fun (V61, V62) -> case V62 of [E6 | E7] -> (fun (V63, V64) -> case V64 of [E8 | E9] -> (fun (V65, V66) -> case V66 of [] -> begin (V73 = begin (V67 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V57))), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V72 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V71))), V72 end(V68)) end end end end), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V152 = begin (V91 = begin (V78 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))), fun (V79) -> begin (V80 = (V78(V79))), case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> (begin (V90 = ((begin (V87 = fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V83, V84, V85, V86)) end end end end), fun (V88) -> fun (V89) -> ((((V87(V0))(V1))(V88))(V89)) end end end(V2))(V82))), V90 end(V79)) end end end end), fun (V92) -> begin (V93 = (V91(V92))), case V93 of {'Prelude.Types.Left', V94} -> {'Prelude.Types.Left', V94}; {'Prelude.Types.Right', V95} -> (begin (V151 = begin (V113 = begin (V96 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V61))), fun (V97) -> begin (V98 = (V96(V97))), case V98 of {'Prelude.Types.Left', V99} -> {'Prelude.Types.Left', V99}; {'Prelude.Types.Right', V100} -> (begin (V112 = ((begin (V109 = fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> ('dn--un--reify_Reify_RawImp'(V105, V106, V107, V108)) end end end end, V101, V102, V103, V104)) end end end end), fun (V110) -> fun (V111) -> ((((V109(V0))(V1))(V110))(V111)) end end end(V2))(V100))), V112 end(V97)) end end end end), fun (V114) -> begin (V115 = (V113(V114))), case V115 of {'Prelude.Types.Left', V116} -> {'Prelude.Types.Left', V116}; {'Prelude.Types.Right', V117} -> (begin (V150 = begin (V124 = begin (V118 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V63))), fun (V119) -> begin (V120 = (V118(V119))), case V120 of {'Prelude.Types.Left', V121} -> {'Prelude.Types.Left', V121}; {'Prelude.Types.Right', V122} -> (begin (V123 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V122))), V123 end(V119)) end end end end), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V149 = begin (V142 = begin (V129 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V65))), fun (V130) -> begin (V131 = (V129(V130))), case V131 of {'Prelude.Types.Left', V132} -> {'Prelude.Types.Left', V132}; {'Prelude.Types.Right', V133} -> (begin (V141 = ((begin (V138 = fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> ('dn--un--reify_Reify_RawImp'(V134, V135, V136, V137)) end end end end), fun (V139) -> fun (V140) -> ((((V138(V0))(V1))(V139))(V140)) end end end(V2))(V133))), V141 end(V130)) end end end end), fun (V143) -> begin (V144 = (V142(V143))), case V144 of {'Prelude.Types.Left', V145} -> {'Prelude.Types.Left', V145}; {'Prelude.Types.Right', V146} -> (begin (V148 = fun (V147) -> {'Prelude.Types.Right', {'TTImp.TTImp.MkIField', V77, V95, V117, V128, V146}} end), V148 end(V143)) end end end end), V149 end(V125)) end end end end), V150 end(V114)) end end end end), V151 end(V92)) end end end end), V152 end(V74)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end end(E8, E9)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"IField"/utf8>>)) end end), V153 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"IField"/utf8>>)) end.
'dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V191 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"Inline"/utf8>> -> fun (V49) -> {'Prelude.Types.Right', {'TTImp.TTImp.Inline'}} end; <<"NoInline"/utf8>> -> fun (V50) -> {'Prelude.Types.Right', {'TTImp.TTImp.NoInline'}} end; <<"Deprecate"/utf8>> -> fun (V51) -> {'Prelude.Types.Right', {'TTImp.TTImp.Deprecate'}} end; <<"TCInline"/utf8>> -> fun (V52) -> {'Prelude.Types.Right', {'TTImp.TTImp.TCInline'}} end; <<"Hint"/utf8>> -> case V8 of [E0 | E1] -> (fun (V53, V54) -> case V53 of {'Builtin.MkPair', V55, V56} -> case V54 of [] -> begin (V63 = begin (V57 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V56))), fun (V58) -> begin (V59 = (V57(V58))), case V59 of {'Prelude.Types.Left', V60} -> {'Prelude.Types.Left', V60}; {'Prelude.Types.Right', V61} -> (begin (V62 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V61))), V62 end(V58)) end end end end), fun (V64) -> begin (V65 = (V63(V64))), case V65 of {'Prelude.Types.Left', V66} -> {'Prelude.Types.Left', V66}; {'Prelude.Types.Right', V67} -> (begin (V69 = fun (V68) -> {'Prelude.Types.Right', {'TTImp.TTImp.Hint', V67}} end), V69 end(V64)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; <<"GlobalHint"/utf8>> -> case V8 of [E2 | E3] -> (fun (V70, V71) -> case V70 of {'Builtin.MkPair', V72, V73} -> case V71 of [] -> begin (V80 = begin (V74 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V73))), fun (V75) -> begin (V76 = (V74(V75))), case V76 of {'Prelude.Types.Left', V77} -> {'Prelude.Types.Left', V77}; {'Prelude.Types.Right', V78} -> (begin (V79 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V78))), V79 end(V75)) end end end end), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V86 = fun (V85) -> {'Prelude.Types.Right', {'TTImp.TTImp.GlobalHint', V84}} end), V86 end(V81)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end end(E2, E3)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; <<"ExternFn"/utf8>> -> fun (V87) -> {'Prelude.Types.Right', {'TTImp.TTImp.ExternFn'}} end; <<"ForeignFn"/utf8>> -> case V8 of [E4 | E5] -> (fun (V88, V89) -> case V88 of {'Builtin.MkPair', V90, V91} -> case V89 of [] -> begin (V109 = begin (V92 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V91))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V108 = ((begin (V105 = fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ('dn--un--reify_Reify_RawImp'(V101, V102, V103, V104)) end end end end, V97, V98, V99, V100)) end end end end), fun (V106) -> fun (V107) -> ((((V105(V0))(V1))(V106))(V107)) end end end(V2))(V96))), V108 end(V93)) end end end end), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V115 = fun (V114) -> {'Prelude.Types.Right', {'TTImp.TTImp.ForeignFn', V113}} end), V115 end(V110)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end end(E4, E5)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; <<"ForeignExport"/utf8>> -> case V8 of [E6 | E7] -> (fun (V116, V117) -> case V116 of {'Builtin.MkPair', V118, V119} -> case V117 of [] -> begin (V137 = begin (V120 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V119))), fun (V121) -> begin (V122 = (V120(V121))), case V122 of {'Prelude.Types.Left', V123} -> {'Prelude.Types.Left', V123}; {'Prelude.Types.Right', V124} -> (begin (V136 = ((begin (V133 = fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> ('dn--un--reify_Reify_RawImp'(V129, V130, V131, V132)) end end end end, V125, V126, V127, V128)) end end end end), fun (V134) -> fun (V135) -> ((((V133(V0))(V1))(V134))(V135)) end end end(V2))(V124))), V136 end(V121)) end end end end), fun (V138) -> begin (V139 = (V137(V138))), case V139 of {'Prelude.Types.Left', V140} -> {'Prelude.Types.Left', V140}; {'Prelude.Types.Right', V141} -> (begin (V143 = fun (V142) -> {'Prelude.Types.Right', {'TTImp.TTImp.ForeignExport', V141}} end), V143 end(V138)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; <<"Invertible"/utf8>> -> fun (V144) -> {'Prelude.Types.Right', {'TTImp.TTImp.Invertible'}} end; <<"Totality"/utf8>> -> case V8 of [E8 | E9] -> (fun (V145, V146) -> case V145 of {'Builtin.MkPair', V147, V148} -> case V146 of [] -> begin (V155 = begin (V149 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V148))), fun (V150) -> begin (V151 = (V149(V150))), case V151 of {'Prelude.Types.Left', V152} -> {'Prelude.Types.Left', V152}; {'Prelude.Types.Right', V153} -> (begin (V154 = ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_TotalReq'(V0, V1, V2, V153))), V154 end(V150)) end end end end), fun (V156) -> begin (V157 = (V155(V156))), case V157 of {'Prelude.Types.Left', V158} -> {'Prelude.Types.Left', V158}; {'Prelude.Types.Right', V159} -> (begin (V161 = fun (V160) -> {'Prelude.Types.Right', {'TTImp.TTImp.Totality', V159}} end), V161 end(V156)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end end(E8, E9)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; <<"Macro"/utf8>> -> fun (V162) -> {'Prelude.Types.Right', {'TTImp.TTImp.Macro'}} end; <<"SpecArgs"/utf8>> -> case V8 of [E10 | E11] -> (fun (V163, V164) -> case V163 of {'Builtin.MkPair', V165, V166} -> case V164 of [] -> begin (V184 = begin (V167 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V166))), fun (V168) -> begin (V169 = (V167(V168))), case V169 of {'Prelude.Types.Left', V170} -> {'Prelude.Types.Left', V170}; {'Prelude.Types.Right', V171} -> (begin (V183 = ((begin (V180 = fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V176, V177, V178, V179)) end end end end, V172, V173, V174, V175)) end end end end), fun (V181) -> fun (V182) -> ((((V180(V0))(V1))(V181))(V182)) end end end(V2))(V171))), V183 end(V168)) end end end end), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V190 = fun (V189) -> {'Prelude.Types.Right', {'TTImp.TTImp.SpecArgs', V188}} end), V190 end(V185)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end end(E10, E11)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"FnOpt"/utf8>>)) end end), V191 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"FnOpt"/utf8>>)) end.
'dn--un--reify_Reify_DotReason'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V56 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"NonLinearVar"/utf8>> -> fun (V49) -> {'Prelude.Types.Right', 0} end; <<"VarApplied"/utf8>> -> fun (V50) -> {'Prelude.Types.Right', 1} end; <<"NotConstructor"/utf8>> -> fun (V51) -> {'Prelude.Types.Right', 2} end; <<"ErasedArg"/utf8>> -> fun (V52) -> {'Prelude.Types.Right', 3} end; <<"UserDotted"/utf8>> -> fun (V53) -> {'Prelude.Types.Right', 4} end; <<"UnknownDot"/utf8>> -> fun (V54) -> {'Prelude.Types.Right', 5} end; <<"UnderAppliedCon"/utf8>> -> fun (V55) -> {'Prelude.Types.Right', 6} end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DotReason"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DotReason"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DotReason"/utf8>>)) end end), V56 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"DotReason"/utf8>>)) end.
'dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V82 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"SearchBy"/utf8>> -> case V8 of [E0 | E1] -> (fun (V49, V50) -> case V49 of {'Builtin.MkPair', V51, V52} -> case V50 of [] -> begin (V70 = begin (V53 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V52))), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V69 = ((begin (V66 = fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V62, V63, V64, V65)) end end end end, V58, V59, V60, V61)) end end end end), fun (V67) -> fun (V68) -> ((((V66(V0))(V1))(V67))(V68)) end end end(V2))(V57))), V69 end(V54)) end end end end), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V76 = fun (V75) -> {'Prelude.Types.Right', {'TTImp.TTImp.SearchBy', V74}} end), V76 end(V71)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DataOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DataOpt"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DataOpt"/utf8>>)) end; <<"NoHints"/utf8>> -> fun (V77) -> {'Prelude.Types.Right', {'TTImp.TTImp.NoHints'}} end; <<"UniqueSearch"/utf8>> -> fun (V78) -> {'Prelude.Types.Right', {'TTImp.TTImp.UniqueSearch'}} end; <<"External"/utf8>> -> fun (V79) -> {'Prelude.Types.Right', {'TTImp.TTImp.External'}} end; <<"NoNewtype"/utf8>> -> fun (V80) -> {'Prelude.Types.Right', {'TTImp.TTImp.NoNewtype'}} end; <<"NoEnum"/utf8>> -> fun (V81) -> {'Prelude.Types.Right', {'TTImp.TTImp.NoEnum'}} end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DataOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DataOpt"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"DataOpt"/utf8>>)) end end), V82 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"DataOpt"/utf8>>)) end.
'dn--un--reify_Reify_BindMode'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V76 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"PI"/utf8>> -> case V8 of [E0 | E1] -> (fun (V49, V50) -> case V49 of {'Builtin.MkPair', V51, V52} -> case V50 of [] -> begin (V66 = begin (V53 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V52))), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V65 = ((begin (V62 = fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V58, V59, V60, V61)) end end end end), fun (V63) -> fun (V64) -> ((((V62(V0))(V1))(V63))(V64)) end end end(V2))(V57))), V65 end(V54)) end end end end), fun (V67) -> begin (V68 = (V66(V67))), case V68 of {'Prelude.Types.Left', V69} -> {'Prelude.Types.Left', V69}; {'Prelude.Types.Right', V70} -> (begin (V72 = fun (V71) -> {'Prelude.Types.Right', {'TTImp.TTImp.PI', V70}} end), V72 end(V67)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"BindMode"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"BindMode"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"BindMode"/utf8>>)) end; <<"PATTERN"/utf8>> -> fun (V73) -> {'Prelude.Types.Right', {'TTImp.TTImp.PATTERN'}} end; <<"COVERAGE"/utf8>> -> fun (V74) -> {'Prelude.Types.Right', {'TTImp.TTImp.COVERAGE'}} end; <<"NONE"/utf8>> -> fun (V75) -> {'Prelude.Types.Right', {'TTImp.TTImp.NONE'}} end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"BindMode"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"BindMode"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"BindMode"/utf8>>)) end end), V76 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"BindMode"/utf8>>)) end.
'dn--un--reify_Reify_AltType'(V0, V1, V2, V3) -> case V3 of {'Core.Value.NDCon', V4, V5, V6, V7, V8} -> begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Core.Context.MkDefs', V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40} -> V9 end, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V75 = begin (V46 = {'Core.Value.NDCon', V4, V5, V6, V7, V8}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V45)) of {'Core.Name.UN', V47} -> case V47 of {'Core.Name.Basic', V48} -> case V48 of <<"FirstSuccess"/utf8>> -> fun (V49) -> {'Prelude.Types.Right', {'TTImp.TTImp.FirstSuccess'}} end; <<"Unique"/utf8>> -> fun (V50) -> {'Prelude.Types.Right', {'TTImp.TTImp.Unique'}} end; <<"UniqueDefault"/utf8>> -> case V8 of [E0 | E1] -> (fun (V51, V52) -> case V51 of {'Builtin.MkPair', V53, V54} -> case V52 of [] -> begin (V68 = begin (V55 = ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V54))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V67 = ((begin (V64 = fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('dn--un--reify_Reify_RawImp'(V60, V61, V62, V63)) end end end end), fun (V65) -> fun (V66) -> ((((V64(V0))(V1))(V65))(V66)) end end end(V2))(V59))), V67 end(V56)) end end end end), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V74 = fun (V73) -> {'Prelude.Types.Right', {'TTImp.TTImp.UniqueDefault', V72}} end), V74 end(V69)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"AltType"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"AltType"/utf8>>)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"AltType"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"AltType"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"AltType"/utf8>>)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V46, <<"AltType"/utf8>>)) end end), V75 end(V42)) end end end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V0, V1, V3, <<"AltType"/utf8>>)) end.
'dn--un--reflect_Reflect_WithFlag'(V0, V1, V2, V3, V4, V5) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Syntactic"/utf8>>)))).
'dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseLeft"/utf8>>)))); 1 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseRight"/utf8>>)))) end.
'dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.IVar', V6, V7} -> begin (V8 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V19 = begin (V13 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V18 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IVar"/utf8>>)), [V12 | [V17 | []]]))), V18 end(V14)) end end end end), V19 end(V9)) end end end end; {'TTImp.TTImp.IPi', V20, V21, V22, V23, V24, V25} -> begin (V26 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V20))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V133 = begin (V43 = (((((begin (V37 = fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V31, V32, V33, V34, V35, V36)) end end end end end end), fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ((((((V37(V0))(V38))(V39))(V40))(V41))(V42)) end end end end end end(V1))(V2))(V3))(V4))(V21))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V132 = begin (V66 = (((((begin (V60 = fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('dn--un--reflect_Reflect_RawImp'(V54, V55, V56, V57, V58, V59)) end end end end end end, V48, V49, V50, V51, V52, V53)) end end end end end end), fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ((((((V60(V0))(V61))(V62))(V63))(V64))(V65)) end end end end end end(V1))(V2))(V3))(V4))(V22))), fun (V67) -> begin (V68 = (V66(V67))), case V68 of {'Prelude.Types.Left', V69} -> {'Prelude.Types.Left', V69}; {'Prelude.Types.Right', V70} -> (begin (V131 = begin (V89 = (((((begin (V83 = fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V77, V78, V79, V80, V81, V82)) end end end end end end, V71, V72, V73, V74, V75, V76)) end end end end end end), fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ((((((V83(V0))(V84))(V85))(V86))(V87))(V88)) end end end end end end(V1))(V2))(V3))(V4))(V23))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V130 = begin (V106 = (((((begin (V100 = fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> ('dn--un--reflect_Reflect_RawImp'(V94, V95, V96, V97, V98, V99)) end end end end end end), fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> ((((((V100(V0))(V101))(V102))(V103))(V104))(V105)) end end end end end end(V1))(V2))(V3))(V4))(V24))), fun (V107) -> begin (V108 = (V106(V107))), case V108 of {'Prelude.Types.Left', V109} -> {'Prelude.Types.Left', V109}; {'Prelude.Types.Right', V110} -> (begin (V129 = begin (V123 = (((((begin (V117 = fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> ('dn--un--reflect_Reflect_RawImp'(V111, V112, V113, V114, V115, V116)) end end end end end end), fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> ((((((V117(V0))(V118))(V119))(V120))(V121))(V122)) end end end end end end(V1))(V2))(V3))(V4))(V25))), fun (V124) -> begin (V125 = (V123(V124))), case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> (begin (V128 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPi"/utf8>>)), [V30 | [V47 | [V70 | [V93 | [V110 | [V127 | []]]]]]]))), V128 end(V124)) end end end end), V129 end(V107)) end end end end), V130 end(V90)) end end end end), V131 end(V67)) end end end end), V132 end(V44)) end end end end), V133 end(V27)) end end end end; {'TTImp.TTImp.ILam', V134, V135, V136, V137, V138, V139} -> begin (V140 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V134))), fun (V141) -> begin (V142 = (V140(V141))), case V142 of {'Prelude.Types.Left', V143} -> {'Prelude.Types.Left', V143}; {'Prelude.Types.Right', V144} -> (begin (V247 = begin (V157 = (((((begin (V151 = fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V145, V146, V147, V148, V149, V150)) end end end end end end), fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> ((((((V151(V0))(V152))(V153))(V154))(V155))(V156)) end end end end end end(V1))(V2))(V3))(V4))(V135))), fun (V158) -> begin (V159 = (V157(V158))), case V159 of {'Prelude.Types.Left', V160} -> {'Prelude.Types.Left', V160}; {'Prelude.Types.Right', V161} -> (begin (V246 = begin (V180 = (((((begin (V174 = fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> ('dn--un--reflect_Reflect_RawImp'(V168, V169, V170, V171, V172, V173)) end end end end end end, V162, V163, V164, V165, V166, V167)) end end end end end end), fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> ((((((V174(V0))(V175))(V176))(V177))(V178))(V179)) end end end end end end(V1))(V2))(V3))(V4))(V136))), fun (V181) -> begin (V182 = (V180(V181))), case V182 of {'Prelude.Types.Left', V183} -> {'Prelude.Types.Left', V183}; {'Prelude.Types.Right', V184} -> (begin (V245 = begin (V203 = (((((begin (V197 = fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> fun (V189) -> fun (V190) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V191, V192, V193, V194, V195, V196)) end end end end end end, V185, V186, V187, V188, V189, V190)) end end end end end end), fun (V198) -> fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> ((((((V197(V0))(V198))(V199))(V200))(V201))(V202)) end end end end end end(V1))(V2))(V3))(V4))(V137))), fun (V204) -> begin (V205 = (V203(V204))), case V205 of {'Prelude.Types.Left', V206} -> {'Prelude.Types.Left', V206}; {'Prelude.Types.Right', V207} -> (begin (V244 = begin (V220 = (((((begin (V214 = fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> ('dn--un--reflect_Reflect_RawImp'(V208, V209, V210, V211, V212, V213)) end end end end end end), fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> ((((((V214(V0))(V215))(V216))(V217))(V218))(V219)) end end end end end end(V1))(V2))(V3))(V4))(V138))), fun (V221) -> begin (V222 = (V220(V221))), case V222 of {'Prelude.Types.Left', V223} -> {'Prelude.Types.Left', V223}; {'Prelude.Types.Right', V224} -> (begin (V243 = begin (V237 = (((((begin (V231 = fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> fun (V230) -> ('dn--un--reflect_Reflect_RawImp'(V225, V226, V227, V228, V229, V230)) end end end end end end), fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> ((((((V231(V0))(V232))(V233))(V234))(V235))(V236)) end end end end end end(V1))(V2))(V3))(V4))(V139))), fun (V238) -> begin (V239 = (V237(V238))), case V239 of {'Prelude.Types.Left', V240} -> {'Prelude.Types.Left', V240}; {'Prelude.Types.Right', V241} -> (begin (V242 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILam"/utf8>>)), [V144 | [V161 | [V184 | [V207 | [V224 | [V241 | []]]]]]]))), V242 end(V238)) end end end end), V243 end(V221)) end end end end), V244 end(V204)) end end end end), V245 end(V181)) end end end end), V246 end(V158)) end end end end), V247 end(V141)) end end end end; {'TTImp.TTImp.ILet', V248, V249, V250, V251, V252, V253, V254} -> begin (V255 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V248))), fun (V256) -> begin (V257 = (V255(V256))), case V257 of {'Prelude.Types.Left', V258} -> {'Prelude.Types.Left', V258}; {'Prelude.Types.Right', V259} -> (begin (V344 = begin (V260 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V249))), fun (V261) -> begin (V262 = (V260(V261))), case V262 of {'Prelude.Types.Left', V263} -> {'Prelude.Types.Left', V263}; {'Prelude.Types.Right', V264} -> (begin (V343 = begin (V277 = (((((begin (V271 = fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V265, V266, V267, V268, V269, V270)) end end end end end end), fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> ((((((V271(V0))(V272))(V273))(V274))(V275))(V276)) end end end end end end(V1))(V2))(V3))(V4))(V250))), fun (V278) -> begin (V279 = (V277(V278))), case V279 of {'Prelude.Types.Left', V280} -> {'Prelude.Types.Left', V280}; {'Prelude.Types.Right', V281} -> (begin (V342 = begin (V282 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V251))), fun (V283) -> begin (V284 = (V282(V283))), case V284 of {'Prelude.Types.Left', V285} -> {'Prelude.Types.Left', V285}; {'Prelude.Types.Right', V286} -> (begin (V341 = begin (V299 = (((((begin (V293 = fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> fun (V291) -> fun (V292) -> ('dn--un--reflect_Reflect_RawImp'(V287, V288, V289, V290, V291, V292)) end end end end end end), fun (V294) -> fun (V295) -> fun (V296) -> fun (V297) -> fun (V298) -> ((((((V293(V0))(V294))(V295))(V296))(V297))(V298)) end end end end end end(V1))(V2))(V3))(V4))(V252))), fun (V300) -> begin (V301 = (V299(V300))), case V301 of {'Prelude.Types.Left', V302} -> {'Prelude.Types.Left', V302}; {'Prelude.Types.Right', V303} -> (begin (V340 = begin (V316 = (((((begin (V310 = fun (V304) -> fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> ('dn--un--reflect_Reflect_RawImp'(V304, V305, V306, V307, V308, V309)) end end end end end end), fun (V311) -> fun (V312) -> fun (V313) -> fun (V314) -> fun (V315) -> ((((((V310(V0))(V311))(V312))(V313))(V314))(V315)) end end end end end end(V1))(V2))(V3))(V4))(V253))), fun (V317) -> begin (V318 = (V316(V317))), case V318 of {'Prelude.Types.Left', V319} -> {'Prelude.Types.Left', V319}; {'Prelude.Types.Right', V320} -> (begin (V339 = begin (V333 = (((((begin (V327 = fun (V321) -> fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> fun (V326) -> ('dn--un--reflect_Reflect_RawImp'(V321, V322, V323, V324, V325, V326)) end end end end end end), fun (V328) -> fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> ((((((V327(V0))(V328))(V329))(V330))(V331))(V332)) end end end end end end(V1))(V2))(V3))(V4))(V254))), fun (V334) -> begin (V335 = (V333(V334))), case V335 of {'Prelude.Types.Left', V336} -> {'Prelude.Types.Left', V336}; {'Prelude.Types.Right', V337} -> (begin (V338 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILet"/utf8>>)), [V259 | [V264 | [V281 | [V286 | [V303 | [V320 | [V337 | []]]]]]]]))), V338 end(V334)) end end end end), V339 end(V317)) end end end end), V340 end(V300)) end end end end), V341 end(V283)) end end end end), V342 end(V278)) end end end end), V343 end(V261)) end end end end), V344 end(V256)) end end end end; {'TTImp.TTImp.ICase', V345, V346, V347, V348} -> begin (V349 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V345))), fun (V350) -> begin (V351 = (V349(V350))), case V351 of {'Prelude.Types.Left', V352} -> {'Prelude.Types.Left', V352}; {'Prelude.Types.Right', V353} -> (begin (V414 = begin (V366 = (((((begin (V360 = fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> fun (V359) -> ('dn--un--reflect_Reflect_RawImp'(V354, V355, V356, V357, V358, V359)) end end end end end end), fun (V361) -> fun (V362) -> fun (V363) -> fun (V364) -> fun (V365) -> ((((((V360(V0))(V361))(V362))(V363))(V364))(V365)) end end end end end end(V1))(V2))(V3))(V4))(V346))), fun (V367) -> begin (V368 = (V366(V367))), case V368 of {'Prelude.Types.Left', V369} -> {'Prelude.Types.Left', V369}; {'Prelude.Types.Right', V370} -> (begin (V413 = begin (V383 = (((((begin (V377 = fun (V371) -> fun (V372) -> fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> ('dn--un--reflect_Reflect_RawImp'(V371, V372, V373, V374, V375, V376)) end end end end end end), fun (V378) -> fun (V379) -> fun (V380) -> fun (V381) -> fun (V382) -> ((((((V377(V0))(V378))(V379))(V380))(V381))(V382)) end end end end end end(V1))(V2))(V3))(V4))(V347))), fun (V384) -> begin (V385 = (V383(V384))), case V385 of {'Prelude.Types.Left', V386} -> {'Prelude.Types.Left', V386}; {'Prelude.Types.Right', V387} -> (begin (V412 = begin (V406 = (((((begin (V400 = fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> fun (V392) -> fun (V393) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> ('dn--un--reflect_Reflect_ImpClause'(V394, V395, V396, V397, V398, V399)) end end end end end end, V388, V389, V390, V391, V392, V393)) end end end end end end), fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> ((((((V400(V0))(V401))(V402))(V403))(V404))(V405)) end end end end end end(V1))(V2))(V3))(V4))(V348))), fun (V407) -> begin (V408 = (V406(V407))), case V408 of {'Prelude.Types.Left', V409} -> {'Prelude.Types.Left', V409}; {'Prelude.Types.Right', V410} -> (begin (V411 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ICase"/utf8>>)), [V353 | [V370 | [V387 | [V410 | []]]]]))), V411 end(V407)) end end end end), V412 end(V384)) end end end end), V413 end(V367)) end end end end), V414 end(V350)) end end end end; {'TTImp.TTImp.ILocal', V415, V416, V417} -> begin (V418 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V415))), fun (V419) -> begin (V420 = (V418(V419))), case V420 of {'Prelude.Types.Left', V421} -> {'Prelude.Types.Left', V421}; {'Prelude.Types.Right', V422} -> (begin (V465 = begin (V441 = (((((begin (V435 = fun (V423) -> fun (V424) -> fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V429) -> fun (V430) -> fun (V431) -> fun (V432) -> fun (V433) -> fun (V434) -> ('dn--un--reflect_Reflect_ImpDecl'(V429, V430, V431, V432, V433, V434)) end end end end end end, V423, V424, V425, V426, V427, V428)) end end end end end end), fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> fun (V440) -> ((((((V435(V0))(V436))(V437))(V438))(V439))(V440)) end end end end end end(V1))(V2))(V3))(V4))(V416))), fun (V442) -> begin (V443 = (V441(V442))), case V443 of {'Prelude.Types.Left', V444} -> {'Prelude.Types.Left', V444}; {'Prelude.Types.Right', V445} -> (begin (V464 = begin (V458 = (((((begin (V452 = fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> fun (V450) -> fun (V451) -> ('dn--un--reflect_Reflect_RawImp'(V446, V447, V448, V449, V450, V451)) end end end end end end), fun (V453) -> fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> ((((((V452(V0))(V453))(V454))(V455))(V456))(V457)) end end end end end end(V1))(V2))(V3))(V4))(V417))), fun (V459) -> begin (V460 = (V458(V459))), case V460 of {'Prelude.Types.Left', V461} -> {'Prelude.Types.Left', V461}; {'Prelude.Types.Right', V462} -> (begin (V463 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILocal"/utf8>>)), [V422 | [V445 | [V462 | []]]]))), V463 end(V459)) end end end end), V464 end(V442)) end end end end), V465 end(V419)) end end end end; {'TTImp.TTImp.ICaseLocal', V466, V467, V468, V469, V470} -> (((((begin (V477 = fun (V471) -> fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> fun (V476) -> ('dn--un--reflect_Reflect_RawImp'(V471, V472, V473, V474, V475, V476)) end end end end end end), fun (V478) -> fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> ((((((V477(V0))(V478))(V479))(V480))(V481))(V482)) end end end end end end(V1))(V2))(V3))(V4))(V470)); {'TTImp.TTImp.IUpdate', V483, V484, V485} -> begin (V486 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V483))), fun (V487) -> begin (V488 = (V486(V487))), case V488 of {'Prelude.Types.Left', V489} -> {'Prelude.Types.Left', V489}; {'Prelude.Types.Right', V490} -> (begin (V533 = begin (V509 = (((((begin (V503 = fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V497) -> fun (V498) -> fun (V499) -> fun (V500) -> fun (V501) -> fun (V502) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V497, V498, V499, V500, V501, V502)) end end end end end end, V491, V492, V493, V494, V495, V496)) end end end end end end), fun (V504) -> fun (V505) -> fun (V506) -> fun (V507) -> fun (V508) -> ((((((V503(V0))(V504))(V505))(V506))(V507))(V508)) end end end end end end(V1))(V2))(V3))(V4))(V484))), fun (V510) -> begin (V511 = (V509(V510))), case V511 of {'Prelude.Types.Left', V512} -> {'Prelude.Types.Left', V512}; {'Prelude.Types.Right', V513} -> (begin (V532 = begin (V526 = (((((begin (V520 = fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> fun (V518) -> fun (V519) -> ('dn--un--reflect_Reflect_RawImp'(V514, V515, V516, V517, V518, V519)) end end end end end end), fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> fun (V525) -> ((((((V520(V0))(V521))(V522))(V523))(V524))(V525)) end end end end end end(V1))(V2))(V3))(V4))(V485))), fun (V527) -> begin (V528 = (V526(V527))), case V528 of {'Prelude.Types.Left', V529} -> {'Prelude.Types.Left', V529}; {'Prelude.Types.Right', V530} -> (begin (V531 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IUpdate"/utf8>>)), [V490 | [V513 | [V530 | []]]]))), V531 end(V527)) end end end end), V532 end(V510)) end end end end), V533 end(V487)) end end end end; {'TTImp.TTImp.IApp', V534, V535, V536} -> begin (V537 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V534))), fun (V538) -> begin (V539 = (V537(V538))), case V539 of {'Prelude.Types.Left', V540} -> {'Prelude.Types.Left', V540}; {'Prelude.Types.Right', V541} -> (begin (V578 = begin (V554 = (((((begin (V548 = fun (V542) -> fun (V543) -> fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> ('dn--un--reflect_Reflect_RawImp'(V542, V543, V544, V545, V546, V547)) end end end end end end), fun (V549) -> fun (V550) -> fun (V551) -> fun (V552) -> fun (V553) -> ((((((V548(V0))(V549))(V550))(V551))(V552))(V553)) end end end end end end(V1))(V2))(V3))(V4))(V535))), fun (V555) -> begin (V556 = (V554(V555))), case V556 of {'Prelude.Types.Left', V557} -> {'Prelude.Types.Left', V557}; {'Prelude.Types.Right', V558} -> (begin (V577 = begin (V571 = (((((begin (V565 = fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> fun (V563) -> fun (V564) -> ('dn--un--reflect_Reflect_RawImp'(V559, V560, V561, V562, V563, V564)) end end end end end end), fun (V566) -> fun (V567) -> fun (V568) -> fun (V569) -> fun (V570) -> ((((((V565(V0))(V566))(V567))(V568))(V569))(V570)) end end end end end end(V1))(V2))(V3))(V4))(V536))), fun (V572) -> begin (V573 = (V571(V572))), case V573 of {'Prelude.Types.Left', V574} -> {'Prelude.Types.Left', V574}; {'Prelude.Types.Right', V575} -> (begin (V576 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IApp"/utf8>>)), [V541 | [V558 | [V575 | []]]]))), V576 end(V572)) end end end end), V577 end(V555)) end end end end), V578 end(V538)) end end end end; {'TTImp.TTImp.IAutoApp', V579, V580, V581} -> begin (V582 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V579))), fun (V583) -> begin (V584 = (V582(V583))), case V584 of {'Prelude.Types.Left', V585} -> {'Prelude.Types.Left', V585}; {'Prelude.Types.Right', V586} -> (begin (V623 = begin (V599 = (((((begin (V593 = fun (V587) -> fun (V588) -> fun (V589) -> fun (V590) -> fun (V591) -> fun (V592) -> ('dn--un--reflect_Reflect_RawImp'(V587, V588, V589, V590, V591, V592)) end end end end end end), fun (V594) -> fun (V595) -> fun (V596) -> fun (V597) -> fun (V598) -> ((((((V593(V0))(V594))(V595))(V596))(V597))(V598)) end end end end end end(V1))(V2))(V3))(V4))(V580))), fun (V600) -> begin (V601 = (V599(V600))), case V601 of {'Prelude.Types.Left', V602} -> {'Prelude.Types.Left', V602}; {'Prelude.Types.Right', V603} -> (begin (V622 = begin (V616 = (((((begin (V610 = fun (V604) -> fun (V605) -> fun (V606) -> fun (V607) -> fun (V608) -> fun (V609) -> ('dn--un--reflect_Reflect_RawImp'(V604, V605, V606, V607, V608, V609)) end end end end end end), fun (V611) -> fun (V612) -> fun (V613) -> fun (V614) -> fun (V615) -> ((((((V610(V0))(V611))(V612))(V613))(V614))(V615)) end end end end end end(V1))(V2))(V3))(V4))(V581))), fun (V617) -> begin (V618 = (V616(V617))), case V618 of {'Prelude.Types.Left', V619} -> {'Prelude.Types.Left', V619}; {'Prelude.Types.Right', V620} -> (begin (V621 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAutoApp"/utf8>>)), [V586 | [V603 | [V620 | []]]]))), V621 end(V617)) end end end end), V622 end(V600)) end end end end), V623 end(V583)) end end end end; {'TTImp.TTImp.INamedApp', V624, V625, V626, V627} -> begin (V628 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V624))), fun (V629) -> begin (V630 = (V628(V629))), case V630 of {'Prelude.Types.Left', V631} -> {'Prelude.Types.Left', V631}; {'Prelude.Types.Right', V632} -> (begin (V675 = begin (V645 = (((((begin (V639 = fun (V633) -> fun (V634) -> fun (V635) -> fun (V636) -> fun (V637) -> fun (V638) -> ('dn--un--reflect_Reflect_RawImp'(V633, V634, V635, V636, V637, V638)) end end end end end end), fun (V640) -> fun (V641) -> fun (V642) -> fun (V643) -> fun (V644) -> ((((((V639(V0))(V640))(V641))(V642))(V643))(V644)) end end end end end end(V1))(V2))(V3))(V4))(V625))), fun (V646) -> begin (V647 = (V645(V646))), case V647 of {'Prelude.Types.Left', V648} -> {'Prelude.Types.Left', V648}; {'Prelude.Types.Right', V649} -> (begin (V674 = begin (V650 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V626))), fun (V651) -> begin (V652 = (V650(V651))), case V652 of {'Prelude.Types.Left', V653} -> {'Prelude.Types.Left', V653}; {'Prelude.Types.Right', V654} -> (begin (V673 = begin (V667 = (((((begin (V661 = fun (V655) -> fun (V656) -> fun (V657) -> fun (V658) -> fun (V659) -> fun (V660) -> ('dn--un--reflect_Reflect_RawImp'(V655, V656, V657, V658, V659, V660)) end end end end end end), fun (V662) -> fun (V663) -> fun (V664) -> fun (V665) -> fun (V666) -> ((((((V661(V0))(V662))(V663))(V664))(V665))(V666)) end end end end end end(V1))(V2))(V3))(V4))(V627))), fun (V668) -> begin (V669 = (V667(V668))), case V669 of {'Prelude.Types.Left', V670} -> {'Prelude.Types.Left', V670}; {'Prelude.Types.Right', V671} -> (begin (V672 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamedApp"/utf8>>)), [V632 | [V649 | [V654 | [V671 | []]]]]))), V672 end(V668)) end end end end), V673 end(V651)) end end end end), V674 end(V646)) end end end end), V675 end(V629)) end end end end; {'TTImp.TTImp.IWithApp', V676, V677, V678} -> begin (V679 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V676))), fun (V680) -> begin (V681 = (V679(V680))), case V681 of {'Prelude.Types.Left', V682} -> {'Prelude.Types.Left', V682}; {'Prelude.Types.Right', V683} -> (begin (V720 = begin (V696 = (((((begin (V690 = fun (V684) -> fun (V685) -> fun (V686) -> fun (V687) -> fun (V688) -> fun (V689) -> ('dn--un--reflect_Reflect_RawImp'(V684, V685, V686, V687, V688, V689)) end end end end end end), fun (V691) -> fun (V692) -> fun (V693) -> fun (V694) -> fun (V695) -> ((((((V690(V0))(V691))(V692))(V693))(V694))(V695)) end end end end end end(V1))(V2))(V3))(V4))(V677))), fun (V697) -> begin (V698 = (V696(V697))), case V698 of {'Prelude.Types.Left', V699} -> {'Prelude.Types.Left', V699}; {'Prelude.Types.Right', V700} -> (begin (V719 = begin (V713 = (((((begin (V707 = fun (V701) -> fun (V702) -> fun (V703) -> fun (V704) -> fun (V705) -> fun (V706) -> ('dn--un--reflect_Reflect_RawImp'(V701, V702, V703, V704, V705, V706)) end end end end end end), fun (V708) -> fun (V709) -> fun (V710) -> fun (V711) -> fun (V712) -> ((((((V707(V0))(V708))(V709))(V710))(V711))(V712)) end end end end end end(V1))(V2))(V3))(V4))(V678))), fun (V714) -> begin (V715 = (V713(V714))), case V715 of {'Prelude.Types.Left', V716} -> {'Prelude.Types.Left', V716}; {'Prelude.Types.Right', V717} -> (begin (V718 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IWithApp"/utf8>>)), [V683 | [V700 | [V717 | []]]]))), V718 end(V714)) end end end end), V719 end(V697)) end end end end), V720 end(V680)) end end end end; {'TTImp.TTImp.ISearch', V721, V722} -> begin (V723 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V721))), fun (V724) -> begin (V725 = (V723(V724))), case V725 of {'Prelude.Types.Left', V726} -> {'Prelude.Types.Left', V726}; {'Prelude.Types.Right', V727} -> (begin (V734 = begin (V728 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V0, V1, V2, V3, V4, V722))), fun (V729) -> begin (V730 = (V728(V729))), case V730 of {'Prelude.Types.Left', V731} -> {'Prelude.Types.Left', V731}; {'Prelude.Types.Right', V732} -> (begin (V733 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISearch"/utf8>>)), [V727 | [V732 | []]]))), V733 end(V729)) end end end end), V734 end(V724)) end end end end; {'TTImp.TTImp.IAlternative', V735, V736, V737} -> begin (V738 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V735))), fun (V739) -> begin (V740 = (V738(V739))), case V740 of {'Prelude.Types.Left', V741} -> {'Prelude.Types.Left', V741}; {'Prelude.Types.Right', V742} -> (begin (V785 = begin (V755 = (((((begin (V749 = fun (V743) -> fun (V744) -> fun (V745) -> fun (V746) -> fun (V747) -> fun (V748) -> ('dn--un--reflect_Reflect_AltType'(V743, V744, V745, V746, V747, V748)) end end end end end end), fun (V750) -> fun (V751) -> fun (V752) -> fun (V753) -> fun (V754) -> ((((((V749(V0))(V750))(V751))(V752))(V753))(V754)) end end end end end end(V1))(V2))(V3))(V4))(V736))), fun (V756) -> begin (V757 = (V755(V756))), case V757 of {'Prelude.Types.Left', V758} -> {'Prelude.Types.Left', V758}; {'Prelude.Types.Right', V759} -> (begin (V784 = begin (V778 = (((((begin (V772 = fun (V760) -> fun (V761) -> fun (V762) -> fun (V763) -> fun (V764) -> fun (V765) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V766) -> fun (V767) -> fun (V768) -> fun (V769) -> fun (V770) -> fun (V771) -> ('dn--un--reflect_Reflect_RawImp'(V766, V767, V768, V769, V770, V771)) end end end end end end, V760, V761, V762, V763, V764, V765)) end end end end end end), fun (V773) -> fun (V774) -> fun (V775) -> fun (V776) -> fun (V777) -> ((((((V772(V0))(V773))(V774))(V775))(V776))(V777)) end end end end end end(V1))(V2))(V3))(V4))(V737))), fun (V779) -> begin (V780 = (V778(V779))), case V780 of {'Prelude.Types.Left', V781} -> {'Prelude.Types.Left', V781}; {'Prelude.Types.Right', V782} -> (begin (V783 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAlternative"/utf8>>)), [V742 | [V759 | [V782 | []]]]))), V783 end(V779)) end end end end), V784 end(V756)) end end end end), V785 end(V739)) end end end end; {'TTImp.TTImp.IRewrite', V786, V787, V788} -> begin (V789 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V786))), fun (V790) -> begin (V791 = (V789(V790))), case V791 of {'Prelude.Types.Left', V792} -> {'Prelude.Types.Left', V792}; {'Prelude.Types.Right', V793} -> (begin (V830 = begin (V806 = (((((begin (V800 = fun (V794) -> fun (V795) -> fun (V796) -> fun (V797) -> fun (V798) -> fun (V799) -> ('dn--un--reflect_Reflect_RawImp'(V794, V795, V796, V797, V798, V799)) end end end end end end), fun (V801) -> fun (V802) -> fun (V803) -> fun (V804) -> fun (V805) -> ((((((V800(V0))(V801))(V802))(V803))(V804))(V805)) end end end end end end(V1))(V2))(V3))(V4))(V787))), fun (V807) -> begin (V808 = (V806(V807))), case V808 of {'Prelude.Types.Left', V809} -> {'Prelude.Types.Left', V809}; {'Prelude.Types.Right', V810} -> (begin (V829 = begin (V823 = (((((begin (V817 = fun (V811) -> fun (V812) -> fun (V813) -> fun (V814) -> fun (V815) -> fun (V816) -> ('dn--un--reflect_Reflect_RawImp'(V811, V812, V813, V814, V815, V816)) end end end end end end), fun (V818) -> fun (V819) -> fun (V820) -> fun (V821) -> fun (V822) -> ((((((V817(V0))(V818))(V819))(V820))(V821))(V822)) end end end end end end(V1))(V2))(V3))(V4))(V788))), fun (V824) -> begin (V825 = (V823(V824))), case V825 of {'Prelude.Types.Left', V826} -> {'Prelude.Types.Left', V826}; {'Prelude.Types.Right', V827} -> (begin (V828 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRewrite"/utf8>>)), [V793 | [V810 | [V827 | []]]]))), V828 end(V824)) end end end end), V829 end(V807)) end end end end), V830 end(V790)) end end end end; {'TTImp.TTImp.ICoerced', V831, V832} -> (((((begin (V839 = fun (V833) -> fun (V834) -> fun (V835) -> fun (V836) -> fun (V837) -> fun (V838) -> ('dn--un--reflect_Reflect_RawImp'(V833, V834, V835, V836, V837, V838)) end end end end end end), fun (V840) -> fun (V841) -> fun (V842) -> fun (V843) -> fun (V844) -> ((((((V839(V0))(V840))(V841))(V842))(V843))(V844)) end end end end end end(V1))(V2))(V3))(V4))(V832)); {'TTImp.TTImp.IBindHere', V845, V846, V847} -> begin (V848 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V845))), fun (V849) -> begin (V850 = (V848(V849))), case V850 of {'Prelude.Types.Left', V851} -> {'Prelude.Types.Left', V851}; {'Prelude.Types.Right', V852} -> (begin (V877 = begin (V853 = ('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V846))), fun (V854) -> begin (V855 = (V853(V854))), case V855 of {'Prelude.Types.Left', V856} -> {'Prelude.Types.Left', V856}; {'Prelude.Types.Right', V857} -> (begin (V876 = begin (V870 = (((((begin (V864 = fun (V858) -> fun (V859) -> fun (V860) -> fun (V861) -> fun (V862) -> fun (V863) -> ('dn--un--reflect_Reflect_RawImp'(V858, V859, V860, V861, V862, V863)) end end end end end end), fun (V865) -> fun (V866) -> fun (V867) -> fun (V868) -> fun (V869) -> ((((((V864(V0))(V865))(V866))(V867))(V868))(V869)) end end end end end end(V1))(V2))(V3))(V4))(V847))), fun (V871) -> begin (V872 = (V870(V871))), case V872 of {'Prelude.Types.Left', V873} -> {'Prelude.Types.Left', V873}; {'Prelude.Types.Right', V874} -> (begin (V875 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindHere"/utf8>>)), [V852 | [V857 | [V874 | []]]]))), V875 end(V871)) end end end end), V876 end(V854)) end end end end), V877 end(V849)) end end end end; {'TTImp.TTImp.IBindVar', V878, V879} -> begin (V880 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V878))), fun (V881) -> begin (V882 = (V880(V881))), case V882 of {'Prelude.Types.Left', V883} -> {'Prelude.Types.Left', V883}; {'Prelude.Types.Right', V884} -> (begin (V892 = begin (V886 = fun (V885) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V879, V885)) end), fun (V887) -> begin (V888 = (V886(V887))), case V888 of {'Prelude.Types.Left', V889} -> {'Prelude.Types.Left', V889}; {'Prelude.Types.Right', V890} -> (begin (V891 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindVar"/utf8>>)), [V884 | [V890 | []]]))), V891 end(V887)) end end end end), V892 end(V881)) end end end end; {'TTImp.TTImp.IAs', V893, V894, V895, V896, V897} -> begin (V898 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V893))), fun (V899) -> begin (V900 = (V898(V899))), case V900 of {'Prelude.Types.Left', V901} -> {'Prelude.Types.Left', V901}; {'Prelude.Types.Right', V902} -> (begin (V939 = begin (V903 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V894))), fun (V904) -> begin (V905 = (V903(V904))), case V905 of {'Prelude.Types.Left', V906} -> {'Prelude.Types.Left', V906}; {'Prelude.Types.Right', V907} -> (begin (V938 = begin (V908 = ('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V895))), fun (V909) -> begin (V910 = (V908(V909))), case V910 of {'Prelude.Types.Left', V911} -> {'Prelude.Types.Left', V911}; {'Prelude.Types.Right', V912} -> (begin (V937 = begin (V913 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V896))), fun (V914) -> begin (V915 = (V913(V914))), case V915 of {'Prelude.Types.Left', V916} -> {'Prelude.Types.Left', V916}; {'Prelude.Types.Right', V917} -> (begin (V936 = begin (V930 = (((((begin (V924 = fun (V918) -> fun (V919) -> fun (V920) -> fun (V921) -> fun (V922) -> fun (V923) -> ('dn--un--reflect_Reflect_RawImp'(V918, V919, V920, V921, V922, V923)) end end end end end end), fun (V925) -> fun (V926) -> fun (V927) -> fun (V928) -> fun (V929) -> ((((((V924(V0))(V925))(V926))(V927))(V928))(V929)) end end end end end end(V1))(V2))(V3))(V4))(V897))), fun (V931) -> begin (V932 = (V930(V931))), case V932 of {'Prelude.Types.Left', V933} -> {'Prelude.Types.Left', V933}; {'Prelude.Types.Right', V934} -> (begin (V935 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAs"/utf8>>)), [V902 | [V907 | [V912 | [V917 | [V934 | []]]]]]))), V935 end(V931)) end end end end), V936 end(V914)) end end end end), V937 end(V909)) end end end end), V938 end(V904)) end end end end), V939 end(V899)) end end end end; {'TTImp.TTImp.IMustUnify', V940, V941, V942} -> begin (V943 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V940))), fun (V944) -> begin (V945 = (V943(V944))), case V945 of {'Prelude.Types.Left', V946} -> {'Prelude.Types.Left', V946}; {'Prelude.Types.Right', V947} -> (begin (V972 = begin (V948 = ('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V941))), fun (V949) -> begin (V950 = (V948(V949))), case V950 of {'Prelude.Types.Left', V951} -> {'Prelude.Types.Left', V951}; {'Prelude.Types.Right', V952} -> (begin (V971 = begin (V965 = (((((begin (V959 = fun (V953) -> fun (V954) -> fun (V955) -> fun (V956) -> fun (V957) -> fun (V958) -> ('dn--un--reflect_Reflect_RawImp'(V953, V954, V955, V956, V957, V958)) end end end end end end), fun (V960) -> fun (V961) -> fun (V962) -> fun (V963) -> fun (V964) -> ((((((V959(V0))(V960))(V961))(V962))(V963))(V964)) end end end end end end(V1))(V2))(V3))(V4))(V942))), fun (V966) -> begin (V967 = (V965(V966))), case V967 of {'Prelude.Types.Left', V968} -> {'Prelude.Types.Left', V968}; {'Prelude.Types.Right', V969} -> (begin (V970 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IMustUnify"/utf8>>)), [V947 | [V952 | [V969 | []]]]))), V970 end(V966)) end end end end), V971 end(V949)) end end end end), V972 end(V944)) end end end end; {'TTImp.TTImp.IDelayed', V973, V974, V975} -> begin (V976 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V973))), fun (V977) -> begin (V978 = (V976(V977))), case V978 of {'Prelude.Types.Left', V979} -> {'Prelude.Types.Left', V979}; {'Prelude.Types.Right', V980} -> (begin (V1005 = begin (V981 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_LazyReason'(V0, V1, V2, V3, V4, V974))), fun (V982) -> begin (V983 = (V981(V982))), case V983 of {'Prelude.Types.Left', V984} -> {'Prelude.Types.Left', V984}; {'Prelude.Types.Right', V985} -> (begin (V1004 = begin (V998 = (((((begin (V992 = fun (V986) -> fun (V987) -> fun (V988) -> fun (V989) -> fun (V990) -> fun (V991) -> ('dn--un--reflect_Reflect_RawImp'(V986, V987, V988, V989, V990, V991)) end end end end end end), fun (V993) -> fun (V994) -> fun (V995) -> fun (V996) -> fun (V997) -> ((((((V992(V0))(V993))(V994))(V995))(V996))(V997)) end end end end end end(V1))(V2))(V3))(V4))(V975))), fun (V999) -> begin (V1000 = (V998(V999))), case V1000 of {'Prelude.Types.Left', V1001} -> {'Prelude.Types.Left', V1001}; {'Prelude.Types.Right', V1002} -> (begin (V1003 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelayed"/utf8>>)), [V980 | [V985 | [V1002 | []]]]))), V1003 end(V999)) end end end end), V1004 end(V982)) end end end end), V1005 end(V977)) end end end end; {'TTImp.TTImp.IDelay', V1006, V1007} -> begin (V1008 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1006))), fun (V1009) -> begin (V1010 = (V1008(V1009))), case V1010 of {'Prelude.Types.Left', V1011} -> {'Prelude.Types.Left', V1011}; {'Prelude.Types.Right', V1012} -> (begin (V1031 = begin (V1025 = (((((begin (V1019 = fun (V1013) -> fun (V1014) -> fun (V1015) -> fun (V1016) -> fun (V1017) -> fun (V1018) -> ('dn--un--reflect_Reflect_RawImp'(V1013, V1014, V1015, V1016, V1017, V1018)) end end end end end end), fun (V1020) -> fun (V1021) -> fun (V1022) -> fun (V1023) -> fun (V1024) -> ((((((V1019(V0))(V1020))(V1021))(V1022))(V1023))(V1024)) end end end end end end(V1))(V2))(V3))(V4))(V1007))), fun (V1026) -> begin (V1027 = (V1025(V1026))), case V1027 of {'Prelude.Types.Left', V1028} -> {'Prelude.Types.Left', V1028}; {'Prelude.Types.Right', V1029} -> (begin (V1030 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelay"/utf8>>)), [V1012 | [V1029 | []]]))), V1030 end(V1026)) end end end end), V1031 end(V1009)) end end end end; {'TTImp.TTImp.IForce', V1032, V1033} -> begin (V1034 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1032))), fun (V1035) -> begin (V1036 = (V1034(V1035))), case V1036 of {'Prelude.Types.Left', V1037} -> {'Prelude.Types.Left', V1037}; {'Prelude.Types.Right', V1038} -> (begin (V1057 = begin (V1051 = (((((begin (V1045 = fun (V1039) -> fun (V1040) -> fun (V1041) -> fun (V1042) -> fun (V1043) -> fun (V1044) -> ('dn--un--reflect_Reflect_RawImp'(V1039, V1040, V1041, V1042, V1043, V1044)) end end end end end end), fun (V1046) -> fun (V1047) -> fun (V1048) -> fun (V1049) -> fun (V1050) -> ((((((V1045(V0))(V1046))(V1047))(V1048))(V1049))(V1050)) end end end end end end(V1))(V2))(V3))(V4))(V1033))), fun (V1052) -> begin (V1053 = (V1051(V1052))), case V1053 of {'Prelude.Types.Left', V1054} -> {'Prelude.Types.Left', V1054}; {'Prelude.Types.Right', V1055} -> (begin (V1056 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IForce"/utf8>>)), [V1038 | [V1055 | []]]))), V1056 end(V1052)) end end end end), V1057 end(V1035)) end end end end; {'TTImp.TTImp.IQuote', V1058, V1059} -> begin (V1060 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1058))), fun (V1061) -> begin (V1062 = (V1060(V1061))), case V1062 of {'Prelude.Types.Left', V1063} -> {'Prelude.Types.Left', V1063}; {'Prelude.Types.Right', V1064} -> (begin (V1083 = begin (V1077 = (((((begin (V1071 = fun (V1065) -> fun (V1066) -> fun (V1067) -> fun (V1068) -> fun (V1069) -> fun (V1070) -> ('dn--un--reflect_Reflect_RawImp'(V1065, V1066, V1067, V1068, V1069, V1070)) end end end end end end), fun (V1072) -> fun (V1073) -> fun (V1074) -> fun (V1075) -> fun (V1076) -> ((((((V1071(V0))(V1072))(V1073))(V1074))(V1075))(V1076)) end end end end end end(V1))(V2))(V3))(V4))(V1059))), fun (V1078) -> begin (V1079 = (V1077(V1078))), case V1079 of {'Prelude.Types.Left', V1080} -> {'Prelude.Types.Left', V1080}; {'Prelude.Types.Right', V1081} -> (begin (V1082 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuote"/utf8>>)), [V1064 | [V1081 | []]]))), V1082 end(V1078)) end end end end), V1083 end(V1061)) end end end end; {'TTImp.TTImp.IQuoteName', V1084, V1085} -> begin (V1086 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1084))), fun (V1087) -> begin (V1088 = (V1086(V1087))), case V1088 of {'Prelude.Types.Left', V1089} -> {'Prelude.Types.Left', V1089}; {'Prelude.Types.Right', V1090} -> (begin (V1097 = begin (V1091 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V1085))), fun (V1092) -> begin (V1093 = (V1091(V1092))), case V1093 of {'Prelude.Types.Left', V1094} -> {'Prelude.Types.Left', V1094}; {'Prelude.Types.Right', V1095} -> (begin (V1096 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteName"/utf8>>)), [V1090 | [V1095 | []]]))), V1096 end(V1092)) end end end end), V1097 end(V1087)) end end end end; {'TTImp.TTImp.IQuoteDecl', V1098, V1099} -> begin (V1100 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1098))), fun (V1101) -> begin (V1102 = (V1100(V1101))), case V1102 of {'Prelude.Types.Left', V1103} -> {'Prelude.Types.Left', V1103}; {'Prelude.Types.Right', V1104} -> (begin (V1129 = begin (V1123 = (((((begin (V1117 = fun (V1105) -> fun (V1106) -> fun (V1107) -> fun (V1108) -> fun (V1109) -> fun (V1110) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V1111) -> fun (V1112) -> fun (V1113) -> fun (V1114) -> fun (V1115) -> fun (V1116) -> ('dn--un--reflect_Reflect_ImpDecl'(V1111, V1112, V1113, V1114, V1115, V1116)) end end end end end end, V1105, V1106, V1107, V1108, V1109, V1110)) end end end end end end), fun (V1118) -> fun (V1119) -> fun (V1120) -> fun (V1121) -> fun (V1122) -> ((((((V1117(V0))(V1118))(V1119))(V1120))(V1121))(V1122)) end end end end end end(V1))(V2))(V3))(V4))(V1099))), fun (V1124) -> begin (V1125 = (V1123(V1124))), case V1125 of {'Prelude.Types.Left', V1126} -> {'Prelude.Types.Left', V1126}; {'Prelude.Types.Right', V1127} -> (begin (V1128 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteDecl"/utf8>>)), [V1104 | [V1127 | []]]))), V1128 end(V1124)) end end end end), V1129 end(V1101)) end end end end; {'TTImp.TTImp.IUnquote', V1130, V1131} -> fun (V1132) -> case V1131 of {'TTImp.TTImp.IVar', V1133, V1134} -> {'Prelude.Types.Right', {'Core.TT.Ref', V1130, {'Core.TT.Bound'}, V1134}}; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<"Can\x{27}t reflect an unquote: escapes should be lifted out"/utf8>>}, V1132)) end end; {'TTImp.TTImp.IRunElab', V1135, V1136} -> fun (V1137) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<"Can\x{27}t reflect a %runElab"/utf8>>}, V1137)) end; {'TTImp.TTImp.IPrimVal', V1138, V1139} -> begin (V1140 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1138))), fun (V1141) -> begin (V1142 = (V1140(V1141))), case V1142 of {'Prelude.Types.Left', V1143} -> {'Prelude.Types.Left', V1143}; {'Prelude.Types.Right', V1144} -> (begin (V1151 = begin (V1145 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Constant'(V0, V1, V2, V3, V4, V1139))), fun (V1146) -> begin (V1147 = (V1145(V1146))), case V1147 of {'Prelude.Types.Left', V1148} -> {'Prelude.Types.Left', V1148}; {'Prelude.Types.Right', V1149} -> (begin (V1150 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPrimVal"/utf8>>)), [V1144 | [V1149 | []]]))), V1150 end(V1146)) end end end end), V1151 end(V1141)) end end end end; {'TTImp.TTImp.IType', V1152} -> begin (V1153 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1152))), fun (V1154) -> begin (V1155 = (V1153(V1154))), case V1155 of {'Prelude.Types.Left', V1156} -> {'Prelude.Types.Left', V1156}; {'Prelude.Types.Right', V1157} -> (begin (V1158 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IType"/utf8>>)), [V1157 | []]))), V1158 end(V1154)) end end end end; {'TTImp.TTImp.IHole', V1159, V1160} -> begin (V1161 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1159))), fun (V1162) -> begin (V1163 = (V1161(V1162))), case V1163 of {'Prelude.Types.Left', V1164} -> {'Prelude.Types.Left', V1164}; {'Prelude.Types.Right', V1165} -> (begin (V1173 = begin (V1167 = fun (V1166) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V1160, V1166)) end), fun (V1168) -> begin (V1169 = (V1167(V1168))), case V1169 of {'Prelude.Types.Left', V1170} -> {'Prelude.Types.Left', V1170}; {'Prelude.Types.Right', V1171} -> (begin (V1172 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IHole"/utf8>>)), [V1165 | [V1171 | []]]))), V1172 end(V1168)) end end end end), V1173 end(V1162)) end end end end; {'TTImp.TTImp.IUnifyLog', V1174, V1175, V1176} -> (((((begin (V1183 = fun (V1177) -> fun (V1178) -> fun (V1179) -> fun (V1180) -> fun (V1181) -> fun (V1182) -> ('dn--un--reflect_Reflect_RawImp'(V1177, V1178, V1179, V1180, V1181, V1182)) end end end end end end), fun (V1184) -> fun (V1185) -> fun (V1186) -> fun (V1187) -> fun (V1188) -> ((((((V1183(V0))(V1184))(V1185))(V1186))(V1187))(V1188)) end end end end end end(V1))(V2))(V3))(V4))(V1176)); _ -> case V3 of 1 -> case V5 of {'TTImp.TTImp.Implicit', V1189, V1190} -> fun (V1191) -> {'Prelude.Types.Right', {'Core.TT.Erased', V1, {'Core.TT.Placeholder'}}} end; _ -> case V5 of {'TTImp.TTImp.Implicit', V1192, V1193} -> begin (V1194 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1192))), fun (V1195) -> begin (V1196 = (V1194(V1195))), case V1196 of {'Prelude.Types.Left', V1197} -> {'Prelude.Types.Left', V1197}; {'Prelude.Types.Right', V1198} -> (begin (V1205 = begin (V1199 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V1193))), fun (V1200) -> begin (V1201 = (V1199(V1200))), case V1201 of {'Prelude.Types.Left', V1202} -> {'Prelude.Types.Left', V1202}; {'Prelude.Types.Right', V1203} -> (begin (V1204 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V1198 | [V1203 | []]]))), V1204 end(V1200)) end end end end), V1205 end(V1195)) end end end end; {'TTImp.TTImp.IWithUnambigNames', V1206, V1207, V1208} -> begin (V1209 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1206))), fun (V1210) -> begin (V1211 = (V1209(V1210))), case V1211 of {'Prelude.Types.Left', V1212} -> {'Prelude.Types.Left', V1212}; {'Prelude.Types.Right', V1213} -> (begin (V1268 = begin (V1244 = (((((begin (V1238 = fun (V1214) -> fun (V1215) -> fun (V1216) -> fun (V1217) -> fun (V1218) -> fun (V1219) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V1220) -> fun (V1221) -> fun (V1222) -> fun (V1223) -> fun (V1224) -> fun (V1225) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V1226) -> fun (V1227) -> fun (V1228) -> fun (V1229) -> fun (V1230) -> fun (V1231) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V1226, V1227, V1228, V1229, V1230, V1231)) end end end end end end, fun (V1232) -> fun (V1233) -> fun (V1234) -> fun (V1235) -> fun (V1236) -> fun (V1237) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V1232, V1233, V1234, V1235, V1236, V1237)) end end end end end end}, V1220, V1221, V1222, V1223, V1224, V1225)) end end end end end end, V1214, V1215, V1216, V1217, V1218, V1219)) end end end end end end), fun (V1239) -> fun (V1240) -> fun (V1241) -> fun (V1242) -> fun (V1243) -> ((((((V1238(V0))(V1239))(V1240))(V1241))(V1242))(V1243)) end end end end end end(V1))(V2))(V3))(V4))(V1207))), fun (V1245) -> begin (V1246 = (V1244(V1245))), case V1246 of {'Prelude.Types.Left', V1247} -> {'Prelude.Types.Left', V1247}; {'Prelude.Types.Right', V1248} -> (begin (V1267 = begin (V1261 = (((((begin (V1255 = fun (V1249) -> fun (V1250) -> fun (V1251) -> fun (V1252) -> fun (V1253) -> fun (V1254) -> ('dn--un--reflect_Reflect_RawImp'(V1249, V1250, V1251, V1252, V1253, V1254)) end end end end end end), fun (V1256) -> fun (V1257) -> fun (V1258) -> fun (V1259) -> fun (V1260) -> ((((((V1255(V0))(V1256))(V1257))(V1258))(V1259))(V1260)) end end end end end end(V1))(V2))(V3))(V4))(V1208))), fun (V1262) -> begin (V1263 = (V1261(V1262))), case V1263 of {'Prelude.Types.Left', V1264} -> {'Prelude.Types.Left', V1264}; {'Prelude.Types.Right', V1265} -> (begin (V1266 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IWithUnambigNames"/utf8>>)), [V1213 | [V1248 | [V1265 | []]]]))), V1266 end(V1262)) end end end end), V1267 end(V1245)) end end end end), V1268 end(V1210)) end end end end end end; _ -> case V5 of {'TTImp.TTImp.Implicit', V1269, V1270} -> begin (V1271 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1269))), fun (V1272) -> begin (V1273 = (V1271(V1272))), case V1273 of {'Prelude.Types.Left', V1274} -> {'Prelude.Types.Left', V1274}; {'Prelude.Types.Right', V1275} -> (begin (V1282 = begin (V1276 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V1270))), fun (V1277) -> begin (V1278 = (V1276(V1277))), case V1278 of {'Prelude.Types.Left', V1279} -> {'Prelude.Types.Left', V1279}; {'Prelude.Types.Right', V1280} -> (begin (V1281 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V1275 | [V1280 | []]]))), V1281 end(V1277)) end end end end), V1282 end(V1272)) end end end end; {'TTImp.TTImp.IWithUnambigNames', V1283, V1284, V1285} -> begin (V1286 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V1283))), fun (V1287) -> begin (V1288 = (V1286(V1287))), case V1288 of {'Prelude.Types.Left', V1289} -> {'Prelude.Types.Left', V1289}; {'Prelude.Types.Right', V1290} -> (begin (V1345 = begin (V1321 = (((((begin (V1315 = fun (V1291) -> fun (V1292) -> fun (V1293) -> fun (V1294) -> fun (V1295) -> fun (V1296) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V1297) -> fun (V1298) -> fun (V1299) -> fun (V1300) -> fun (V1301) -> fun (V1302) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V1303) -> fun (V1304) -> fun (V1305) -> fun (V1306) -> fun (V1307) -> fun (V1308) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V1303, V1304, V1305, V1306, V1307, V1308)) end end end end end end, fun (V1309) -> fun (V1310) -> fun (V1311) -> fun (V1312) -> fun (V1313) -> fun (V1314) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V1309, V1310, V1311, V1312, V1313, V1314)) end end end end end end}, V1297, V1298, V1299, V1300, V1301, V1302)) end end end end end end, V1291, V1292, V1293, V1294, V1295, V1296)) end end end end end end), fun (V1316) -> fun (V1317) -> fun (V1318) -> fun (V1319) -> fun (V1320) -> ((((((V1315(V0))(V1316))(V1317))(V1318))(V1319))(V1320)) end end end end end end(V1))(V2))(V3))(V4))(V1284))), fun (V1322) -> begin (V1323 = (V1321(V1322))), case V1323 of {'Prelude.Types.Left', V1324} -> {'Prelude.Types.Left', V1324}; {'Prelude.Types.Right', V1325} -> (begin (V1344 = begin (V1338 = (((((begin (V1332 = fun (V1326) -> fun (V1327) -> fun (V1328) -> fun (V1329) -> fun (V1330) -> fun (V1331) -> ('dn--un--reflect_Reflect_RawImp'(V1326, V1327, V1328, V1329, V1330, V1331)) end end end end end end), fun (V1333) -> fun (V1334) -> fun (V1335) -> fun (V1336) -> fun (V1337) -> ((((((V1332(V0))(V1333))(V1334))(V1335))(V1336))(V1337)) end end end end end end(V1))(V2))(V3))(V4))(V1285))), fun (V1339) -> begin (V1340 = (V1338(V1339))), case V1340 of {'Prelude.Types.Left', V1341} -> {'Prelude.Types.Left', V1341}; {'Prelude.Types.Right', V1342} -> (begin (V1343 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IWithUnambigNames"/utf8>>)), [V1290 | [V1325 | [V1342 | []]]]))), V1343 end(V1339)) end end end end), V1344 end(V1322)) end end end end), V1345 end(V1287)) end end end end end end end.
'dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.MkImpTy', V6, V7, V8, V9} -> begin (V10 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V45 = begin (V15 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V44 = begin (V20 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V8))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V43 = begin (V37 = (((((begin (V31 = fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('dn--un--reflect_Reflect_RawImp'(V25, V26, V27, V28, V29, V30)) end end end end end end), fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ((((((V31(V0))(V32))(V33))(V34))(V35))(V36)) end end end end end end(V1))(V2))(V3))(V4))(V9))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V42 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkTy"/utf8>>)), [V14 | [V19 | [V24 | [V41 | []]]]]))), V42 end(V38)) end end end end), V43 end(V21)) end end end end), V44 end(V16)) end end end end), V45 end(V11)) end end end end end.
'dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.MkImpRecord', V6, V7, V8, V9, V10, V11} -> begin (V12 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V143 = begin (V17 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V142 = begin (V82 = (((((begin (V76 = fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V34, V35, V36, V37, V38, V39)) end end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V46, V47, V48, V49, V50, V51)) end end end end end end, fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('dn--un--reflect_Reflect_RawImp'(V64, V65, V66, V67, V68, V69)) end end end end end end, V58, V59, V60, V61, V62, V63)) end end end end end end, fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('dn--un--reflect_Reflect_RawImp'(V70, V71, V72, V73, V74, V75)) end end end end end end}, V52, V53, V54, V55, V56, V57)) end end end end end end}, V40, V41, V42, V43, V44, V45)) end end end end end end}, V28, V29, V30, V31, V32, V33)) end end end end end end, V22, V23, V24, V25, V26, V27)) end end end end end end), fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ((((((V76(V0))(V77))(V78))(V79))(V80))(V81)) end end end end end end(V1))(V2))(V3))(V4))(V8))), fun (V83) -> begin (V84 = (V82(V83))), case V84 of {'Prelude.Types.Left', V85} -> {'Prelude.Types.Left', V85}; {'Prelude.Types.Right', V86} -> (begin (V141 = begin (V105 = (((((begin (V99 = fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> ('dn--un--reflect_Reflect_DataOpt'(V93, V94, V95, V96, V97, V98)) end end end end end end, V87, V88, V89, V90, V91, V92)) end end end end end end), fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ((((((V99(V0))(V100))(V101))(V102))(V103))(V104)) end end end end end end(V1))(V2))(V3))(V4))(V9))), fun (V106) -> begin (V107 = (V105(V106))), case V107 of {'Prelude.Types.Left', V108} -> {'Prelude.Types.Left', V108}; {'Prelude.Types.Right', V109} -> (begin (V140 = begin (V110 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V10))), fun (V111) -> begin (V112 = (V110(V111))), case V112 of {'Prelude.Types.Left', V113} -> {'Prelude.Types.Left', V113}; {'Prelude.Types.Right', V114} -> (begin (V139 = begin (V133 = (((((begin (V127 = fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> ('dn--un--reflect_Reflect_IField'(V121, V122, V123, V124, V125, V126)) end end end end end end, V115, V116, V117, V118, V119, V120)) end end end end end end), fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> ((((((V127(V0))(V128))(V129))(V130))(V131))(V132)) end end end end end end(V1))(V2))(V3))(V4))(V11))), fun (V134) -> begin (V135 = (V133(V134))), case V135 of {'Prelude.Types.Left', V136} -> {'Prelude.Types.Left', V136}; {'Prelude.Types.Right', V137} -> (begin (V138 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkRecord"/utf8>>)), [V16 | [V21 | [V86 | [V109 | [V114 | [V137 | []]]]]]]))), V138 end(V134)) end end end end), V139 end(V111)) end end end end), V140 end(V106)) end end end end), V141 end(V83)) end end end end), V142 end(V18)) end end end end), V143 end(V13)) end end end end end.
'dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.IClaim', V6, V7, V8, V9, V10} -> begin (V11 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V82 = begin (V28 = (((((begin (V22 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V16, V17, V18, V19, V20, V21)) end end end end end end), fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ((((((V22(V0))(V23))(V24))(V25))(V26))(V27)) end end end end end end(V1))(V2))(V3))(V4))(V7))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V81 = begin (V33 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V8))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V80 = begin (V56 = (((((begin (V50 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('dn--un--reflect_Reflect_FnOpt'(V44, V45, V46, V47, V48, V49)) end end end end end end, V38, V39, V40, V41, V42, V43)) end end end end end end), fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ((((((V50(V0))(V51))(V52))(V53))(V54))(V55)) end end end end end end(V1))(V2))(V3))(V4))(V9))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V79 = begin (V73 = (((((begin (V67 = fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> ('dn--un--reflect_Reflect_ImpTy'(V61, V62, V63, V64, V65, V66)) end end end end end end), fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ((((((V67(V0))(V68))(V69))(V70))(V71))(V72)) end end end end end end(V1))(V2))(V3))(V4))(V10))), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V78 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IClaim"/utf8>>)), [V15 | [V32 | [V37 | [V60 | [V77 | []]]]]]))), V78 end(V74)) end end end end), V79 end(V57)) end end end end), V80 end(V34)) end end end end), V81 end(V29)) end end end end), V82 end(V12)) end end end end; {'TTImp.TTImp.IData', V83, V84, V85, V86} -> begin (V87 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V83))), fun (V88) -> begin (V89 = (V87(V88))), case V89 of {'Prelude.Types.Left', V90} -> {'Prelude.Types.Left', V90}; {'Prelude.Types.Right', V91} -> (begin (V140 = begin (V92 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V84))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V139 = begin (V115 = (((((begin (V109 = fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_TotalReq'(V103, V104, V105, V106, V107, V108)) end end end end end end, V97, V98, V99, V100, V101, V102)) end end end end end end), fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> ((((((V109(V0))(V110))(V111))(V112))(V113))(V114)) end end end end end end(V1))(V2))(V3))(V4))(V85))), fun (V116) -> begin (V117 = (V115(V116))), case V117 of {'Prelude.Types.Left', V118} -> {'Prelude.Types.Left', V118}; {'Prelude.Types.Right', V119} -> (begin (V138 = begin (V132 = (((((begin (V126 = fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> ('dn--un--reflect_Reflect_ImpData'(V120, V121, V122, V123, V124, V125)) end end end end end end), fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ((((((V126(V0))(V127))(V128))(V129))(V130))(V131)) end end end end end end(V1))(V2))(V3))(V4))(V86))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V137 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IData"/utf8>>)), [V91 | [V96 | [V119 | [V136 | []]]]]))), V137 end(V133)) end end end end), V138 end(V116)) end end end end), V139 end(V93)) end end end end), V140 end(V88)) end end end end; {'TTImp.TTImp.IDef', V141, V142, V143} -> begin (V144 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V141))), fun (V145) -> begin (V146 = (V144(V145))), case V146 of {'Prelude.Types.Left', V147} -> {'Prelude.Types.Left', V147}; {'Prelude.Types.Right', V148} -> (begin (V179 = begin (V149 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V142))), fun (V150) -> begin (V151 = (V149(V150))), case V151 of {'Prelude.Types.Left', V152} -> {'Prelude.Types.Left', V152}; {'Prelude.Types.Right', V153} -> (begin (V178 = begin (V172 = (((((begin (V166 = fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('dn--un--reflect_Reflect_ImpClause'(V160, V161, V162, V163, V164, V165)) end end end end end end, V154, V155, V156, V157, V158, V159)) end end end end end end), fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ((((((V166(V0))(V167))(V168))(V169))(V170))(V171)) end end end end end end(V1))(V2))(V3))(V4))(V143))), fun (V173) -> begin (V174 = (V172(V173))), case V174 of {'Prelude.Types.Left', V175} -> {'Prelude.Types.Left', V175}; {'Prelude.Types.Right', V176} -> (begin (V177 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDef"/utf8>>)), [V148 | [V153 | [V176 | []]]]))), V177 end(V173)) end end end end), V178 end(V150)) end end end end), V179 end(V145)) end end end end; {'TTImp.TTImp.IParameters', V180, V181, V182} -> begin (V183 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V180))), fun (V184) -> begin (V185 = (V183(V184))), case V185 of {'Prelude.Types.Left', V186} -> {'Prelude.Types.Left', V186}; {'Prelude.Types.Right', V187} -> (begin (V278 = begin (V248 = (((((begin (V242 = fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V200, V201, V202, V203, V204, V205)) end end end end end end, fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V212, V213, V214, V215, V216, V217)) end end end end end end, fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> fun (V223) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> fun (V229) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V230) -> fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> ('dn--un--reflect_Reflect_RawImp'(V230, V231, V232, V233, V234, V235)) end end end end end end, V224, V225, V226, V227, V228, V229)) end end end end end end, fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> fun (V241) -> ('dn--un--reflect_Reflect_RawImp'(V236, V237, V238, V239, V240, V241)) end end end end end end}, V218, V219, V220, V221, V222, V223)) end end end end end end}, V206, V207, V208, V209, V210, V211)) end end end end end end}, V194, V195, V196, V197, V198, V199)) end end end end end end, V188, V189, V190, V191, V192, V193)) end end end end end end), fun (V243) -> fun (V244) -> fun (V245) -> fun (V246) -> fun (V247) -> ((((((V242(V0))(V243))(V244))(V245))(V246))(V247)) end end end end end end(V1))(V2))(V3))(V4))(V181))), fun (V249) -> begin (V250 = (V248(V249))), case V250 of {'Prelude.Types.Left', V251} -> {'Prelude.Types.Left', V251}; {'Prelude.Types.Right', V252} -> (begin (V277 = begin (V271 = (((((begin (V265 = fun (V253) -> fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> fun (V258) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> fun (V264) -> ('dn--un--reflect_Reflect_ImpDecl'(V259, V260, V261, V262, V263, V264)) end end end end end end, V253, V254, V255, V256, V257, V258)) end end end end end end), fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> ((((((V265(V0))(V266))(V267))(V268))(V269))(V270)) end end end end end end(V1))(V2))(V3))(V4))(V182))), fun (V272) -> begin (V273 = (V271(V272))), case V273 of {'Prelude.Types.Left', V274} -> {'Prelude.Types.Left', V274}; {'Prelude.Types.Right', V275} -> (begin (V276 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IParameters"/utf8>>)), [V187 | [V252 | [V275 | []]]]))), V276 end(V272)) end end end end), V277 end(V249)) end end end end), V278 end(V184)) end end end end; {'TTImp.TTImp.IRecord', V279, V280, V281, V282, V283} -> begin (V284 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V279))), fun (V285) -> begin (V286 = (V284(V285))), case V286 of {'Prelude.Types.Left', V287} -> {'Prelude.Types.Left', V287}; {'Prelude.Types.Right', V288} -> (begin (V362 = begin (V308 = (((((begin (V302 = fun (V289) -> fun (V290) -> fun (V291) -> fun (V292) -> fun (V293) -> fun (V294) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V295) -> fun (V296) -> fun (V297) -> fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V295, V296, V297, V298, V299, V300, V301)) end end end end end end end, V289, V290, V291, V292, V293, V294)) end end end end end end), fun (V303) -> fun (V304) -> fun (V305) -> fun (V306) -> fun (V307) -> ((((((V302(V0))(V303))(V304))(V305))(V306))(V307)) end end end end end end(V1))(V2))(V3))(V4))(V280))), fun (V309) -> begin (V310 = (V308(V309))), case V310 of {'Prelude.Types.Left', V311} -> {'Prelude.Types.Left', V311}; {'Prelude.Types.Right', V312} -> (begin (V361 = begin (V313 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V281))), fun (V314) -> begin (V315 = (V313(V314))), case V315 of {'Prelude.Types.Left', V316} -> {'Prelude.Types.Left', V316}; {'Prelude.Types.Right', V317} -> (begin (V360 = begin (V336 = (((((begin (V330 = fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_TotalReq'(V324, V325, V326, V327, V328, V329)) end end end end end end, V318, V319, V320, V321, V322, V323)) end end end end end end), fun (V331) -> fun (V332) -> fun (V333) -> fun (V334) -> fun (V335) -> ((((((V330(V0))(V331))(V332))(V333))(V334))(V335)) end end end end end end(V1))(V2))(V3))(V4))(V282))), fun (V337) -> begin (V338 = (V336(V337))), case V338 of {'Prelude.Types.Left', V339} -> {'Prelude.Types.Left', V339}; {'Prelude.Types.Right', V340} -> (begin (V359 = begin (V353 = (((((begin (V347 = fun (V341) -> fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> ('dn--un--reflect_Reflect_ImpRecord'(V341, V342, V343, V344, V345, V346)) end end end end end end), fun (V348) -> fun (V349) -> fun (V350) -> fun (V351) -> fun (V352) -> ((((((V347(V0))(V348))(V349))(V350))(V351))(V352)) end end end end end end(V1))(V2))(V3))(V4))(V283))), fun (V354) -> begin (V355 = (V353(V354))), case V355 of {'Prelude.Types.Left', V356} -> {'Prelude.Types.Left', V356}; {'Prelude.Types.Right', V357} -> (begin (V358 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRecord"/utf8>>)), [V288 | [V312 | [V317 | [V340 | [V357 | []]]]]]))), V358 end(V354)) end end end end), V359 end(V337)) end end end end), V360 end(V314)) end end end end), V361 end(V309)) end end end end), V362 end(V285)) end end end end; {'TTImp.TTImp.IFail', V363, V364, V365} -> begin (V366 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V363))), fun (V367) -> begin (V368 = (V366(V367))), case V368 of {'Prelude.Types.Left', V369} -> {'Prelude.Types.Left', V369}; {'Prelude.Types.Right', V370} -> (begin (V420 = begin (V390 = (((((begin (V384 = fun (V371) -> fun (V372) -> fun (V373) -> fun (V374) -> fun (V375) -> fun (V376) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V377) -> fun (V378) -> fun (V379) -> fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V377, V378, V379, V380, V381, V382, V383)) end end end end end end end, V371, V372, V373, V374, V375, V376)) end end end end end end), fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> ((((((V384(V0))(V385))(V386))(V387))(V388))(V389)) end end end end end end(V1))(V2))(V3))(V4))(V364))), fun (V391) -> begin (V392 = (V390(V391))), case V392 of {'Prelude.Types.Left', V393} -> {'Prelude.Types.Left', V393}; {'Prelude.Types.Right', V394} -> (begin (V419 = begin (V413 = (((((begin (V407 = fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> fun (V400) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> fun (V406) -> ('dn--un--reflect_Reflect_ImpDecl'(V401, V402, V403, V404, V405, V406)) end end end end end end, V395, V396, V397, V398, V399, V400)) end end end end end end), fun (V408) -> fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> ((((((V407(V0))(V408))(V409))(V410))(V411))(V412)) end end end end end end(V1))(V2))(V3))(V4))(V365))), fun (V414) -> begin (V415 = (V413(V414))), case V415 of {'Prelude.Types.Left', V416} -> {'Prelude.Types.Left', V416}; {'Prelude.Types.Right', V417} -> (begin (V418 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IFail"/utf8>>)), [V370 | [V394 | [V417 | []]]]))), V418 end(V414)) end end end end), V419 end(V391)) end end end end), V420 end(V367)) end end end end; {'TTImp.TTImp.INamespace', V421, V422, V423} -> begin (V424 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V421))), fun (V425) -> begin (V426 = (V424(V425))), case V426 of {'Prelude.Types.Left', V427} -> {'Prelude.Types.Left', V427}; {'Prelude.Types.Right', V428} -> (begin (V459 = begin (V429 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Namespace'(V0, V1, V2, V3, V4, V422))), fun (V430) -> begin (V431 = (V429(V430))), case V431 of {'Prelude.Types.Left', V432} -> {'Prelude.Types.Left', V432}; {'Prelude.Types.Right', V433} -> (begin (V458 = begin (V452 = (((((begin (V446 = fun (V434) -> fun (V435) -> fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V440) -> fun (V441) -> fun (V442) -> fun (V443) -> fun (V444) -> fun (V445) -> ('dn--un--reflect_Reflect_ImpDecl'(V440, V441, V442, V443, V444, V445)) end end end end end end, V434, V435, V436, V437, V438, V439)) end end end end end end), fun (V447) -> fun (V448) -> fun (V449) -> fun (V450) -> fun (V451) -> ((((((V446(V0))(V447))(V448))(V449))(V450))(V451)) end end end end end end(V1))(V2))(V3))(V4))(V423))), fun (V453) -> begin (V454 = (V452(V453))), case V454 of {'Prelude.Types.Left', V455} -> {'Prelude.Types.Left', V455}; {'Prelude.Types.Right', V456} -> (begin (V457 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamespace"/utf8>>)), [V428 | [V433 | [V456 | []]]]))), V457 end(V453)) end end end end), V458 end(V430)) end end end end), V459 end(V425)) end end end end; {'TTImp.TTImp.ITransform', V460, V461, V462, V463} -> begin (V464 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V460))), fun (V465) -> begin (V466 = (V464(V465))), case V466 of {'Prelude.Types.Left', V467} -> {'Prelude.Types.Left', V467}; {'Prelude.Types.Right', V468} -> (begin (V511 = begin (V469 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V461))), fun (V470) -> begin (V471 = (V469(V470))), case V471 of {'Prelude.Types.Left', V472} -> {'Prelude.Types.Left', V472}; {'Prelude.Types.Right', V473} -> (begin (V510 = begin (V486 = (((((begin (V480 = fun (V474) -> fun (V475) -> fun (V476) -> fun (V477) -> fun (V478) -> fun (V479) -> ('dn--un--reflect_Reflect_RawImp'(V474, V475, V476, V477, V478, V479)) end end end end end end), fun (V481) -> fun (V482) -> fun (V483) -> fun (V484) -> fun (V485) -> ((((((V480(V0))(V481))(V482))(V483))(V484))(V485)) end end end end end end(V1))(V2))(V3))(V4))(V462))), fun (V487) -> begin (V488 = (V486(V487))), case V488 of {'Prelude.Types.Left', V489} -> {'Prelude.Types.Left', V489}; {'Prelude.Types.Right', V490} -> (begin (V509 = begin (V503 = (((((begin (V497 = fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> ('dn--un--reflect_Reflect_RawImp'(V491, V492, V493, V494, V495, V496)) end end end end end end), fun (V498) -> fun (V499) -> fun (V500) -> fun (V501) -> fun (V502) -> ((((((V497(V0))(V498))(V499))(V500))(V501))(V502)) end end end end end end(V1))(V2))(V3))(V4))(V463))), fun (V504) -> begin (V505 = (V503(V504))), case V505 of {'Prelude.Types.Left', V506} -> {'Prelude.Types.Left', V506}; {'Prelude.Types.Right', V507} -> (begin (V508 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ITransform"/utf8>>)), [V468 | [V473 | [V490 | [V507 | []]]]]))), V508 end(V504)) end end end end), V509 end(V487)) end end end end), V510 end(V470)) end end end end), V511 end(V465)) end end end end; {'TTImp.TTImp.IRunElabDecl', V512, V513} -> fun (V514) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %runElab"/utf8>>}, V514)) end; {'TTImp.TTImp.IPragma', V515, V516, V517} -> fun (V518) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a pragma"/utf8>>}, V518)) end; {'TTImp.TTImp.ILog', V519} -> begin (V557 = (((((begin (V551 = fun (V520) -> fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> fun (V525) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V526) -> fun (V527) -> fun (V528) -> fun (V529) -> fun (V530) -> fun (V531) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', fun (V532) -> fun (V533) -> fun (V534) -> fun (V535) -> fun (V536) -> fun (V537) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V538) -> fun (V539) -> fun (V540) -> fun (V541) -> fun (V542) -> fun (V543) -> fun (V544) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V538, V539, V540, V541, V542, V543, V544)) end end end end end end end, V532, V533, V534, V535, V536, V537)) end end end end end end, fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> fun (V549) -> fun (V550) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V545, V546, V547, V548, V549, V550)) end end end end end end}, V526, V527, V528, V529, V530, V531)) end end end end end end, V520, V521, V522, V523, V524, V525)) end end end end end end), fun (V552) -> fun (V553) -> fun (V554) -> fun (V555) -> fun (V556) -> ((((((V551(V0))(V552))(V553))(V554))(V555))(V556)) end end end end end end(V1))(V2))(V3))(V4))(V519))), fun (V558) -> begin (V559 = (V557(V558))), case V559 of {'Prelude.Types.Left', V560} -> {'Prelude.Types.Left', V560}; {'Prelude.Types.Right', V561} -> (begin (V562 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILog"/utf8>>)), [V561 | []]))), V562 end(V558)) end end end end; {'TTImp.TTImp.IBuiltin', V563, V564, V565} -> fun (V566) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %builtin"/utf8>>}, V566)) end end.
'dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.MkImpData', V6, V7, V8, V9, V10} -> begin (V11 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V88 = begin (V16 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V87 = begin (V33 = (((((begin (V27 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('dn--un--reflect_Reflect_RawImp'(V21, V22, V23, V24, V25, V26)) end end end end end end), fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ((((((V27(V0))(V28))(V29))(V30))(V31))(V32)) end end end end end end(V1))(V2))(V3))(V4))(V8))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V86 = begin (V56 = (((((begin (V50 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('dn--un--reflect_Reflect_DataOpt'(V44, V45, V46, V47, V48, V49)) end end end end end end, V38, V39, V40, V41, V42, V43)) end end end end end end), fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> ((((((V50(V0))(V51))(V52))(V53))(V54))(V55)) end end end end end end(V1))(V2))(V3))(V4))(V9))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V85 = begin (V79 = (((((begin (V73 = fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ('dn--un--reflect_Reflect_ImpTy'(V67, V68, V69, V70, V71, V72)) end end end end end end, V61, V62, V63, V64, V65, V66)) end end end end end end), fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> ((((((V73(V0))(V74))(V75))(V76))(V77))(V78)) end end end end end end(V1))(V2))(V3))(V4))(V10))), fun (V80) -> begin (V81 = (V79(V80))), case V81 of {'Prelude.Types.Left', V82} -> {'Prelude.Types.Left', V82}; {'Prelude.Types.Right', V83} -> (begin (V84 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkData"/utf8>>)), [V15 | [V20 | [V37 | [V60 | [V83 | []]]]]]))), V84 end(V80)) end end end end), V85 end(V57)) end end end end), V86 end(V34)) end end end end), V87 end(V17)) end end end end), V88 end(V12)) end end end end; {'TTImp.TTImp.MkImpLater', V89, V90, V91} -> begin (V92 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V89))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V121 = begin (V97 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V90))), fun (V98) -> begin (V99 = (V97(V98))), case V99 of {'Prelude.Types.Left', V100} -> {'Prelude.Types.Left', V100}; {'Prelude.Types.Right', V101} -> (begin (V120 = begin (V114 = (((((begin (V108 = fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> ('dn--un--reflect_Reflect_RawImp'(V102, V103, V104, V105, V106, V107)) end end end end end end), fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> ((((((V108(V0))(V109))(V110))(V111))(V112))(V113)) end end end end end end(V1))(V2))(V3))(V4))(V91))), fun (V115) -> begin (V116 = (V114(V115))), case V116 of {'Prelude.Types.Left', V117} -> {'Prelude.Types.Left', V117}; {'Prelude.Types.Right', V118} -> (begin (V119 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkLater"/utf8>>)), [V96 | [V101 | [V118 | []]]]))), V119 end(V115)) end end end end), V120 end(V98)) end end end end), V121 end(V93)) end end end end end.
'dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.PatClause', V6, V7, V8} -> begin (V9 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V50 = begin (V26 = (((((begin (V20 = fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('dn--un--reflect_Reflect_RawImp'(V14, V15, V16, V17, V18, V19)) end end end end end end), fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ((((((V20(V0))(V21))(V22))(V23))(V24))(V25)) end end end end end end(V1))(V2))(V3))(V4))(V7))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V49 = begin (V43 = (((((begin (V37 = fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('dn--un--reflect_Reflect_RawImp'(V31, V32, V33, V34, V35, V36)) end end end end end end), fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ((((((V37(V0))(V38))(V39))(V40))(V41))(V42)) end end end end end end(V1))(V2))(V3))(V4))(V8))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V48 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PatClause"/utf8>>)), [V13 | [V30 | [V47 | []]]]))), V48 end(V44)) end end end end), V49 end(V27)) end end end end), V50 end(V10)) end end end end; {'TTImp.TTImp.WithClause', V51, V52, V53, V54, V55, V56, V57} -> begin (V58 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V51))), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V189 = begin (V75 = (((((begin (V69 = fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('dn--un--reflect_Reflect_RawImp'(V63, V64, V65, V66, V67, V68)) end end end end end end), fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ((((((V69(V0))(V70))(V71))(V72))(V73))(V74)) end end end end end end(V1))(V2))(V3))(V4))(V52))), fun (V76) -> begin (V77 = (V75(V76))), case V77 of {'Prelude.Types.Left', V78} -> {'Prelude.Types.Left', V78}; {'Prelude.Types.Right', V79} -> (begin (V188 = begin (V92 = (((((begin (V86 = fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V80, V81, V82, V83, V84, V85)) end end end end end end), fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ((((((V86(V0))(V87))(V88))(V89))(V90))(V91)) end end end end end end(V1))(V2))(V3))(V4))(V53))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V187 = begin (V109 = (((((begin (V103 = fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('dn--un--reflect_Reflect_RawImp'(V97, V98, V99, V100, V101, V102)) end end end end end end), fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> ((((((V103(V0))(V104))(V105))(V106))(V107))(V108)) end end end end end end(V1))(V2))(V3))(V4))(V54))), fun (V110) -> begin (V111 = (V109(V110))), case V111 of {'Prelude.Types.Left', V112} -> {'Prelude.Types.Left', V112}; {'Prelude.Types.Right', V113} -> (begin (V186 = begin (V132 = (((((begin (V126 = fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V120, V121, V122, V123, V124, V125)) end end end end end end, V114, V115, V116, V117, V118, V119)) end end end end end end), fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ((((((V126(V0))(V127))(V128))(V129))(V130))(V131)) end end end end end end(V1))(V2))(V3))(V4))(V55))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V185 = begin (V155 = (((((begin (V149 = fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> ('dn--un--reflect_Reflect_WithFlag'(V143, V144, V145, V146, V147, V148)) end end end end end end, V137, V138, V139, V140, V141, V142)) end end end end end end), fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> ((((((V149(V0))(V150))(V151))(V152))(V153))(V154)) end end end end end end(V1))(V2))(V3))(V4))(V56))), fun (V156) -> begin (V157 = (V155(V156))), case V157 of {'Prelude.Types.Left', V158} -> {'Prelude.Types.Left', V158}; {'Prelude.Types.Right', V159} -> (begin (V184 = begin (V178 = (((((begin (V172 = fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('dn--un--reflect_Reflect_ImpClause'(V166, V167, V168, V169, V170, V171)) end end end end end end, V160, V161, V162, V163, V164, V165)) end end end end end end), fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ((((((V172(V0))(V173))(V174))(V175))(V176))(V177)) end end end end end end(V1))(V2))(V3))(V4))(V57))), fun (V179) -> begin (V180 = (V178(V179))), case V180 of {'Prelude.Types.Left', V181} -> {'Prelude.Types.Left', V181}; {'Prelude.Types.Right', V182} -> (begin (V183 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithClause"/utf8>>)), [V62 | [V79 | [V96 | [V113 | [V136 | [V159 | [V182 | []]]]]]]]))), V183 end(V179)) end end end end), V184 end(V156)) end end end end), V185 end(V133)) end end end end), V186 end(V110)) end end end end), V187 end(V93)) end end end end), V188 end(V76)) end end end end), V189 end(V59)) end end end end; {'TTImp.TTImp.ImpossibleClause', V190, V191} -> begin (V192 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V190))), fun (V193) -> begin (V194 = (V192(V193))), case V194 of {'Prelude.Types.Left', V195} -> {'Prelude.Types.Left', V195}; {'Prelude.Types.Right', V196} -> (begin (V215 = begin (V209 = (((((begin (V203 = fun (V197) -> fun (V198) -> fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> ('dn--un--reflect_Reflect_RawImp'(V197, V198, V199, V200, V201, V202)) end end end end end end), fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> ((((((V203(V0))(V204))(V205))(V206))(V207))(V208)) end end end end end end(V1))(V2))(V3))(V4))(V191))), fun (V210) -> begin (V211 = (V209(V210))), case V211 of {'Prelude.Types.Left', V212} -> {'Prelude.Types.Left', V212}; {'Prelude.Types.Right', V213} -> (begin (V214 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ImpossibleClause"/utf8>>)), [V196 | [V213 | []]]))), V214 end(V210)) end end end end), V215 end(V193)) end end end end end.
'dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.ISetField', V6, V7} -> begin (V27 = (((((begin (V21 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V14, V15, V16, V17, V18, V19, V20)) end end end end end end end, V8, V9, V10, V11, V12, V13)) end end end end end end), fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ((((((V21(V0))(V22))(V23))(V24))(V25))(V26)) end end end end end end(V1))(V2))(V3))(V4))(V6))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V50 = begin (V44 = (((((begin (V38 = fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('dn--un--reflect_Reflect_RawImp'(V32, V33, V34, V35, V36, V37)) end end end end end end), fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ((((((V38(V0))(V39))(V40))(V41))(V42))(V43)) end end end end end end(V1))(V2))(V3))(V4))(V7))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V49 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetField"/utf8>>)), [V31 | [V48 | []]]))), V49 end(V45)) end end end end), V50 end(V28)) end end end end; {'TTImp.TTImp.ISetFieldApp', V51, V52} -> begin (V72 = (((((begin (V66 = fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V59, V60, V61, V62, V63, V64, V65)) end end end end end end end, V53, V54, V55, V56, V57, V58)) end end end end end end), fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ((((((V66(V0))(V67))(V68))(V69))(V70))(V71)) end end end end end end(V1))(V2))(V3))(V4))(V51))), fun (V73) -> begin (V74 = (V72(V73))), case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> (begin (V95 = begin (V89 = (((((begin (V83 = fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('dn--un--reflect_Reflect_RawImp'(V77, V78, V79, V80, V81, V82)) end end end end end end), fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ((((((V83(V0))(V84))(V85))(V86))(V87))(V88)) end end end end end end(V1))(V2))(V3))(V4))(V52))), fun (V90) -> begin (V91 = (V89(V90))), case V91 of {'Prelude.Types.Left', V92} -> {'Prelude.Types.Left', V92}; {'Prelude.Types.Right', V93} -> (begin (V94 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetFieldApp"/utf8>>)), [V76 | [V93 | []]]))), V94 end(V90)) end end end end), V95 end(V73)) end end end end end.
'dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.MkIField', V6, V7, V8, V9, V10} -> begin (V11 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V82 = begin (V28 = (((((begin (V22 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V16, V17, V18, V19, V20, V21)) end end end end end end), fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ((((((V22(V0))(V23))(V24))(V25))(V26))(V27)) end end end end end end(V1))(V2))(V3))(V4))(V7))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V81 = begin (V51 = (((((begin (V45 = fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('dn--un--reflect_Reflect_RawImp'(V39, V40, V41, V42, V43, V44)) end end end end end end, V33, V34, V35, V36, V37, V38)) end end end end end end), fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ((((((V45(V0))(V46))(V47))(V48))(V49))(V50)) end end end end end end(V1))(V2))(V3))(V4))(V8))), fun (V52) -> begin (V53 = (V51(V52))), case V53 of {'Prelude.Types.Left', V54} -> {'Prelude.Types.Left', V54}; {'Prelude.Types.Right', V55} -> (begin (V80 = begin (V56 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V9))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V79 = begin (V73 = (((((begin (V67 = fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> ('dn--un--reflect_Reflect_RawImp'(V61, V62, V63, V64, V65, V66)) end end end end end end), fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ((((((V67(V0))(V68))(V69))(V70))(V71))(V72)) end end end end end end(V1))(V2))(V3))(V4))(V10))), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V78 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkIField"/utf8>>)), [V15 | [V32 | [V55 | [V60 | [V77 | []]]]]]))), V78 end(V74)) end end end end), V79 end(V57)) end end end end), V80 end(V52)) end end end end), V81 end(V29)) end end end end), V82 end(V12)) end end end end end.
'dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.Inline'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Inline"/utf8>>)))); {'TTImp.TTImp.NoInline'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoInline"/utf8>>)))); {'TTImp.TTImp.Deprecate'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Deprecate"/utf8>>)))); {'TTImp.TTImp.TCInline'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TCInline"/utf8>>)))); {'TTImp.TTImp.Hint', V6} -> begin (V7 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V6))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V12 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Hint"/utf8>>)), [V11 | []]))), V12 end(V8)) end end end end; {'TTImp.TTImp.GlobalHint', V13} -> begin (V14 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V13))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V19 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"GlobalHint"/utf8>>)), [V18 | []]))), V19 end(V15)) end end end end; {'TTImp.TTImp.ExternFn'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ExternFn"/utf8>>)))); {'TTImp.TTImp.ForeignFn', V20} -> begin (V39 = (((((begin (V33 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--reflect_Reflect_RawImp'(V27, V28, V29, V30, V31, V32)) end end end end end end, V21, V22, V23, V24, V25, V26)) end end end end end end), fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ((((((V33(V0))(V34))(V35))(V36))(V37))(V38)) end end end end end end(V1))(V2))(V3))(V4))(V20))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V44 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ForeignFn"/utf8>>)), [V43 | []]))), V44 end(V40)) end end end end; {'TTImp.TTImp.ForeignExport', V45} -> begin (V64 = (((((begin (V58 = fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('dn--un--reflect_Reflect_RawImp'(V52, V53, V54, V55, V56, V57)) end end end end end end, V46, V47, V48, V49, V50, V51)) end end end end end end), fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ((((((V58(V0))(V59))(V60))(V61))(V62))(V63)) end end end end end end(V1))(V2))(V3))(V4))(V45))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V69 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ForeignExport"/utf8>>)), [V68 | []]))), V69 end(V65)) end end end end; {'TTImp.TTImp.Invertible'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Invertible"/utf8>>)))); {'TTImp.TTImp.Totality', V70} -> begin (V71 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_TotalReq'(V0, V1, V2, V3, V4, V70))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V76 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Totality"/utf8>>)), [V75 | []]))), V76 end(V72)) end end end end; {'TTImp.TTImp.Macro'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Macro"/utf8>>)))); {'TTImp.TTImp.SpecArgs', V77} -> begin (V96 = (((((begin (V90 = fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V84, V85, V86, V87, V88, V89)) end end end end end end, V78, V79, V80, V81, V82, V83)) end end end end end end), fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ((((((V90(V0))(V91))(V92))(V93))(V94))(V95)) end end end end end end(V1))(V2))(V3))(V4))(V77))), fun (V97) -> begin (V98 = (V96(V97))), case V98 of {'Prelude.Types.Left', V99} -> {'Prelude.Types.Left', V99}; {'Prelude.Types.Right', V100} -> (begin (V101 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SpecArgs"/utf8>>)), [V100 | []]))), V101 end(V97)) end end end end end.
'dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NonLinearVar"/utf8>>)))); 1 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"VarApplied"/utf8>>)))); 2 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NotConstructor"/utf8>>)))); 3 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ErasedArg"/utf8>>)))); 4 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UserDotted"/utf8>>)))); 5 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnknownDot"/utf8>>)))); 6 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnderAppliedCon"/utf8>>)))) end.
'dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.SearchBy', V6} -> begin (V25 = (((((begin (V19 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V13, V14, V15, V16, V17, V18)) end end end end end end, V7, V8, V9, V10, V11, V12)) end end end end end end), fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ((((((V19(V0))(V20))(V21))(V22))(V23))(V24)) end end end end end end(V1))(V2))(V3))(V4))(V6))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V30 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SearchBy"/utf8>>)), [V29 | []]))), V30 end(V26)) end end end end; {'TTImp.TTImp.NoHints'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoHints"/utf8>>)))); {'TTImp.TTImp.UniqueSearch'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueSearch"/utf8>>)))); {'TTImp.TTImp.External'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"External"/utf8>>)))); {'TTImp.TTImp.NoNewtype'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoNewtype"/utf8>>)))); {'TTImp.TTImp.NoEnum'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoEnum"/utf8>>)))) end.
'dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.PI', V6} -> begin (V19 = (((((begin (V13 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V7, V8, V9, V10, V11, V12)) end end end end end end), fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ((((((V13(V0))(V14))(V15))(V16))(V17))(V18)) end end end end end end(V1))(V2))(V3))(V4))(V6))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V24 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PI"/utf8>>)), [V23 | []]))), V24 end(V20)) end end end end; {'TTImp.TTImp.PATTERN'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PATTERN"/utf8>>)))); {'TTImp.TTImp.COVERAGE'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"COVERAGE"/utf8>>)))); {'TTImp.TTImp.NONE'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NONE"/utf8>>)))) end.
'dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5) -> case V5 of {'TTImp.TTImp.FirstSuccess'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"FirstSuccess"/utf8>>)))); {'TTImp.TTImp.Unique'} -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Unique"/utf8>>)))); {'TTImp.TTImp.UniqueDefault', V6} -> begin (V19 = (((((begin (V13 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('dn--un--reflect_Reflect_RawImp'(V7, V8, V9, V10, V11, V12)) end end end end end end), fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ((((((V13(V0))(V14))(V15))(V16))(V17))(V18)) end end end end end end(V1))(V2))(V3))(V4))(V6))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V24 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueDefault"/utf8>>)), [V23 | []]))), V24 end(V20)) end end end end end.
'dn--un--__Impl_Reify_WithFlag'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_WithFlag'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_UseSide'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_UseSide'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_RawImp'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpTy'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpRecord'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpDecl'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpData'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpData'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpClause'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_IFieldUpdate'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_IField'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_IField'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_FnOpt'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_DotReason'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_DotReason'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_DataOpt'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_BindMode'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_BindMode'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_AltType'(V0, V1, V2, V3) -> ('dn--un--reify_Reify_AltType'(V0, V1, V2, V3)).
'dn--un--__Impl_Reflect_WithFlag'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_WithFlag'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_UseSide'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpData'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_IField'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_DotReason'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_BindMode'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_AltType'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5)).
