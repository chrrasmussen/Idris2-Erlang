-module('Idris.Idris2.Libraries.Data.IOMatrix').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--write'/5,
  'un--width'/1,
  'un--toPosition'/3,
  'un--read'/4,
  'un--new'/3,
  'un--height'/1
]).
'un--write'(V0, V1, V2, V3, V4) -> case ('un--toPosition'(V1, V2, V3)) of {'Prelude.Types.Nothing'} -> case V0 of {'Prelude.IO.MkHasIO', V5, V6} -> case V5 of {'Prelude.Interfaces.MkMonad', V7, V8, V9} -> case V7 of {'Prelude.Interfaces.MkApplicative', V10, V11, V12} -> ((V11('erased'))(0)) end end end; {'Prelude.Types.Just', V13} -> ((begin (V26 = case V0 of {'Prelude.IO.MkHasIO', V18, V19} -> case V18 of {'Prelude.Interfaces.MkMonad', V20, V21, V22} -> case V20 of {'Prelude.Interfaces.MkApplicative', V23, V24, V25} -> V23 end end end), fun (V27) -> fun (V28) -> ((((V26('erased'))('erased'))(V27))(V28)) end end end(fun (V17) -> 1 end))(('Idris.Idris2.Erlang.Data.IOArray':'un--writeArray'(V0, case V1 of {'Libraries.Data.IOMatrix.MkIOMatrix', V14, V15, V16} -> V16 end, V13, V4)))) end.
'un--width'(V0) -> case V0 of {'Libraries.Data.IOMatrix.MkIOMatrix', V1, V2, V3} -> V1 end.
'un--toPosition'(V0, V1, V2) -> case V0 of {'Libraries.Data.IOMatrix.MkIOMatrix', V3, V4, V5} -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V8, V9)) end end end end, fun (V10) -> fun (V11) -> {'Prelude.Types.Just', V11} end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V14, V15)) end end end end}, fun (V16) -> {'Prelude.Types.Nothing'} end, fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V18, V19)) end end end}, case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V1, begin (V20 = 0), case ((V20 band 9223372036854775808) =/= 0) of 'true' -> (V20 bor -9223372036854775808); _ -> (V20 band 9223372036854775807) end end)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V2, begin (V21 = 0), case ((V21 band 9223372036854775808) =/= 0) of 'true' -> (V21 bor -9223372036854775808); _ -> (V21 band 9223372036854775807) end end)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V1, V3)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V2, V4)) end end end of 1 -> 0; 0 -> 1 end)), fun (V22) -> {'Prelude.Types.Just', begin (V24 = (begin (V23 = (V1 * V4)), case ((V23 band 9223372036854775808) =/= 0) of 'true' -> (V23 bor -9223372036854775808); _ -> (V23 band 9223372036854775807) end end + V2)), case ((V24 band 9223372036854775808) =/= 0) of 'true' -> (V24 bor -9223372036854775808); _ -> (V24 band 9223372036854775807) end end} end)) end.
'un--read'(V0, V1, V2, V3) -> case ('un--toPosition'(V1, V2, V3)) of {'Prelude.Types.Nothing'} -> case V0 of {'Prelude.IO.MkHasIO', V4, V5} -> case V4 of {'Prelude.Interfaces.MkMonad', V6, V7, V8} -> case V6 of {'Prelude.Interfaces.MkApplicative', V9, V10, V11} -> ((V10('erased'))({'Prelude.Types.Nothing'})) end end end; {'Prelude.Types.Just', V12} -> ('Idris.Idris2.Erlang.Data.IOArray':'un--readArray'(V0, case V1 of {'Libraries.Data.IOMatrix.MkIOMatrix', V13, V14, V15} -> V15 end, V12)) end.
'un--new'(V0, V1, V2) -> case V0 of {'Prelude.IO.MkHasIO', V3, V4} -> case V3 of {'Prelude.Interfaces.MkMonad', V5, V6, V7} -> ((((V6('erased'))('erased'))(('Idris.Idris2.Erlang.Data.IOArray':'un--newArray'(V0, begin (V17 = (V1 * V2)), case ((V17 band 9223372036854775808) =/= 0) of 'true' -> (V17 bor -9223372036854775808); _ -> (V17 band 9223372036854775807) end end))))(fun (V8) -> case V0 of {'Prelude.IO.MkHasIO', V9, V10} -> case V9 of {'Prelude.Interfaces.MkMonad', V11, V12, V13} -> case V11 of {'Prelude.Interfaces.MkApplicative', V14, V15, V16} -> ((V15('erased'))({'Libraries.Data.IOMatrix.MkIOMatrix', V1, V2, V8})) end end end end)) end end.
'un--height'(V0) -> case V0 of {'Libraries.Data.IOMatrix.MkIOMatrix', V1, V2, V3} -> V2 end.
