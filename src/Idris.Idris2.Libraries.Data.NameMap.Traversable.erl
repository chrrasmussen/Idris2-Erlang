-module('Idris.Idris2.Libraries.Data.NameMap.Traversable').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--treeTraverse'/2,
  'un--traverseNameMap'/2
]).
'un--treeTraverse'(V0, V1) -> case V1 of {'Libraries.Data.NameMap.Leaf', V2, V3} -> begin (V4 = ((V0(V2))(V3))), ((begin (V20 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V17, V18, V19)) end end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end((begin (V12 = fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> {'Prelude.Types.Right', (V8(V11))} end end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V5) -> {'Libraries.Data.NameMap.Leaf', V2, V5} end))))(V4)) end; {'Libraries.Data.NameMap.Branch2', V23, V24, V25} -> ('Idris.Idris2.Core.Core':'un--<*>'(begin (V26 = ('un--treeTraverse'(V0, V23))), ((begin (V43 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V40, V41, V42)) end end end end end), fun (V44) -> fun (V45) -> ((((V43('erased'))('erased'))(V44))(V45)) end end end((begin (V35 = fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> {'Prelude.Types.Right', (V31(V34))} end end end end end), fun (V36) -> fun (V37) -> ((((V35('erased'))('erased'))(V36))(V37)) end end end(fun (V27) -> fun (V28) -> {'Libraries.Data.NameMap.Branch2', V27, V24, V28} end end))))(V26)) end, ('un--treeTraverse'(V0, V25)))); {'Libraries.Data.NameMap.Branch3', V46, V47, V48, V49, V50} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(begin (V51 = ('un--treeTraverse'(V0, V46))), ((begin (V69 = fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V66, V67, V68)) end end end end end), fun (V70) -> fun (V71) -> ((((V69('erased'))('erased'))(V70))(V71)) end end end((begin (V61 = fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> {'Prelude.Types.Right', (V57(V60))} end end end end end), fun (V62) -> fun (V63) -> ((((V61('erased'))('erased'))(V62))(V63)) end end end(fun (V52) -> fun (V53) -> fun (V54) -> {'Libraries.Data.NameMap.Branch3', V52, V47, V53, V49, V54} end end end))))(V51)) end, ('un--treeTraverse'(V0, V48)))), ('un--treeTraverse'(V0, V50)))) end.
'un--traverseNameMap'(V0, V1) -> case V1 of {'Libraries.Data.NameMap.Empty'} -> fun (V2) -> {'Prelude.Types.Right', {'Libraries.Data.NameMap.Empty'}} end; {'Libraries.Data.NameMap.M', V3, V4} -> begin (V5 = ('un--treeTraverse'(V0, V4))), ((begin (V21 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V18, V19, V20)) end end end end end), fun (V22) -> fun (V23) -> ((((V21('erased'))('erased'))(V22))(V23)) end end end((begin (V13 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> {'Prelude.Types.Right', (V9(V12))} end end end end end), fun (V14) -> fun (V15) -> ((((V13('erased'))('erased'))(V14))(V15)) end end end(fun (V6) -> {'Libraries.Data.NameMap.M', V3, V6} end))))(V5)) end end.
