-module('Idris.Idris2.Data.Primitives.Views.IntV').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--intRec-1132'/2,
  'case--divides-1051'/3,
  'un--intRec'/1,
  'un--divides'/2
]).
'case--intRec-1132'(V0, V1) -> case V1 of 1 -> {'Data.Primitives.Views.IntV.IntSucc', ('un--intRec'(begin (V3 = (begin (V2 = -1), case ((V2 band 9223372036854775808) =/= 0) of 'true' -> (V2 bor -9223372036854775808); _ -> (V2 band 9223372036854775807) end end + V0)), case ((V3 band 9223372036854775808) =/= 0) of 'true' -> (V3 bor -9223372036854775808); _ -> (V3 band 9223372036854775807) end end))}; 0 -> {'Data.Primitives.Views.IntV.IntPred', ('un--intRec'(begin (V5 = (begin (V4 = 1), case ((V4 band 9223372036854775808) =/= 0) of 'true' -> (V4 bor -9223372036854775808); _ -> (V4 band 9223372036854775807) end end + V0)), case ((V5 band 9223372036854775808) =/= 0) of 'true' -> (V5 bor -9223372036854775808); _ -> (V5 band 9223372036854775807) end end))} end.
'case--divides-1051'(V0, V1, V2) -> case V2 of 1 -> begin (V3 = (0 - ('Idris.Idris2.Prelude.Num':'dn--un--div_Integral_Int'(V1, ('Idris.Idris2.Prelude.Num':'dn--un--abs_Abs_Int'(V0)))))), case ((V3 band 9223372036854775808) =/= 0) of 'true' -> (V3 bor -9223372036854775808); _ -> (V3 band 9223372036854775807) end end; 0 -> ('Idris.Idris2.Prelude.Num':'dn--un--div_Integral_Int'(V1, V0)) end.
'un--intRec'(V0) -> case V0 of 0 -> {'Data.Primitives.Views.IntV.IntZ'}; _ -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V0, begin (V1 = 0), case ((V1 band 9223372036854775808) =/= 0) of 'true' -> (V1 bor -9223372036854775808); _ -> (V1 band 9223372036854775807) end end)) of 1 -> {'Data.Primitives.Views.IntV.IntSucc', ('un--intRec'(begin (V3 = (begin (V2 = -1), case ((V2 band 9223372036854775808) =/= 0) of 'true' -> (V2 bor -9223372036854775808); _ -> (V2 band 9223372036854775807) end end + V0)), case ((V3 band 9223372036854775808) =/= 0) of 'true' -> (V3 bor -9223372036854775808); _ -> (V3 band 9223372036854775807) end end))}; 0 -> {'Data.Primitives.Views.IntV.IntPred', ('un--intRec'(begin (V5 = (begin (V4 = 1), case ((V4 band 9223372036854775808) =/= 0) of 'true' -> (V4 bor -9223372036854775808); _ -> (V4 band 9223372036854775807) end end + V0)), case ((V5 band 9223372036854775808) =/= 0) of 'true' -> (V5 bor -9223372036854775808); _ -> (V5 band 9223372036854775807) end end))} end end.
'un--divides'(V0, V1) -> case V1 of 0 -> {'Data.Primitives.Views.IntV.DivByZero'}; _ -> begin (V4 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V1, begin (V2 = 0), case ((V2 band 9223372036854775808) =/= 0) of 'true' -> (V2 bor -9223372036854775808); _ -> (V2 band 9223372036854775807) end end)) of 1 -> begin (V3 = (0 - ('Idris.Idris2.Prelude.Num':'dn--un--div_Integral_Int'(V0, ('Idris.Idris2.Prelude.Num':'dn--un--abs_Abs_Int'(V1)))))), case ((V3 band 9223372036854775808) =/= 0) of 'true' -> (V3 bor -9223372036854775808); _ -> (V3 band 9223372036854775807) end end; 0 -> ('Idris.Idris2.Prelude.Num':'dn--un--div_Integral_Int'(V0, V1)) end), begin (V7 = ('Idris.Idris2.Prelude.Num':'dn--un--abs_Abs_Int'(begin (V6 = (V0 - begin (V5 = (V4 * V1)), case ((V5 band 9223372036854775808) =/= 0) of 'true' -> (V5 bor -9223372036854775808); _ -> (V5 band 9223372036854775807) end end)), case ((V6 band 9223372036854775808) =/= 0) of 'true' -> (V6 bor -9223372036854775808); _ -> (V6 band 9223372036854775807) end end))), {'Data.Primitives.Views.IntV.DivBy', V4, V7, {'Builtin.Refl'}} end end end.
