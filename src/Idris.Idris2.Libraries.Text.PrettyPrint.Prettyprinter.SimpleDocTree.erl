-module('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--fromStream,flatten-2344'/4,
  'case--sdocToTreeParser-2124'/3,
  'nested--4034-2311--in--un--internalError'/1,
  'nested--4034-2310--in--un--flatten'/2,
  'un--unAnnotateST'/1,
  'un--traverse'/3,
  'un--sdocToTreeParser'/1,
  'un--reAnnotateST'/2,
  'un--fromStream'/1,
  'un--collectAnnotations'/3,
  'un--alterAnnotationsST'/2
]).
'case--fromStream,flatten-2344'(V0, V1, V2, V3) -> case V3 of {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V4} -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [V1 | V4]}; _ -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [V1 | [V3 | []]]} end.
'case--sdocToTreeParser-2124'(V0, V1, V2) -> case V2 of {'Builtin.MkPair', V3, V4} -> case V4 of {'Prelude.Types.Nothing'} -> {'Builtin.MkPair', {'Prelude.Types.Nothing'}, {'Prelude.Types.Nothing'}}; _ -> case V3 of {'Prelude.Types.Just', V5} -> case V4 of {'Prelude.Types.Nothing'} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V0, V5}}, {'Prelude.Types.Nothing'}}; {'Prelude.Types.Just', V6} -> case ('un--sdocToTreeParser'(V6)) of {'Builtin.MkPair', V7, V8} -> case V7 of {'Prelude.Types.Just', V9} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V0, V5} | [V9 | []]]}}, V8}; {'Prelude.Types.Nothing'} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V0, V5}}, V8} end end end; {'Prelude.Types.Nothing'} -> case V4 of {'Prelude.Types.Just', V10} -> ('un--sdocToTreeParser'(V10)); {'Prelude.Types.Nothing'} -> {'Builtin.MkPair', {'Prelude.Types.Nothing'}, {'Prelude.Types.Nothing'}} end end end end.
'nested--4034-2311--in--un--internalError'(V0) -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', begin (V1 = ('Idris.Idris2.Prelude.Types.String':'un--length'(<<"<internal pretty printing error>"/utf8>>))), case ((V1 band 9223372036854775808) =/= 0) of 'true' -> (V1 bor -9223372036854775808); _ -> (V1 band 9223372036854775807) end end, <<"<internal pretty printing error>"/utf8>>}.
'nested--4034-2310--in--un--flatten'(V0, V1) -> case V1 of {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V2} -> case V2 of [E0 | E1] -> (fun (V3, V4) -> case V4 of [E2 | E3] -> (fun (V5, V6) -> case V5 of {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> case V6 of [] -> ('nested--4034-2310--in--un--flatten'(V0, V3)); _ -> V1 end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V7} -> case V6 of [] -> ('case--fromStream,flatten-2344'(V0, V3, V7, ('nested--4034-2310--in--un--flatten'(V0, {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V7})))); _ -> V1 end; _ -> V1 end end(E2, E3)); _ -> V1 end end(E0, E1)); _ -> V1 end; _ -> V1 end.
'un--unAnnotateST'(V0) -> ('un--alterAnnotationsST'(fun (V1) -> [] end, V0)).
'un--traverse'(V0, V1, V2) -> case V2 of {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> case V0 of {'Prelude.Interfaces.MkApplicative', V3, V4, V5} -> ((V4('erased'))({'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'})) end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V6} -> case V0 of {'Prelude.Interfaces.MkApplicative', V7, V8, V9} -> ((V8('erased'))({'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V6})) end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V10, V11} -> case V0 of {'Prelude.Interfaces.MkApplicative', V12, V13, V14} -> ((V13('erased'))({'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V10, V11})) end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V15} -> case V0 of {'Prelude.Interfaces.MkApplicative', V16, V17, V18} -> ((V17('erased'))({'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V15})) end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V19, V20} -> case V0 of {'Prelude.Interfaces.MkApplicative', V21, V22, V23} -> ((((V23('erased'))('erased'))(((begin (V29 = case V0 of {'Prelude.Interfaces.MkApplicative', V26, V27, V28} -> V26 end), fun (V30) -> fun (V31) -> ((((V29('erased'))('erased'))(V30))(V31)) end end end(fun (V24) -> fun (V25) -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V24, V25} end end))((V1(V19))))))(('un--traverse'(V0, V1, V20)))) end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V32} -> ((begin (V38 = case V0 of {'Prelude.Interfaces.MkApplicative', V35, V36, V37} -> V35 end), fun (V39) -> fun (V40) -> ((((V38('erased'))('erased'))(V39))(V40)) end end end(fun (V34) -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V34} end))(('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'(V0, fun (V33) -> ('un--traverse'(V0, V1, V33)) end, V32)))) end.
'un--sdocToTreeParser'(V0) -> case V0 of {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.SEmpty'} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'}}, {'Prelude.Types.Nothing'}}; {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.SChar', V1, V2} -> case ('un--sdocToTreeParser'((V2()))) of {'Builtin.MkPair', V3, V4} -> case V3 of {'Prelude.Types.Just', V5} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V1} | [V5 | []]]}}, V4}; {'Prelude.Types.Nothing'} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V1}}, V4} end end; {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.SText', V6, V7, V8} -> case ('un--sdocToTreeParser'((V8()))) of {'Builtin.MkPair', V9, V10} -> case V9 of {'Prelude.Types.Just', V11} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V6, V7} | [V11 | []]]}}, V10}; {'Prelude.Types.Nothing'} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V6, V7}}, V10} end end; {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.SLine', V12, V13} -> case ('un--sdocToTreeParser'(V13)) of {'Builtin.MkPair', V14, V15} -> case V14 of {'Prelude.Types.Just', V16} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V12} | [V16 | []]]}}, V15}; {'Prelude.Types.Nothing'} -> {'Builtin.MkPair', {'Prelude.Types.Just', {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V12}}, V15} end end; {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.SAnnPush', V17, V18} -> ('case--sdocToTreeParser-2124'(V17, V18, ('un--sdocToTreeParser'(V18)))); {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.SAnnPop', V19} -> {'Builtin.MkPair', {'Prelude.Types.Nothing'}, {'Prelude.Types.Just', V19}} end.
'un--reAnnotateST'(V0, V1) -> ('un--alterAnnotationsST'(fun (V2) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'((V0(V2)))) end, V1)).
'un--fromStream'(V0) -> case ('un--sdocToTreeParser'(V0)) of {'Builtin.MkPair', V1, V2} -> case V1 of {'Prelude.Types.Just', V3} -> case V2 of {'Prelude.Types.Nothing'} -> ('nested--4034-2310--in--un--flatten'(V0, V3)); _ -> ('nested--4034-2311--in--un--internalError'(V0)) end; _ -> ('nested--4034-2311--in--un--internalError'(V0)) end; _ -> ('nested--4034-2311--in--un--internalError'(V0)) end.
'un--collectAnnotations'(V0, V1, V2) -> case V2 of {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> case V0 of {'Prelude.Interfaces.MkMonoid', V3, V4} -> V4 end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V5} -> case V0 of {'Prelude.Interfaces.MkMonoid', V6, V7} -> V7 end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V8, V9} -> case V0 of {'Prelude.Interfaces.MkMonoid', V10, V11} -> V11 end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V12} -> case V0 of {'Prelude.Interfaces.MkMonoid', V13, V14} -> V14 end; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V15, V16} -> ((begin (V19 = case V0 of {'Prelude.Interfaces.MkMonoid', V17, V18} -> V17 end), fun (V20) -> fun (V21) -> ((V19(V20))(V21)) end end end((V1(V15))))(('un--collectAnnotations'(V0, V1, V16)))); {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V22} -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V0, fun (V23) -> V23 end, ((begin (V29 = fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V27, V28)) end end end end), fun (V30) -> fun (V31) -> ((((V29('erased'))('erased'))(V30))(V31)) end end end(fun (V24) -> ('un--collectAnnotations'(V0, V1, V24)) end))(V22)))) end.
'un--alterAnnotationsST'(V0, V1) -> case V1 of {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'}; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V2} -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V2}; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V3, V4} -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V3, V4}; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V5} -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V5}; {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V6, V7} -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(fun (V8) -> fun (V9) -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V8, V9} end end, ('un--alterAnnotationsST'(V0, V7)), (V0(V6)))); {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V10} -> {'Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', ((begin (V16 = fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V14, V15)) end end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V11) -> ('un--alterAnnotationsST'(V0, V11)) end))(V10))} end.
