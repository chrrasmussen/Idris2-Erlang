-module('Idris.Idris2.Core.Binary').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--12601-10810--in--un--trimName'/6,
  'nested--10557-8919--in--un--resolved_aux'/6,
  'nested--11193-9718--in--un--resolvedRW'/26,
  'nested--11193-9719--in--un--resolvedPrim'/26,
  'nested--11193-9717--in--un--resolvedPair'/26,
  'nested--12060-10291--in--un--replaceNS'/8,
  'nested--10542-8880--in--un--full_aux'/6,
  'nested--11178-9485--in--un--fullRW'/26,
  'nested--11178-9486--in--un--fullPrim'/26,
  'nested--11178-9484--in--un--fullPair'/26,
  'nested--13078-11242--in--un--completeDef'/7,
  'nested--14519-12608--in--un--alreadyDone'/12,
  'nested--13848-11974--in--un--addT'/6,
  'dn--un--resolved_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'/2,
  'dn--un--resolved_HasNames_(|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)'/2,
  'dn--un--resolved_HasNames_(|((Builtin.Pair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)),((Builtin.MkPair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|))|)'/2,
  'dn--un--resolved_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'/2,
  'dn--un--resolved_HasNames_(TTCFile $e)'/3,
  'dn--un--resolved_HasNames_(List $a)'/3,
  'dn--un--full_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'/2,
  'dn--un--full_HasNames_(|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)'/2,
  'dn--un--full_HasNames_(|((Builtin.Pair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)),((Builtin.MkPair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|))|)'/2,
  'dn--un--full_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'/2,
  'dn--un--full_HasNames_(TTCFile $e)'/3,
  'dn--un--full_HasNames_(List $a)'/3,
  'un--writeToTTC'/6,
  'un--writeTTCFile'/4,
  'un--updateTransforms'/2,
  'un--updateRewrite'/2,
  'un--updatePrims'/2,
  'un--updatePrimNames'/2,
  'un--updatePair'/2,
  'un--updateNameDirectives'/2,
  'un--updateFExports'/2,
  'un--updateCGDirectives'/2,
  'un--ttcVersion'/0,
  'un--stringToBuffer'/1,
  'un--readTotalReq'/1,
  'un--readTTCFile'/6,
  'un--readIncData'/1,
  'un--readImportHashes'/1,
  'un--readHashes'/1,
  'un--readFromTTC'/9,
  'un--readEscriptFile'/1,
  'un--getTotalReq'/2,
  'un--getSaveDefs'/4,
  'un--getNSas'/1,
  'un--getIncData'/2,
  'un--getImportHashes'/2,
  'un--getHashes'/2,
  'un--filenameFromModuleLocation'/1,
  'un--escriptReadFromFile'/1,
  'un--checkTTCVersion'/4,
  'un--addTypeHint'/3,
  'un--addGlobalDef'/5,
  'un--addAutoHint'/2
]).
'nested--12601-10810--in--un--trimName'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Core.Name.NS', V6, V7} -> begin (V8 = {'Core.Name.NS', V6, V7}), case ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V6, V4)) of 1 -> V7; 0 -> V8 end end; _ -> V5 end.
'nested--10557-8919--in--un--resolved_aux'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> {'Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V4))} end; [E0 | E1] -> (fun (V7, V8) -> begin (V11 = case V0 of {'Core.Context.dn--un--__mkHasNames', V9, V10} -> ((V10(V3))(V7)) end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V16 = ('nested--10557-8919--in--un--resolved_aux'(V0, V1, V2, V3, [V15 | V4], V8))), V16 end(V12)) end end end end end(E0, E1)) end.
'nested--11193-9718--in--un--resolvedRW'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V25 of {'Prelude.Types.Nothing'} -> fun (V26) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V27} -> case V27 of {'Core.Options.MkRewriteNs', V28, V29} -> begin (V31 = fun (V30) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V24, V28, V30)) end), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V44 = begin (V37 = fun (V36) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V24, V29, V36)) end), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V43 = fun (V42) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Core.Options.MkRewriteNs', V35, V41}}} end), V43 end(V38)) end end end end), V44 end(V32)) end end end end end end.
'nested--11193-9719--in--un--resolvedPrim'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V25 of {'Core.Options.MkPrimNs', V26, V27, V28, V29} -> begin (V35 = ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V30, V31)) end end, fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V32, V33, V34)) end end end}, V24, V26))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V74 = begin (V45 = ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V40, V41)) end end, fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V42, V43, V44)) end end end}, V24, V27))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V73 = begin (V55 = ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V50, V51)) end end, fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V52, V53, V54)) end end end}, V24, V28))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V72 = begin (V65 = ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V60, V61)) end end, fun (V62) -> fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V62, V63, V64)) end end end}, V24, V29))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V71 = fun (V70) -> {'Prelude.Types.Right', {'Core.Options.MkPrimNs', V39, V49, V59, V69}} end), V71 end(V66)) end end end end), V72 end(V56)) end end end end), V73 end(V46)) end end end end), V74 end(V36)) end end end end end.
'nested--11193-9717--in--un--resolvedPair'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V25 of {'Prelude.Types.Nothing'} -> fun (V26) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V27} -> case V27 of {'Core.Options.MkPairNs', V28, V29, V30} -> begin (V32 = fun (V31) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V24, V28, V31)) end), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V52 = begin (V38 = fun (V37) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V24, V29, V37)) end), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V51 = begin (V44 = fun (V43) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V24, V30, V43)) end), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V50 = fun (V49) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Core.Options.MkPairNs', V36, V42, V48}}} end), V50 end(V45)) end end end end), V51 end(V39)) end end end end), V52 end(V33)) end end end end end end.
'nested--12060-10291--in--un--replaceNS'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Builtin.MkPair', V8, V9} -> case V8 of {'Core.Name.NS', V10, V11} -> V7; _ -> {'Builtin.MkPair', {'Core.Name.NS', V6, V8}, V9} end end.
'nested--10542-8880--in--un--full_aux'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> {'Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V4))} end; [E0 | E1] -> (fun (V7, V8) -> begin (V11 = case V0 of {'Core.Context.dn--un--__mkHasNames', V9, V10} -> ((V9(V3))(V7)) end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V16 = ('nested--10542-8880--in--un--full_aux'(V0, V1, V2, V3, [V15 | V4], V8))), V16 end(V12)) end end end end end(E0, E1)) end.
'nested--11178-9485--in--un--fullRW'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V25 of {'Prelude.Types.Nothing'} -> fun (V26) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V27} -> case V27 of {'Core.Options.MkRewriteNs', V28, V29} -> begin (V30 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V24, V28))), fun (V31) -> begin (V32 = (V30(V31))), case V32 of {'Prelude.Types.Left', V33} -> {'Prelude.Types.Left', V33}; {'Prelude.Types.Right', V34} -> (begin (V42 = begin (V35 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V24, V29))), fun (V36) -> begin (V37 = (V35(V36))), case V37 of {'Prelude.Types.Left', V38} -> {'Prelude.Types.Left', V38}; {'Prelude.Types.Right', V39} -> (begin (V41 = fun (V40) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Core.Options.MkRewriteNs', V34, V39}}} end), V41 end(V36)) end end end end), V42 end(V31)) end end end end end end.
'nested--11178-9486--in--un--fullPrim'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V25 of {'Core.Options.MkPrimNs', V26, V27, V28, V29} -> ('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(('Idris.Idris2.Core.Core':'un--<*>'(fun (V30) -> {'Prelude.Types.Right', fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> {'Core.Options.MkPrimNs', V31, V32, V33, V34} end end end end} end, ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V35, V36)) end end, fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V37, V38, V39)) end end end}, V24, V26)))), ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V40, V41)) end end, fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V42, V43, V44)) end end end}, V24, V27)))), ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V45) -> fun (V46) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V45, V46)) end end, fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V47, V48, V49)) end end end}, V24, V28)))), ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Maybe $a)'({'Core.Context.dn--un--__mkHasNames', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V50, V51)) end end, fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V52, V53, V54)) end end end}, V24, V29)))) end.
'nested--11178-9484--in--un--fullPair'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> case V25 of {'Prelude.Types.Nothing'} -> fun (V26) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; {'Prelude.Types.Just', V27} -> case V27 of {'Core.Options.MkPairNs', V28, V29, V30} -> begin (V31 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V24, V28))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V49 = begin (V36 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V24, V29))), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V48 = begin (V41 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V24, V30))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V47 = fun (V46) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Core.Options.MkPairNs', V35, V40, V45}}} end), V47 end(V42)) end end end end), V48 end(V37)) end end end end), V49 end(V32)) end end end end end end.
'nested--13078-11242--in--un--completeDef'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Prelude.Types.Nothing'} -> 0; {'Prelude.Types.Just', V7} -> case V7 of {'Core.Context.Context.MkGlobalDef', V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} -> case V25 of {'Core.Context.Context.None'} -> 0; {'Core.Context.Context.Hole', V30, V31} -> 0; _ -> 1 end end end.
'nested--14519-12608--in--un--alreadyDone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of [] -> 0; [E0 | E1] -> (fun (V12, V13) -> case V12 of {'Builtin.MkPair', V14, V15} -> case V15 of {'Builtin.MkPair', V16, V17} -> case V17 of {'Builtin.MkPair', V18, V19} -> case case ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V9, V16)) of 1 -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V10, V19)); 0 -> 0 end of 1 -> 1; 0 -> case case ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V9, V16)) of 1 -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(('Idris.Idris2.Core.Name.Namespace':'un--miAsNamespace'(V9)), V10)); 0 -> 0 end of 1 -> 1; 0 -> ('nested--14519-12608--in--un--alreadyDone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V13)) end end end end end end(E0, E1)) end.
'nested--13848-11974--in--un--addT'(V0, V1, V2, V3, V4, V5) -> begin (V11 = begin (V6 = V3), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V123 = case ('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V4, case V15 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> V29 end)) of {'Prelude.Types.Nothing'} -> begin (V48 = V3), fun (V49) -> begin (V84 = (begin (V50 = V48), fun (V51) -> ('erlang':'put'(V50, case V15 of {'Core.Context.MkDefs', V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83} -> {'Core.Context.MkDefs', V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V4, [V5 | []], V65)), V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83} end)) end end(V49))), {'Prelude.Types.Right', V84} end end end; {'Prelude.Types.Just', V85} -> begin (V86 = V3), fun (V87) -> begin (V122 = (begin (V88 = V86), fun (V89) -> ('erlang':'put'(V88, case V15 of {'Core.Context.MkDefs', V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121} -> {'Core.Context.MkDefs', V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V4, [V5 | V85], V103)), V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121} end)) end end(V87))), {'Prelude.Types.Right', V122} end end end end), V123 end(V12)) end end end end.
'dn--un--resolved_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> begin (V5 = fun (V4) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V0, V2, V4)) end), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V17 = begin (V10 = ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Transform'(V0, V3))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', {'Builtin.MkPair', V9, V14}} end), V16 end(V11)) end end end end), V17 end(V6)) end end end end end.
'dn--un--resolved_HasNames_(|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> begin (V5 = fun (V4) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V0, V2, V4)) end), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V11 = fun (V10) -> {'Prelude.Types.Right', {'Builtin.MkPair', V9, V3}} end), V11 end(V6)) end end end end end.
'dn--un--resolved_HasNames_(|((Builtin.Pair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)),((Builtin.MkPair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|))|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> case V3 of {'Builtin.MkPair', V4, V5} -> begin (V7 = fun (V6) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V0, V2, V6)) end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V20 = begin (V13 = fun (V12) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V0, V4, V12)) end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V19 = fun (V18) -> {'Prelude.Types.Right', {'Builtin.MkPair', V11, {'Builtin.MkPair', V17, V5}}} end), V19 end(V14)) end end end end), V20 end(V8)) end end end end end end.
'dn--un--resolved_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> begin (V5 = fun (V4) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V0, V2, V4)) end), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V11 = fun (V10) -> {'Prelude.Types.Right', {'Builtin.MkPair', V9, V3}} end), V11 end(V6)) end end end end end.
'dn--un--resolved_HasNames_(TTCFile $e)'(V0, V1, V2) -> case V2 of {'Core.Binary.MkTTCFile', V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24} -> begin (V26 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V25) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)'(V1, V25)) end, V11, []))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V95 = begin (V32 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V31) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)),((Builtin.MkPair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|))|)'(V1, V31)) end, V12, []))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V94 = begin (V37 = ('nested--11193-9717--in--un--resolvedPair'(V0, V24, V23, V22, V21, V20, V19, V18, V17, V16, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V1, V17))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V93 = begin (V42 = ('nested--11193-9718--in--un--resolvedRW'(V0, V24, V23, V22, V21, V20, V19, V18, V17, V16, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V1, V18))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V92 = begin (V47 = ('nested--11193-9719--in--un--resolvedPrim'(V0, V24, V23, V22, V21, V20, V19, V18, V17, V16, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V1, V19))), fun (V48) -> begin (V49 = (V47(V48))), case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> (begin (V91 = begin (V56 = ('dn--un--resolved_HasNames_(List $a)'({'Core.Context.dn--un--__mkHasNames', fun (V52) -> fun (V53) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V54, V55)) end end}, V1, V20))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V90 = begin (V65 = ('dn--un--resolved_HasNames_(List $a)'({'Core.Context.dn--un--__mkHasNames', fun (V61) -> fun (V62) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'(V61, V62)) end end, fun (V63) -> fun (V64) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'(V63, V64)) end end}, V1, V22))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V89 = begin (V74 = ('dn--un--resolved_HasNames_(List $a)'({'Core.Context.dn--un--__mkHasNames', fun (V70) -> fun (V71) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V70, V71)) end end, fun (V72) -> fun (V73) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V72, V73)) end end}, V1, V23))), fun (V75) -> begin (V76 = (V74(V75))), case V76 of {'Prelude.Types.Left', V77} -> {'Prelude.Types.Left', V77}; {'Prelude.Types.Right', V78} -> (begin (V88 = begin (V81 = case V0 of {'Core.Context.dn--un--__mkHasNames', V79, V80} -> ((V80(V1))(V24)) end), fun (V82) -> begin (V83 = (V81(V82))), case V83 of {'Prelude.Types.Left', V84} -> {'Prelude.Types.Left', V84}; {'Prelude.Types.Right', V85} -> (begin (V87 = fun (V86) -> {'Prelude.Types.Right', {'Core.Binary.MkTTCFile', V3, V4, V5, V6, V7, V8, V9, V10, V30, V36, V13, V14, V15, V16, V41, V46, V51, V60, V21, V69, V78, V85}} end), V87 end(V82)) end end end end), V88 end(V75)) end end end end), V89 end(V66)) end end end end), V90 end(V57)) end end end end), V91 end(V48)) end end end end), V92 end(V43)) end end end end), V93 end(V38)) end end end end), V94 end(V33)) end end end end), V95 end(V27)) end end end end end.
'dn--un--resolved_HasNames_(List $a)'(V0, V1, V2) -> ('nested--10557-8919--in--un--resolved_aux'(V0, V2, V1, V1, [], V2)).
'dn--un--full_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V0, V2))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V16 = begin (V9 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Transform'(V0, V3))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V15 = fun (V14) -> {'Prelude.Types.Right', {'Builtin.MkPair', V8, V13}} end), V15 end(V10)) end end end end), V16 end(V5)) end end end end end.
'dn--un--full_HasNames_(|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V0, V2))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V10 = fun (V9) -> {'Prelude.Types.Right', {'Builtin.MkPair', V8, V3}} end), V10 end(V5)) end end end end end.
'dn--un--full_HasNames_(|((Builtin.Pair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)),((Builtin.MkPair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|))|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> case V3 of {'Builtin.MkPair', V4, V5} -> begin (V6 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V0, V2))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V18 = begin (V11 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V0, V4))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V17 = fun (V16) -> {'Prelude.Types.Right', {'Builtin.MkPair', V10, {'Builtin.MkPair', V15, V5}}} end), V17 end(V12)) end end end end), V18 end(V7)) end end end end end end.
'dn--un--full_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> begin (V4 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V0, V2))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V10 = fun (V9) -> {'Prelude.Types.Right', {'Builtin.MkPair', V8, V3}} end), V10 end(V5)) end end end end end.
'dn--un--full_HasNames_(TTCFile $e)'(V0, V1, V2) -> case V2 of {'Core.Binary.MkTTCFile', V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24} -> begin (V26 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V25) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)'(V1, V25)) end, V11, []))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V95 = begin (V32 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V31) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|)),((Builtin.MkPair Name) (|((Builtin.Pair Name) Bool),((Builtin.MkPair Name) Bool)|))|)'(V1, V31)) end, V12, []))), fun (V33) -> begin (V34 = (V32(V33))), case V34 of {'Prelude.Types.Left', V35} -> {'Prelude.Types.Left', V35}; {'Prelude.Types.Right', V36} -> (begin (V94 = begin (V37 = ('nested--11178-9484--in--un--fullPair'(V0, V24, V23, V22, V21, V20, V19, V18, V17, V16, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V1, V17))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V93 = begin (V42 = ('nested--11178-9485--in--un--fullRW'(V0, V24, V23, V22, V21, V20, V19, V18, V17, V16, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V1, V18))), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V92 = begin (V47 = ('nested--11178-9486--in--un--fullPrim'(V0, V24, V23, V22, V21, V20, V19, V18, V17, V16, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V1, V19))), fun (V48) -> begin (V49 = (V47(V48))), case V49 of {'Prelude.Types.Left', V50} -> {'Prelude.Types.Left', V50}; {'Prelude.Types.Right', V51} -> (begin (V91 = begin (V56 = ('dn--un--full_HasNames_(List $a)'({'Core.Context.dn--un--__mkHasNames', fun (V52) -> fun (V53) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V54, V55)) end end}, V1, V20))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V90 = begin (V65 = ('dn--un--full_HasNames_(List $a)'({'Core.Context.dn--un--__mkHasNames', fun (V61) -> fun (V62) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'(V61, V62)) end end, fun (V63) -> fun (V64) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) Transform),((Builtin.MkPair Name) Transform)|)'(V63, V64)) end end}, V1, V22))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V89 = begin (V74 = ('dn--un--full_HasNames_(List $a)'({'Core.Context.dn--un--__mkHasNames', fun (V70) -> fun (V71) -> ('dn--un--full_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V70, V71)) end end, fun (V72) -> fun (V73) -> ('dn--un--resolved_HasNames_(|((Builtin.Pair Name) (List $a)),((Builtin.MkPair Name) (List $a))|)'(V72, V73)) end end}, V1, V23))), fun (V75) -> begin (V76 = (V74(V75))), case V76 of {'Prelude.Types.Left', V77} -> {'Prelude.Types.Left', V77}; {'Prelude.Types.Right', V78} -> (begin (V88 = begin (V81 = case V0 of {'Core.Context.dn--un--__mkHasNames', V79, V80} -> ((V79(V1))(V24)) end), fun (V82) -> begin (V83 = (V81(V82))), case V83 of {'Prelude.Types.Left', V84} -> {'Prelude.Types.Left', V84}; {'Prelude.Types.Right', V85} -> (begin (V87 = fun (V86) -> {'Prelude.Types.Right', {'Core.Binary.MkTTCFile', V3, V4, V5, V6, V7, V8, V9, V10, V30, V36, V13, V14, V15, V16, V41, V46, V51, V60, V21, V69, V78, V85}} end), V87 end(V82)) end end end end), V88 end(V75)) end end end end), V89 end(V66)) end end end end), V90 end(V57)) end end end end), V91 end(V48)) end end end end), V92 end(V43)) end end end end), V93 end(V38)) end end end end), V94 end(V33)) end end end end), V95 end(V27)) end end end end end.
'dn--un--full_HasNames_(List $a)'(V0, V1, V2) -> ('nested--10542-8880--in--un--full_aux'(V0, V2, V1, V1, [], V2)).
'un--writeToTTC'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Core.Binary.Prims':'un--initBinary'())), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V780 = begin (V16 = begin (V11 = V1), fun (V12) -> begin (V15 = (begin (V13 = V11), fun (V14) -> ('erlang':'get'(V13)) end end(V12))), {'Prelude.Types.Right', V15} end end end), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V779 = begin (V26 = begin (V21 = V2), fun (V22) -> begin (V25 = (begin (V23 = V21), fun (V24) -> ('erlang':'get'(V23)) end end(V22))), {'Prelude.Types.Right', V25} end end end), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V778 = begin (V95 = ('un--getSaveDefs'(case V20 of {'Core.Context.MkDefs', V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62} -> V33 end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(case V20 of {'Core.Context.MkDefs', V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94} -> V68 end)), [], V20))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V777 = begin (V142 = ('Idris.Idris2.Core.Binary.Prims':'un--hashFileWith'(case V20 of {'Core.Context.MkDefs', V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131} -> case V104 of {'Core.Options.MkOptions', V132, V133, V134, V135, V136, V137, V138, V139, V140, V141} -> V141 end end, V4))), fun (V143) -> begin (V144 = (V142(V143))), case V144 of {'Prelude.Types.Left', V145} -> {'Prelude.Types.Left', V145}; {'Prelude.Types.Right', V146} -> (begin (V776 = begin (V147 = ('Idris.Idris2.Core.Context':'un--getDefaultTotalityOption'(V1))), fun (V148) -> begin (V149 = (V147(V148))), case V149 of {'Prelude.Types.Left', V150} -> {'Prelude.Types.Left', V150}; {'Prelude.Types.Right', V151} -> (begin (V775 = begin (V187 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"ttc.write"/utf8>>, 5, fun () -> ('Idris.Idris2.Data.String':'un--unwords'([<<"Writing"/utf8>> | [V5 | [<<"with source hash"/utf8>> | [('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V152) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V152)) end, fun (V153) -> fun (V154) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V153, V154)) end end}, V146)) | [<<"and interface hash"/utf8>> | [('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(case V20 of {'Core.Context.MkDefs', V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186} -> V171 end)) | []]]]]]])) end))), fun (V188) -> begin (V189 = (V187(V188))), case V189 of {'Prelude.Types.Left', V190} -> {'Prelude.Types.Left', V190}; {'Prelude.Types.Right', V191} -> (begin (V774 = begin (V746 = ('un--writeTTCFile'(V0, V1, V10, {'Core.Binary.MkTTCFile', ('un--ttcVersion'()), V151, V146, case V20 of {'Core.Context.MkDefs', V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223} -> V208 end, case V20 of {'Core.Context.MkDefs', V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255} -> V241 end, case V20 of {'Core.Context.MkDefs', V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287} -> V278 end, V99, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(case V20 of {'Core.Context.MkDefs', V288, V289, V290, V291, V292, V293, V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319} -> V313 end)), case V20 of {'Core.Context.MkDefs', V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350, V351} -> V332 end, case V20 of {'Core.Context.MkDefs', V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382, V383} -> V363 end, case V20 of {'Core.Context.MkDefs', V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415} -> V402 end, case V30 of {'Core.UnifyState.MkUState', V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427} -> V424 end, case V20 of {'Core.Context.MkDefs', V428, V429, V430, V431, V432, V433, V434, V435, V436, V437, V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459} -> V430 end, case V20 of {'Core.Context.MkDefs', V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491} -> V463 end, case V20 of {'Core.Context.MkDefs', V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514, V515, V516, V517, V518, V519, V520, V521, V522, V523} -> case V496 of {'Core.Options.MkOptions', V524, V525, V526, V527, V528, V529, V530, V531, V532, V533} -> V528 end end, case V20 of {'Core.Context.MkDefs', V534, V535, V536, V537, V538, V539, V540, V541, V542, V543, V544, V545, V546, V547, V548, V549, V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560, V561, V562, V563, V564, V565} -> case V538 of {'Core.Options.MkOptions', V566, V567, V568, V569, V570, V571, V572, V573, V574, V575} -> V571 end end, case V20 of {'Core.Context.MkDefs', V576, V577, V578, V579, V580, V581, V582, V583, V584, V585, V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596, V597, V598, V599, V600, V601, V602, V603, V604, V605, V606, V607} -> case V580 of {'Core.Options.MkOptions', V608, V609, V610, V611, V612, V613, V614, V615, V616, V617} -> V614 end end, ('Idris.Idris2.Libraries.Data.NameMap':'un--toList'(case V20 of {'Core.Context.MkDefs', V618, V619, V620, V621, V622, V623, V624, V625, V626, V627, V628, V629, V630, V631, V632, V633, V634, V635, V636, V637, V638, V639, V640, V641, V642, V643, V644, V645, V646, V647, V648, V649} -> V633 end)), case V20 of {'Core.Context.MkDefs', V650, V651, V652, V653, V654, V655, V656, V657, V658, V659, V660, V661, V662, V663, V664, V665, V666, V667, V668, V669, V670, V671, V672, V673, V674, V675, V676, V677, V678, V679, V680, V681} -> V670 end, case V20 of {'Core.Context.MkDefs', V682, V683, V684, V685, V686, V687, V688, V689, V690, V691, V692, V693, V694, V695, V696, V697, V698, V699, V700, V701, V702, V703, V704, V705, V706, V707, V708, V709, V710, V711, V712, V713} -> V696 end, ('Idris.Idris2.Libraries.Data.NameMap':'un--toList'(case V20 of {'Core.Context.MkDefs', V714, V715, V716, V717, V718, V719, V720, V721, V722, V723, V724, V725, V726, V727, V728, V729, V730, V731, V732, V733, V734, V735, V736, V737, V738, V739, V740, V741, V742, V743, V744, V745} -> V745 end)), V3}))), fun (V747) -> begin (V748 = (V746(V747))), case V748 of {'Prelude.Types.Left', V749} -> {'Prelude.Types.Left', V749}; {'Prelude.Types.Right', V750} -> (begin (V773 = begin (V764 = begin (V756 = begin (V751 = V10), fun (V752) -> begin (V755 = (begin (V753 = V751), fun (V754) -> ('erlang':'get'(V753)) end end(V752))), {'Prelude.Types.Right', V755} end end end), fun (V757) -> begin (V758 = (V756(V757))), case V758 of {'Prelude.Types.Left', V759} -> {'Prelude.Types.Left', V759}; {'Prelude.Types.Right', V760} -> (begin (V763 = fun (V761) -> begin (V762 = ('Idris.Idris2.Libraries.Utils.Binary':'un--writeToFile'(V5, V760, V761))), {'Prelude.Types.Right', V762} end end), V763 end(V757)) end end end end), fun (V765) -> begin (V766 = (V764(V765))), case V766 of {'Prelude.Types.Left', V767} -> {'Prelude.Types.Left', V767}; {'Prelude.Types.Right', V768} -> (begin (V772 = fun (V769) -> case V768 of {'Prelude.Types.Right', V770} -> {'Prelude.Types.Right', {'Builtin.MkUnit'}}; {'Prelude.Types.Left', V771} -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<V5/binary, <<<<": "/utf8>>/binary, ('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V771))/binary>>/binary>>}, V769)) end end), V772 end(V765)) end end end end), V773 end(V747)) end end end end), V774 end(V188)) end end end end), V775 end(V148)) end end end end), V776 end(V143)) end end end end), V777 end(V96)) end end end end), V778 end(V27)) end end end end), V779 end(V17)) end end end end), V780 end(V7)) end end end end.
'un--writeTTCFile'(V0, V1, V2, V3) -> begin (V8 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Core.Context.dn--un--__mkHasNames', fun (V4) -> fun (V5) -> ('dn--un--full_HasNames_(TTCFile $e)'(('Idris.Idris2.Builtin':'un--fst'(V0)), V4, V5)) end end, fun (V6) -> fun (V7) -> ('dn--un--resolved_HasNames_(TTCFile $e)'(('Idris.Idris2.Builtin':'un--fst'(V0)), V6, V7)) end end}, V3))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V991 = begin (V16 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V2, (begin (V14 = fun (V13) -> V13 end), fun (V15) -> (V14(V15)) end end(<<"TT2"/utf8>>))))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V990 = begin (V43 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_WastefulInt'(V2, case V12 of {'Core.Binary.MkTTCFile', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42} -> V21 end))), fun (V44) -> begin (V45 = (V43(V44))), case V45 of {'Prelude.Types.Left', V46} -> {'Prelude.Types.Left', V46}; {'Prelude.Types.Right', V47} -> (begin (V989 = begin (V70 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_TotalReq'(V2, case V12 of {'Core.Binary.MkTTCFile', V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69} -> V49 end))), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V988 = begin (V100 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V75, V76)) end end, fun (V77) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V77)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99} -> V80 end))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V987 = begin (V127 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V2, case V12 of {'Core.Binary.MkTTCFile', V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126} -> V108 end))), fun (V128) -> begin (V129 = (V127(V128))), case V129 of {'Prelude.Types.Left', V130} -> {'Prelude.Types.Left', V130}; {'Prelude.Types.Right', V131} -> (begin (V986 = begin (V169 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V132) -> fun (V133) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V134) -> fun (V135) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V134, V135)) end end, fun (V136) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V136)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V137, V138)) end end, fun (V139) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V139)) end}}, V132, V133)) end end, fun (V140) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V141) -> fun (V142) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V141, V142)) end end, fun (V143) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V143)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V144, V145)) end end, fun (V146) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V146)) end}}, V140)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168} -> V151 end))), fun (V170) -> begin (V171 = (V169(V170))), case V171 of {'Prelude.Types.Left', V172} -> {'Prelude.Types.Left', V172}; {'Prelude.Types.Right', V173} -> (begin (V985 = begin (V259 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V176, V177)) end end, fun (V178) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V178)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V179) -> fun (V180) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V181) -> fun (V182) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V181, V182)) end end, fun (V183) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V183)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V184) -> fun (V185) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V186) -> fun (V187) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V186, V187)) end end, fun (V188) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V188)) end}, V184, V185)) end end, fun (V189) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V190) -> fun (V191) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V190, V191)) end end, fun (V192) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V192)) end}, V189)) end}}, V179, V180)) end end, fun (V193) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V194) -> fun (V195) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V194, V195)) end end, fun (V196) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V196)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V197) -> fun (V198) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V199) -> fun (V200) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V199, V200)) end end, fun (V201) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V201)) end}, V197, V198)) end end, fun (V202) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V203) -> fun (V204) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V203, V204)) end end, fun (V205) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V205)) end}, V202)) end}}, V193)) end}}, V174, V175)) end end, fun (V206) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V207) -> fun (V208) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V207, V208)) end end, fun (V209) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V209)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V210) -> fun (V211) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V212) -> fun (V213) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V212, V213)) end end, fun (V214) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V214)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V215) -> fun (V216) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V217) -> fun (V218) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V217, V218)) end end, fun (V219) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V219)) end}, V215, V216)) end end, fun (V220) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V221, V222)) end end, fun (V223) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V223)) end}, V220)) end}}, V210, V211)) end end, fun (V224) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V225) -> fun (V226) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V225, V226)) end end, fun (V227) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V227)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V228) -> fun (V229) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V230) -> fun (V231) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V230, V231)) end end, fun (V232) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V232)) end}, V228, V229)) end end, fun (V233) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V234) -> fun (V235) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V234, V235)) end end, fun (V236) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V236)) end}, V233)) end}}, V224)) end}}, V206)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258} -> V242 end))), fun (V260) -> begin (V261 = (V259(V260))), case V261 of {'Prelude.Types.Left', V262} -> {'Prelude.Types.Left', V262}; {'Prelude.Types.Right', V263} -> (begin (V984 = begin (V325 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V264) -> fun (V265) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V266) -> fun (V267) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V266, V267)) end end, fun (V268) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V268)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V269) -> fun (V270) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V271) -> fun (V272) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V271, V272)) end end, fun (V273) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V273)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V274) -> fun (V275) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V274, V275)) end end, fun (V276) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V276)) end}}, V269, V270)) end end, fun (V277) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V278) -> fun (V279) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V278, V279)) end end, fun (V280) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V280)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V281, V282)) end end, fun (V283) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V283)) end}}, V277)) end}}, V264, V265)) end end, fun (V284) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V285) -> fun (V286) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V285, V286)) end end, fun (V287) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V287)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V288) -> fun (V289) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V290) -> fun (V291) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V290, V291)) end end, fun (V292) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V292)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V293) -> fun (V294) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V293, V294)) end end, fun (V295) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V295)) end}}, V288, V289)) end end, fun (V296) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V297) -> fun (V298) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V297, V298)) end end, fun (V299) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V299)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V300) -> fun (V301) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V300, V301)) end end, fun (V302) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V302)) end}}, V296)) end}}, V284)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323, V324} -> V313 end))), fun (V326) -> begin (V327 = (V325(V326))), case V327 of {'Prelude.Types.Left', V328} -> {'Prelude.Types.Left', V328}; {'Prelude.Types.Right', V329} -> (begin (V983 = begin (V354 = case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Core.Binary.Prims.dn--un--__mkTTC', V330, V331} -> ((V330(V2))(case V12 of {'Core.Binary.MkTTCFile', V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350, V351, V352, V353} -> V353 end)) end), fun (V355) -> begin (V356 = (V354(V355))), case V356 of {'Prelude.Types.Left', V357} -> {'Prelude.Types.Left', V357}; {'Prelude.Types.Right', V358} -> (begin (V982 = begin (V396 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V359) -> fun (V360) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V361) -> fun (V362) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V361, V362)) end end, fun (V363) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V363)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V364) -> fun (V365) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Binary'(V364, V365)) end end, fun (V366) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Binary'(V366)) end}}, V359, V360)) end end, fun (V367) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V368) -> fun (V369) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V368, V369)) end end, fun (V370) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V370)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V371) -> fun (V372) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Binary'(V371, V372)) end end, fun (V373) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Binary'(V373)) end}}, V367)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V374, V375, V376, V377, V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395} -> V380 end))), fun (V397) -> begin (V398 = (V396(V397))), case V398 of {'Prelude.Types.Left', V399} -> {'Prelude.Types.Left', V399}; {'Prelude.Types.Right', V400} -> (begin (V981 = begin (V426 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V401) -> fun (V402) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V401, V402)) end end, fun (V403) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V403)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425} -> V411 end))), fun (V427) -> begin (V428 = (V426(V427))), case V428 of {'Prelude.Types.Left', V429} -> {'Prelude.Types.Left', V429}; {'Prelude.Types.Right', V430} -> (begin (V980 = begin (V468 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V431) -> fun (V432) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V433) -> fun (V434) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V433, V434)) end end, fun (V435) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V435)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V436) -> fun (V437) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V436, V437)) end end, fun (V438) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V438)) end}}, V431, V432)) end end, fun (V439) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V440) -> fun (V441) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V440, V441)) end end, fun (V442) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V442)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V443) -> fun (V444) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V443, V444)) end end, fun (V445) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V445)) end}}, V439)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461, V462, V463, V464, V465, V466, V467} -> V454 end))), fun (V469) -> begin (V470 = (V468(V469))), case V470 of {'Prelude.Types.Left', V471} -> {'Prelude.Types.Left', V471}; {'Prelude.Types.Right', V472} -> (begin (V979 = begin (V534 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V473) -> fun (V474) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V475) -> fun (V476) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V475, V476)) end end, fun (V477) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V477)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V478) -> fun (V479) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V480) -> fun (V481) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V480, V481)) end end, fun (V482) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V482)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V483) -> fun (V484) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V483, V484)) end end, fun (V485) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V485)) end}}, V478, V479)) end end, fun (V486) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V487) -> fun (V488) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V487, V488)) end end, fun (V489) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V489)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V490) -> fun (V491) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V490, V491)) end end, fun (V492) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V492)) end}}, V486)) end}}, V473, V474)) end end, fun (V493) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V494) -> fun (V495) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V494, V495)) end end, fun (V496) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V496)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V497) -> fun (V498) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V499) -> fun (V500) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V499, V500)) end end, fun (V501) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V501)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V502) -> fun (V503) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V502, V503)) end end, fun (V504) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V504)) end}}, V497, V498)) end end, fun (V505) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V506) -> fun (V507) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V506, V507)) end end, fun (V508) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V508)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V509) -> fun (V510) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V509, V510)) end end, fun (V511) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V511)) end}}, V505)) end}}, V493)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V512, V513, V514, V515, V516, V517, V518, V519, V520, V521, V522, V523, V524, V525, V526, V527, V528, V529, V530, V531, V532, V533} -> V521 end))), fun (V535) -> begin (V536 = (V534(V535))), case V536 of {'Prelude.Types.Left', V537} -> {'Prelude.Types.Left', V537}; {'Prelude.Types.Right', V538} -> (begin (V978 = begin (V561 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V2, case V12 of {'Core.Binary.MkTTCFile', V539, V540, V541, V542, V543, V544, V545, V546, V547, V548, V549, V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560} -> V550 end))), fun (V562) -> begin (V563 = (V561(V562))), case V563 of {'Prelude.Types.Left', V564} -> {'Prelude.Types.Left', V564}; {'Prelude.Types.Right', V565} -> (begin (V977 = begin (V588 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V2, case V12 of {'Core.Binary.MkTTCFile', V566, V567, V568, V569, V570, V571, V572, V573, V574, V575, V576, V577, V578, V579, V580, V581, V582, V583, V584, V585, V586, V587} -> V578 end))), fun (V589) -> begin (V590 = (V588(V589))), case V590 of {'Prelude.Types.Left', V591} -> {'Prelude.Types.Left', V591}; {'Prelude.Types.Right', V592} -> (begin (V976 = begin (V618 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V593) -> fun (V594) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V593, V594)) end end, fun (V595) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V595)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V596, V597, V598, V599, V600, V601, V602, V603, V604, V605, V606, V607, V608, V609, V610, V611, V612, V613, V614, V615, V616, V617} -> V609 end))), fun (V619) -> begin (V620 = (V618(V619))), case V620 of {'Prelude.Types.Left', V621} -> {'Prelude.Types.Left', V621}; {'Prelude.Types.Right', V622} -> (begin (V975 = begin (V648 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V623) -> fun (V624) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_PairNames'(V623, V624)) end end, fun (V625) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_PairNames'(V625)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V626, V627, V628, V629, V630, V631, V632, V633, V634, V635, V636, V637, V638, V639, V640, V641, V642, V643, V644, V645, V646, V647} -> V640 end))), fun (V649) -> begin (V650 = (V648(V649))), case V650 of {'Prelude.Types.Left', V651} -> {'Prelude.Types.Left', V651}; {'Prelude.Types.Right', V652} -> (begin (V974 = begin (V678 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V653) -> fun (V654) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RewriteNames'(V653, V654)) end end, fun (V655) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RewriteNames'(V655)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V656, V657, V658, V659, V660, V661, V662, V663, V664, V665, V666, V667, V668, V669, V670, V671, V672, V673, V674, V675, V676, V677} -> V671 end))), fun (V679) -> begin (V680 = (V678(V679))), case V680 of {'Prelude.Types.Left', V681} -> {'Prelude.Types.Left', V681}; {'Prelude.Types.Right', V682} -> (begin (V973 = begin (V705 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_PrimNames'(V2, case V12 of {'Core.Binary.MkTTCFile', V683, V684, V685, V686, V687, V688, V689, V690, V691, V692, V693, V694, V695, V696, V697, V698, V699, V700, V701, V702, V703, V704} -> V699 end))), fun (V706) -> begin (V707 = (V705(V706))), case V707 of {'Prelude.Types.Left', V708} -> {'Prelude.Types.Left', V708}; {'Prelude.Types.Right', V709} -> (begin (V972 = begin (V759 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V710) -> fun (V711) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V712) -> fun (V713) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V712, V713)) end end, fun (V714) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V714)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V715) -> fun (V716) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V717) -> fun (V718) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V717, V718)) end end, fun (V719) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V719)) end}, V715, V716)) end end, fun (V720) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V721) -> fun (V722) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V721, V722)) end end, fun (V723) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V723)) end}, V720)) end}}, V710, V711)) end end, fun (V724) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V725) -> fun (V726) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V725, V726)) end end, fun (V727) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V727)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V728) -> fun (V729) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V730) -> fun (V731) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V730, V731)) end end, fun (V732) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V732)) end}, V728, V729)) end end, fun (V733) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V734) -> fun (V735) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V734, V735)) end end, fun (V736) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V736)) end}, V733)) end}}, V724)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V737, V738, V739, V740, V741, V742, V743, V744, V745, V746, V747, V748, V749, V750, V751, V752, V753, V754, V755, V756, V757, V758} -> V754 end))), fun (V760) -> begin (V761 = (V759(V760))), case V761 of {'Prelude.Types.Left', V762} -> {'Prelude.Types.Left', V762}; {'Prelude.Types.Right', V763} -> (begin (V971 = begin (V825 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V764) -> fun (V765) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V766) -> fun (V767) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V766, V767)) end end, fun (V768) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V768)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V769) -> fun (V770) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V771) -> fun (V772) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V771, V772)) end end, fun (V773) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V773)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V774) -> fun (V775) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V774, V775)) end end, fun (V776) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V776)) end}}, V769, V770)) end end, fun (V777) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V778) -> fun (V779) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V778, V779)) end end, fun (V780) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V780)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V781) -> fun (V782) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V781, V782)) end end, fun (V783) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V783)) end}}, V777)) end}}, V764, V765)) end end, fun (V784) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V785) -> fun (V786) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V785, V786)) end end, fun (V787) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V787)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V788) -> fun (V789) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V790) -> fun (V791) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V790, V791)) end end, fun (V792) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V792)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V793) -> fun (V794) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V793, V794)) end end, fun (V795) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V795)) end}}, V788, V789)) end end, fun (V796) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V797) -> fun (V798) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V797, V798)) end end, fun (V799) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V799)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V800) -> fun (V801) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V800, V801)) end end, fun (V802) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V802)) end}}, V796)) end}}, V784)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V803, V804, V805, V806, V807, V808, V809, V810, V811, V812, V813, V814, V815, V816, V817, V818, V819, V820, V821, V822, V823, V824} -> V821 end))), fun (V826) -> begin (V827 = (V825(V826))), case V827 of {'Prelude.Types.Left', V828} -> {'Prelude.Types.Left', V828}; {'Prelude.Types.Right', V829} -> (begin (V970 = begin (V867 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V830) -> fun (V831) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V832) -> fun (V833) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V832, V833)) end end, fun (V834) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V834)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V835) -> fun (V836) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Transform'(V835, V836)) end end, fun (V837) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Transform'(V837)) end}}, V830, V831)) end end, fun (V838) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V839) -> fun (V840) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V839, V840)) end end, fun (V841) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V841)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V842) -> fun (V843) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Transform'(V842, V843)) end end, fun (V844) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Transform'(V844)) end}}, V838)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V845, V846, V847, V848, V849, V850, V851, V852, V853, V854, V855, V856, V857, V858, V859, V860, V861, V862, V863, V864, V865, V866} -> V864 end))), fun (V868) -> begin (V869 = (V867(V868))), case V869 of {'Prelude.Types.Left', V870} -> {'Prelude.Types.Left', V870}; {'Prelude.Types.Right', V871} -> (begin (V969 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V872) -> fun (V873) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V874) -> fun (V875) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V874, V875)) end end, fun (V876) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V876)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V877) -> fun (V878) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V879) -> fun (V880) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V881) -> fun (V882) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V881, V882)) end end, fun (V883) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V883)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V884) -> fun (V885) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V884, V885)) end end, fun (V886) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V886)) end}}, V879, V880)) end end, fun (V887) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V888) -> fun (V889) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V888, V889)) end end, fun (V890) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V890)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V891) -> fun (V892) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V891, V892)) end end, fun (V893) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V893)) end}}, V887)) end}, V877, V878)) end end, fun (V894) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V895) -> fun (V896) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V897) -> fun (V898) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V897, V898)) end end, fun (V899) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V899)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V900) -> fun (V901) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V900, V901)) end end, fun (V902) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V902)) end}}, V895, V896)) end end, fun (V903) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V904) -> fun (V905) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V904, V905)) end end, fun (V906) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V906)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V907) -> fun (V908) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V907, V908)) end end, fun (V909) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V909)) end}}, V903)) end}, V894)) end}}, V872, V873)) end end, fun (V910) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V911) -> fun (V912) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V911, V912)) end end, fun (V913) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V913)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V914) -> fun (V915) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V916) -> fun (V917) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V918) -> fun (V919) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V918, V919)) end end, fun (V920) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V920)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V921) -> fun (V922) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V921, V922)) end end, fun (V923) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V923)) end}}, V916, V917)) end end, fun (V924) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V925) -> fun (V926) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V925, V926)) end end, fun (V927) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V927)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V928) -> fun (V929) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V928, V929)) end end, fun (V930) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V930)) end}}, V924)) end}, V914, V915)) end end, fun (V931) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V932) -> fun (V933) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V934) -> fun (V935) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V934, V935)) end end, fun (V936) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V936)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V937) -> fun (V938) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V937, V938)) end end, fun (V939) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V939)) end}}, V932, V933)) end end, fun (V940) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V941) -> fun (V942) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V941, V942)) end end, fun (V943) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V943)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V944) -> fun (V945) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V944, V945)) end end, fun (V946) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V946)) end}}, V940)) end}, V931)) end}}, V910)) end}, V2, case V12 of {'Core.Binary.MkTTCFile', V947, V948, V949, V950, V951, V952, V953, V954, V955, V956, V957, V958, V959, V960, V961, V962, V963, V964, V965, V966, V967, V968} -> V967 end))), V969 end(V868)) end end end end), V970 end(V826)) end end end end), V971 end(V760)) end end end end), V972 end(V706)) end end end end), V973 end(V679)) end end end end), V974 end(V649)) end end end end), V975 end(V619)) end end end end), V976 end(V589)) end end end end), V977 end(V562)) end end end end), V978 end(V535)) end end end end), V979 end(V469)) end end end end), V980 end(V427)) end end end end), V981 end(V397)) end end end end), V982 end(V355)) end end end end), V983 end(V326)) end end end end), V984 end(V260)) end end end end), V985 end(V170)) end end end end), V986 end(V128)) end end end end), V987 end(V101)) end end end end), V988 end(V71)) end end end end), V989 end(V44)) end end end end), V990 end(V17)) end end end end), V991 end(V9)) end end end end.
'un--updateTransforms'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> begin (V28 = begin (V12 = ('Idris.Idris2.Core.Context':'un--toResolvedNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V7, V8)) end end, fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V9, V10, V11)) end end end}, V5))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V27 = begin (V21 = ('Idris.Idris2.Core.Context':'un--toResolvedNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Transform'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Transform'(V19, V20)) end end}, V6))), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V26 = ('nested--13848-11974--in--un--addT'(V5, V6, V4, V0, V16, V25))), V26 end(V22)) end end end end), V27 end(V13)) end end end end), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V33 = ('un--updateTransforms'(V0, V4))), V33 end(V29)) end end end end end end(E0, E1)) end.
'un--updateRewrite'(V0, V1) -> begin (V7 = begin (V2 = V0), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V64 = begin (V12 = V0), fun (V13) -> begin (V63 = (begin (V14 = V12), fun (V15) -> ('erlang':'put'(V14, case V11 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> case V20 of {'Core.Options.MkOptions', V48, V49, V50, V51, V52, V53, V54, V55, V56, V57} -> {'Core.Context.MkDefs', V16, V17, V18, V19, {'Core.Options.MkOptions', V48, V49, V50, V51, V52, ((begin (V60 = fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(V58, V59)) end end), fun (V61) -> fun (V62) -> ((V60(V61))(V62)) end end end(V1))(V53)), V54, V55, V56, V57}, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} end end)) end end(V13))), {'Prelude.Types.Right', V63} end end end), V64 end(V8)) end end end end.
'un--updatePrims'(V0, V1) -> begin (V7 = begin (V2 = V0), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V59 = begin (V12 = V0), fun (V13) -> begin (V58 = (begin (V14 = V12), fun (V15) -> ('erlang':'put'(V14, case V11 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> case V20 of {'Core.Options.MkOptions', V48, V49, V50, V51, V52, V53, V54, V55, V56, V57} -> {'Core.Context.MkDefs', V16, V17, V18, V19, {'Core.Options.MkOptions', V48, V49, V50, V51, V52, V53, ('un--updatePrimNames'(V1, V54)), V55, V56, V57}, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} end end)) end end(V13))), {'Prelude.Types.Right', V58} end end end), V59 end(V8)) end end end end.
'un--updatePrimNames'(V0, V1) -> case V1 of {'Core.Options.MkPrimNs', V2, V3, V4, V5} -> {'Core.Options.MkPrimNs', ((begin (V12 = fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(V10, V11)) end end), fun (V13) -> fun (V14) -> ((V12(V13))(V14)) end end end(case V0 of {'Core.Options.MkPrimNs', V6, V7, V8, V9} -> V6 end))(V2)), ((begin (V21 = fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(V19, V20)) end end), fun (V22) -> fun (V23) -> ((V21(V22))(V23)) end end end(case V0 of {'Core.Options.MkPrimNs', V15, V16, V17, V18} -> V16 end))(V3)), ((begin (V30 = fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(V28, V29)) end end), fun (V31) -> fun (V32) -> ((V30(V31))(V32)) end end end(case V0 of {'Core.Options.MkPrimNs', V24, V25, V26, V27} -> V26 end))(V4)), ((begin (V39 = fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(V37, V38)) end end), fun (V40) -> fun (V41) -> ((V39(V40))(V41)) end end end(case V0 of {'Core.Options.MkPrimNs', V33, V34, V35, V36} -> V36 end))(V5))} end.
'un--updatePair'(V0, V1) -> begin (V7 = begin (V2 = V0), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V64 = begin (V12 = V0), fun (V13) -> begin (V63 = (begin (V14 = V12), fun (V15) -> ('erlang':'put'(V14, case V11 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> case V20 of {'Core.Options.MkOptions', V48, V49, V50, V51, V52, V53, V54, V55, V56, V57} -> {'Core.Context.MkDefs', V16, V17, V18, V19, {'Core.Options.MkOptions', V48, V49, V50, V51, ((begin (V60 = fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(V58, V59)) end end), fun (V61) -> fun (V62) -> ((V60(V61))(V62)) end end end(V1))(V52)), V53, V54, V55, V56, V57}, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} end end)) end end(V13))), {'Prelude.Types.Right', V63} end end end), V64 end(V8)) end end end end.
'un--updateNameDirectives'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> begin (V55 = begin (V12 = begin (V7 = V0), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V54 = begin (V17 = V0), fun (V18) -> begin (V53 = (begin (V19 = V17), fun (V20) -> ('erlang':'put'(V19, case V16 of {'Core.Context.MkDefs', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52} -> {'Core.Context.MkDefs', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V5, V6, V36)), V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52} end)) end end(V18))), {'Prelude.Types.Right', V53} end end end), V54 end(V13)) end end end end), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V60 = ('un--updateNameDirectives'(V0, V4))), V60 end(V56)) end end end end end end(E0, E1)) end.
'un--updateFExports'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> begin (V12 = begin (V7 = V0), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V60 = begin (V54 = begin (V17 = V0), fun (V18) -> begin (V53 = (begin (V19 = V17), fun (V20) -> ('erlang':'put'(V19, case V16 of {'Core.Context.MkDefs', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52} -> {'Core.Context.MkDefs', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V5, V6, V52))} end)) end end(V18))), {'Prelude.Types.Right', V53} end end end), fun (V55) -> begin (V56 = (V54(V55))), case V56 of {'Prelude.Types.Left', V57} -> {'Prelude.Types.Left', V57}; {'Prelude.Types.Right', V58} -> (begin (V59 = ('un--updateFExports'(V0, V4))), V59 end(V55)) end end end end), V60 end(V13)) end end end end end end(E0, E1)) end.
'un--updateCGDirectives'(V0, V1) -> begin (V7 = begin (V2 = V0), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V101 = begin (V12 = V0), fun (V13) -> begin (V100 = (begin (V14 = V12), fun (V15) -> ('erlang':'put'(V14, case V11 of {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} -> {'Core.Context.MkDefs', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, ('Idris.Idris2.Data.List':'un--nub'({'Prelude.EqOrd.MkEq', fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V52, V53)) end end}, {'Prelude.EqOrd.MkEq', fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Options':'dn--un--==_Eq_CG'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Options':'dn--un--/=_Eq_CG'(V58, V59)) end end}, {'Prelude.EqOrd.MkEq', fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V62, V63)) end end}, V54, V55)) end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.Options':'dn--un--==_Eq_CG'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Core.Options':'dn--un--/=_Eq_CG'(V68, V69)) end end}, {'Prelude.EqOrd.MkEq', fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V70, V71)) end end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V72, V73)) end end}, V64, V65)) end end}, V48, V49)) end end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V76, V77)) end end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V78, V79)) end end}, {'Prelude.EqOrd.MkEq', fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Options':'dn--un--==_Eq_CG'(V82, V83)) end end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Options':'dn--un--/=_Eq_CG'(V84, V85)) end end}, {'Prelude.EqOrd.MkEq', fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V86, V87)) end end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V88, V89)) end end}, V80, V81)) end end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.Options':'dn--un--==_Eq_CG'(V92, V93)) end end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Options':'dn--un--/=_Eq_CG'(V94, V95)) end end}, {'Prelude.EqOrd.MkEq', fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V96, V97)) end end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V98, V99)) end end}, V90, V91)) end end}, V74, V75)) end end}, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1, V36)))), V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47} end)) end end(V13))), {'Prelude.Types.Right', V100} end end end), V101 end(V8)) end end end end.
'un--ttcVersion'() -> begin (V4 = (begin (V2 = (begin (V0 = 20220930), case ((V0 band 9223372036854775808) =/= 0) of 'true' -> (V0 bor -9223372036854775808); _ -> (V0 band 9223372036854775807) end end * begin (V1 = 100), case ((V1 band 9223372036854775808) =/= 0) of 'true' -> (V1 bor -9223372036854775808); _ -> (V1 band 9223372036854775807) end end)), case ((V2 band 9223372036854775808) =/= 0) of 'true' -> (V2 bor -9223372036854775808); _ -> (V2 band 9223372036854775807) end end + begin (V3 = 0), case ((V3 band 9223372036854775808) =/= 0) of 'true' -> (V3 bor -9223372036854775808); _ -> (V3 band 9223372036854775807) end end)), case ((V4 band 9223372036854775808) =/= 0) of 'true' -> (V4 bor -9223372036854775808); _ -> (V4 band 9223372036854775807) end end.
'un--stringToBuffer'(V0) -> begin (V1 = ('Idris.Idris2.Erlang.Data.Buffer':'un--stringByteLength'(V0))), begin (V31 = fun (V2) -> begin (V30 = (('Idris.Idris2.Erlang.Data.Buffer':'un--newBuffer'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> V9 end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> begin (V16 = (V13(V15))), begin (V17 = (V14(V15))), (V16(V17)) end end end end end end end}, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), ((V21(V23))(V22)) end end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V25(V26))), (V27(V26)) end end end end}, fun (V28) -> fun (V29) -> V29 end end}, V1))(V2))), {'Prelude.Types.Right', V30} end end), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V77 = case V35 of {'Prelude.Types.Just', V36} -> begin (V66 = fun (V37) -> begin (V65 = (('Idris.Idris2.Erlang.Data.Buffer':'un--setString'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> V44 end end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> begin (V51 = (V48(V50))), begin (V52 = (V49(V50))), (V51(V52)) end end end end end end end}, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V55(V57))), ((V56(V58))(V57)) end end end end end end, fun (V59) -> fun (V60) -> fun (V61) -> begin (V62 = (V60(V61))), (V62(V61)) end end end end}, fun (V63) -> fun (V64) -> V64 end end}, V36, 0, V0))(V37))), {'Prelude.Types.Right', V65} end end), fun (V67) -> begin (V68 = (V66(V67))), case V68 of {'Prelude.Types.Left', V69} -> {'Prelude.Types.Left', V69}; {'Prelude.Types.Right', V70} -> (begin (V72 = fun (V71) -> {'Prelude.Types.Right', V36} end), V72 end(V67)) end end end end; {'Prelude.Types.Nothing'} -> fun (V73) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', (begin (V75 = fun (V74) -> V74 end), fun (V76) -> (V75(V76)) end end(<<"Unable to create buffer"/utf8>>))}, V73)) end end), V77 end(V32)) end end end end end.
'un--readTotalReq'(V0) -> begin (V3 = fun (V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--readFromFile'(V0, V1))), {'Prelude.Types.Right', V2} end end), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V38 = case V7 of {'Prelude.Types.Right', V8} -> begin (V9 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.Binary.Prims.Bin'}, V8))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V35 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V14 = ('un--getTotalReq'(V0, V13))), ((begin (V30 = fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V27, V28, V29)) end end end end end), fun (V31) -> fun (V32) -> ((((V30('erased'))('erased'))(V31))(V32)) end end end((begin (V22 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> {'Prelude.Types.Right', (V18(V21))} end end end end end), fun (V23) -> fun (V24) -> ((((V22('erased'))('erased'))(V23))(V24)) end end end(fun (V15) -> {'Prelude.Types.Just', V15} end))))(V14)) end, fun (V33) -> fun (V34) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end))), V35 end(V10)) end end end end; {'Prelude.Types.Left', V36} -> fun (V37) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end), V38 end(V4)) end end end end.
'un--readTTCFile'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V5))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V529 = begin (V15 = fun (V11) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V10, (begin (V13 = fun (V12) -> V12 end), fun (V14) -> (V13(V14)) end end(<<"TT2"/utf8>>)))) of 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<<<"TTC header in "/utf8>>/binary, <<V3/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V10))/binary>>/binary>>/binary>>, V11)); 0 -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V528 = begin (V20 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_WastefulInt'(V5))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V527 = begin (V26 = fun (V25) -> ('un--checkTTCVersion'(V3, V24, ('un--ttcVersion'()), V25)) end), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V526 = begin (V31 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_TotalReq'(V5))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V525 = begin (V39 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V36, V37)) end end, fun (V38) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V38)) end}, V5))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V524 = begin (V44 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V5))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V523 = begin (V64 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V51, V52)) end end, fun (V53) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V53)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V54, V55)) end end, fun (V56) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V56)) end}}, V49, V50)) end end, fun (V57) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V58, V59)) end end, fun (V60) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V60)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V61, V62)) end end, fun (V63) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V63)) end}}, V57)) end}, V5))), fun (V65) -> begin (V66 = (V64(V65))), case V66 of {'Prelude.Types.Left', V67} -> {'Prelude.Types.Left', V67}; {'Prelude.Types.Right', V68} -> (begin (V522 = begin (V132 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V71, V72)) end end, fun (V73) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V73)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V76, V77)) end end, fun (V78) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V78)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V81, V82)) end end, fun (V83) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V83)) end}, V79, V80)) end end, fun (V84) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V85, V86)) end end, fun (V87) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V87)) end}, V84)) end}}, V74, V75)) end end, fun (V88) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V89) -> fun (V90) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V89, V90)) end end, fun (V91) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V91)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V94, V95)) end end, fun (V96) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V96)) end}, V92, V93)) end end, fun (V97) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V98) -> fun (V99) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V98, V99)) end end, fun (V100) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V100)) end}, V97)) end}}, V88)) end}}, V69, V70)) end end, fun (V101) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V102) -> fun (V103) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V102, V103)) end end, fun (V104) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V104)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V107, V108)) end end, fun (V109) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V109)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V112) -> fun (V113) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V112, V113)) end end, fun (V114) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V114)) end}, V110, V111)) end end, fun (V115) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V116) -> fun (V117) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V116, V117)) end end, fun (V118) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V118)) end}, V115)) end}}, V105, V106)) end end, fun (V119) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V120) -> fun (V121) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V120, V121)) end end, fun (V122) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V122)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V123) -> fun (V124) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V125) -> fun (V126) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V125, V126)) end end, fun (V127) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V127)) end}, V123, V124)) end end, fun (V128) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V129, V130)) end end, fun (V131) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V131)) end}, V128)) end}}, V119)) end}}, V101)) end}, V5))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V521 = begin (V176 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V139, V140)) end end, fun (V141) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V141)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V142) -> fun (V143) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V144, V145)) end end, fun (V146) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V146)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V147) -> fun (V148) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V147, V148)) end end, fun (V149) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V149)) end}}, V142, V143)) end end, fun (V150) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V151) -> fun (V152) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V151, V152)) end end, fun (V153) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V153)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V154) -> fun (V155) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V154, V155)) end end, fun (V156) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V156)) end}}, V150)) end}}, V137, V138)) end end, fun (V157) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V158) -> fun (V159) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_ModuleIdent'(V158, V159)) end end, fun (V160) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_ModuleIdent'(V160)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V161) -> fun (V162) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V163) -> fun (V164) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V163, V164)) end end, fun (V165) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V165)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V166, V167)) end end, fun (V168) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V168)) end}}, V161, V162)) end end, fun (V169) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V170, V171)) end end, fun (V172) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V172)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V173) -> fun (V174) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V173, V174)) end end, fun (V175) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V175)) end}}, V169)) end}}, V157)) end}, V5))), fun (V177) -> begin (V178 = (V176(V177))), case V178 of {'Prelude.Types.Left', V179} -> {'Prelude.Types.Left', V179}; {'Prelude.Types.Right', V180} -> (begin (V520 = begin (V183 = case V0 of {'Core.Binary.Prims.dn--un--__mkTTC', V181, V182} -> (V182(V5)) end), fun (V184) -> begin (V185 = (V183(V184))), case V185 of {'Prelude.Types.Left', V186} -> {'Prelude.Types.Left', V186}; {'Prelude.Types.Right', V187} -> (begin (V519 = case V2 of 1 -> begin (V203 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V190) -> fun (V191) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V190, V191)) end end, fun (V192) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V192)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V193) -> fun (V194) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Binary'(V193, V194)) end end, fun (V195) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Binary'(V195)) end}}, V188, V189)) end end, fun (V196) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V197) -> fun (V198) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V197, V198)) end end, fun (V199) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V199)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V200) -> fun (V201) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Binary'(V200, V201)) end end, fun (V202) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Binary'(V202)) end}}, V196)) end}, V5))), fun (V204) -> begin (V205 = (V203(V204))), case V205 of {'Prelude.Types.Left', V206} -> {'Prelude.Types.Left', V206}; {'Prelude.Types.Right', V207} -> (begin (V517 = begin (V211 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V208) -> fun (V209) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V208, V209)) end end, fun (V210) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V210)) end}, V5))), fun (V212) -> begin (V213 = (V211(V212))), case V213 of {'Prelude.Types.Left', V214} -> {'Prelude.Types.Left', V214}; {'Prelude.Types.Right', V215} -> (begin (V516 = begin (V231 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V216) -> fun (V217) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V218) -> fun (V219) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V218, V219)) end end, fun (V220) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V220)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V221, V222)) end end, fun (V223) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V223)) end}}, V216, V217)) end end, fun (V224) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V225) -> fun (V226) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V225, V226)) end end, fun (V227) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V227)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V228) -> fun (V229) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V228, V229)) end end, fun (V230) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V230)) end}}, V224)) end}, V5))), fun (V232) -> begin (V233 = (V231(V232))), case V233 of {'Prelude.Types.Left', V234} -> {'Prelude.Types.Left', V234}; {'Prelude.Types.Right', V235} -> (begin (V515 = begin (V275 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V236) -> fun (V237) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V238) -> fun (V239) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V238, V239)) end end, fun (V240) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V240)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V241) -> fun (V242) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V243) -> fun (V244) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V243, V244)) end end, fun (V245) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V245)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V246) -> fun (V247) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V246, V247)) end end, fun (V248) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V248)) end}}, V241, V242)) end end, fun (V249) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V250) -> fun (V251) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V250, V251)) end end, fun (V252) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V252)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V253) -> fun (V254) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V253, V254)) end end, fun (V255) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V255)) end}}, V249)) end}}, V236, V237)) end end, fun (V256) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V257) -> fun (V258) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V257, V258)) end end, fun (V259) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V259)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V260) -> fun (V261) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V262) -> fun (V263) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V262, V263)) end end, fun (V264) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V264)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V265) -> fun (V266) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V265, V266)) end end, fun (V267) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V267)) end}}, V260, V261)) end end, fun (V268) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V269) -> fun (V270) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V269, V270)) end end, fun (V271) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V271)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V272) -> fun (V273) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Bool'(V272, V273)) end end, fun (V274) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Bool'(V274)) end}}, V268)) end}}, V256)) end}, V5))), fun (V276) -> begin (V277 = (V275(V276))), case V277 of {'Prelude.Types.Left', V278} -> {'Prelude.Types.Left', V278}; {'Prelude.Types.Right', V279} -> (begin (V514 = begin (V280 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V5))), fun (V281) -> begin (V282 = (V280(V281))), case V282 of {'Prelude.Types.Left', V283} -> {'Prelude.Types.Left', V283}; {'Prelude.Types.Right', V284} -> (begin (V513 = begin (V285 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V5))), fun (V286) -> begin (V287 = (V285(V286))), case V287 of {'Prelude.Types.Left', V288} -> {'Prelude.Types.Left', V288}; {'Prelude.Types.Right', V289} -> (begin (V512 = begin (V293 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V290) -> fun (V291) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V290, V291)) end end, fun (V292) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V292)) end}, V5))), fun (V294) -> begin (V295 = (V293(V294))), case V295 of {'Prelude.Types.Left', V296} -> {'Prelude.Types.Left', V296}; {'Prelude.Types.Right', V297} -> (begin (V511 = begin (V301 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V298) -> fun (V299) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_PairNames'(V298, V299)) end end, fun (V300) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_PairNames'(V300)) end}, V5))), fun (V302) -> begin (V303 = (V301(V302))), case V303 of {'Prelude.Types.Left', V304} -> {'Prelude.Types.Left', V304}; {'Prelude.Types.Right', V305} -> (begin (V510 = begin (V309 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V306) -> fun (V307) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_RewriteNames'(V306, V307)) end end, fun (V308) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_RewriteNames'(V308)) end}, V5))), fun (V310) -> begin (V311 = (V309(V310))), case V311 of {'Prelude.Types.Left', V312} -> {'Prelude.Types.Left', V312}; {'Prelude.Types.Right', V313} -> (begin (V509 = begin (V314 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_PrimNames'(V5))), fun (V315) -> begin (V316 = (V314(V315))), case V316 of {'Prelude.Types.Left', V317} -> {'Prelude.Types.Left', V317}; {'Prelude.Types.Right', V318} -> (begin (V508 = begin (V346 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V319) -> fun (V320) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V321) -> fun (V322) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V321, V322)) end end, fun (V323) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V323)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V324) -> fun (V325) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V326) -> fun (V327) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V326, V327)) end end, fun (V328) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V328)) end}, V324, V325)) end end, fun (V329) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V330) -> fun (V331) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V330, V331)) end end, fun (V332) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V332)) end}, V329)) end}}, V319, V320)) end end, fun (V333) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V334) -> fun (V335) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V334, V335)) end end, fun (V336) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V336)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V337) -> fun (V338) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V339, V340)) end end, fun (V341) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V341)) end}, V337, V338)) end end, fun (V342) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V343) -> fun (V344) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V343, V344)) end end, fun (V345) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V345)) end}, V342)) end}}, V333)) end}, V5))), fun (V347) -> begin (V348 = (V346(V347))), case V348 of {'Prelude.Types.Left', V349} -> {'Prelude.Types.Left', V349}; {'Prelude.Types.Right', V350} -> (begin (V507 = begin (V390 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V351) -> fun (V352) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V353) -> fun (V354) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V353, V354)) end end, fun (V355) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V355)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V356) -> fun (V357) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V358) -> fun (V359) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V358, V359)) end end, fun (V360) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V360)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V361) -> fun (V362) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V361, V362)) end end, fun (V363) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V363)) end}}, V356, V357)) end end, fun (V364) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V365) -> fun (V366) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V365, V366)) end end, fun (V367) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V367)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V368) -> fun (V369) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V368, V369)) end end, fun (V370) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V370)) end}}, V364)) end}}, V351, V352)) end end, fun (V371) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V372) -> fun (V373) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V372, V373)) end end, fun (V374) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V374)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V375) -> fun (V376) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V377) -> fun (V378) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V377, V378)) end end, fun (V379) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V379)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V380) -> fun (V381) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V380, V381)) end end, fun (V382) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V382)) end}}, V375, V376)) end end, fun (V383) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V384) -> fun (V385) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V384, V385)) end end, fun (V386) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V386)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V387) -> fun (V388) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V387, V388)) end end, fun (V389) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V389)) end}}, V383)) end}}, V371)) end}, V5))), fun (V391) -> begin (V392 = (V390(V391))), case V392 of {'Prelude.Types.Left', V393} -> {'Prelude.Types.Left', V393}; {'Prelude.Types.Right', V394} -> (begin (V506 = begin (V410 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V395) -> fun (V396) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V397) -> fun (V398) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V397, V398)) end end, fun (V399) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V399)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V400) -> fun (V401) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Transform'(V400, V401)) end end, fun (V402) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Transform'(V402)) end}}, V395, V396)) end end, fun (V403) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V404) -> fun (V405) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V404, V405)) end end, fun (V406) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V406)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V407) -> fun (V408) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Transform'(V407, V408)) end end, fun (V409) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Transform'(V409)) end}}, V403)) end}, V5))), fun (V411) -> begin (V412 = (V410(V411))), case V412 of {'Prelude.Types.Left', V413} -> {'Prelude.Types.Left', V413}; {'Prelude.Types.Right', V414} -> (begin (V505 = begin (V490 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V415) -> fun (V416) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V417) -> fun (V418) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V417, V418)) end end, fun (V419) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V419)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V420) -> fun (V421) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V422) -> fun (V423) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V424) -> fun (V425) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V424, V425)) end end, fun (V426) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V426)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V427) -> fun (V428) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V427, V428)) end end, fun (V429) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V429)) end}}, V422, V423)) end end, fun (V430) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V431) -> fun (V432) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V431, V432)) end end, fun (V433) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V433)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V434) -> fun (V435) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V434, V435)) end end, fun (V436) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V436)) end}}, V430)) end}, V420, V421)) end end, fun (V437) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V438) -> fun (V439) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V440) -> fun (V441) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V440, V441)) end end, fun (V442) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V442)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V443) -> fun (V444) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V443, V444)) end end, fun (V445) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V445)) end}}, V438, V439)) end end, fun (V446) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V447) -> fun (V448) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V447, V448)) end end, fun (V449) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V449)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V450) -> fun (V451) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V450, V451)) end end, fun (V452) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V452)) end}}, V446)) end}, V437)) end}}, V415, V416)) end end, fun (V453) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V454) -> fun (V455) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Name'(V454, V455)) end end, fun (V456) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Name'(V456)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V457) -> fun (V458) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V459) -> fun (V460) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V461) -> fun (V462) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V461, V462)) end end, fun (V463) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V463)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V464) -> fun (V465) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V464, V465)) end end, fun (V466) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V466)) end}}, V459, V460)) end end, fun (V467) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V468) -> fun (V469) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V468, V469)) end end, fun (V470) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V470)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V471) -> fun (V472) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V471, V472)) end end, fun (V473) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V473)) end}}, V467)) end}, V457, V458)) end end, fun (V474) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V475) -> fun (V476) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V477) -> fun (V478) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V477, V478)) end end, fun (V479) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V479)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V480) -> fun (V481) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V480, V481)) end end, fun (V482) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V482)) end}}, V475, V476)) end end, fun (V483) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V484) -> fun (V485) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V484, V485)) end end, fun (V486) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V486)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V487) -> fun (V488) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V487, V488)) end end, fun (V489) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V489)) end}}, V483)) end}, V474)) end}}, V453)) end}, V5))), fun (V491) -> begin (V492 = (V490(V491))), case V492 of {'Prelude.Types.Left', V493} -> {'Prelude.Types.Left', V493}; {'Prelude.Types.Right', V494} -> (begin (V504 = fun (V495) -> {'Prelude.Types.Right', {'Core.Binary.MkTTCFile', V24, V35, V43, V48, V68, V136, ((begin (V501 = fun (V497) -> fun (V498) -> fun (V499) -> fun (V500) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V499, V500)) end end end end), fun (V502) -> fun (V503) -> ((((V501('erased'))('erased'))(V502))(V503)) end end end(fun (V496) -> ('nested--12060-10291--in--un--replaceNS'(V0, V5, V4, V3, V2, V1, V289, V496)) end))(V207)), V215, V235, V279, V180, V284, V289, V297, V305, V313, V318, V350, V394, V414, V494, V187}} end), V504 end(V491)) end end end end), V505 end(V411)) end end end end), V506 end(V391)) end end end end), V507 end(V347)) end end end end), V508 end(V315)) end end end end), V509 end(V310)) end end end end), V510 end(V302)) end end end end), V511 end(V294)) end end end end), V512 end(V286)) end end end end), V513 end(V281)) end end end end), V514 end(V276)) end end end end), V515 end(V232)) end end end end), V516 end(V212)) end end end end), V517 end(V204)) end end end end; 0 -> fun (V518) -> {'Prelude.Types.Right', {'Core.Binary.MkTTCFile', V24, V35, V43, V48, V68, V136, [], [], [], [], [], 0, ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(<<""/utf8>>)), [], {'Prelude.Types.Nothing'}, {'Prelude.Types.Nothing'}, {'Core.Options.MkPrimNs', {'Prelude.Types.Nothing'}, {'Prelude.Types.Nothing'}, {'Prelude.Types.Nothing'}, {'Prelude.Types.Nothing'}}, [], [], [], [], V187}} end end), V519 end(V184)) end end end end), V520 end(V177)) end end end end), V521 end(V133)) end end end end), V522 end(V65)) end end end end), V523 end(V45)) end end end end), V524 end(V40)) end end end end), V525 end(V32)) end end end end), V526 end(V27)) end end end end), V527 end(V21)) end end end end), V528 end(V16)) end end end end), V529 end(V7)) end end end end.
'un--readIncData'(V0) -> begin (V3 = fun (V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--readFromFile'(V0, V1))), {'Prelude.Types.Right', V2} end end), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V26 = case V7 of {'Prelude.Types.Right', V8} -> begin (V9 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.Binary.Prims.Bin'}, V8))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V23 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V14 = ('un--getIncData'(V0, V13))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V20 = fun (V19) -> {'Prelude.Types.Right', V18} end), V20 end(V15)) end end end end, fun (V21) -> fun (V22) -> {'Prelude.Types.Right', []} end end))), V23 end(V10)) end end end end; {'Prelude.Types.Left', V24} -> fun (V25) -> {'Prelude.Types.Right', []} end end), V26 end(V4)) end end end end.
'un--readImportHashes'(V0) -> begin (V3 = fun (V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Binary':'un--readFromFile'(V0, V1))), {'Prelude.Types.Right', V2} end end), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V26 = case V7 of {'Prelude.Types.Right', V8} -> begin (V9 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.Binary.Prims.Bin'}, V8))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V23 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V14 = ('un--getImportHashes'(V0, V13))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V20 = fun (V19) -> {'Prelude.Types.Right', V18} end), V20 end(V15)) end end end end, fun (V21) -> fun (V22) -> {'Prelude.Types.Right', []} end end))), V23 end(V10)) end end end end; {'Prelude.Types.Left', V24} -> fun (V25) -> {'Prelude.Types.Right', []} end end), V26 end(V4)) end end end end.
'un--readHashes'(V0) -> begin (V1 = ('un--escriptReadFromFile'(V0))), fun (V2) -> begin (V3 = (V1(V2))), case V3 of {'Prelude.Types.Left', V4} -> {'Prelude.Types.Left', V4}; {'Prelude.Types.Right', V5} -> (begin (V15 = begin (V6 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.Binary.Prims.Bin'}, V5))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V14 = begin (V11 = ('un--filenameFromModuleLocation'(V0))), ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(('un--getHashes'(V11, V10)), fun (V12) -> fun (V13) -> {'Prelude.Types.Right', {'Builtin.MkPair', {'Prelude.Types.Nothing'}, 0}} end end)) end), V14 end(V7)) end end end end), V15 end(V2)) end end end end.
'un--readFromTTC'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V14 = begin (V9 = V1), fun (V10) -> begin (V13 = (begin (V11 = V9), fun (V12) -> ('erlang':'get'(V11)) end end(V10))), {'Prelude.Types.Right', V13} end end end), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V934 = begin (V19 = ('un--filenameFromModuleLocation'(V6))), case ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V22, V23, V24)) end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V31)) end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V35, V36, V37, V38)) end end end end end end end, fun (V39) -> fun (V40) -> V40 end end, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V43, V44, V45)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V48, V49)) end end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_ModuleIdent'(V50, V51)) end end}, {'Prelude.EqOrd.MkEq', fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Bool'(V54, V55)) end end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bool'(V56, V57)) end end}, {'Prelude.EqOrd.MkEq', fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V58, V59)) end end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V60, V61)) end end}, V52, V53)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Bool'(V64, V65)) end end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bool'(V66, V67)) end end}, {'Prelude.EqOrd.MkEq', fun (V68) -> fun (V69) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V68, V69)) end end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V70, V71)) end end}, V62, V63)) end end}, V46, V47)) end end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V74, V75)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_ModuleIdent'(V76, V77)) end end}, {'Prelude.EqOrd.MkEq', fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Bool'(V80, V81)) end end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bool'(V82, V83)) end end}, {'Prelude.EqOrd.MkEq', fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V84, V85)) end end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V86, V87)) end end}, V78, V79)) end end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkEq', fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Bool'(V90, V91)) end end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bool'(V92, V93)) end end}, {'Prelude.EqOrd.MkEq', fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V94, V95)) end end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V96, V97)) end end}, V88, V89)) end end}, V72, V73)) end end}, {'Builtin.MkPair', V7, {'Builtin.MkPair', V5, V8}}, ((begin (V135 = fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V133, V134)) end end end end), fun (V136) -> fun (V137) -> ((((V135('erased'))('erased'))(V136))(V137)) end end end(fun (V130) -> ('Idris.Idris2.Builtin':'un--snd'(V130)) end))(case V18 of {'Core.Context.MkDefs', V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129} -> V117 end)))) of 0 -> begin (V175 = begin (V138 = V1), fun (V139) -> begin (V174 = (begin (V140 = V138), fun (V141) -> ('erlang':'put'(V140, case V18 of {'Core.Context.MkDefs', V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173} -> {'Core.Context.MkDefs', V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, [{'Builtin.MkPair', V19, {'Builtin.MkPair', V7, {'Builtin.MkPair', V5, V8}}} | V161], V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173} end)) end end(V139))), {'Prelude.Types.Right', V174} end end end), fun (V176) -> begin (V177 = (V175(V176))), case V177 of {'Prelude.Types.Left', V178} -> {'Prelude.Types.Left', V178}; {'Prelude.Types.Right', V179} -> (begin (V932 = begin (V180 = ('un--escriptReadFromFile'(V6))), fun (V181) -> begin (V182 = (V180(V181))), case V182 of {'Prelude.Types.Left', V183} -> {'Prelude.Types.Left', V183}; {'Prelude.Types.Right', V184} -> (begin (V931 = begin (V185 = ('Idris.Idris2.Core.Core':'un--newRef'({'Core.Binary.Prims.Bin'}, V184))), fun (V186) -> begin (V187 = (V185(V186))), case V187 of {'Prelude.Types.Left', V188} -> {'Prelude.Types.Left', V188}; {'Prelude.Types.Right', V189} -> (begin (V930 = begin (V190 = case ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V8, ('Idris.Idris2.Core.Name.Namespace':'un--miAsNamespace'(V7)))) of 1 -> {'Prelude.Types.Nothing'}; 0 -> {'Prelude.Types.Just', V8} end), case ('nested--14519-12608--in--un--alreadyDone'(V0, V8, V7, V6, V5, V4, V3, V2, V1, V7, V8, case V18 of {'Core.Context.MkDefs', V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222} -> V210 end)) of 1 -> begin (V223 = ('un--readTTCFile'(V0, V1, 0, V19, V190, V189))), fun (V224) -> begin (V225 = (V223(V224))), case V225 of {'Prelude.Types.Left', V226} -> {'Prelude.Types.Left', V226}; {'Prelude.Types.Right', V227} -> (begin (V296 = begin (V250 = case V227 of {'Core.Binary.MkTTCFile', V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249} -> V249 end), fun (V251) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Builtin.MkPair', V250, {'Builtin.MkPair', case V227 of {'Core.Binary.MkTTCFile', V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273} -> V255 end, case V227 of {'Core.Binary.MkTTCFile', V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295} -> V284 end}}}} end end), V296 end(V224)) end end end end; 0 -> begin (V297 = ('un--readTTCFile'(V0, V1, 1, V19, V190, V189))), fun (V298) -> begin (V299 = (V297(V298))), case V299 of {'Prelude.Types.Left', V300} -> {'Prelude.Types.Left', V300}; {'Prelude.Types.Right', V301} -> (begin (V929 = begin (V324 = case V301 of {'Core.Binary.MkTTCFile', V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323} -> V323 end), begin (V370 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V325) -> ('un--addGlobalDef'(V1, V7, case V301 of {'Core.Binary.MkTTCFile', V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347} -> V338 end, V190, V325)) end, case V301 of {'Core.Binary.MkTTCFile', V348, V349, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369} -> V354 end))), fun (V371) -> begin (V372 = (V370(V371))), case V372 of {'Prelude.Types.Left', V373} -> {'Prelude.Types.Left', V373}; {'Prelude.Types.Right', V374} -> (begin (V928 = begin (V398 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V375) -> ('Idris.Idris2.Core.Context':'un--addUserHole'(V1, 1, V375)) end, case V301 of {'Core.Binary.MkTTCFile', V376, V377, V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397} -> V383 end))), fun (V399) -> begin (V400 = (V398(V399))), case V400 of {'Prelude.Types.Left', V401} -> {'Prelude.Types.Left', V401}; {'Prelude.Types.Right', V402} -> (begin (V927 = begin (V425 = ('Idris.Idris2.Core.Context':'un--setNS'(V1, case V301 of {'Core.Binary.MkTTCFile', V403, V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424} -> V415 end))), fun (V426) -> begin (V427 = (V425(V426))), case V427 of {'Prelude.Types.Left', V428} -> {'Prelude.Types.Left', V428}; {'Prelude.Types.Right', V429} -> (begin (V926 = begin (V453 = case V3 of 1 -> ('Idris.Idris2.Core.Context':'un--setNestedNS'(V1, case V301 of {'Core.Binary.MkTTCFile', V430, V431, V432, V433, V434, V435, V436, V437, V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448, V449, V450, V451} -> V443 end)); 0 -> fun (V452) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V454) -> begin (V455 = (V453(V454))), case V455 of {'Prelude.Types.Left', V456} -> {'Prelude.Types.Left', V456}; {'Prelude.Types.Right', V457} -> (begin (V925 = begin (V805 = case ('Idris.Idris2.Prelude.Types':'un--elem'({'Prelude.Interfaces.MkFoldable', fun (V458) -> fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V460, V461, V462)) end end end end end, fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> fun (V467) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V465, V466, V467)) end end end end end, fun (V468) -> fun (V469) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V469)) end end, fun (V470) -> fun (V471) -> fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> fun (V476) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V473, V474, V475, V476)) end end end end end end end, fun (V477) -> fun (V478) -> V478 end end, fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> fun (V483) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V481, V482, V483)) end end end end end}, {'Prelude.EqOrd.MkEq', fun (V484) -> fun (V485) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_ModuleIdent'(V484, V485)) end end, fun (V486) -> fun (V487) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_ModuleIdent'(V486, V487)) end end}, V7, ((begin (V525 = fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V523, V524)) end end end end), fun (V526) -> fun (V527) -> ((((V525('erased'))('erased'))(V526))(V527)) end end end(fun (V520) -> ('Idris.Idris2.Builtin':'un--fst'(('un--getNSas'(V520)))) end))(case V18 of {'Core.Context.MkDefs', V488, V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514, V515, V516, V517, V518, V519} -> V507 end)))) of 1 -> fun (V528) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> begin (V552 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V529) -> ('un--addTypeHint'(V1, V4, V529)) end, case V301 of {'Core.Binary.MkTTCFile', V530, V531, V532, V533, V534, V535, V536, V537, V538, V539, V540, V541, V542, V543, V544, V545, V546, V547, V548, V549, V550, V551} -> V539 end))), fun (V553) -> begin (V554 = (V552(V553))), case V554 of {'Prelude.Types.Left', V555} -> {'Prelude.Types.Left', V555}; {'Prelude.Types.Right', V556} -> (begin (V804 = begin (V580 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V557) -> ('un--addAutoHint'(V1, V557)) end, case V301 of {'Core.Binary.MkTTCFile', V558, V559, V560, V561, V562, V563, V564, V565, V566, V567, V568, V569, V570, V571, V572, V573, V574, V575, V576, V577, V578, V579} -> V566 end))), fun (V581) -> begin (V582 = (V580(V581))), case V582 of {'Prelude.Types.Left', V583} -> {'Prelude.Types.Left', V583}; {'Prelude.Types.Right', V584} -> (begin (V803 = begin (V607 = ('Idris.Idris2.Core.Context':'un--addImportedInc'(V1, V7, case V301 of {'Core.Binary.MkTTCFile', V585, V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596, V597, V598, V599, V600, V601, V602, V603, V604, V605, V606} -> V590 end))), fun (V608) -> begin (V609 = (V607(V608))), case V609 of {'Prelude.Types.Left', V610} -> {'Prelude.Types.Left', V610}; {'Prelude.Types.Right', V611} -> (begin (V802 = begin (V634 = ('un--updatePair'(V1, case V301 of {'Core.Binary.MkTTCFile', V612, V613, V614, V615, V616, V617, V618, V619, V620, V621, V622, V623, V624, V625, V626, V627, V628, V629, V630, V631, V632, V633} -> V626 end))), fun (V635) -> begin (V636 = (V634(V635))), case V636 of {'Prelude.Types.Left', V637} -> {'Prelude.Types.Left', V637}; {'Prelude.Types.Right', V638} -> (begin (V801 = begin (V661 = ('un--updateRewrite'(V1, case V301 of {'Core.Binary.MkTTCFile', V639, V640, V641, V642, V643, V644, V645, V646, V647, V648, V649, V650, V651, V652, V653, V654, V655, V656, V657, V658, V659, V660} -> V654 end))), fun (V662) -> begin (V663 = (V661(V662))), case V663 of {'Prelude.Types.Left', V664} -> {'Prelude.Types.Left', V664}; {'Prelude.Types.Right', V665} -> (begin (V800 = begin (V688 = ('un--updatePrims'(V1, case V301 of {'Core.Binary.MkTTCFile', V666, V667, V668, V669, V670, V671, V672, V673, V674, V675, V676, V677, V678, V679, V680, V681, V682, V683, V684, V685, V686, V687} -> V682 end))), fun (V689) -> begin (V690 = (V688(V689))), case V690 of {'Prelude.Types.Left', V691} -> {'Prelude.Types.Left', V691}; {'Prelude.Types.Right', V692} -> (begin (V799 = begin (V715 = ('un--updateNameDirectives'(V1, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(case V301 of {'Core.Binary.MkTTCFile', V693, V694, V695, V696, V697, V698, V699, V700, V701, V702, V703, V704, V705, V706, V707, V708, V709, V710, V711, V712, V713, V714} -> V710 end))))), fun (V716) -> begin (V717 = (V715(V716))), case V717 of {'Prelude.Types.Left', V718} -> {'Prelude.Types.Left', V718}; {'Prelude.Types.Right', V719} -> (begin (V798 = begin (V742 = ('un--updateCGDirectives'(V1, case V301 of {'Core.Binary.MkTTCFile', V720, V721, V722, V723, V724, V725, V726, V727, V728, V729, V730, V731, V732, V733, V734, V735, V736, V737, V738, V739, V740, V741} -> V738 end))), fun (V743) -> begin (V744 = (V742(V743))), case V744 of {'Prelude.Types.Left', V745} -> {'Prelude.Types.Left', V745}; {'Prelude.Types.Right', V746} -> (begin (V797 = begin (V769 = ('un--updateTransforms'(V1, case V301 of {'Core.Binary.MkTTCFile', V747, V748, V749, V750, V751, V752, V753, V754, V755, V756, V757, V758, V759, V760, V761, V762, V763, V764, V765, V766, V767, V768} -> V766 end))), fun (V770) -> begin (V771 = (V769(V770))), case V771 of {'Prelude.Types.Left', V772} -> {'Prelude.Types.Left', V772}; {'Prelude.Types.Right', V773} -> (begin (V796 = ('un--updateFExports'(V1, case V301 of {'Core.Binary.MkTTCFile', V774, V775, V776, V777, V778, V779, V780, V781, V782, V783, V784, V785, V786, V787, V788, V789, V790, V791, V792, V793, V794, V795} -> V794 end))), V796 end(V770)) end end end end), V797 end(V743)) end end end end), V798 end(V716)) end end end end), V799 end(V689)) end end end end), V800 end(V662)) end end end end), V801 end(V635)) end end end end), V802 end(V608)) end end end end), V803 end(V581)) end end end end), V804 end(V553)) end end end end end), fun (V806) -> begin (V807 = (V805(V806))), case V807 of {'Prelude.Types.Left', V808} -> {'Prelude.Types.Left', V808}; {'Prelude.Types.Right', V809} -> (begin (V924 = begin (V811 = case V5 of 1 -> fun (V810) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> ('Idris.Idris2.Core.Context':'un--clearSavedHints'(V1)) end), fun (V812) -> begin (V813 = (V811(V812))), case V813 of {'Prelude.Types.Left', V814} -> {'Prelude.Types.Left', V814}; {'Prelude.Types.Right', V815} -> (begin (V923 = begin (V816 = ('Idris.Idris2.Core.Context':'un--resetFirstEntry'(V1))), fun (V817) -> begin (V818 = (V816(V817))), case V818 of {'Prelude.Types.Left', V819} -> {'Prelude.Types.Left', V819}; {'Prelude.Types.Right', V820} -> (begin (V922 = begin (V871 = begin (V826 = begin (V821 = V2), fun (V822) -> begin (V825 = (begin (V823 = V821), fun (V824) -> ('erlang':'get'(V823)) end end(V822))), {'Prelude.Types.Right', V825} end end end), fun (V827) -> begin (V828 = (V826(V827))), case V828 of {'Prelude.Types.Left', V829} -> {'Prelude.Types.Left', V829}; {'Prelude.Types.Right', V830} -> (begin (V870 = begin (V831 = V2), fun (V832) -> begin (V869 = (begin (V833 = V831), fun (V834) -> ('erlang':'put'(V833, case V830 of {'Core.UnifyState.MkUState', V835, V836, V837, V838, V839, V840, V841, V842, V843, V844, V845, V846} -> {'Core.UnifyState.MkUState', V835, V836, V837, V838, V839, V840, V841, V842, case V301 of {'Core.Binary.MkTTCFile', V847, V848, V849, V850, V851, V852, V853, V854, V855, V856, V857, V858, V859, V860, V861, V862, V863, V864, V865, V866, V867, V868} -> V858 end, V844, V845, V846} end)) end end(V832))), {'Prelude.Types.Right', V869} end end end), V870 end(V827)) end end end end), fun (V872) -> begin (V873 = (V871(V872))), case V873 of {'Prelude.Types.Left', V874} -> {'Prelude.Types.Left', V874}; {'Prelude.Types.Right', V875} -> (begin (V921 = fun (V876) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Builtin.MkPair', V324, {'Builtin.MkPair', case V301 of {'Core.Binary.MkTTCFile', V877, V878, V879, V880, V881, V882, V883, V884, V885, V886, V887, V888, V889, V890, V891, V892, V893, V894, V895, V896, V897, V898} -> V880 end, case V301 of {'Core.Binary.MkTTCFile', V899, V900, V901, V902, V903, V904, V905, V906, V907, V908, V909, V910, V911, V912, V913, V914, V915, V916, V917, V918, V919, V920} -> V909 end}}}} end), V921 end(V872)) end end end end), V922 end(V817)) end end end end), V923 end(V812)) end end end end), V924 end(V806)) end end end end), V925 end(V454)) end end end end), V926 end(V426)) end end end end), V927 end(V399)) end end end end), V928 end(V371)) end end end end end), V929 end(V298)) end end end end end end), V930 end(V186)) end end end end), V931 end(V181)) end end end end), V932 end(V176)) end end end end; 1 -> fun (V933) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end end), V934 end(V15)) end end end end.
'un--readEscriptFile'(V0) -> begin (V3 = fun (V1) -> begin (V2 = ('Idris.Idris2.Libraries.Utils.Escript':'un--getEscriptPath'(V1))), {'Prelude.Types.Right', V2} end end), fun (V4) -> begin (V5 = (V3(V4))), case V5 of {'Prelude.Types.Left', V6} -> {'Prelude.Types.Left', V6}; {'Prelude.Types.Right', V7} -> (begin (V48 = case V7 of {'Prelude.Types.Just', V8} -> begin (V11 = fun (V9) -> begin (V10 = ('Idris.Idris2.Libraries.Utils.Escript':'un--openArchive'(V8, V9))), {'Prelude.Types.Right', V10} end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V43 = case V15 of {'Prelude.Types.Just', V16} -> begin (V19 = fun (V17) -> begin (V18 = (('Idris.Idris2.Libraries.Utils.Escript':'un--readFile'(V16, V0))(V17))), {'Prelude.Types.Right', V18} end end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V38 = case V23 of {'Prelude.Types.Just', V24} -> begin (V27 = fun (V25) -> begin (V26 = (('Idris.Idris2.Libraries.Utils.Escript':'un--closeArchive'(V16))(V25))), {'Prelude.Types.Right', V26} end end), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V33 = fun (V32) -> {'Prelude.Types.Right', V24} end), V33 end(V28)) end end end end; {'Prelude.Types.Nothing'} -> fun (V34) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<V0/binary, (begin (V36 = fun (V35) -> V35 end), fun (V37) -> (V36(V37)) end end(<<": Unable to read file"/utf8>>))/binary>>}, V34)) end end), V38 end(V20)) end end end end; {'Prelude.Types.Nothing'} -> fun (V39) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<V0/binary, (begin (V41 = fun (V40) -> V40 end), fun (V42) -> (V41(V42)) end end(<<": Unable to open archive"/utf8>>))/binary>>}, V39)) end end), V43 end(V12)) end end end end; {'Prelude.Types.Nothing'} -> fun (V44) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<V0/binary, (begin (V46 = fun (V45) -> V45 end), fun (V47) -> (V46(V47)) end end(<<": Unable to find Escript path"/utf8>>))/binary>>}, V44)) end end), V48 end(V4)) end end end end.
'un--getTotalReq'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V1))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V27 = begin (V8 = fun (V7) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V6, <<"TT2"/utf8>>)) of 1 -> ('Idris.Idris2.Core.Binary.Prims':'un--corrupt'(<<<<"TTC header in "/utf8>>/binary, <<V0/binary, <<<<" "/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V6))/binary>>/binary>>/binary>>, V7)); 0 -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V26 = begin (V13 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_WastefulInt'(V1))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V25 = begin (V19 = fun (V18) -> ('un--checkTTCVersion'(V0, V17, ('un--ttcVersion'()), V18)) end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V24 = ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_TotalReq'(V1))), V24 end(V20)) end end end end), V25 end(V14)) end end end end), V26 end(V9)) end end end end), V27 end(V3)) end end end end.
'un--getSaveDefs'(V0, V1, V2, V3) -> case V1 of [] -> fun (V4) -> {'Prelude.Types.Right', V2} end; [E0 | E1] -> (fun (V5, V6) -> begin (V39 = ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V3 of {'Core.Context.MkDefs', V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38} -> V7 end))), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V153 = case V43 of {'Prelude.Types.Just', V44} -> case V44 of {'Core.Context.Context.MkGlobalDef', V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66} -> case V62 of {'Core.Context.Context.Builtin', V67, V68} -> ('un--getSaveDefs'(V0, V6, V2, V3)); _ -> begin (V70 = ('Idris.Idris2.Core.Binary.Prims':'un--initBinaryS'(begin (V69 = 16384), case ((V69 band 9223372036854775808) =/= 0) of 'true' -> (V69 bor -9223372036854775808); _ -> (V69 band 9223372036854775807) end end))), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V152 = begin (V113 = begin (V107 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_GlobalDef'(case V3 of {'Core.Context.MkDefs', V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106} -> V75 end, V44))), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V112 = ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_GlobalDef'(V74, ('Idris.Idris2.Core.Context':'dn--un--trimNS_StripNamespace_GlobalDef'(V0, V111))))), V112 end(V108)) end end end end), fun (V114) -> begin (V115 = (V113(V114))), case V115 of {'Prelude.Types.Left', V116} -> {'Prelude.Types.Left', V116}; {'Prelude.Types.Right', V117} -> (begin (V151 = begin (V123 = begin (V118 = V74), fun (V119) -> begin (V122 = (begin (V120 = V118), fun (V121) -> ('erlang':'get'(V120)) end end(V119))), {'Prelude.Types.Right', V122} end end end), fun (V124) -> begin (V125 = (V123(V124))), case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> (begin (V150 = ('un--getSaveDefs'(V0, V6, [{'Builtin.MkPair', ('nested--12601-10810--in--un--trimName'(V5, V6, V3, V2, V0, case V44 of {'Core.Context.Context.MkGlobalDef', V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149} -> V129 end)), V127} | V2], V3))), V150 end(V124)) end end end end), V151 end(V114)) end end end end), V152 end(V71)) end end end end end end; {'Prelude.Types.Nothing'} -> ('un--getSaveDefs'(V0, V6, V2, V3)) end), V153 end(V40)) end end end end end(E0, E1)) end.
'un--getNSas'(V0) -> case V0 of {'Builtin.MkPair', V1, V2} -> case V2 of {'Builtin.MkPair', V3, V4} -> case V4 of {'Builtin.MkPair', V5, V6} -> {'Builtin.MkPair', V3, V6} end end end.
'un--getIncData'(V0, V1) -> begin (V21 = begin (V2 = ('un--getImportHashes'(V0, V1))), ((begin (V18 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V15, V16, V17)) end end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end((begin (V10 = fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> {'Prelude.Types.Right', (V6(V9))} end end end end end), fun (V11) -> fun (V12) -> ((((V10('erased'))('erased'))(V11))(V12)) end end end(fun (V3) -> {'Builtin.MkUnit'} end))))(V2)) end), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V89 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V28, V29)) end end, fun (V30) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V30)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V33, V34)) end end, fun (V35) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V35)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V38, V39)) end end, fun (V40) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V40)) end}, V36, V37)) end end, fun (V41) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V42, V43)) end end, fun (V44) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V44)) end}, V41)) end}}, V31, V32)) end end, fun (V45) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V46, V47)) end end, fun (V48) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V48)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V51, V52)) end end, fun (V53) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V53)) end}, V49, V50)) end end, fun (V54) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V55, V56)) end end, fun (V57) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V57)) end}, V54)) end}}, V45)) end}}, V26, V27)) end end, fun (V58) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_CG'(V59, V60)) end end, fun (V61) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_CG'(V61)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V64, V65)) end end, fun (V66) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V66)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V69, V70)) end end, fun (V71) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V71)) end}, V67, V68)) end end, fun (V72) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V73, V74)) end end, fun (V75) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V75)) end}, V72)) end}}, V62, V63)) end end, fun (V76) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V77, V78)) end end, fun (V79) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V79)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V82, V83)) end end, fun (V84) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V84)) end}, V80, V81)) end end, fun (V85) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V86, V87)) end end, fun (V88) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V88)) end}, V85)) end}}, V76)) end}}, V58)) end}, V1))), V89 end(V22)) end end end end.
'un--getImportHashes'(V0, V1) -> begin (V21 = begin (V2 = ('un--getHashes'(V0, V1))), ((begin (V18 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V15, V16, V17)) end end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end((begin (V10 = fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> {'Prelude.Types.Right', (V6(V9))} end end end end end), fun (V11) -> fun (V12) -> ((((V10('erased'))('erased'))(V11))(V12)) end end end(fun (V3) -> {'Builtin.MkUnit'} end))))(V2)) end), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V41 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(List $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V28, V29)) end end, fun (V30) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V30)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V31, V32)) end end, fun (V33) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V33)) end}}, V26, V27)) end end, fun (V34) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Core.Binary.Prims.dn--un--__mkTTC', fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.TTC':'dn--un--toBuf_TTC_Namespace'(V35, V36)) end end, fun (V37) -> ('Idris.Idris2.Core.TTC':'dn--un--fromBuf_TTC_Namespace'(V37)) end}, {'Core.Binary.Prims.dn--un--__mkTTC', fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_Int'(V38, V39)) end end, fun (V40) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V40)) end}}, V34)) end}, V1))), V41 end(V22)) end end end end.
'un--getHashes'(V0, V1) -> begin (V21 = begin (V2 = ('un--getTotalReq'(V0, V1))), ((begin (V18 = fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V15, V16, V17)) end end end end end), fun (V19) -> fun (V20) -> ((((V18('erased'))('erased'))(V19))(V20)) end end end((begin (V10 = fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> {'Prelude.Types.Right', (V6(V9))} end end end end end), fun (V11) -> fun (V12) -> ((((V10('erased'))('erased'))(V11))(V12)) end end end(fun (V3) -> {'Builtin.MkUnit'} end))))(V2)) end), fun (V22) -> begin (V23 = (V21(V22))), case V23 of {'Prelude.Types.Left', V24} -> {'Prelude.Types.Left', V24}; {'Prelude.Types.Right', V25} -> (begin (V42 = begin (V29 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_(Maybe $a)'({'Core.Binary.Prims.dn--un--__mkTTC', fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--toBuf_TTC_String'(V26, V27)) end end, fun (V28) -> ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_String'(V28)) end}, V1))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V41 = begin (V34 = ('Idris.Idris2.Core.Binary.Prims':'dn--un--fromBuf_TTC_Int'(V1))), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V40 = fun (V39) -> {'Prelude.Types.Right', {'Builtin.MkPair', V33, V38}} end), V40 end(V35)) end end end end), V41 end(V30)) end end end end), V42 end(V22)) end end end end.
'un--filenameFromModuleLocation'(V0) -> case V0 of {'Core.Binary.LocalFile', V1} -> V1; {'Core.Binary.EscriptFile', V2} -> V2 end.
'un--escriptReadFromFile'(V0) -> case V0 of {'Core.Binary.LocalFile', V1} -> begin (V4 = fun (V2) -> begin (V3 = ('Idris.Idris2.Libraries.Utils.Binary':'un--readFromFile'(V1, V2))), {'Prelude.Types.Right', V3} end end), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V12 = fun (V9) -> case V8 of {'Prelude.Types.Right', V10} -> {'Prelude.Types.Right', V10}; {'Prelude.Types.Left', V11} -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.InternalError', <<V1/binary, <<<<": "/utf8>>/binary, ('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V11))/binary>>/binary>>}, V9)) end end), V12 end(V5)) end end end end; {'Core.Binary.EscriptFile', V13} -> begin (V14 = ('un--readEscriptFile'(V13))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V61 = begin (V19 = ('un--stringToBuffer'(V18))), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V60 = begin (V53 = fun (V24) -> begin (V52 = (('Idris.Idris2.Erlang.Data.Buffer':'un--rawSize'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, V23))(V24))), {'Prelude.Types.Right', V52} end end), fun (V54) -> begin (V55 = (V53(V54))), case V55 of {'Prelude.Types.Left', V56} -> {'Prelude.Types.Left', V56}; {'Prelude.Types.Right', V57} -> (begin (V59 = fun (V58) -> {'Prelude.Types.Right', {'Libraries.Utils.Binary.MkBin', V23, 0, V57, V57}} end), V59 end(V54)) end end end end), V60 end(V20)) end end end end), V61 end(V15)) end end end end end.
'un--checkTTCVersion'(V0, V1, V2, V3) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V1, V2)) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.TTCError', {'Core.Core.Format', V0, V1, V2}}, V3)); 0 -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end.
'un--addTypeHint'(V0, V1, V2) -> case V2 of {'Builtin.MkPair', V3, V4} -> case V4 of {'Builtin.MkPair', V5, V6} -> begin (V20 = begin (V7 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V5))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V19 = begin (V12 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V3))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"ttc.read"/utf8>>, 10, fun (V17) -> {'Prelude.Types.Right', <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V11))/binary, <<<<" for "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V16))/binary>>/binary>>} end))), V18 end(V13)) end end end end), V19 end(V8)) end end end end), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V25 = ('Idris.Idris2.Core.Context':'un--addHintFor'(V0, V1, V3, V5, V6, 1))), V25 end(V21)) end end end end end end.
'un--addGlobalDef'(V0, V1, V2, V3, V4) -> case V4 of {'Builtin.MkPair', V5, V6} -> begin (V12 = begin (V7 = V0), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V130 = begin (V49 = ('Idris.Idris2.Core.Context':'un--lookupContextEntry'(V5, case V16 of {'Core.Context.MkDefs', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48} -> V17 end))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V129 = begin (V95 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V54) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end, fun () -> fun (V55) -> begin (V88 = ('Idris.Idris2.Core.Context':'un--decode'(case V16 of {'Core.Context.MkDefs', V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87} -> V56 end, ('Idris.Idris2.Builtin':'un--fst'(V55)), 0, ('Idris.Idris2.Builtin':'un--snd'(V55))))), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V94 = fun (V93) -> {'Prelude.Types.Right', {'Prelude.Types.Just', V92}} end), V94 end(V89)) end end end end end end, V53))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V128 = begin (V120 = case ('nested--13078-11242--in--un--completeDef'(V5, V6, V3, V2, V1, V0, V99)) of 1 -> fun (V100) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; 0 -> begin (V101 = ('Idris.Idris2.Core.Context':'un--addContextEntry'(V0, V2, V5, V6))), ((begin (V117 = fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V114, V115, V116)) end end end end end), fun (V118) -> fun (V119) -> ((((V117('erased'))('erased'))(V118))(V119)) end end end((begin (V109 = fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> case V106 of {'Prelude.Types.Left', V107} -> {'Prelude.Types.Left', V107}; {'Prelude.Types.Right', V108} -> {'Prelude.Types.Right', (V105(V108))} end end end end end), fun (V110) -> fun (V111) -> ((((V109('erased'))('erased'))(V110))(V111)) end end end(fun (V102) -> {'Builtin.MkUnit'} end))))(V101)) end end), fun (V121) -> begin (V122 = (V120(V121))), case V122 of {'Prelude.Types.Left', V123} -> {'Prelude.Types.Left', V123}; {'Prelude.Types.Right', V124} -> (begin (V127 = case V3 of {'Prelude.Types.Just', V125} -> ('Idris.Idris2.Core.Context':'un--addContextAlias'(V0, ('Idris.Idris2.Core.Name':'un--asName'(V1, V125, V5)), V5)); {'Prelude.Types.Nothing'} -> fun (V126) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end), V127 end(V121)) end end end end), V128 end(V96)) end end end end), V129 end(V50)) end end end end), V130 end(V13)) end end end end end.
'un--addAutoHint'(V0, V1) -> case V1 of {'Builtin.MkPair', V2, V3} -> begin (V9 = ('Idris.Idris2.Core.Context':'un--toResolvedNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4, V5)) end end, fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6, V7, V8)) end end end}, V2))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V62 = begin (V19 = begin (V14 = V0), fun (V15) -> begin (V18 = (begin (V16 = V14), fun (V17) -> ('erlang':'get'(V16)) end end(V15))), {'Prelude.Types.Right', V18} end end end), fun (V20) -> begin (V21 = (V19(V20))), case V21 of {'Prelude.Types.Left', V22} -> {'Prelude.Types.Left', V22}; {'Prelude.Types.Right', V23} -> (begin (V61 = begin (V24 = V0), fun (V25) -> begin (V60 = (begin (V26 = V24), fun (V27) -> ('erlang':'put'(V26, case V23 of {'Core.Context.MkDefs', V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59} -> {'Core.Context.MkDefs', V28, V29, V30, V31, V32, V33, V34, V35, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V13, V3, V36)), V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59} end)) end end(V25))), {'Prelude.Types.Right', V60} end end end), V61 end(V20)) end end end end), V62 end(V10)) end end end end end.
