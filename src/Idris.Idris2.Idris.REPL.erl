-module('Idris.Idris2.Idris.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--process-17493'/9,
  'case--process-16587'/7,
  'case--case block in case block in case block in case block in processEdit-12745'/25,
  'case--case block in case block in processEdit-12005'/23,
  'case--case block in processEdit-11899'/21,
  'case--case block in case block in processEdit-10209'/17,
  'case--case block in processEdit-10164'/15,
  'case--case block in case block in processEdit-9605'/16,
  'case--case block in processEdit-9562'/14,
  'case--processEdit-8995'/15,
  'case--findInTree,startsWithUpper-8322'/5,
  'case--nextGenDef-7879'/6,
  'case--nextProofSearch-7658'/5,
  'case--updateFile-7100'/4,
  'nested--32554-17423--in--un--toPaths'/8,
  'nested--24208-8236--in--un--startsWithUpper'/4,
  'nested--23193-7326--in--un--replaceStr'/7,
  'nested--35445-18353--in--un--prompt'/6,
  'nested--24750-8763--in--un--prettyLocalName'/9,
  'nested--24208-8237--in--un--matchingRoots'/5,
  'nested--24208-8239--in--un--match'/4,
  'nested--35545-19119--in--un--makeSpace'/1,
  'nested--23299-7428--in--un--insertInBlank'/8,
  'nested--21686-5888--in--un--ifNotNull'/6,
  'nested--35101-17876--in--un--getLoad'/4,
  'nested--35101-17877--in--un--fnameCmd'/3,
  'nested--31777-14817--in--un--execDecl'/7,
  'nested--21686-5889--in--un--enum'/7,
  'nested--32409-15410--in--un--elabMode'/8,
  'nested--21686-5890--in--un--displayChg'/6,
  'nested--35545-19120--in--un--col'/5,
  'nested--24208-8234--in--un--cmp'/5,
  'nested--35545-19121--in--un--cmdInfo'/1,
  'nested--24208-8238--in--un--checkCandidate'/4,
  'nested--24208-8235--in--un--checkAsNamespace'/5,
  'nested--23470-7579--in--un--addW'/7,
  'nested--23299-7429--in--un--addApp'/10,
  'un--updateFile'/2,
  'un--setOpt'/3,
  'un--rtrim'/1,
  'un--replEval'/6,
  'un--replCmd'/6,
  'un--repl'/5,
  'un--proofSearch'/4,
  'un--processLocal'/12,
  'un--processEdit'/6,
  'un--processCatch'/6,
  'un--process'/6,
  'un--printClause'/5,
  'un--prettyInfo'/3,
  'un--prepareExp'/6,
  'un--parseRepl'/1,
  'un--parseEmptyCmd'/0,
  'un--parseCmd'/0,
  'un--nextProofSearch'/3,
  'un--nextGenDef'/4,
  'un--lookupDefTyName'/2,
  'un--loadMainFile'/6,
  'un--interpret'/6,
  'un--inferAndNormalize'/7,
  'un--inferAndElab'/9,
  'un--handleResult'/6,
  'un--handleMissing\x{27}'/1,
  'un--handleMissing'/1,
  'un--getOptions'/2,
  'un--getItDecls'/1,
  'un--findInTree'/3,
  'un--execExp'/6,
  'un--execDecls'/6,
  'un--dropLamsTm'/4,
  'un--dropLams'/2,
  'un--displayResult'/6,
  'un--displayPatTerm'/4,
  'un--displayHelp'/0,
  'un--displayErrors'/6,
  'un--compileLib'/4,
  'un--compileExp'/7,
  'un--caseSplit'/3,
  'un--anyAt'/3,
  'un--addMadeLemma'/6,
  'un--addMadeCase'/4,
  'un--addClause'/3
]).
'case--process-17493'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Prelude.Types.Just', V9} -> begin (V10 = ('Idris.Idris2.Libraries.Utils.Path':'un--parse'(V9))), begin (V13 = fun (V11) -> begin (V12 = ('Idris.Idris2.Libraries.System.Directory.Tree':'un--explore'(V10, V11))), {'Prelude.Types.Right', V12} end end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V108 = begin (V20 = fun (V18) -> begin (V19 = (('nested--32554-17423--in--un--toPaths'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Libraries.Utils.Path':'un--parse'(<<""/utf8>>)), ('Idris.Idris2.Libraries.System.Directory.Tree.Tree':'un--toRelative'(V17))))(V18))), {'Prelude.Types.Right', V19} end end), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V107 = begin (V45 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V25, V26, [])) end end, V24, fun (V27) -> begin (V28 = ('Idris.Idris2.Libraries.Utils.Path':'un--dropExtension'(V27))), begin (V30 = ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Data.String':'un--split'(fun (V29) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Char'(V29, ('Idris.Idris2.Libraries.Utils.Path':'un--dirSeparator'()))) end, V28))))), begin (V34 = ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V31) -> fun (V32) -> <<V31/binary, V32/binary>> end end, <<""/utf8>>}, fun (V33) -> V33 end, ('Idris.Idris2.Data.List':'un--intersperse'(<<"."/utf8>>, V30))))), begin (V35 = ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V34))), ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V36 = ('Idris.Idris2.Idris.ProcessIdr':'un--addImport'(V5, V4, V3, {'Idris.Syntax.MkImport', ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, ('Idris.Idris2.Core.Name.Namespace':'un--nsAsModuleIdent'(V35)), V35}))), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V42 = fun (V41) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end), V42 end(V37)) end end end end, fun (V43) -> fun (V44) -> {'Prelude.Types.Right', {'Prelude.Types.Just', V43}} end end)) end end end end end))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V106 = begin (V50 = ('Idris.Idris2.Data.List':'un--catMaybes'(V49))), begin (V99 = case V50 of [] -> fun (V51) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V52) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V53) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V53)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V54) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V54)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V55) -> fun (V56) -> case case (V55 =:= V56) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V52)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V57} -> case V57 of {'Builtin.MkPair', V58, V59} -> [V58 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V59))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V52)); 0 -> V52 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V60} -> case V60 of {'Builtin.MkPair', V61, V62} -> [V61 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V62))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V63) -> fun (V64) -> case case (V63 =:= V64) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V52)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V65} -> case V65 of {'Builtin.MkPair', V66, V67} -> [V66 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V67))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V52)); 0 -> V52 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V68} -> case V68 of {'Builtin.MkPair', V69, V70} -> [V69 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V70))] end end)))))))) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V73) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V73)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V74) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V74)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V75) -> fun (V76) -> case case (V75 =:= V76) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V72)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V77} -> case V77 of {'Builtin.MkPair', V78, V79} -> [V78 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V79))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V72)); 0 -> V72 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V80} -> case V80 of {'Builtin.MkPair', V81, V82} -> [V81 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V82))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V83) -> fun (V84) -> case case (V83 =:= V84) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V72)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V85} -> case V85 of {'Builtin.MkPair', V86, V87} -> [V86 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V87))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V72)); 0 -> V72 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V88} -> case V88 of {'Builtin.MkPair', V89, V90} -> [V89 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V90))] end end)))))))) end end}, <<"Done"/utf8>>))} end; _ -> begin (V92 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V91) -> ('Idris.Idris2.Idris.Error':'un--display'(V5, V3, V1, V91)) end, V50, []))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V98 = fun (V97) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V96))} end), V98 end(V93)) end end end end end), fun (V100) -> begin (V101 = (V99(V100))), case V101 of {'Prelude.Types.Left', V102} -> {'Prelude.Types.Left', V102}; {'Prelude.Types.Right', V103} -> (begin (V105 = fun (V104) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', V103}} end), V105 end(V100)) end end end end end), V106 end(V46)) end end end end), V107 end(V21)) end end end end), V108 end(V14)) end end end end end; _ -> fun (V109) -> {'Prelude.Types.Right', {'Idris.REPL.Common.REPLError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Package not found in the known search directories"/utf8>>))}} end end.
'case--process-16587'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Prelude.Types.Nothing'} -> fun (V7) -> {'Prelude.Types.Right', {'Idris.REPL.Common.NoFileLoaded'}} end; {'Prelude.Types.Just', V8} -> begin (V28 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [] end, fun () -> fun (V9) -> [<<<<"+"/utf8>>/binary, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(begin (V10 = (V9 + 1)), case ((V10 band 9223372036854775808) =/= 0) of 'true' -> (V10 bor -9223372036854775808); _ -> (V10 band 9223372036854775807) end end))/binary>> | []] end end, case V5 of {'Idris.REPL.Opts.MkREPLOpts', V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27} -> V18 end))), begin (V94 = begin (V75 = fun (V29) -> begin (V74 = (('Idris.Idris2.Erlang.System.Escaped':'un--system'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V32, V33, V34)) end end end end end, fun (V35) -> fun (V36) -> fun (V37) -> V36 end end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> begin (V43 = (V40(V42))), begin (V44 = (V41(V42))), (V43(V44)) end end end end end end end}, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> begin (V50 = (V47(V49))), ((V48(V50))(V49)) end end end end end end, fun (V51) -> fun (V52) -> fun (V53) -> begin (V54 = (V52(V53))), (V54(V53)) end end end end}, fun (V55) -> fun (V56) -> V56 end end}, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'([case V5 of {'Idris.REPL.Opts.MkREPLOpts', V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73} -> V63 end | [V8 | []]], V28))))(V29))), {'Prelude.Types.Right', V74} end end), ((begin (V91 = fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V88, V89, V90)) end end end end end), fun (V92) -> fun (V93) -> ((((V91('erased'))('erased'))(V92))(V93)) end end end((begin (V83 = fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> case V80 of {'Prelude.Types.Left', V81} -> {'Prelude.Types.Left', V81}; {'Prelude.Types.Right', V82} -> {'Prelude.Types.Right', (V79(V82))} end end end end end), fun (V84) -> fun (V85) -> ((((V83('erased'))('erased'))(V84))(V85)) end end end(fun (V76) -> {'Builtin.MkUnit'} end))))(V75)) end), fun (V95) -> begin (V96 = (V94(V95))), case V96 of {'Prelude.Types.Left', V97} -> {'Prelude.Types.Left', V97}; {'Prelude.Types.Right', V98} -> (begin (V99 = ('un--loadMainFile'(V4, V3, V2, V1, V0, V8))), V99 end(V95)) end end end end end end.
'case--case block in case block in case block in case block in processEdit-12745'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Builtin.MkPair', V25, V26} -> begin (V28 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V27) -> ('un--printClause'(V8, V6, V25, V21, V27)) end, V19, []))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V49 = case V3 of 1 -> ('un--updateFile'(V4, fun (V33) -> ('un--addClause'(('Idris.Idris2.Data.String':'un--fastUnlines'(V32)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V35 = fun (V34) -> V34 end), fun (V36) -> (V35(V36)) end end(V2)))), V33)) end)); 0 -> fun (V37) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V46 = fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V44, V45)) end end end end), fun (V47) -> fun (V48) -> ((((V46('erased'))('erased'))(V47))(V48)) end end end(fun (V38) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V39) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V40, V41)) end end}, V38)) end))(V32))))}} end end), V49 end(V29)) end end end end end.
'case--case block in case block in processEdit-12005'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V22 of {'Builtin.DPair.MkDPair', V23, V24} -> case V24 of {'Builtin.MkPair', V25, V26} -> begin (V27 = ('Idris.Idris2.Idris.Resugar':'un--resugar'(V23, V8, V6, V25, V26))), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V43 = begin (V32 = case V11 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V31)); 0 -> V31 end), case V3 of 1 -> ('un--updateFile'(V4, fun (V33) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V32)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V36 = fun (V35) -> V35 end), fun (V37) -> (V36(V37)) end end(begin (V34 = (V2 - 1)), case ((V34 band 9223372036854775808) =/= 0) of 'true' -> (V34 bor -9223372036854775808); _ -> (V34 band 9223372036854775807) end end)))), V33)) end)); 0 -> fun (V38) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V39) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V40, V41)) end end}, fun (V42) -> {'Idris.Pretty.Syntax', V42} end, V32))}} end end end), V43 end(V28)) end end end end end end.
'case--case block in processEdit-11899'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Core.Context.Context.NotHole'} -> fun (V21) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end; {'Core.Context.Context.SolvedHole', V22} -> begin (V23 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V8, [], V9, {'Core.Env.Nil'}, V17))), fun (V24) -> begin (V25 = (V23(V24))), case V25 of {'Prelude.Types.Left', V26} -> {'Prelude.Types.Left', V26}; {'Prelude.Types.Right', V27} -> (begin (V28 = ('case--case block in case block in processEdit-12005'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V22, V27, ('un--dropLamsTm'([], V22, {'Core.Env.Nil'}, V27))))), V28 end(V24)) end end end end end.
'case--case block in case block in processEdit-10209'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Builtin.DPair.MkDPair', V17, V18} -> case V18 of {'Builtin.MkPair', V19, V20} -> begin (V122 = case V0 of {'Idris.Syntax.PRef', V21, V22} -> begin (V55 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V22, case V9 of {'Core.Context.MkDefs', V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54} -> V23 end))), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V120 = case V59 of [E0 | E1] -> (fun (V60, V61) -> begin (V99 = ((begin (V96 = fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Data.List1':'dn--un--map_Functor_List1'(V94, V95)) end end end end), fun (V97) -> fun (V98) -> ((((V96('erased'))('erased'))(V97))(V98)) end end end(fun (V62) -> case V62 of {'Builtin.MkPair', V63, V64} -> case V64 of {'Builtin.MkPair', V65, V66} -> begin (V89 = ('Idris.Idris2.Core.TT.Views':'un--underPis'(-1, {'Core.Env.Nil'}, case V66 of {'Core.Context.Context.MkGlobalDef', V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88} -> V69 end))), ('Idris.Idris2.Core.Env':'un--lengthExplicitPi'(('Idris.Idris2.Builtin':'un--fst'(case V89 of {'Builtin.DPair.MkDPair', V90, V91} -> V91 end)))) end end end end))({'Data.List1.:::', V60, V61}))), case ('Idris.Idris2.Data.List1':'dn--un--foldMap_Foldable_List1'({'Prelude.Interfaces.MkMonoid', fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.Interfaces.Bool.Semigroup':'dn--un--<+>_Semigroup_AllBool'(V100, V101)) end end, 1}, fun (V102) -> case (case V99 of {'Data.List1.:::', V103, V104} -> V103 end =:= V102) of 'false' -> 0; _ -> 1 end end, V99)) of 1 -> begin (V107 = (V15 + case V99 of {'Data.List1.:::', V105, V106} -> V105 end)), fun (V108) -> {'Prelude.Types.Right', {'Prelude.Types.Right', {'Prelude.Types.Just', V107}}} end end; _ -> fun (V109) -> {'Prelude.Types.Right', {'Prelude.Types.Left', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V111 = fun (V110) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V110)) end), fun (V112) -> (V111(V112)) end end(<<"Ambiguous name"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V113) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V113)) end, fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V114, V115)) end end}, V22)), (begin (V117 = fun (V116) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V116)) end), fun (V118) -> (V117(V118)) end end(<<"(couldn\x{27}t infer arity)"/utf8>>))))))}} end end end end(E0, E1)); [] -> fun (V119) -> {'Prelude.Types.Right', {'Prelude.Types.Right', {'Prelude.Types.Nothing'}}} end end), V120 end(V56)) end end end end; _ -> fun (V121) -> {'Prelude.Types.Right', {'Prelude.Types.Right', {'Prelude.Types.Nothing'}}} end end), fun (V123) -> begin (V124 = (V122(V123))), case V124 of {'Prelude.Types.Left', V125} -> {'Prelude.Types.Left', V125}; {'Prelude.Types.Right', V126} -> (begin (V426 = case V126 of {'Prelude.Types.Right', V127} -> begin (V225 = case V127 of {'Prelude.Types.Just', V128} -> fun (V129) -> {'Prelude.Types.Right', V128} end; {'Prelude.Types.Nothing'} -> begin (V135 = begin (V130 = V7), fun (V131) -> begin (V134 = (begin (V132 = V130), fun (V133) -> ('erlang':'get'(V132)) end end(V131))), {'Prelude.Types.Right', V134} end end end), fun (V136) -> begin (V137 = (V135(V136))), case V137 of {'Prelude.Types.Left', V138} -> {'Prelude.Types.Left', V138}; {'Prelude.Types.Right', V139} -> (begin (V224 = begin (V145 = begin (V140 = V6), fun (V141) -> begin (V144 = (begin (V142 = V140), fun (V143) -> ('erlang':'get'(V142)) end end(V141))), {'Prelude.Types.Right', V144} end end end), fun (V146) -> begin (V147 = (V145(V146))), case V147 of {'Prelude.Types.Left', V148} -> {'Prelude.Types.Left', V148}; {'Prelude.Types.Right', V149} -> (begin (V223 = begin (V155 = begin (V150 = V5), fun (V151) -> begin (V154 = (begin (V152 = V150), fun (V153) -> ('erlang':'get'(V152)) end end(V151))), {'Prelude.Types.Right', V154} end end end), fun (V156) -> begin (V157 = (V155(V156))), case V157 of {'Prelude.Types.Left', V158} -> {'Prelude.Types.Left', V158}; {'Prelude.Types.Right', V159} -> (begin (V222 = begin (V160 = ('Idris.Idris2.Core.Context':'un--branch'(V8))), fun (V161) -> begin (V162 = (V160(V161))), case V162 of {'Prelude.Types.Left', V163} -> {'Prelude.Types.Left', V163}; {'Prelude.Types.Right', V164} -> (begin (V221 = begin (V165 = ('un--inferAndElab'(('Idris.Idris2.Prelude.Types.SnocList':'un--<>>'(V17, [])), V8, V7, V6, V5, V4, {'TTImp.Elab.Check.InExpr'}, V0, V19))), fun (V166) -> begin (V167 = (V165(V166))), case V167 of {'Prelude.Types.Left', V168} -> {'Prelude.Types.Left', V168}; {'Prelude.Types.Right', V169} -> (begin (V220 = begin (V175 = begin (V170 = V7), fun (V171) -> begin (V174 = (begin (V172 = V170), fun (V173) -> ('erlang':'put'(V172, V139)) end end(V171))), {'Prelude.Types.Right', V174} end end end), fun (V176) -> begin (V177 = (V175(V176))), case V177 of {'Prelude.Types.Left', V178} -> {'Prelude.Types.Left', V178}; {'Prelude.Types.Right', V179} -> (begin (V219 = begin (V185 = begin (V180 = V6), fun (V181) -> begin (V184 = (begin (V182 = V180), fun (V183) -> ('erlang':'put'(V182, V149)) end end(V181))), {'Prelude.Types.Right', V184} end end end), fun (V186) -> begin (V187 = (V185(V186))), case V187 of {'Prelude.Types.Left', V188} -> {'Prelude.Types.Left', V188}; {'Prelude.Types.Right', V189} -> (begin (V218 = begin (V195 = begin (V190 = V5), fun (V191) -> begin (V194 = (begin (V192 = V190), fun (V193) -> ('erlang':'put'(V192, V159)) end end(V191))), {'Prelude.Types.Right', V194} end end end), fun (V196) -> begin (V197 = (V195(V196))), case V197 of {'Prelude.Types.Left', V198} -> {'Prelude.Types.Left', V198}; {'Prelude.Types.Right', V199} -> (begin (V217 = begin (V205 = begin (V200 = V8), fun (V201) -> begin (V204 = (begin (V202 = V200), fun (V203) -> ('erlang':'put'(V202, V164)) end end(V201))), {'Prelude.Types.Right', V204} end end end), fun (V206) -> begin (V207 = (V205(V206))), case V207 of {'Prelude.Types.Left', V208} -> {'Prelude.Types.Left', V208}; {'Prelude.Types.Right', V209} -> (begin (V216 = begin (V212 = ('Idris.Idris2.Core.TT.Views':'un--underPis'(-1, V19, case V169 of {'Idris.REPL.WithType', V210, V211} -> V211 end))), fun (V213) -> {'Prelude.Types.Right', ('Idris.Idris2.Core.Env':'un--lengthExplicitPi'(('Idris.Idris2.Builtin':'un--fst'(case V212 of {'Builtin.DPair.MkDPair', V214, V215} -> V215 end))))} end end), V216 end(V206)) end end end end), V217 end(V196)) end end end end), V218 end(V186)) end end end end), V219 end(V176)) end end end end), V220 end(V166)) end end end end), V221 end(V161)) end end end end), V222 end(V156)) end end end end), V223 end(V146)) end end end end), V224 end(V136)) end end end end end), fun (V226) -> begin (V227 = (V225(V226))), case V227 of {'Prelude.Types.Left', V228} -> {'Prelude.Types.Left', V228}; {'Prelude.Types.Right', V229} -> (begin (V423 = begin (V254 = ('Idris.Idris2.Core.Env':'un--lengthExplicitPi'(('Idris.Idris2.Builtin':'un--fst'(case ('Idris.Idris2.Core.TT.Views':'un--underPis'(-1, {'Core.Env.Nil'}, case V12 of {'Core.Context.Context.MkGlobalDef', V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251} -> V232 end)) of {'Builtin.DPair.MkDPair', V252, V253} -> V253 end))))), case ('Idris.Idris2.Prelude.Types':'dn--un-->=_Ord_Nat'(V229, V254)) of 1 -> begin (V362 = begin (V255 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((V229 - V254)))), begin (V256 = ('Idris.Idris2.TTImp.Utils':'un--uniqueHoleNames'(V6, V9, V255, ('Idris.Idris2.Core.Name':'un--nameRoot'(V1))))), fun (V257) -> begin (V258 = (V256(V257))), case V258 of {'Prelude.Types.Left', V259} -> {'Prelude.Types.Left', V259}; {'Prelude.Types.Right', V260} -> (begin (V361 = begin (V269 = ((begin (V266 = fun (V262) -> fun (V263) -> fun (V264) -> fun (V265) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V264, V265)) end end end end), fun (V267) -> fun (V268) -> ((((V266('erased'))('erased'))(V267))(V268)) end end end(fun (V261) -> {'Idris.Syntax.PHole', ('Idris.Idris2.Core.FC':'un--replFC'()), 1, V261} end))(V260))), begin (V270 = ('Idris.Idris2.Idris.Syntax':'un--papply'(('Idris.Idris2.Core.FC':'un--replFC'()), V0, V269))), begin (V271 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V6, V8, V5, V7, V4, 1, ('Idris.Idris2.Prelude.Types.SnocList':'un--<>>'(V17, [])), V270))), fun (V272) -> begin (V273 = (V271(V272))), case V273 of {'Prelude.Types.Left', V274} -> {'Prelude.Types.Left', V274}; {'Prelude.Types.Right', V275} -> (begin (V360 = begin (V276 = ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(('Idris.Idris2.Prelude.Types.SnocList':'un--<>>'(V17, [])), V19, V20))), begin (V277 = ('Idris.Idris2.TTImp.Elab':'un--checkTerm'(('Idris.Idris2.Prelude.Types.SnocList':'un--<>>'(V17, [])), V8, V5, V7, V6, V4, V11, {'TTImp.Elab.Check.InExpr'}, [], [], V19, V275, V276))), fun (V278) -> begin (V279 = (V277(V278))), case V279 of {'Prelude.Types.Left', V280} -> {'Prelude.Types.Left', V280}; {'Prelude.Types.Right', V281} -> (begin (V359 = begin (V287 = begin (V282 = V8), fun (V283) -> begin (V286 = (begin (V284 = V282), fun (V285) -> ('erlang':'get'(V284)) end end(V283))), {'Prelude.Types.Right', V286} end end end), fun (V288) -> begin (V289 = (V287(V288))), case V289 of {'Prelude.Types.Left', V290} -> {'Prelude.Types.Left', V290}; {'Prelude.Types.Right', V291} -> (begin (V358 = begin (V292 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V8, ('Idris.Idris2.Prelude.Types.SnocList':'un--<>>'(V17, [])), V291, V19, V281))), fun (V293) -> begin (V294 = (V292(V293))), case V294 of {'Prelude.Types.Left', V295} -> {'Prelude.Types.Left', V295}; {'Prelude.Types.Right', V296} -> (begin (V357 = begin (V297 = ('Idris.Idris2.Idris.Resugar':'un--resugar'(('Idris.Idris2.Prelude.Types.SnocList':'un--<>>'(V17, [])), V8, V6, V19, V296))), fun (V298) -> begin (V299 = (V297(V298))), case V299 of {'Prelude.Types.Left', V300} -> {'Prelude.Types.Left', V300}; {'Prelude.Types.Right', V301} -> (begin (V356 = begin (V307 = begin (V302 = V6), fun (V303) -> begin (V306 = (begin (V304 = V302), fun (V305) -> ('erlang':'get'(V304)) end end(V303))), {'Prelude.Types.Right', V306} end end end), fun (V308) -> begin (V309 = (V307(V308))), case V309 of {'Prelude.Types.Left', V310} -> {'Prelude.Types.Left', V310}; {'Prelude.Types.Right', V311} -> (begin (V355 = begin (V353 = ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V312) -> fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V314, V315, V316)) end end end end end, fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V319, V320, V321)) end end end end end, fun (V322) -> fun (V323) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V323)) end end, fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> fun (V330) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V327, V328, V329, V330)) end end end end end end end, fun (V331) -> fun (V332) -> V332 end end, fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V335, V336, V337)) end end end end end}, fun (V338) -> fun (V339) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V338)), ('Idris.Idris2.Core.Name':'un--dropNS'(V339)))) end end, V1, case V311 of {'Idris.Syntax.MkSyntax', V340, V341, V342, V343, V344, V345, V346, V347, V348, V349, V350, V351, V352} -> V349 end))), fun (V354) -> {'Prelude.Types.Right', ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(case V353 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V301)); 0 -> V301 end))} end end), V355 end(V308)) end end end end), V356 end(V298)) end end end end), V357 end(V293)) end end end end), V358 end(V288)) end end end end), V359 end(V278)) end end end end end), V360 end(V272)) end end end end end end), V361 end(V257)) end end end end end), fun (V363) -> begin (V364 = (V362(V363))), case V364 of {'Prelude.Types.Left', V365} -> {'Prelude.Types.Left', V365}; {'Prelude.Types.Right', V366} -> (begin (V376 = case V3 of 1 -> ('un--updateFile'(V4, fun (V367) -> ('un--proofSearch'(V1, V366, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V370 = fun (V369) -> V369 end), fun (V371) -> (V370(V371)) end end(begin (V368 = (V2 - 1)), case ((V368 band 9223372036854775808) =/= 0) of 'true' -> (V368 bor -9223372036854775808); _ -> (V368 band 9223372036854775807) end end)))), V367)) end)); 0 -> fun (V372) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V373) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V373)) end, fun (V374) -> fun (V375) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V374, V375)) end end}, V366))}} end end), V376 end(V363)) end end end end; _ -> fun (V377) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'([('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Cannot seem to refine"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V378) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V378)) end, fun (V379) -> fun (V380) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V379, V380)) end end}, V1)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V381) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V382) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V382)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V383) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V383)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V384) -> fun (V385) -> case case (V384 =:= V385) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V381)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V386} -> case V386 of {'Builtin.MkPair', V387, V388} -> [V387 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V388))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V381)); 0 -> V381 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V389} -> case V389 of {'Builtin.MkPair', V390, V391} -> [V390 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V391))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V392) -> fun (V393) -> case case (V392 =:= V393) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V381)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V394} -> case V394 of {'Builtin.MkPair', V395, V396} -> [V395 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V396))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V381)); 0 -> V381 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V397} -> case V397 of {'Builtin.MkPair', V398, V399} -> [V398 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V399))] end end)))))))) end, fun (V400) -> fun (V401) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V402) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V402)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V403) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V403)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V404) -> fun (V405) -> case case (V404 =:= V405) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V401)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V406} -> case V406 of {'Builtin.MkPair', V407, V408} -> [V407 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V408))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V401)); 0 -> V401 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V409} -> case V409 of {'Builtin.MkPair', V410, V411} -> [V410 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V411))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V412) -> fun (V413) -> case case (V412 =:= V413) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V401)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V414} -> case V414 of {'Builtin.MkPair', V415, V416} -> [V415 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V416))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V401)); 0 -> V401 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V417} -> case V417 of {'Builtin.MkPair', V418, V419} -> [V418 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V419))] end end)))))))) end end}, <<"by"/utf8>>)) | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V420) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V420)) end, fun (V421) -> fun (V422) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V421, V422)) end end}, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V0)))) | []]]]]))}} end end end), V423 end(V226)) end end end end; {'Prelude.Types.Left', V424} -> fun (V425) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', V424}} end end), V426 end(V123)) end end end end end end.
'case--case block in processEdit-10164'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Core.Context.Context.Hole', V15, V16} -> ('case--case block in case block in processEdit-10209'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V16, V15, ('Idris.Idris2.Core.TT.Views':'un--underPis'(begin (V17 = V15), case ((V17 band 9223372036854775808) =/= 0) of 'true' -> (V17 bor -9223372036854775808); _ -> (V17 band 9223372036854775807) end end, {'Core.Env.Nil'}, case V12 of {'Core.Context.Context.MkGlobalDef', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39} -> V20 end)))); _ -> fun (V40) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V41) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V41)) end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V42, V43)) end end}, V1)), (begin (V45 = fun (V44) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V44)) end), fun (V46) -> (V45(V46)) end end(<<"is not a refinable hole"/utf8>>))))}} end end.
'case--case block in case block in processEdit-9605'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Builtin.DPair.MkDPair', V16, V17} -> case V17 of {'Builtin.MkPair', V18, V19} -> begin (V20 = ('Idris.Idris2.TTImp.Interactive.Intro':'un--intro'(('Idris.Idris2.Prelude.Types.SnocList':'un--<>>'(V16, [])), V7, V5, V4, V6, V3, V10, V0, V18, V19))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V110 = case V24 of [E0 | E1] -> (fun (V25, V26) -> begin (V28 = ('Idris.Idris2.Core.Core':'un--traverseList1'(fun (V27) -> ('Idris.Idris2.Idris.Resugar':'un--pterm'(V7, V5, V27)) end, {'Data.List1.:::', V25, V26}))), fun (V29) -> begin (V30 = (V28(V29))), case V30 of {'Prelude.Types.Left', V31} -> {'Prelude.Types.Left', V31}; {'Prelude.Types.Right', V32} -> (begin (V105 = begin (V38 = begin (V33 = V5), fun (V34) -> begin (V37 = (begin (V35 = V33), fun (V36) -> ('erlang':'get'(V35)) end end(V34))), {'Prelude.Types.Right', V37} end end end), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V104 = begin (V84 = ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V54)) end end, fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V58, V59, V60, V61)) end end end end end end end, fun (V62) -> fun (V63) -> V63 end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V66, V67, V68)) end end end end end}, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V69)), ('Idris.Idris2.Core.Name':'un--dropNS'(V70)))) end end, V0, case V42 of {'Idris.Syntax.MkSyntax', V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83} -> V80 end))), begin (V93 = ((begin (V90 = fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('Idris.Idris2.Data.List1':'dn--un--map_Functor_List1'(V88, V89)) end end end end), fun (V91) -> fun (V92) -> ((((V90('erased'))('erased'))(V91))(V92)) end end end(fun (V85) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--show_Show_(Doc $ann)'(('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(case V84 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V85)); 0 -> V85 end)))) end))(V32))), case V2 of 1 -> case V93 of {'Data.List1.:::', V94, V95} -> case V95 of [] -> ('un--updateFile'(V3, fun (V96) -> ('un--proofSearch'(V0, V94, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V99 = fun (V98) -> V98 end), fun (V100) -> (V99(V100)) end end(begin (V97 = (V1 - 1)), case ((V97 band 9223372036854775808) =/= 0) of 'true' -> (V97 bor -9223372036854775808); _ -> (V97 band 9223372036854775807) end end)))), V96)) end)); _ -> fun (V101) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Don\x{27}t know what to do"/utf8>>))}} end end; _ -> fun (V102) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Don\x{27}t know what to do"/utf8>>))}} end end; 0 -> fun (V103) -> {'Prelude.Types.Right', {'Idris.REPL.Common.MadeIntro', V93}} end end end end), V104 end(V39)) end end end end), V105 end(V29)) end end end end end(E0, E1)); [] -> fun (V106) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V108 = fun (V107) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V107)) end), fun (V109) -> (V108(V109)) end end(<<"Don\x{27}t know what to do."/utf8>>))}} end end), V110 end(V21)) end end end end end end.
'case--case block in processEdit-9562'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Core.Context.Context.Hole', V14, V15} -> ('case--case block in case block in processEdit-9605'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V15, V14, ('Idris.Idris2.Core.TT.Views':'un--underPis'(begin (V16 = V14), case ((V16 band 9223372036854775808) =/= 0) of 'true' -> (V16 bor -9223372036854775808); _ -> (V16 band 9223372036854775807) end end, {'Core.Env.Nil'}, case V11 of {'Core.Context.Context.MkGlobalDef', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38} -> V19 end)))); _ -> fun (V39) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V41, V42)) end end}, V0)), (begin (V44 = fun (V43) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V43)) end), fun (V45) -> (V44(V45)) end end(<<"is not a refinable hole"/utf8>>))))}} end end.
'case--processEdit-8995'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Builtin.MkPair', V15, V16} -> case V16 of {'Prelude.Types.Just', V17} -> case V17 of {'Builtin.MkPair', V18, V19} -> case V19 of {'Builtin.MkPair', V20, V21} -> begin (V42 = begin (V22 = ('Idris.Idris2.Idris.Doc.Display':'un--displayTerm'(V7, V5, V8, V21))), ((begin (V39 = fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V36, V37, V38)) end end end end end), fun (V40) -> fun (V41) -> ((((V39('erased'))('erased'))(V40))(V41)) end end end((begin (V31 = fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> {'Prelude.Types.Right', (V27(V30))} end end end end end), fun (V32) -> fun (V33) -> ((((V31('erased'))('erased'))(V32))(V33)) end end end(fun (V23) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V24) -> {'Idris.Pretty.Syntax', V24} end, V23)) end))))(V22)) end), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V48 = fun (V47) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('nested--24750-8763--in--un--prettyLocalName'(V0, V1, V2, V3, V4, V5, V6, V7, V18)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), V46))))}} end), V48 end(V43)) end end end end; _ -> case V15 of {'Prelude.Types.Just', V49} -> fun (V50) -> case V16 of {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', V49}} end end; {'Prelude.Types.Nothing'} -> case V16 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10)) end end end; _ -> case V15 of {'Prelude.Types.Just', V51} -> fun (V52) -> case V16 of {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', V51}} end end; {'Prelude.Types.Nothing'} -> case V16 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10)) end end end; _ -> case V15 of {'Prelude.Types.Just', V53} -> fun (V54) -> case V16 of {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', V53}} end end; {'Prelude.Types.Nothing'} -> case V16 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10)) end end end end.
'case--findInTree,startsWithUpper-8322'(V0, V1, V2, V3, V4) -> case V3 of <<""/utf8>> -> case V4 of {'Data.String.StrNil'} -> 0; _ -> case V4 of {'Data.String.StrCons', V5, V6} -> case ('Idris.Idris2.Prelude.Types':'un--isUpper'(V5)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Char'(V5, case begin (V7 = 160), case ((V7 band 9223372036854775808) =/= 0) of 'true' -> (V7 bor -9223372036854775808); _ -> (V7 band 9223372036854775807) end end of E1 when ((erlang:'is_integer'(E1)) andalso (((E1 >= 0) andalso (E1 =< 55295)) orelse ((E1 >= 57344) andalso (E1 =< 1114111)))) -> E1; _ -> 65533 end)) end end end; _ -> case V4 of {'Data.String.StrCons', V8, V9} -> case ('Idris.Idris2.Prelude.Types':'un--isUpper'(V8)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Char'(V8, case begin (V10 = 160), case ((V10 band 9223372036854775808) =/= 0) of 'true' -> (V10 bor -9223372036854775808); _ -> (V10 band 9223372036854775807) end end of E0 when ((erlang:'is_integer'(E0)) andalso (((E0 >= 0) andalso (E0 =< 55295)) orelse ((E0 >= 57344) andalso (E0 =< 1114111)))) -> E0; _ -> 65533 end)) end end end.
'case--nextGenDef-7879'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Prelude.Types.Just', V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> begin (V9 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'(V3, V2, V8))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V76 = case V13 of {'Prelude.Types.Just', V14} -> case V14 of {'Builtin.MkPair', V15, V16} -> begin (V39 = begin (V17 = V1), fun (V18) -> begin (V38 = (begin (V19 = V17), fun (V20) -> ('erlang':'put'(V19, case V4 of {'Idris.REPL.Opts.MkREPLOpts', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37} -> {'Idris.REPL.Opts.MkREPLOpts', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, {'Prelude.Types.Just', {'Builtin.MkPair', V7, V16}}, V33, V34, V35, V36, V37} end)) end end(V18))), {'Prelude.Types.Right', V38} end end end), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V46 = case V0 of 0 -> fun (V44) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Builtin.MkPair', V7, V15}}} end; _ -> begin (V45 = (V0 - 1)), ('un--nextGenDef'(V3, V2, V1, V45)) end end), V46 end(V40)) end end end end end; {'Prelude.Types.Nothing'} -> begin (V69 = begin (V47 = V1), fun (V48) -> begin (V68 = (begin (V49 = V47), fun (V50) -> ('erlang':'put'(V49, case V4 of {'Idris.REPL.Opts.MkREPLOpts', V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67} -> {'Idris.REPL.Opts.MkREPLOpts', V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, {'Prelude.Types.Nothing'}, V63, V64, V65, V66, V67} end)) end end(V48))), {'Prelude.Types.Right', V68} end end end), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V75 = fun (V74) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end), V75 end(V70)) end end end end end), V76 end(V10)) end end end end end; {'Prelude.Types.Nothing'} -> fun (V77) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end.
'case--nextProofSearch-7658'(V0, V1, V2, V3, V4) -> case V4 of {'Prelude.Types.Just', V5} -> case V5 of {'Builtin.MkPair', V6, V7} -> begin (V8 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'(V2, V1, V7))), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V74 = case V12 of {'Prelude.Types.Just', V13} -> case V13 of {'Builtin.MkPair', V14, V15} -> begin (V38 = begin (V16 = V0), fun (V17) -> begin (V37 = (begin (V18 = V16), fun (V19) -> ('erlang':'put'(V18, case V3 of {'Idris.REPL.Opts.MkREPLOpts', V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36} -> {'Idris.REPL.Opts.MkREPLOpts', V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, {'Prelude.Types.Just', {'Builtin.MkPair', V6, V15}}, V31, V32, V33, V34, V35, V36} end)) end end(V17))), {'Prelude.Types.Right', V37} end end end), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V44 = fun (V43) -> {'Prelude.Types.Right', {'Prelude.Types.Just', {'Builtin.MkPair', V6, V14}}} end), V44 end(V39)) end end end end end; {'Prelude.Types.Nothing'} -> begin (V67 = begin (V45 = V0), fun (V46) -> begin (V66 = (begin (V47 = V45), fun (V48) -> ('erlang':'put'(V47, case V3 of {'Idris.REPL.Opts.MkREPLOpts', V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65} -> {'Idris.REPL.Opts.MkREPLOpts', V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, {'Prelude.Types.Nothing'}, V60, V61, V62, V63, V64, V65} end)) end end(V46))), {'Prelude.Types.Right', V66} end end end), fun (V68) -> begin (V69 = (V67(V68))), case V69 of {'Prelude.Types.Left', V70} -> {'Prelude.Types.Left', V70}; {'Prelude.Types.Right', V71} -> (begin (V73 = fun (V72) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end), V73 end(V68)) end end end end end), V74 end(V9)) end end end end end; {'Prelude.Types.Nothing'} -> fun (V75) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end end.
'case--updateFile-7100'(V0, V1, V2, V3) -> case V3 of {'Prelude.Types.Just', V4} -> begin (V34 = fun (V5) -> begin (V33 = (('Idris.Idris2.Erlang.System.File':'un--readFile'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, V4))(V5))), {'Prelude.Types.Right', V33} end end), fun (V35) -> begin (V36 = (V34(V35))), case V36 of {'Prelude.Types.Left', V37} -> {'Prelude.Types.Left', V37}; {'Prelude.Types.Right', V38} -> (begin (V151 = case V38 of {'Prelude.Types.Right', V39} -> begin (V88 = begin (V69 = fun (V40) -> begin (V68 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V43, V44, V45)) end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> V47 end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> begin (V54 = (V51(V53))), begin (V55 = (V52(V53))), (V54(V55)) end end end end end end end}, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V58(V60))), ((V59(V61))(V60)) end end end end end end, fun (V62) -> fun (V63) -> fun (V64) -> begin (V65 = (V63(V64))), (V65(V64)) end end end end}, fun (V66) -> fun (V67) -> V67 end end}, <<V4/binary, <<"~"/utf8>>/binary>>, V39))(V40))), {'Prelude.Types.Right', V68} end end), ((begin (V85 = fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V82, V83, V84)) end end end end end), fun (V86) -> fun (V87) -> ((((V85('erased'))('erased'))(V86))(V87)) end end end((begin (V77 = fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> case V74 of {'Prelude.Types.Left', V75} -> {'Prelude.Types.Left', V75}; {'Prelude.Types.Right', V76} -> {'Prelude.Types.Right', (V73(V76))} end end end end end), fun (V78) -> fun (V79) -> ((((V77('erased'))('erased'))(V78))(V79)) end end end(fun (V70) -> {'Builtin.MkUnit'} end))))(V69)) end), fun (V89) -> begin (V90 = (V88(V89))), case V90 of {'Prelude.Types.Left', V91} -> {'Prelude.Types.Left', V91}; {'Prelude.Types.Right', V92} -> (begin (V148 = begin (V141 = begin (V122 = fun (V93) -> begin (V121 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V96, V97, V98)) end end end end end, fun (V99) -> fun (V100) -> fun (V101) -> V100 end end end, fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> begin (V107 = (V104(V106))), begin (V108 = (V105(V106))), (V107(V108)) end end end end end end end}, fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> begin (V114 = (V111(V113))), ((V112(V114))(V113)) end end end end end end, fun (V115) -> fun (V116) -> fun (V117) -> begin (V118 = (V116(V117))), (V118(V117)) end end end end}, fun (V119) -> fun (V120) -> V120 end end}, V4, ('Idris.Idris2.Data.String':'un--fastUnlines'((V0(('Idris.Idris2.Data.String':'un--lines'(V39))))))))(V93))), {'Prelude.Types.Right', V121} end end), ((begin (V138 = fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V135, V136, V137)) end end end end end), fun (V139) -> fun (V140) -> ((((V138('erased'))('erased'))(V139))(V140)) end end end((begin (V130 = fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> case V127 of {'Prelude.Types.Left', V128} -> {'Prelude.Types.Left', V128}; {'Prelude.Types.Right', V129} -> {'Prelude.Types.Right', (V126(V129))} end end end end end), fun (V131) -> fun (V132) -> ((((V130('erased'))('erased'))(V131))(V132)) end end end(fun (V123) -> {'Builtin.MkUnit'} end))))(V122)) end), fun (V142) -> begin (V143 = (V141(V142))), case V143 of {'Prelude.Types.Left', V144} -> {'Prelude.Types.Left', V144}; {'Prelude.Types.Right', V145} -> (begin (V147 = fun (V146) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'())}} end), V147 end(V142)) end end end end), V148 end(V89)) end end end end; {'Prelude.Types.Left', V149} -> fun (V150) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.FileErr', V4, V149}, V150)) end end), V151 end(V35)) end end end end; {'Prelude.Types.Nothing'} -> fun (V152) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'())}} end end.
'nested--32554-17423--in--un--toPaths'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Libraries.System.Directory.Tree':'un--depthFirst'(fun (V8) -> fun (V9) -> fun (V10) -> ((begin (V17 = fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V14, V15, V16)) end end end end end), fun (V18) -> fun (V19) -> ((((V17('erased'))('erased'))(V18))(V19)) end end end(fun (V11) -> [('Idris.Idris2.Libraries.System.Directory.Tree':'un--toFilePath'(V8, V9)) | V11] end))((V10()))) end end end, V6, V7, fun (V20) -> [] end)).
'nested--24208-8236--in--un--startsWithUpper'(V0, V1, V2, V3) -> ('case--findInTree,startsWithUpper-8322'(V0, V1, V2, V3, ('Idris.Idris2.Data.String':'un--strM'(V3)))).
'nested--23193-7326--in--un--replaceStr'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of <<""/utf8>> -> <<""/utf8>>; _ -> case ('Idris.Idris2.Data.String':'un--isPrefixOf'(V4, V6)) of 1 -> <<V5/binary, ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--drop'(('Idris.Idris2.Prelude.Types.String':'un--length'(V4)), ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V6))))))/binary>>; 0 -> <<('unicode':'characters_to_binary'([('erlang':'hd'(('string':'next_grapheme'(V6)))) | []]))/binary, ('nested--23193-7326--in--un--replaceStr'(V0, V1, V2, V3, V4, V5, case ('string':'next_grapheme'(V6)) of [E0 | E1] when (erlang:'is_binary'(E1)) -> (fun (V7, V8) -> V8 end(E0, E1)); _ -> <<""/utf8>> end))/binary>> end end.
'nested--35445-18353--in--un--prompt'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> <<"[tc] "/utf8>>; 1 -> <<""/utf8>>; 2 -> <<"[exec] "/utf8>>; 3 -> <<"[scheme] "/utf8>> end.
'nested--24750-8763--in--un--prettyLocalName'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Core.Name.UN', V9} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V10)) end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V11, V12)) end end}, V8)); {'Core.Name.NS', V13, V14} -> case V14 of {'Core.Name.UN', V15} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V16)) end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V17, V18)) end end}, V8)); _ -> case ('Idris.Idris2.Core.Name':'un--userNameRoot'(V8)) of {'Prelude.Types.Just', V19} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_UserName'(V20)) end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_UserName'(V21, V22)) end end}, V19)); {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V23) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V24, V25)) end end}, ('Idris.Idris2.Core.Name':'un--nameRoot'(V8)))) end end; _ -> case ('Idris.Idris2.Core.Name':'un--userNameRoot'(V8)) of {'Prelude.Types.Just', V26} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V27) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_UserName'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_UserName'(V28, V29)) end end}, V26)); {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V30) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V31, V32)) end end}, ('Idris.Idris2.Core.Name':'un--nameRoot'(V8)))) end end.
'nested--24208-8237--in--un--matchingRoots'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Prelude.Basics':'un--on'(fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V5, V6)) end end, fun (V7) -> ('Idris.Idris2.Core.Name':'un--nameRoot'(V7)) end, V3, V4)).
'nested--24208-8239--in--un--match'(V0, V1, V2, V3) -> case V3 of {'Builtin.MkPair', V4, V5} -> case ('Idris.Idris2.Core.Name':'un--matches'(V1, V5)) of 1 -> ('nested--24208-8238--in--un--checkCandidate'(V0, V1, V2, V5)); 0 -> 0 end end.
'nested--35545-19119--in--un--makeSpace'(V0) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Prelude.Types':'un--take'(V0, ('Idris.Idris2.Data.Stream':'un--repeat'($ )))))).
'nested--23299-7428--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> [('Idris.Idris2.Parser.Unlit':'un--relit'(V6, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4))/binary, <<<<" : "/utf8>>/binary, <<V3/binary, <<"\x{a}"/utf8>>/binary>>/binary>>/binary>>)) | []]; [E0 | E1] -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(('Idris.Idris2.Data.String':'un--trim'(V8)), <<""/utf8>>)) of 1 -> [<<<<"\x{a}"/utf8>>/binary, ('Idris.Idris2.Parser.Unlit':'un--relit'(V6, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4))/binary, <<<<" : "/utf8>>/binary, <<V3/binary, <<"\x{a}"/utf8>>/binary>>/binary>>/binary>>))/binary>> | V9]; 0 -> [V8 | ('nested--23299-7428--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V9))] end end(E0, E1)) end.
'nested--21686-5888--in--un--ifNotNull'(V0, V1, V2, V3, V4, V5) -> ((begin (V25 = fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V23, V24)) end end end end), fun (V26) -> fun (V27) -> ((((V25('erased'))('erased'))(V26))(V27)) end end end(fun (V20) -> V5 end))(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V8, V9)) end end end end, fun (V10) -> fun (V11) -> {'Prelude.Types.Just', V11} end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V14, V15)) end end end end}, fun (V16) -> {'Prelude.Types.Nothing'} end, fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V18, V19)) end end end}, case ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V5)) of 1 -> 0; 0 -> 1 end)))).
'nested--35101-17876--in--un--getLoad'(V0, V1, V2, V3) -> {'Prelude.Types.Just', (V2(('Idris.Idris2.Data.String':'un--trim'(('Idris.Idris2.Prelude.Types':'un--substr'(V1, ('Idris.Idris2.Prelude.Types.String':'un--length'(V3)), V3))))))}.
'nested--35101-17877--in--un--fnameCmd'(V0, V1, V2) -> case V1 of [] -> {'Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> case ('Idris.Idris2.Data.String':'un--isPrefixOf'(V5, V2)) of 1 -> ('nested--35101-17876--in--un--getLoad'(V0, ('Idris.Idris2.Prelude.Types.String':'un--length'(V5)), V6, V2)); 0 -> ('nested--35101-17877--in--un--fnameCmd'(V0, V4, V2)) end end end(E0, E1)) end.
'nested--31777-14817--in--un--execDecl'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.Desugar':'un--desugarDecl'(V3, V5, V4, V2, V1, [], V6))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V30 = begin (V12 = ('Idris.Idris2.Core.Context':'un--resolveName'(V5, {'Core.Name.UN', {'Core.Name.Basic', <<"[defs]"/utf8>>}}))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V29 = begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'({'TTImp.Elab.Check.EST'}, ('Idris.Idris2.TTImp.Elab.Check':'un--initEStateSub'([], V16, {'Core.Env.Nil'}, {'Core.TT.SubRefl'}))))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V28 = begin (V22 = ('un--getItDecls'(V1))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V27 = ('un--processLocal'([], V5, V2, V4, V21, V3, V1, [], [], {'Core.Env.Nil'}, V26, V11))), V27 end(V23)) end end end end), V28 end(V18)) end end end end), V29 end(V13)) end end end end), V30 end(V8)) end end end end.
'nested--21686-5889--in--un--enum'(V0, V1, V2, V3, V4, V5, V6) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--punctuate'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<","/utf8>>)), ((begin (V11 = fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V9, V10)) end end end end), fun (V12) -> fun (V13) -> ((((V11('erased'))('erased'))(V12))(V13)) end end end(V5))(V6)))))).
'nested--32409-15410--in--un--elabMode'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> {'TTImp.Elab.Check.InType'}; _ -> {'TTImp.Elab.Check.InExpr'} end.
'nested--21686-5890--in--un--displayChg'(V0, V1, V2, V3, V4, V5) -> begin (V55 = fun (V6) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(((begin (V14 = fun (V12) -> fun (V13) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V12, V13)) end end), fun (V15) -> fun (V16) -> ((V14(V15))(V16)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V7)) end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V8, V9)) end end}, case V6 of {'Core.Context.Context.MkSCCall', V10, V11} -> V10 end))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<":"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V17) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V17)) end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V18, V19)) end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V20) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V21) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V22) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V22)) end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V23, V24)) end end}, {'Prelude.Show.MkShow', fun (V25) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V25)) end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V26, V27)) end end}}, V21)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V30) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V31, V32)) end end}, {'Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V34, V35)) end end}}, V28, V29)) end end}, V20)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V39) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V40, V41)) end end}, {'Prelude.Show.MkShow', fun (V42) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V42)) end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V43, V44)) end end}}, V38)) end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Builtin.MkPair', {'Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V47)) end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V48, V49)) end end}, {'Prelude.Show.MkShow', fun (V50) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V50)) end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V51, V52)) end end}}, V45, V46)) end end}, V36, V37)) end end}, case V6 of {'Core.Context.Context.MkSCCall', V53, V54} -> V54 end)))))) end), ('nested--21686-5889--in--un--enum'(V0, V1, V2, V3, V4, V55, V5)) end.
'nested--35545-19120--in--un--col'(V0, V1, V2, V3, V4) -> <<V2/binary, <<('nested--35545-19119--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((V0 - ('Idris.Idris2.Prelude.Types.String':'un--length'(V2)))))))/binary, <<V3/binary, <<('nested--35545-19119--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((V1 - ('Idris.Idris2.Prelude.Types.String':'un--length'(V3)))))))/binary, V4/binary>>/binary>>/binary>>/binary>>.
'nested--24208-8234--in--un--cmp'(V0, V1, V2, V3, V4) -> case V3 of {'Builtin.MkPair', V5, V6} -> case V5 of {'Builtin.MkPair', V7, V8} -> case V6 of {'Builtin.MkPair', V9, V10} -> case V4 of {'Builtin.MkPair', V11, V12} -> case V11 of {'Builtin.MkPair', V13, V14} -> case V12 of {'Builtin.MkPair', V15, V16} -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V19, V20)) end end}, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V25, V26)) end end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V33, V34)) end end}, {'Prelude.EqOrd.MkOrd', {'Prelude.EqOrd.MkEq', fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V37, V38)) end end}, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V45, V46)) end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V47, V48)) end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V49, V50)) end end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V51, V52)) end end}, {'Builtin.MkPair', begin (V53 = (V9 - V7)), case ((V53 band 9223372036854775808) =/= 0) of 'true' -> (V53 bor -9223372036854775808); _ -> (V53 band 9223372036854775807) end end, begin (V54 = (V10 - V8)), case ((V54 band 9223372036854775808) =/= 0) of 'true' -> (V54 bor -9223372036854775808); _ -> (V54 band 9223372036854775807) end end}, {'Builtin.MkPair', begin (V55 = (V15 - V13)), case ((V55 band 9223372036854775808) =/= 0) of 'true' -> (V55 bor -9223372036854775808); _ -> (V55 band 9223372036854775807) end end, begin (V56 = (V16 - V14)), case ((V56 band 9223372036854775808) =/= 0) of 'true' -> (V56 bor -9223372036854775808); _ -> (V56 band 9223372036854775807) end end})) end end end end end end.
'nested--35545-19121--in--un--cmdInfo'(V0) -> case V0 of {'Builtin.MkPair', V1, V2} -> case V2 of {'Builtin.MkPair', V3, V4} -> <<<<" "/utf8>>/binary, ('nested--35545-19120--in--un--col'(18, 36, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<" "/utf8>>, V1)), ('Idris.Idris2.Idris.Parser':'dn--un--show_Show_CmdArg'(V3)), V4))/binary>> end end.
'nested--24208-8238--in--un--checkCandidate'(V0, V1, V2, V3) -> case ('nested--24208-8237--in--un--matchingRoots'(V0, V1, V2, V1, V3)) of 1 -> 1; 0 -> (case V1 of {'Core.Name.UN', V4} -> case V4 of {'Core.Name.Basic', V5} -> fun () -> case ('nested--24208-8236--in--un--startsWithUpper'(V0, V1, V2, V5)) of 1 -> ('nested--24208-8235--in--un--checkAsNamespace'(V0, V1, V2, V5, V3)); 0 -> 0 end end; _ -> fun () -> 0 end end; _ -> fun () -> 0 end end()) end.
'nested--24208-8235--in--un--checkAsNamespace'(V0, V1, V2, V3, V4) -> case V4 of {'Core.Name.NS', V5, V6} -> ('Idris.Idris2.Core.Name.Namespace':'un--isInPathOf'(V3, V5)); _ -> 0 end.
'nested--23470-7579--in--un--addW'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of 0 -> case V6 of [E2 | E3] -> (fun (V7, V8) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types.List':'un--reverse'(V5)), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(((begin (V14 = fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V12, V13)) end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(fun (V9) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V3, V9)) end))(V2)), V8)))) end(E2, E3)); [] -> [] end; _ -> begin (V17 = (V4 - 1)), case V6 of [E0 | E1] -> (fun (V18, V19) -> ('nested--23470-7579--in--un--addW'(V0, V1, V2, V3, V17, [V18 | V5], V19)) end(E0, E1)); [] -> ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V5)) end end end.
'nested--23299-7429--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of 0 -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types.List':'un--reverse'(('nested--23299-7428--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V8)))), V9)); _ -> begin (V10 = (V7 - 1)), case V9 of [E0 | E1] -> (fun (V11, V12) -> ('nested--23299-7429--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V10, [V11 | V8], V12)) end(E0, E1)); [] -> ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V8)) end end end.
'un--updateFile'(V0, V1) -> begin (V7 = begin (V2 = V0), fun (V3) -> begin (V6 = (begin (V4 = V2), fun (V5) -> ('erlang':'get'(V4)) end end(V3))), {'Prelude.Types.Right', V6} end end end), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V29 = ('case--updateFile-7100'(V1, V0, V11, case V11 of {'Idris.REPL.Opts.MkREPLOpts', V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28} -> V15 end))), V29 end(V8)) end end end end.
'un--setOpt'(V0, V1, V2) -> case V2 of {'Idris.Syntax.ShowImplicits', V3} -> begin (V4 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V13 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V8 of {'Core.Options.MkPPOpts', V9, V10, V11, V12} -> {'Core.Options.MkPPOpts', V3, V10, V11, V12} end))), V13 end(V5)) end end end end; {'Idris.Syntax.ShowNamespace', V14} -> begin (V15 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0))), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V24 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V19 of {'Core.Options.MkPPOpts', V20, V21, V22, V23} -> {'Core.Options.MkPPOpts', V20, V21, V22, V14} end))), V24 end(V16)) end end end end; {'Idris.Syntax.ShowMachineNames', V25} -> begin (V26 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0))), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V35 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V30 of {'Core.Options.MkPPOpts', V31, V32, V33, V34} -> {'Core.Options.MkPPOpts', V31, V25, V33, V34} end))), V35 end(V27)) end end end end; {'Idris.Syntax.ShowTypes', V36} -> begin (V42 = begin (V37 = V1), fun (V38) -> begin (V41 = (begin (V39 = V37), fun (V40) -> ('erlang':'get'(V39)) end end(V38))), {'Prelude.Types.Right', V41} end end end), fun (V43) -> begin (V44 = (V42(V43))), case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> (begin (V69 = begin (V47 = V1), fun (V48) -> begin (V68 = (begin (V49 = V47), fun (V50) -> ('erlang':'put'(V49, case V46 of {'Idris.REPL.Opts.MkREPLOpts', V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67} -> {'Idris.REPL.Opts.MkREPLOpts', V36, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67} end)) end end(V48))), {'Prelude.Types.Right', V68} end end end), V69 end(V43)) end end end end; {'Idris.Syntax.EvalMode', V70} -> begin (V76 = begin (V71 = V1), fun (V72) -> begin (V75 = (begin (V73 = V71), fun (V74) -> ('erlang':'get'(V73)) end end(V72))), {'Prelude.Types.Right', V75} end end end), fun (V77) -> begin (V78 = (V76(V77))), case V78 of {'Prelude.Types.Left', V79} -> {'Prelude.Types.Left', V79}; {'Prelude.Types.Right', V80} -> (begin (V103 = begin (V81 = V1), fun (V82) -> begin (V102 = (begin (V83 = V81), fun (V84) -> ('erlang':'put'(V83, case V80 of {'Idris.REPL.Opts.MkREPLOpts', V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101} -> {'Idris.REPL.Opts.MkREPLOpts', V85, V70, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101} end)) end end(V82))), {'Prelude.Types.Right', V102} end end end), V103 end(V77)) end end end end; {'Idris.Syntax.Editor', V104} -> begin (V110 = begin (V105 = V1), fun (V106) -> begin (V109 = (begin (V107 = V105), fun (V108) -> ('erlang':'get'(V107)) end end(V106))), {'Prelude.Types.Right', V109} end end end), fun (V111) -> begin (V112 = (V110(V111))), case V112 of {'Prelude.Types.Left', V113} -> {'Prelude.Types.Left', V113}; {'Prelude.Types.Right', V114} -> (begin (V137 = begin (V115 = V1), fun (V116) -> begin (V136 = (begin (V117 = V115), fun (V118) -> ('erlang':'put'(V117, case V114 of {'Idris.REPL.Opts.MkREPLOpts', V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135} -> {'Idris.REPL.Opts.MkREPLOpts', V119, V120, V121, V122, V123, V124, V104, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135} end)) end end(V116))), {'Prelude.Types.Right', V136} end end end), V137 end(V111)) end end end end; {'Idris.Syntax.CG', V138} -> begin (V144 = begin (V139 = V0), fun (V140) -> begin (V143 = (begin (V141 = V139), fun (V142) -> ('erlang':'get'(V141)) end end(V140))), {'Prelude.Types.Right', V143} end end end), fun (V145) -> begin (V146 = (V144(V145))), case V146 of {'Prelude.Types.Left', V147} -> {'Prelude.Types.Left', V147}; {'Prelude.Types.Right', V148} -> (begin (V182 = case ('Idris.Idris2.Core.Options':'un--getCG'(case V148 of {'Core.Context.MkDefs', V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180} -> V153 end, V138)) of {'Prelude.Types.Just', V181} -> ('Idris.Idris2.Core.Context':'un--setCG'(V0, V181)); {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V1, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No such code generator available"/utf8>>)))) end), V182 end(V145)) end end end end; {'Idris.Syntax.Profile', V183} -> begin (V184 = ('Idris.Idris2.Core.Context':'un--getSession'(V0))), fun (V185) -> begin (V186 = (V184(V185))), case V186 of {'Prelude.Types.Left', V187} -> {'Prelude.Types.Left', V187}; {'Prelude.Types.Right', V188} -> (begin (V215 = ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V188 of {'Core.Options.MkSessionOpts', V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214} -> {'Core.Options.MkSessionOpts', V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V183, V208, V209, V210, V211, V212, V213, V214} end))), V215 end(V185)) end end end end; {'Idris.Syntax.EvalTiming', V216} -> ('Idris.Idris2.Idris.REPL.Opts':'un--setEvalTiming'(V1, V216)) end.
'un--rtrim'(V0) -> ('unicode':'characters_to_binary'(('string':'reverse'(('Idris.Idris2.Data.String':'un--ltrim'(('unicode':'characters_to_binary'(('string':'reverse'(V0)))))))))).
'un--replEval'(V0, V1, V2, V3, V4, V5) -> case V2 of 1 -> ('Idris.Idris2.Core.Normalise':'un--normaliseOpts'(V0, V1, case ('Idris.Idris2.Core.Value':'un--withAll'()) of {'Core.Value.MkEvalOpts', V6, V7, V8, V9, V10, V11, V12, V13} -> {'Core.Value.MkEvalOpts', V6, V7, V8, V9, V10, V11, V12, 0} end, V3, V4, V5)); _ -> ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, V1, V3, V4, V5)) end.
'un--replCmd'(V0, V1, V2, V3, V4, V5) -> case V5 of <<""/utf8>> -> fun (V6) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; _ -> begin (V7 = ('un--interpret'(V0, V1, V2, V3, V4, V5))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V12 = ('un--displayResult'(V0, V1, V2, V3, V4, V11))), V12 end(V8)) end end end end end.
'un--repl'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Core.Context':'un--getNS'(V0))), fun (V6) -> begin (V7 = (V5(V6))), case V7 of {'Prelude.Types.Left', V8} -> {'Prelude.Types.Left', V8}; {'Prelude.Types.Right', V9} -> (begin (V133 = begin (V15 = begin (V10 = V4), fun (V11) -> begin (V14 = (begin (V12 = V10), fun (V13) -> ('erlang':'get'(V12)) end end(V11))), {'Prelude.Types.Right', V14} end end end), fun (V16) -> begin (V17 = (V15(V16))), case V17 of {'Prelude.Types.Left', V18} -> {'Prelude.Types.Left', V18}; {'Prelude.Types.Right', V19} -> (begin (V132 = begin (V58 = begin (V39 = fun (V20) -> begin (V38 = ('Idris.Idris2.Prelude.IO':'un--prim__putStr'(<<('nested--35445-18353--in--un--prompt'(V4, V3, V2, V1, V0, case V19 of {'Idris.REPL.Opts.MkREPLOpts', V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37} -> V22 end))/binary, <<('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_Namespace'(V9))/binary, <<"> "/utf8>>/binary>>/binary>>, V20))), {'Prelude.Types.Right', V38} end end), ((begin (V55 = fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V52, V53, V54)) end end end end end), fun (V56) -> fun (V57) -> ((((V55('erased'))('erased'))(V56))(V57)) end end end((begin (V47 = fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> case V44 of {'Prelude.Types.Left', V45} -> {'Prelude.Types.Left', V45}; {'Prelude.Types.Right', V46} -> {'Prelude.Types.Right', (V43(V46))} end end end end end), fun (V48) -> fun (V49) -> ((((V47('erased'))('erased'))(V48))(V49)) end end end(fun (V40) -> {'Builtin.MkUnit'} end))))(V39)) end), fun (V59) -> begin (V60 = (V58(V59))), case V60 of {'Prelude.Types.Left', V61} -> {'Prelude.Types.Left', V61}; {'Prelude.Types.Right', V62} -> (begin (V131 = begin (V111 = begin (V92 = fun (V63) -> begin (V91 = (('Idris.Idris2.Erlang.System.File':'un--fflush'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V66, V67, V68)) end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> V70 end end end, fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> begin (V77 = (V74(V76))), begin (V78 = (V75(V76))), (V77(V78)) end end end end end end end}, fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> begin (V84 = (V81(V83))), ((V82(V84))(V83)) end end end end end end, fun (V85) -> fun (V86) -> fun (V87) -> begin (V88 = (V86(V87))), (V88(V87)) end end end end}, fun (V89) -> fun (V90) -> V90 end end}, ('Idris.Idris2.Erlang.System.File':'un--stdout'())))(V63))), {'Prelude.Types.Right', V91} end end), ((begin (V108 = fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V105, V106, V107)) end end end end end), fun (V109) -> fun (V110) -> ((((V108('erased'))('erased'))(V109))(V110)) end end end((begin (V100 = fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> {'Prelude.Types.Right', (V96(V99))} end end end end end), fun (V101) -> fun (V102) -> ((((V100('erased'))('erased'))(V101))(V102)) end end end(fun (V93) -> {'Builtin.MkUnit'} end))))(V92)) end), fun (V112) -> begin (V113 = (V111(V112))), case V113 of {'Prelude.Types.Left', V114} -> {'Prelude.Types.Left', V114}; {'Prelude.Types.Right', V115} -> (begin (V130 = begin (V118 = fun (V116) -> begin (V117 = ('Idris.Idris2.Prelude.IO':'un--prim__getStr'(V116))), {'Prelude.Types.Right', V117} end end), fun (V119) -> begin (V120 = (V118(V119))), case V120 of {'Prelude.Types.Left', V121} -> {'Prelude.Types.Left', V121}; {'Prelude.Types.Right', V122} -> (begin (V129 = begin (V123 = ('un--interpret'(V0, V1, V2, V3, V4, V122))), fun (V124) -> begin (V125 = (V123(V124))), case V125 of {'Prelude.Types.Left', V126} -> {'Prelude.Types.Left', V126}; {'Prelude.Types.Right', V127} -> (begin (V128 = ('un--handleResult'(V0, V1, V2, V3, V4, V127))), V128 end(V124)) end end end end), V129 end(V119)) end end end end), V130 end(V112)) end end end end), V131 end(V59)) end end end end), V132 end(V16)) end end end end), V133 end(V6)) end end end end.
'un--proofSearch'(V0, V1, V2, V3) -> case V2 of 0 -> case V3 of [E2 | E3] -> (fun (V4, V5) -> [('nested--23193-7326--in--un--replaceStr'(V4, V5, V1, V0, <<<<"?"/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0))/binary>>, V1, V4)) | V5] end(E2, E3)); _ -> case V3 of [] -> [] end end; _ -> begin (V6 = (V2 - 1)), case V3 of [E0 | E1] -> (fun (V7, V8) -> [V7 | ('un--proofSearch'(V0, V1, V6, V8))] end(E0, E1)); _ -> case V3 of [] -> [] end end end end.
'un--processLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> ('Idris.Idris2.TTImp.Elab.Local':'un--localHelper'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, fun (V12) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V13) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V0, V1, V2, V3, V5, V6, V7, V12, V9, V13)) end, V11)) end)).
'un--processEdit'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Syntax.TypeAt', V6, V7, V8} -> begin (V14 = begin (V9 = V0), fun (V10) -> begin (V13 = (begin (V11 = V9), fun (V12) -> ('erlang':'get'(V11)) end end(V10))), {'Prelude.Types.Right', V13} end end end), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V114 = begin (V24 = begin (V19 = V3), fun (V20) -> begin (V23 = (begin (V21 = V19), fun (V22) -> ('erlang':'get'(V21)) end end(V20))), {'Prelude.Types.Right', V23} end end end), fun (V25) -> begin (V26 = (V24(V25))), case V26 of {'Prelude.Types.Left', V27} -> {'Prelude.Types.Left', V27}; {'Prelude.Types.Right', V28} -> (begin (V113 = begin (V40 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V8 end, ('un--findInTree'({'Builtin.MkPair', begin (V29 = (V6 - 1)), case ((V29 band 9223372036854775808) =/= 0) of 'true' -> (V29 bor -9223372036854775808); _ -> (V29 band 9223372036854775807) end end, V7}, V8, case V28 of {'Core.Metadata.MkMetadata', V30, V31, V32, V33, V34, V35, V36, V37, V38, V39} -> V35 end))))), begin (V73 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V40, case V18 of {'Core.Context.MkDefs', V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72} -> V41 end))), fun (V74) -> begin (V75 = (V73(V74))), case V75 of {'Prelude.Types.Left', V76} -> {'Prelude.Types.Left', V76}; {'Prelude.Types.Right', V77} -> (begin (V112 = begin (V96 = case V77 of [] -> fun (V78) -> {'Prelude.Types.Right', {'Prelude.Types.Nothing'}} end; _ -> begin (V80 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V79) -> ('Idris.Idris2.Idris.Doc.Display':'un--displayType'(V0, V2, 0, V18, V79)) end, V77, []))), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V95 = fun (V85) -> {'Prelude.Types.Right', {'Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V92 = fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V90, V91)) end end end end), fun (V93) -> fun (V94) -> ((((V92('erased'))('erased'))(V93))(V94)) end end end(fun (V86) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V87) -> {'Idris.Pretty.Syntax', V87} end, V86)) end))(V84))))}} end), V95 end(V81)) end end end end end), fun (V97) -> begin (V98 = (V96(V97))), case V98 of {'Prelude.Types.Left', V99} -> {'Prelude.Types.Left', V99}; {'Prelude.Types.Right', V100} -> (begin (V111 = begin (V105 = ('Idris.Idris2.Core.Metadata':'un--findTypeAt'(V3, fun (V101) -> fun (V102) -> ('un--anyAt'(fun (V103) -> ('Idris.Idris2.Core.FC':'un--within'({'Builtin.MkPair', begin (V104 = (V6 - 1)), case ((V104 band 9223372036854775808) =/= 0) of 'true' -> (V104 bor -9223372036854775808); _ -> (V104 band 9223372036854775807) end end, V7}, V103)) end, V101, V102)) end end))), fun (V106) -> begin (V107 = (V105(V106))), case V107 of {'Prelude.Types.Left', V108} -> {'Prelude.Types.Left', V108}; {'Prelude.Types.Right', V109} -> (begin (V110 = ('case--processEdit-8995'(V8, V7, V6, V4, V3, V2, V1, V0, V18, V28, V40, V77, V100, V109, {'Builtin.MkPair', V100, V109}))), V110 end(V106)) end end end end), V111 end(V97)) end end end end), V112 end(V74)) end end end end end), V113 end(V25)) end end end end), V114 end(V15)) end end end end; {'Idris.Syntax.CaseSplit', V115, V116, V117, V118} -> begin (V124 = fun (V119) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V117, begin (V120 = 0), case ((V120 band 9223372036854775808) =/= 0) of 'true' -> (V120 bor -9223372036854775808); _ -> (V120 band 9223372036854775807) end end)) of 1 -> ('Idris.Idris2.Core.FC':'un--within'({'Builtin.MkPair', begin (V121 = (V116 - 1)), case ((V121 band 9223372036854775808) =/= 0) of 'true' -> (V121 bor -9223372036854775808); _ -> (V121 band 9223372036854775807) end end, begin (V122 = (V117 - 1)), case ((V122 band 9223372036854775808) =/= 0) of 'true' -> (V122 bor -9223372036854775808); _ -> (V122 band 9223372036854775807) end end}, V119)); 0 -> ('Idris.Idris2.Core.FC':'un--onLine'(begin (V123 = (V116 - 1)), case ((V123 band 9223372036854775808) =/= 0) of 'true' -> (V123 bor -9223372036854775808); _ -> (V123 band 9223372036854775807) end end, V119)) end end), begin (V127 = ('Idris.Idris2.TTImp.Interactive.CaseSplit':'un--getSplits'(V0, V3, V1, V2, V4, fun (V125) -> fun (V126) -> ('un--anyAt'(V124, V125, V126)) end end, V118))), fun (V128) -> begin (V129 = (V127(V128))), case V129 of {'Prelude.Types.Left', V130} -> {'Prelude.Types.Left', V130}; {'Prelude.Types.Right', V131} -> (begin (V163 = case V131 of {'TTImp.Interactive.CaseSplit.OK', V132} -> begin (V135 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--updateCase'(V0, V2, V4, V132, begin (V133 = (V116 - 1)), case ((V133 band 9223372036854775808) =/= 0) of 'true' -> (V133 bor -9223372036854775808); _ -> (V133 band 9223372036854775807) end end, begin (V134 = (V117 - 1)), case ((V134 band 9223372036854775808) =/= 0) of 'true' -> (V134 bor -9223372036854775808); _ -> (V134 band 9223372036854775807) end end))), fun (V136) -> begin (V137 = (V135(V136))), case V137 of {'Prelude.Types.Left', V138} -> {'Prelude.Types.Left', V138}; {'Prelude.Types.Right', V139} -> (begin (V157 = case V115 of 1 -> ('un--updateFile'(V4, fun (V140) -> ('un--caseSplit'(('Idris.Idris2.Data.String':'un--fastUnlines'(V139)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V143 = fun (V142) -> V142 end), fun (V144) -> (V143(V144)) end end(begin (V141 = (V116 - 1)), case ((V141 band 9223372036854775808) =/= 0) of 'true' -> (V141 bor -9223372036854775808); _ -> (V141 band 9223372036854775807) end end)))), V140)) end)); 0 -> fun (V145) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V154 = fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V152, V153)) end end end end), fun (V155) -> fun (V156) -> ((((V154('erased'))('erased'))(V155))(V156)) end end end(fun (V146) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V147) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V147)) end, fun (V148) -> fun (V149) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V148, V149)) end end}, V146)) end))(V139))))}} end end), V157 end(V136)) end end end end; {'TTImp.Interactive.CaseSplit.SplitFail', V158} -> fun (V159) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V160) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V160)) end, fun (V161) -> fun (V162) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V161, V162)) end end}, ('Idris.Idris2.TTImp.Interactive.CaseSplit':'dn--un--show_Show_SplitError'(V158))))}} end end), V163 end(V128)) end end end end end; {'Idris.Syntax.AddClause', V164, V165, V166} -> begin (V167 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--getClause'(V0, V3, V4, V165, V166))), fun (V168) -> begin (V169 = (V167(V168))), case V169 of {'Prelude.Types.Left', V170} -> {'Prelude.Types.Left', V170}; {'Prelude.Types.Right', V171} -> (begin (V188 = case V171 of {'Prelude.Types.Just', V172} -> case V164 of 1 -> ('un--updateFile'(V4, fun (V173) -> ('un--addClause'(V172, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V175 = fun (V174) -> V174 end), fun (V176) -> (V175(V176)) end end(V165)))), V173)) end)); 0 -> fun (V177) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V178) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V178)) end, fun (V179) -> fun (V180) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V179, V180)) end end}, V172))}} end end; {'Prelude.Types.Nothing'} -> fun (V181) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V182) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V182)) end, fun (V183) -> fun (V184) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V183, V184)) end end}, V166)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'((begin (V186 = fun (V185) -> V185 end), fun (V187) -> (V186(V187)) end end(<<"not defined here"/utf8>>))))))}} end end), V188 end(V168)) end end end end; {'Idris.Syntax.Intro', V189, V190, V191} -> begin (V197 = begin (V192 = V0), fun (V193) -> begin (V196 = (begin (V194 = V192), fun (V195) -> ('erlang':'get'(V194)) end end(V193))), {'Prelude.Types.Right', V196} end end end), fun (V198) -> begin (V199 = (V197(V198))), case V199 of {'Prelude.Types.Left', V200} -> {'Prelude.Types.Left', V200}; {'Prelude.Types.Right', V201} -> (begin (V297 = begin (V234 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V191, case V201 of {'Core.Context.MkDefs', V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233} -> V202 end))), fun (V235) -> begin (V236 = (V234(V235))), case V236 of {'Prelude.Types.Left', V237} -> {'Prelude.Types.Left', V237}; {'Prelude.Types.Right', V238} -> (begin (V296 = case V238 of [E0 | E1] -> (fun (V239, V240) -> case V239 of {'Builtin.MkPair', V241, V242} -> case V242 of {'Builtin.MkPair', V243, V244} -> case V240 of [] -> begin (V245 = [{'Builtin.MkPair', V241, {'Builtin.MkPair', V243, V244}} | []]), ('case--case block in processEdit-9562'(V191, V190, V189, V4, V3, V2, V1, V0, V201, V241, V243, V244, V245, case V244 of {'Core.Context.Context.MkGlobalDef', V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267} -> V263 end)) end; _ -> fun (V268) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V270 = fun (V269) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V269)) end), fun (V271) -> (V270(V271)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V272) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V272)) end, fun (V273) -> fun (V274) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V273, V274)) end end}, V191))))}} end end; _ -> fun (V275) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V277 = fun (V276) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V276)) end), fun (V278) -> (V277(V278)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V279) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V279)) end, fun (V280) -> fun (V281) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V280, V281)) end end}, V191))))}} end end; _ -> fun (V282) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V284 = fun (V283) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V283)) end), fun (V285) -> (V284(V285)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V286) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V286)) end, fun (V287) -> fun (V288) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V287, V288)) end end}, V191))))}} end end end(E0, E1)); _ -> fun (V289) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V291 = fun (V290) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V290)) end), fun (V292) -> (V291(V292)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V293) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V293)) end, fun (V294) -> fun (V295) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V294, V295)) end end}, V191))))}} end end), V296 end(V235)) end end end end), V297 end(V198)) end end end end; {'Idris.Syntax.Refine', V298, V299, V300, V301} -> begin (V307 = begin (V302 = V0), fun (V303) -> begin (V306 = (begin (V304 = V302), fun (V305) -> ('erlang':'get'(V304)) end end(V303))), {'Prelude.Types.Right', V306} end end end), fun (V308) -> begin (V309 = (V307(V308))), case V309 of {'Prelude.Types.Left', V310} -> {'Prelude.Types.Left', V310}; {'Prelude.Types.Right', V311} -> (begin (V407 = begin (V344 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V300, case V311 of {'Core.Context.MkDefs', V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343} -> V312 end))), fun (V345) -> begin (V346 = (V344(V345))), case V346 of {'Prelude.Types.Left', V347} -> {'Prelude.Types.Left', V347}; {'Prelude.Types.Right', V348} -> (begin (V406 = case V348 of [E2 | E3] -> (fun (V349, V350) -> case V349 of {'Builtin.MkPair', V351, V352} -> case V352 of {'Builtin.MkPair', V353, V354} -> case V350 of [] -> begin (V355 = [{'Builtin.MkPair', V351, {'Builtin.MkPair', V353, V354}} | []]), ('case--case block in processEdit-10164'(V301, V300, V299, V298, V4, V3, V2, V1, V0, V311, V351, V353, V354, V355, case V354 of {'Core.Context.Context.MkGlobalDef', V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374, V375, V376, V377} -> V373 end)) end; _ -> fun (V378) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V380 = fun (V379) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V379)) end), fun (V381) -> (V380(V381)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V382) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V382)) end, fun (V383) -> fun (V384) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V383, V384)) end end}, V300))))}} end end; _ -> fun (V385) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V387 = fun (V386) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V386)) end), fun (V388) -> (V387(V388)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V389) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V389)) end, fun (V390) -> fun (V391) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V390, V391)) end end}, V300))))}} end end; _ -> fun (V392) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V394 = fun (V393) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V393)) end), fun (V395) -> (V394(V395)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V396) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V396)) end, fun (V397) -> fun (V398) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V397, V398)) end end}, V300))))}} end end end(E2, E3)); _ -> fun (V399) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V401 = fun (V400) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V400)) end), fun (V402) -> (V401(V402)) end end(<<"Could not find hole named"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V403) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V403)) end, fun (V404) -> fun (V405) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V404, V405)) end end}, V300))))}} end end), V406 end(V345)) end end end end), V407 end(V308)) end end end end; {'Idris.Syntax.ExprSearch', V408, V409, V410, V411} -> begin (V417 = begin (V412 = V0), fun (V413) -> begin (V416 = (begin (V414 = V412), fun (V415) -> ('erlang':'get'(V414)) end end(V413))), {'Prelude.Types.Right', V416} end end end), fun (V418) -> begin (V419 = (V417(V418))), case V419 of {'Prelude.Types.Left', V420} -> {'Prelude.Types.Left', V420}; {'Prelude.Types.Right', V421} -> (begin (V626 = begin (V427 = begin (V422 = V2), fun (V423) -> begin (V426 = (begin (V424 = V422), fun (V425) -> ('erlang':'get'(V424)) end end(V423))), {'Prelude.Types.Right', V426} end end end), fun (V428) -> begin (V429 = (V427(V428))), case V429 of {'Prelude.Types.Left', V430} -> {'Prelude.Types.Left', V430}; {'Prelude.Types.Right', V431} -> (begin (V625 = begin (V473 = ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V432) -> fun (V433) -> fun (V434) -> fun (V435) -> fun (V436) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V434, V435, V436)) end end end end end, fun (V437) -> fun (V438) -> fun (V439) -> fun (V440) -> fun (V441) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V439, V440, V441)) end end end end end, fun (V442) -> fun (V443) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V443)) end end, fun (V444) -> fun (V445) -> fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> fun (V450) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V447, V448, V449, V450)) end end end end end end end, fun (V451) -> fun (V452) -> V452 end end, fun (V453) -> fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V455, V456, V457)) end end end end end}, fun (V458) -> fun (V459) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V458)), ('Idris.Idris2.Core.Name':'un--dropNS'(V459)))) end end, V410, case V431 of {'Idris.Syntax.MkSyntax', V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470, V471, V472} -> V469 end))), begin (V506 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V410, case V421 of {'Core.Context.MkDefs', V474, V475, V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505} -> V474 end))), fun (V507) -> begin (V508 = (V506(V507))), case V508 of {'Prelude.Types.Left', V509} -> {'Prelude.Types.Left', V509}; {'Prelude.Types.Right', V510} -> (begin (V624 = case V510 of [E4 | E5] -> (fun (V511, V512) -> case V511 of {'Builtin.MkPair', V513, V514} -> case V514 of {'Builtin.MkPair', V515, V516} -> case V516 of {'Core.Context.Context.Hole', V517, V518} -> case V512 of [] -> begin (V519 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearch'(V0, V3, V1, V2, V4, ('Idris.Idris2.Core.FC':'un--replFC'()), V410, V411))), begin (V553 = begin (V525 = begin (V520 = V4), fun (V521) -> begin (V524 = (begin (V522 = V520), fun (V523) -> ('erlang':'get'(V522)) end end(V521))), {'Prelude.Types.Right', V524} end end end), fun (V526) -> begin (V527 = (V525(V526))), case V527 of {'Prelude.Types.Left', V528} -> {'Prelude.Types.Left', V528}; {'Prelude.Types.Right', V529} -> (begin (V552 = begin (V530 = V4), fun (V531) -> begin (V551 = (begin (V532 = V530), fun (V533) -> ('erlang':'put'(V532, case V529 of {'Idris.REPL.Opts.MkREPLOpts', V534, V535, V536, V537, V538, V539, V540, V541, V542, V543, V544, V545, V546, V547, V548, V549, V550} -> {'Idris.REPL.Opts.MkREPLOpts', V534, V535, V536, V537, V538, V539, V540, V541, V542, V543, {'Prelude.Types.Just', {'Builtin.MkPair', V410, V519}}, V545, V546, V547, V548, V549, V550} end)) end end(V531))), {'Prelude.Types.Right', V551} end end end), V552 end(V526)) end end end end), fun (V554) -> begin (V555 = (V553(V554))), case V555 of {'Prelude.Types.Left', V556} -> {'Prelude.Types.Left', V556}; {'Prelude.Types.Right', V557} -> (begin (V597 = begin (V558 = ('un--nextProofSearch'(V0, V1, V4))), fun (V559) -> begin (V560 = (V558(V559))), case V560 of {'Prelude.Types.Left', V561} -> {'Prelude.Types.Left', V561}; {'Prelude.Types.Right', V562} -> (begin (V596 = case V562 of {'Prelude.Types.Just', V563} -> case V563 of {'Builtin.MkPair', V564, V565} -> begin (V566 = ('un--dropLams'(V517, V565))), begin (V575 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ((begin (V572 = fun (V568) -> fun (V569) -> fun (V570) -> fun (V571) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V570, V571)) end end end end), fun (V573) -> fun (V574) -> ((((V572('erased'))('erased'))(V573))(V574)) end end end(fun (V567) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V567)) end))(V566))))), fun (V576) -> begin (V577 = (V575(V576))), case V577 of {'Prelude.Types.Left', V578} -> {'Prelude.Types.Left', V578}; {'Prelude.Types.Right', V579} -> (begin (V591 = begin (V580 = case V473 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V579)); 0 -> V579 end), case V408 of 1 -> ('un--updateFile'(V4, fun (V581) -> ('un--proofSearch'(V410, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V580)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V584 = fun (V583) -> V583 end), fun (V585) -> (V584(V585)) end end(begin (V582 = (V409 - 1)), case ((V582 band 9223372036854775808) =/= 0) of 'true' -> (V582 bor -9223372036854775808); _ -> (V582 band 9223372036854775807) end end)))), V581)) end)); 0 -> fun (V586) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V587) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V587)) end, fun (V588) -> fun (V589) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V588, V589)) end end}, fun (V590) -> {'Idris.Pretty.Syntax', V590} end, V580))}} end end end), V591 end(V576)) end end end end end end; {'Prelude.Types.Nothing'} -> fun (V592) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V594 = fun (V593) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V593)) end), fun (V595) -> (V594(V595)) end end(<<"No search results"/utf8>>))}} end end), V596 end(V559)) end end end end), V597 end(V554)) end end end end end; _ -> fun (V598) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; {'Core.Context.Context.PMDef', V599, V600, V601, V602, V603} -> case V600 of [] -> case V601 of {'Core.Case.CaseTree.STerm', V604, V605} -> case V512 of [] -> begin (V606 = [{'Builtin.MkPair', V513, {'Builtin.MkPair', V515, {'Core.Context.Context.PMDef', V599, [], {'Core.Case.CaseTree.STerm', V604, V605}, V602, V603}}} | []]), ('case--case block in processEdit-11899'(V411, V410, V409, V408, V4, V3, V2, V1, V0, V421, V431, V473, V602, V603, V604, V513, V515, V605, V599, V606, case V599 of {'Core.Context.Context.MkPMDefInfo', V607, V608, V609} -> V607 end)) end; _ -> fun (V610) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V611) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V612) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V613) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V614) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V615) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end end(E4, E5)); [] -> fun (V616) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V618 = fun (V617) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V617)) end), fun (V619) -> (V618(V619)) end end(<<"Unknown name"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V620) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V620)) end, fun (V621) -> fun (V622) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V621, V622)) end end}, V410))))}} end; _ -> fun (V623) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end), V624 end(V507)) end end end end end), V625 end(V428)) end end end end), V626 end(V418)) end end end end; {'Idris.Syntax.ExprSearchNext'} -> begin (V632 = begin (V627 = V0), fun (V628) -> begin (V631 = (begin (V629 = V627), fun (V630) -> ('erlang':'get'(V629)) end end(V628))), {'Prelude.Types.Right', V631} end end end), fun (V633) -> begin (V634 = (V632(V633))), case V634 of {'Prelude.Types.Left', V635} -> {'Prelude.Types.Left', V635}; {'Prelude.Types.Right', V636} -> (begin (V775 = begin (V642 = begin (V637 = V2), fun (V638) -> begin (V641 = (begin (V639 = V637), fun (V640) -> ('erlang':'get'(V639)) end end(V638))), {'Prelude.Types.Right', V641} end end end), fun (V643) -> begin (V644 = (V642(V643))), case V644 of {'Prelude.Types.Left', V645} -> {'Prelude.Types.Left', V645}; {'Prelude.Types.Right', V646} -> (begin (V774 = begin (V647 = ('un--nextProofSearch'(V0, V1, V4))), fun (V648) -> begin (V649 = (V647(V648))), case V649 of {'Prelude.Types.Left', V650} -> {'Prelude.Types.Left', V650}; {'Prelude.Types.Right', V651} -> (begin (V773 = case V651 of {'Prelude.Types.Just', V652} -> case V652 of {'Builtin.MkPair', V653, V654} -> begin (V687 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V653, case V636 of {'Core.Context.MkDefs', V655, V656, V657, V658, V659, V660, V661, V662, V663, V664, V665, V666, V667, V668, V669, V670, V671, V672, V673, V674, V675, V676, V677, V678, V679, V680, V681, V682, V683, V684, V685, V686} -> V655 end))), fun (V688) -> begin (V689 = (V687(V688))), case V689 of {'Prelude.Types.Left', V690} -> {'Prelude.Types.Left', V690}; {'Prelude.Types.Right', V691} -> (begin (V768 = case V691 of [E6 | E7] -> (fun (V692, V693) -> case V692 of {'Builtin.MkPair', V694, V695} -> case V695 of {'Builtin.MkPair', V696, V697} -> case V697 of {'Core.Context.Context.Hole', V698, V699} -> case V693 of [] -> begin (V741 = ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V700) -> fun (V701) -> fun (V702) -> fun (V703) -> fun (V704) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V702, V703, V704)) end end end end end, fun (V705) -> fun (V706) -> fun (V707) -> fun (V708) -> fun (V709) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V707, V708, V709)) end end end end end, fun (V710) -> fun (V711) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V711)) end end, fun (V712) -> fun (V713) -> fun (V714) -> fun (V715) -> fun (V716) -> fun (V717) -> fun (V718) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V715, V716, V717, V718)) end end end end end end end, fun (V719) -> fun (V720) -> V720 end end, fun (V721) -> fun (V722) -> fun (V723) -> fun (V724) -> fun (V725) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V723, V724, V725)) end end end end end}, fun (V726) -> fun (V727) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V726)), ('Idris.Idris2.Core.Name':'un--dropNS'(V727)))) end end, V653, case V646 of {'Idris.Syntax.MkSyntax', V728, V729, V730, V731, V732, V733, V734, V735, V736, V737, V738, V739, V740} -> V737 end))), begin (V742 = ('un--dropLams'(V698, V654))), begin (V751 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ((begin (V748 = fun (V744) -> fun (V745) -> fun (V746) -> fun (V747) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V746, V747)) end end end end), fun (V749) -> fun (V750) -> ((((V748('erased'))('erased'))(V749))(V750)) end end end(fun (V743) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V743)) end))(V742))))), fun (V752) -> begin (V753 = (V751(V752))), case V753 of {'Prelude.Types.Left', V754} -> {'Prelude.Types.Left', V754}; {'Prelude.Types.Right', V755} -> (begin (V762 = begin (V756 = case V741 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V755)); 0 -> V755 end), fun (V757) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V758) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V758)) end, fun (V759) -> fun (V760) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V759, V760)) end end}, fun (V761) -> {'Idris.Pretty.Syntax', V761} end, V756))}} end end), V762 end(V752)) end end end end end end; _ -> fun (V763) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V764) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V765) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end; _ -> fun (V766) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end end(E6, E7)); _ -> fun (V767) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Not a searchable hole"/utf8>>))}} end end), V768 end(V688)) end end end end end; {'Prelude.Types.Nothing'} -> fun (V769) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V771 = fun (V770) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V770)) end), fun (V772) -> (V771(V772)) end end(<<"No more results"/utf8>>))}} end end), V773 end(V648)) end end end end), V774 end(V643)) end end end end), V775 end(V633)) end end end end; {'Idris.Syntax.GenerateDef', V776, V777, V778, V779} -> begin (V785 = begin (V780 = V0), fun (V781) -> begin (V784 = (begin (V782 = V780), fun (V783) -> ('erlang':'get'(V782)) end end(V781))), {'Prelude.Types.Right', V784} end end end), fun (V786) -> begin (V787 = (V785(V786))), case V787 of {'Prelude.Types.Left', V788} -> {'Prelude.Types.Left', V788}; {'Prelude.Types.Right', V789} -> (begin (V948 = begin (V793 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V3, fun (V790) -> fun (V791) -> ('Idris.Idris2.Core.FC':'un--onLine'(begin (V792 = (V777 - 1)), case ((V792 band 9223372036854775808) =/= 0) of 'true' -> (V792 bor -9223372036854775808); _ -> (V792 band 9223372036854775807) end end, V790)) end end))), fun (V794) -> begin (V795 = (V793(V794))), case V795 of {'Prelude.Types.Left', V796} -> {'Prelude.Types.Left', V796}; {'Prelude.Types.Right', V797} -> (begin (V947 = case V797 of {'Prelude.Types.Just', V798} -> case V798 of {'Builtin.MkPair', V799, V800} -> case V800 of {'Builtin.MkPair', V801, V802} -> case V802 of {'Builtin.MkPair', V803, V804} -> begin (V837 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V801, case V789 of {'Core.Context.MkDefs', V805, V806, V807, V808, V809, V810, V811, V812, V813, V814, V815, V816, V817, V818, V819, V820, V821, V822, V823, V824, V825, V826, V827, V828, V829, V830, V831, V832, V833, V834, V835, V836} -> V805 end))), fun (V838) -> begin (V839 = (V837(V838))), case V839 of {'Prelude.Types.Left', V840} -> {'Prelude.Types.Left', V840}; {'Prelude.Types.Right', V841} -> (begin (V933 = begin (V842 = {'Prelude.Types.Just', {'Builtin.MkPair', V799, {'Builtin.MkPair', V801, {'Builtin.MkPair', V803, V804}}}}), case V841 of {'Prelude.Types.Just', V843} -> case V843 of {'Core.Context.Context.None'} -> begin (V849 = ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefSort'(V0, V3, V1, V2, V4, fun (V844) -> fun (V845) -> ('Idris.Idris2.Core.FC':'un--onLine'(begin (V846 = (V777 - 1)), case ((V846 band 9223372036854775808) =/= 0) of 'true' -> (V846 bor -9223372036854775808); _ -> (V846 band 9223372036854775807) end end, V844)) end end, 16, fun (V847) -> fun (V848) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--mostUsed'(V847, V848)) end end, V801))), begin (V883 = begin (V855 = begin (V850 = V4), fun (V851) -> begin (V854 = (begin (V852 = V850), fun (V853) -> ('erlang':'get'(V852)) end end(V851))), {'Prelude.Types.Right', V854} end end end), fun (V856) -> begin (V857 = (V855(V856))), case V857 of {'Prelude.Types.Left', V858} -> {'Prelude.Types.Left', V858}; {'Prelude.Types.Right', V859} -> (begin (V882 = begin (V860 = V4), fun (V861) -> begin (V881 = (begin (V862 = V860), fun (V863) -> ('erlang':'put'(V862, case V859 of {'Idris.REPL.Opts.MkREPLOpts', V864, V865, V866, V867, V868, V869, V870, V871, V872, V873, V874, V875, V876, V877, V878, V879, V880} -> {'Idris.REPL.Opts.MkREPLOpts', V864, V865, V866, V867, V868, V869, V870, V871, V872, V873, V874, {'Prelude.Types.Just', {'Builtin.MkPair', V777, V849}}, V876, V877, V878, V879, V880} end)) end end(V861))), {'Prelude.Types.Right', V881} end end end), V882 end(V856)) end end end end), fun (V884) -> begin (V885 = (V883(V884))), case V885 of {'Prelude.Types.Left', V886} -> {'Prelude.Types.Left', V886}; {'Prelude.Types.Right', V887} -> (begin (V921 = begin (V888 = ('un--nextGenDef'(V0, V1, V4, V779))), fun (V889) -> begin (V890 = (V888(V889))), case V890 of {'Prelude.Types.Left', V891} -> {'Prelude.Types.Left', V891}; {'Prelude.Types.Right', V892} -> (begin (V920 = begin (V893 = {'Prelude.Types.Just', {'Core.Context.Context.None'}}), case V892 of {'Prelude.Types.Just', V894} -> case V894 of {'Builtin.MkPair', V895, V896} -> case V896 of {'Builtin.MkPair', V897, V898} -> begin (V902 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V900 = fun (V899) -> V899 end), fun (V901) -> (V900(V901)) end end(('Idris.Idris2.Core.FC':'un--startCol'(('Idris.Idris2.Core.FC':'un--toNonEmptyFC'(V897))))))))), begin (V903 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V777))), fun (V904) -> begin (V905 = (V903(V904))), case V905 of {'Prelude.Types.Left', V906} -> {'Prelude.Types.Left', V906}; {'Prelude.Types.Right', V907} -> (begin (V915 = begin (V908 = {'Prelude.Types.Just', {'Builtin.MkPair', V895, {'Builtin.MkPair', V897, V898}}}), case V907 of {'Prelude.Types.Just', V909} -> begin (V910 = {'Prelude.Types.Just', V909}), ('case--case block in case block in case block in case block in processEdit-12745'(V779, V778, V777, V776, V4, V3, V2, V1, V0, V789, V804, V803, V799, V801, V842, V893, V849, V895, V897, V898, V908, V902, V909, V910, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V909)))) end; {'Prelude.Types.Nothing'} -> fun (V911) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V913 = fun (V912) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V912)) end), fun (V914) -> (V913(V914)) end end(<<"Source line not found"/utf8>>))}} end end end), V915 end(V904)) end end end end end end end; {'Prelude.Types.Nothing'} -> fun (V916) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V918 = fun (V917) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V917)) end), fun (V919) -> (V918(V919)) end end(<<"No search results"/utf8>>))}} end end end), V920 end(V889)) end end end end), V921 end(V884)) end end end end end; _ -> fun (V922) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V924 = fun (V923) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V923)) end), fun (V925) -> (V924(V925)) end end(<<"Already defined"/utf8>>))}} end end; {'Prelude.Types.Nothing'} -> fun (V926) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V928 = fun (V927) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V927)) end), fun (V929) -> (V928(V929)) end end(<<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V930) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V930)) end, fun (V931) -> fun (V932) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V931, V932)) end end}, V778))))}} end end end), V933 end(V838)) end end end end end end end; {'Prelude.Types.Nothing'} -> fun (V934) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V936 = fun (V935) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V935)) end), fun (V937) -> (V936(V937)) end end(<<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V938) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V938)) end, fun (V939) -> fun (V940) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V939, V940)) end end}, V778)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V942 = fun (V941) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V941)) end), fun (V943) -> (V942(V943)) end end(<<"on line"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V944) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V944)) end, fun (V945) -> fun (V946) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V945, V946)) end end}, V777))))))))}} end end), V947 end(V794)) end end end end), V948 end(V786)) end end end end; {'Idris.Syntax.GenerateDefNext'} -> begin (V949 = ('un--nextGenDef'(V0, V1, V4, 0))), fun (V950) -> begin (V951 = (V949(V950))), case V951 of {'Prelude.Types.Left', V952} -> {'Prelude.Types.Left', V952}; {'Prelude.Types.Right', V953} -> (begin (V999 = case V953 of {'Prelude.Types.Just', V954} -> case V954 of {'Builtin.MkPair', V955, V956} -> case V956 of {'Builtin.MkPair', V957, V958} -> begin (V962 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V960 = fun (V959) -> V959 end), fun (V961) -> (V960(V961)) end end(('Idris.Idris2.Core.FC':'un--startCol'(('Idris.Idris2.Core.FC':'un--toNonEmptyFC'(V957))))))))), begin (V963 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V955))), fun (V964) -> begin (V965 = (V963(V964))), case V965 of {'Prelude.Types.Left', V966} -> {'Prelude.Types.Left', V966}; {'Prelude.Types.Right', V967} -> (begin (V994 = case V967 of {'Prelude.Types.Just', V968} -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V968)) of {'Builtin.MkPair', V969, V970} -> begin (V972 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V971) -> ('un--printClause'(V0, V2, V969, V962, V971)) end, V958, []))), fun (V973) -> begin (V974 = (V972(V973))), case V974 of {'Prelude.Types.Left', V975} -> {'Prelude.Types.Left', V975}; {'Prelude.Types.Right', V976} -> (begin (V989 = fun (V977) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V986 = fun (V982) -> fun (V983) -> fun (V984) -> fun (V985) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V984, V985)) end end end end), fun (V987) -> fun (V988) -> ((((V986('erased'))('erased'))(V987))(V988)) end end end(fun (V978) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V979) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V979)) end, fun (V980) -> fun (V981) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V980, V981)) end end}, V978)) end))(V976))))}} end), V989 end(V973)) end end end end end; {'Prelude.Types.Nothing'} -> fun (V990) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V992 = fun (V991) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V991)) end), fun (V993) -> (V992(V993)) end end(<<"Source line not found"/utf8>>))}} end end), V994 end(V964)) end end end end end end end; {'Prelude.Types.Nothing'} -> fun (V995) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V997 = fun (V996) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V996)) end), fun (V998) -> (V997(V998)) end end(<<"No more results"/utf8>>))}} end end), V999 end(V950)) end end end end; {'Idris.Syntax.MakeLemma', V1000, V1001, V1002} -> begin (V1008 = begin (V1003 = V0), fun (V1004) -> begin (V1007 = (begin (V1005 = V1003), fun (V1006) -> ('erlang':'get'(V1005)) end end(V1004))), {'Prelude.Types.Right', V1007} end end end), fun (V1009) -> begin (V1010 = (V1008(V1009))), case V1010 of {'Prelude.Types.Left', V1011} -> {'Prelude.Types.Left', V1011}; {'Prelude.Types.Right', V1012} -> (begin (V1176 = begin (V1018 = begin (V1013 = V2), fun (V1014) -> begin (V1017 = (begin (V1015 = V1013), fun (V1016) -> ('erlang':'get'(V1015)) end end(V1014))), {'Prelude.Types.Right', V1017} end end end), fun (V1019) -> begin (V1020 = (V1018(V1019))), case V1020 of {'Prelude.Types.Left', V1021} -> {'Prelude.Types.Left', V1021}; {'Prelude.Types.Right', V1022} -> (begin (V1175 = begin (V1064 = ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V1023) -> fun (V1024) -> fun (V1025) -> fun (V1026) -> fun (V1027) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V1025, V1026, V1027)) end end end end end, fun (V1028) -> fun (V1029) -> fun (V1030) -> fun (V1031) -> fun (V1032) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V1030, V1031, V1032)) end end end end end, fun (V1033) -> fun (V1034) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V1034)) end end, fun (V1035) -> fun (V1036) -> fun (V1037) -> fun (V1038) -> fun (V1039) -> fun (V1040) -> fun (V1041) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V1038, V1039, V1040, V1041)) end end end end end end end, fun (V1042) -> fun (V1043) -> V1043 end end, fun (V1044) -> fun (V1045) -> fun (V1046) -> fun (V1047) -> fun (V1048) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V1046, V1047, V1048)) end end end end end}, fun (V1049) -> fun (V1050) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V1049)), ('Idris.Idris2.Core.Name':'un--dropNS'(V1050)))) end end, V1002, case V1022 of {'Idris.Syntax.MkSyntax', V1051, V1052, V1053, V1054, V1055, V1056, V1057, V1058, V1059, V1060, V1061, V1062, V1063} -> V1060 end))), begin (V1097 = ('un--lookupDefTyName'(V1002, case V1012 of {'Core.Context.MkDefs', V1065, V1066, V1067, V1068, V1069, V1070, V1071, V1072, V1073, V1074, V1075, V1076, V1077, V1078, V1079, V1080, V1081, V1082, V1083, V1084, V1085, V1086, V1087, V1088, V1089, V1090, V1091, V1092, V1093, V1094, V1095, V1096} -> V1065 end))), fun (V1098) -> begin (V1099 = (V1097(V1098))), case V1099 of {'Prelude.Types.Left', V1100} -> {'Prelude.Types.Left', V1100}; {'Prelude.Types.Right', V1101} -> (begin (V1174 = case V1101 of [E8 | E9] -> (fun (V1102, V1103) -> case V1102 of {'Builtin.MkPair', V1104, V1105} -> case V1105 of {'Builtin.MkPair', V1106, V1107} -> case V1107 of {'Builtin.MkPair', V1108, V1109} -> case V1108 of {'Core.Context.Context.Hole', V1110, V1111} -> case V1103 of [] -> begin (V1112 = ('Idris.Idris2.TTImp.Interactive.MakeLemma':'un--makeLemma'(V3, V0, V2, ('Idris.Idris2.Core.FC':'un--replFC'()), V1002, V1110, V1109))), fun (V1113) -> begin (V1114 = (V1112(V1113))), case V1114 of {'Prelude.Types.Left', V1115} -> {'Prelude.Types.Left', V1115}; {'Prelude.Types.Right', V1116} -> (begin (V1167 = case V1116 of {'Builtin.MkPair', V1117, V1118} -> begin (V1127 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ((begin (V1124 = fun (V1120) -> fun (V1121) -> fun (V1122) -> fun (V1123) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V1122, V1123)) end end end end), fun (V1125) -> fun (V1126) -> ((((V1124('erased'))('erased'))(V1125))(V1126)) end end end(fun (V1119) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V1119)) end))(V1117))))), fun (V1128) -> begin (V1129 = (V1127(V1128))), case V1129 of {'Prelude.Types.Left', V1130} -> {'Prelude.Types.Left', V1130}; {'Prelude.Types.Right', V1131} -> (begin (V1166 = begin (V1140 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ((begin (V1137 = fun (V1133) -> fun (V1134) -> fun (V1135) -> fun (V1136) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V1135, V1136)) end end end end), fun (V1138) -> fun (V1139) -> ((((V1137('erased'))('erased'))(V1138))(V1139)) end end end(fun (V1132) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V1132)) end))(V1118))))), fun (V1141) -> begin (V1142 = (V1140(V1141))), case V1142 of {'Prelude.Types.Left', V1143} -> {'Prelude.Types.Left', V1143}; {'Prelude.Types.Right', V1144} -> (begin (V1165 = begin (V1145 = ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(case V1064 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V1144)); 0 -> V1144 end))), begin (V1146 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V1001))), fun (V1147) -> begin (V1148 = (V1146(V1147))), case V1148 of {'Prelude.Types.Left', V1149} -> {'Prelude.Types.Left', V1149}; {'Prelude.Types.Right', V1150} -> (begin (V1164 = case V1150 of {'Prelude.Types.Just', V1151} -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V1151)) of {'Builtin.MkPair', V1152, V1153} -> case V1000 of 1 -> ('un--updateFile'(V4, fun (V1154) -> ('un--addMadeLemma'(V1152, V1002, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V1131)), V1145, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(0, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V1157 = fun (V1156) -> V1156 end), fun (V1158) -> (V1157(V1158)) end end(begin (V1155 = (V1001 - 1)), case ((V1155 band 9223372036854775808) =/= 0) of 'true' -> (V1155 bor -9223372036854775808); _ -> (V1155 band 9223372036854775807) end end)))))), V1154)) end)); 0 -> fun (V1159) -> {'Prelude.Types.Right', {'Idris.REPL.Common.MadeLemma', V1152, V1002, V1131, V1145}} end end end; {'Prelude.Types.Nothing'} -> fun (V1160) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V1162 = fun (V1161) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V1161)) end), fun (V1163) -> (V1162(V1163)) end end(<<"Source line not found"/utf8>>))}} end end), V1164 end(V1147)) end end end end end), V1165 end(V1141)) end end end end), V1166 end(V1128)) end end end end end), V1167 end(V1113)) end end end end; _ -> fun (V1168) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t make lifted definition"/utf8>>))}} end end; _ -> fun (V1169) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t make lifted definition"/utf8>>))}} end end; _ -> fun (V1170) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t make lifted definition"/utf8>>))}} end end; _ -> fun (V1171) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t make lifted definition"/utf8>>))}} end end; _ -> fun (V1172) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t make lifted definition"/utf8>>))}} end end end(E8, E9)); _ -> fun (V1173) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t make lifted definition"/utf8>>))}} end end), V1174 end(V1098)) end end end end end), V1175 end(V1019)) end end end end), V1176 end(V1009)) end end end end; {'Idris.Syntax.MakeCase', V1177, V1178, V1179} -> begin (V1180 = ('Idris.Idris2.Idris.REPL.Opts':'un--getLitStyle'(V4))), fun (V1181) -> begin (V1182 = (V1180(V1181))), case V1182 of {'Prelude.Types.Left', V1183} -> {'Prelude.Types.Left', V1183}; {'Prelude.Types.Right', V1184} -> (begin (V1261 = begin (V1190 = begin (V1185 = V2), fun (V1186) -> begin (V1189 = (begin (V1187 = V1185), fun (V1188) -> ('erlang':'get'(V1187)) end end(V1186))), {'Prelude.Types.Right', V1189} end end end), fun (V1191) -> begin (V1192 = (V1190(V1191))), case V1192 of {'Prelude.Types.Left', V1193} -> {'Prelude.Types.Left', V1193}; {'Prelude.Types.Right', V1194} -> (begin (V1260 = begin (V1236 = ('Idris.Idris2.Prelude.Types':'un--elemBy'({'Prelude.Interfaces.MkFoldable', fun (V1195) -> fun (V1196) -> fun (V1197) -> fun (V1198) -> fun (V1199) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V1197, V1198, V1199)) end end end end end, fun (V1200) -> fun (V1201) -> fun (V1202) -> fun (V1203) -> fun (V1204) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V1202, V1203, V1204)) end end end end end, fun (V1205) -> fun (V1206) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V1206)) end end, fun (V1207) -> fun (V1208) -> fun (V1209) -> fun (V1210) -> fun (V1211) -> fun (V1212) -> fun (V1213) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V1210, V1211, V1212, V1213)) end end end end end end end, fun (V1214) -> fun (V1215) -> V1215 end end, fun (V1216) -> fun (V1217) -> fun (V1218) -> fun (V1219) -> fun (V1220) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V1218, V1219, V1220)) end end end end end}, fun (V1221) -> fun (V1222) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V1221)), ('Idris.Idris2.Core.Name':'un--dropNS'(V1222)))) end end, V1179, case V1194 of {'Idris.Syntax.MkSyntax', V1223, V1224, V1225, V1226, V1227, V1228, V1229, V1230, V1231, V1232, V1233, V1234, V1235} -> V1232 end))), begin (V1237 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V1178))), fun (V1238) -> begin (V1239 = (V1237(V1238))), case V1239 of {'Prelude.Types.Left', V1240} -> {'Prelude.Types.Left', V1240}; {'Prelude.Types.Right', V1241} -> (begin (V1259 = case V1241 of {'Prelude.Types.Just', V1242} -> case ('Idris.Idris2.Parser.Unlit':'un--unlit'(V1184, V1242)) of {'Prelude.Types.Right', V1243} -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V1242)) of {'Builtin.MkPair', V1244, V1245} -> begin (V1246 = ('Idris.Idris2.Data.String':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeCase'(V1236, V1179, V1243))))), case V1177 of 1 -> ('un--updateFile'(V4, fun (V1247) -> ('un--addMadeCase'(V1244, V1246, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(0, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V1250 = fun (V1249) -> V1249 end), fun (V1251) -> (V1250(V1251)) end end(begin (V1248 = (V1178 - 1)), case ((V1248 band 9223372036854775808) =/= 0) of 'true' -> (V1248 bor -9223372036854775808); _ -> (V1248 band 9223372036854775807) end end)))))), V1247)) end)); 0 -> fun (V1252) -> {'Prelude.Types.Right', {'Idris.REPL.Common.MadeCase', V1244, V1246}} end end end end; {'Prelude.Types.Left', V1253} -> fun (V1254) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Invalid literate Idris"/utf8>>))}} end end; {'Prelude.Types.Nothing'} -> fun (V1255) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V1257 = fun (V1256) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V1256)) end), fun (V1258) -> (V1257(V1258)) end end(<<"Source line not available"/utf8>>))}} end end), V1259 end(V1238)) end end end end end), V1260 end(V1191)) end end end end), V1261 end(V1181)) end end end end; {'Idris.Syntax.MakeWith', V1262, V1263, V1264} -> begin (V1265 = ('Idris.Idris2.Idris.REPL.Opts':'un--getLitStyle'(V4))), fun (V1266) -> begin (V1267 = (V1265(V1266))), case V1267 of {'Prelude.Types.Left', V1268} -> {'Prelude.Types.Left', V1268}; {'Prelude.Types.Right', V1269} -> (begin (V1293 = begin (V1270 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V1263))), fun (V1271) -> begin (V1272 = (V1270(V1271))), case V1272 of {'Prelude.Types.Left', V1273} -> {'Prelude.Types.Left', V1273}; {'Prelude.Types.Right', V1274} -> (begin (V1292 = case V1274 of {'Prelude.Types.Just', V1275} -> case ('Idris.Idris2.Parser.Unlit':'un--unlit'(V1269, V1275)) of {'Prelude.Types.Right', V1276} -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V1275)) of {'Builtin.MkPair', V1277, V1278} -> begin (V1279 = ('Idris.Idris2.Data.String':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeWith'(V1264, V1276))))), case V1262 of 1 -> ('un--updateFile'(V4, fun (V1280) -> ('un--addMadeCase'(V1277, V1279, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(0, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((begin (V1283 = fun (V1282) -> V1282 end), fun (V1284) -> (V1283(V1284)) end end(begin (V1281 = (V1263 - 1)), case ((V1281 band 9223372036854775808) =/= 0) of 'true' -> (V1281 bor -9223372036854775808); _ -> (V1281 band 9223372036854775807) end end)))))), V1280)) end)); 0 -> fun (V1285) -> {'Prelude.Types.Right', {'Idris.REPL.Common.MadeWith', V1277, V1279}} end end end end; {'Prelude.Types.Left', V1286} -> fun (V1287) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Invalid literate Idris"/utf8>>))}} end end; {'Prelude.Types.Nothing'} -> fun (V1288) -> {'Prelude.Types.Right', {'Idris.REPL.Common.EditError', (begin (V1290 = fun (V1289) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V1289)) end), fun (V1291) -> (V1290(V1291)) end end(<<"Source line not available"/utf8>>))}} end end), V1292 end(V1271)) end end end end), V1293 end(V1266)) end end end end end.
'un--processCatch'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Core.Context':'un--branch'(V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V109 = begin (V16 = begin (V11 = V1), fun (V12) -> begin (V15 = (begin (V13 = V11), fun (V14) -> ('erlang':'get'(V13)) end end(V12))), {'Prelude.Types.Right', V15} end end end), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V108 = begin (V26 = begin (V21 = V2), fun (V22) -> begin (V25 = (begin (V23 = V21), fun (V24) -> ('erlang':'get'(V23)) end end(V22))), {'Prelude.Types.Right', V25} end end end), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V107 = begin (V36 = begin (V31 = V4), fun (V32) -> begin (V35 = (begin (V33 = V31), fun (V34) -> ('erlang':'get'(V33)) end end(V32))), {'Prelude.Types.Right', V35} end end end), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V106 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V41 = ('un--process'(V0, V1, V2, V3, V4, V5))), fun (V42) -> begin (V43 = (V41(V42))), case V43 of {'Prelude.Types.Left', V44} -> {'Prelude.Types.Left', V44}; {'Prelude.Types.Right', V45} -> (begin (V53 = begin (V46 = ('Idris.Idris2.Core.Context':'un--commit'(V0))), fun (V47) -> begin (V48 = (V46(V47))), case V48 of {'Prelude.Types.Left', V49} -> {'Prelude.Types.Left', V49}; {'Prelude.Types.Right', V50} -> (begin (V52 = fun (V51) -> {'Prelude.Types.Right', V45} end), V52 end(V47)) end end end end), V53 end(V42)) end end end end, fun (V54) -> begin (V60 = begin (V55 = V0), fun (V56) -> begin (V59 = (begin (V57 = V55), fun (V58) -> ('erlang':'put'(V57, V10)) end end(V56))), {'Prelude.Types.Right', V59} end end end), fun (V61) -> begin (V62 = (V60(V61))), case V62 of {'Prelude.Types.Left', V63} -> {'Prelude.Types.Left', V63}; {'Prelude.Types.Right', V64} -> (begin (V105 = begin (V70 = begin (V65 = V1), fun (V66) -> begin (V69 = (begin (V67 = V65), fun (V68) -> ('erlang':'put'(V67, V20)) end end(V66))), {'Prelude.Types.Right', V69} end end end), fun (V71) -> begin (V72 = (V70(V71))), case V72 of {'Prelude.Types.Left', V73} -> {'Prelude.Types.Left', V73}; {'Prelude.Types.Right', V74} -> (begin (V104 = begin (V80 = begin (V75 = V2), fun (V76) -> begin (V79 = (begin (V77 = V75), fun (V78) -> ('erlang':'put'(V77, V30)) end end(V76))), {'Prelude.Types.Right', V79} end end end), fun (V81) -> begin (V82 = (V80(V81))), case V82 of {'Prelude.Types.Left', V83} -> {'Prelude.Types.Left', V83}; {'Prelude.Types.Right', V84} -> (begin (V103 = begin (V90 = begin (V85 = V4), fun (V86) -> begin (V89 = (begin (V87 = V85), fun (V88) -> ('erlang':'put'(V87, V40)) end end(V86))), {'Prelude.Types.Right', V89} end end end), fun (V91) -> begin (V92 = (V90(V91))), case V92 of {'Prelude.Types.Left', V93} -> {'Prelude.Types.Left', V93}; {'Prelude.Types.Right', V94} -> (begin (V102 = begin (V95 = ('Idris.Idris2.Idris.Error':'un--display'(V0, V2, V4, V54))), fun (V96) -> begin (V97 = (V95(V96))), case V97 of {'Prelude.Types.Left', V98} -> {'Prelude.Types.Left', V98}; {'Prelude.Types.Right', V99} -> (begin (V101 = fun (V100) -> {'Prelude.Types.Right', {'Idris.REPL.Common.REPLError', V99}} end), V101 end(V96)) end end end end), V102 end(V91)) end end end end), V103 end(V81)) end end end end), V104 end(V71)) end end end end), V105 end(V61)) end end end end end))), V106 end(V37)) end end end end), V107 end(V27)) end end end end), V108 end(V17)) end end end end), V109 end(V7)) end end end end.
'un--process'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Syntax.NewDefn', V6} -> ('un--execDecls'(V0, V1, V2, V3, V4, V6)); {'Idris.Syntax.Eval', V7} -> begin (V13 = begin (V8 = V4), fun (V9) -> begin (V12 = (begin (V10 = V8), fun (V11) -> ('erlang':'get'(V10)) end end(V9))), {'Prelude.Types.Right', V12} end end end), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V265 = begin (V35 = case V17 of {'Idris.REPL.Opts.MkREPLOpts', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34} -> V19 end), case V35 of 2 -> begin (V55 = begin (V36 = ('un--execExp'(V0, V1, V2, V3, V4, V7))), ((begin (V52 = fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V49, V50, V51)) end end end end end), fun (V53) -> fun (V54) -> ((((V52('erased'))('erased'))(V53))(V54)) end end end((begin (V44 = fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> {'Prelude.Types.Right', (V40(V43))} end end end end end), fun (V45) -> fun (V46) -> ((((V44('erased'))('erased'))(V45))(V46)) end end end(fun (V37) -> {'Builtin.MkUnit'} end))))(V36)) end), fun (V56) -> begin (V57 = (V55(V56))), case V57 of {'Prelude.Types.Left', V58} -> {'Prelude.Types.Left', V58}; {'Prelude.Types.Right', V59} -> (begin (V61 = fun (V60) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Executed', V7}} end), V61 end(V56)) end end end end; 3 -> begin (V62 = ('un--inferAndElab'([], V0, V1, V2, V3, V4, {'TTImp.Elab.Check.InExpr'}, V7, {'Core.Env.Nil'}))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V100 = case V66 of {'Idris.REPL.WithType', V67, V68} -> begin (V84 = begin (V69 = ('Idris.Idris2.Idris.REPL.Opts':'un--getEvalTiming'(V4))), fun (V70) -> begin (V71 = (V69(V70))), case V71 of {'Prelude.Types.Left', V72} -> {'Prelude.Types.Left', V72}; {'Prelude.Types.Right', V73} -> (begin (V83 = ('Idris.Idris2.Core.Context.Log':'un--logTimeWhen'(V0, V73, 0, fun () -> (begin (V75 = fun (V74) -> V74 end), fun (V76) -> (V75(V76)) end end(<<"Evaluation"/utf8>>)) end, begin (V77 = ('Idris.Idris2.Core.SchemeEval':'un--snfAll'(V0, [], {'Core.Env.Nil'}, V67))), fun (V78) -> begin (V79 = (V77(V78))), case V79 of {'Prelude.Types.Left', V80} -> {'Prelude.Types.Left', V80}; {'Prelude.Types.Right', V81} -> (begin (V82 = ('Idris.Idris2.Core.SchemeEval.Quote':'un--quote'(V0, [], {'Core.Env.Nil'}, V81))), V82 end(V78)) end end end end))), V83 end(V70)) end end end end), fun (V85) -> begin (V86 = (V84(V85))), case V86 of {'Prelude.Types.Left', V87} -> {'Prelude.Types.Left', V87}; {'Prelude.Types.Right', V88} -> (begin (V99 = begin (V92 = ('Idris.Idris2.Core.Context.Log':'un--logTimeWhen'(V0, 0, 0, fun () -> (begin (V90 = fun (V89) -> V89 end), fun (V91) -> (V90(V91)) end end(<<"Resugar"/utf8>>)) end, ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Core.Env.Nil'}, V88))))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V98 = fun (V97) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Evaluated', V96, {'Prelude.Types.Nothing'}}} end), V98 end(V93)) end end end end), V99 end(V85)) end end end end end), V100 end(V63)) end end end end; _ -> begin (V107 = begin (V101 = ('Idris.Idris2.Idris.REPL.Opts':'un--getEvalTiming'(V4))), fun (V102) -> begin (V103 = (V101(V102))), case V103 of {'Prelude.Types.Left', V104} -> {'Prelude.Types.Left', V104}; {'Prelude.Types.Right', V105} -> (begin (V106 = ('Idris.Idris2.Core.Context.Log':'un--logTimeWhen'(V0, V105, 0, fun () -> <<"Evaluation"/utf8>> end, ('un--inferAndNormalize'(V0, V1, V2, V3, V4, V35, V7))))), V106 end(V102)) end end end end), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V264 = case V111 of {'Idris.REPL.WithType', V112, V113} -> begin (V114 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Core.Env.Nil'}, V112))), fun (V115) -> begin (V116 = (V114(V115))), case V116 of {'Prelude.Types.Left', V117} -> {'Prelude.Types.Left', V117}; {'Prelude.Types.Right', V118} -> (begin (V263 = begin (V124 = begin (V119 = V0), fun (V120) -> begin (V123 = (begin (V121 = V119), fun (V122) -> ('erlang':'get'(V121)) end end(V120))), {'Prelude.Types.Right', V123} end end end), fun (V125) -> begin (V126 = (V124(V125))), case V126 of {'Prelude.Types.Left', V127} -> {'Prelude.Types.Left', V127}; {'Prelude.Types.Right', V128} -> (begin (V262 = begin (V134 = begin (V129 = V4), fun (V130) -> begin (V133 = (begin (V131 = V129), fun (V132) -> ('erlang':'get'(V131)) end end(V130))), {'Prelude.Types.Right', V133} end end end), fun (V135) -> begin (V136 = (V134(V135))), case V136 of {'Prelude.Types.Left', V137} -> {'Prelude.Types.Left', V137}; {'Prelude.Types.Right', V138} -> (begin (V261 = begin (V142 = fun (V139) -> fun (V140) -> fun (V141) -> ('un--replEval'(V0, [], V35, V139, V140, V141)) end end end), begin (V165 = begin (V146 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V0, V1, (begin (V144 = fun (V143) -> V143 end), fun (V145) -> (V144(V145)) end end(<<"evalResult"/utf8>>))))), ((begin (V162 = fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V159, V160, V161)) end end end end end), fun (V163) -> fun (V164) -> ((((V162('erased'))('erased'))(V163))(V164)) end end end((begin (V154 = fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> case V151 of {'Prelude.Types.Left', V152} -> {'Prelude.Types.Left', V152}; {'Prelude.Types.Right', V153} -> {'Prelude.Types.Right', (V150(V153))} end end end end end), fun (V155) -> fun (V156) -> ((((V154('erased'))('erased'))(V155))(V156)) end end end(fun (V147) -> {'Core.Name.DN', <<"it"/utf8>>, V147} end))))(V146)) end), fun (V166) -> begin (V167 = (V165(V166))), case V167 of {'Prelude.Types.Left', V168} -> {'Prelude.Types.Left', V168}; {'Prelude.Types.Right', V169} -> (begin (V260 = begin (V189 = begin (V170 = ('Idris.Idris2.Core.Context':'un--addDef'(V0, V169, ('Idris.Idris2.Core.Context':'un--newDef'(('Idris.Idris2.Core.FC':'un--replFC'()), V169, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), [], V113, 0, {'Core.Context.Context.PMDef', ('Idris.Idris2.Core.Context.Context':'un--defaultPI'()), [], {'Core.Case.CaseTree.STerm', 0, V112}, {'Core.Case.CaseTree.STerm', 0, V112}, []}))))), ((begin (V186 = fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V183, V184, V185)) end end end end end), fun (V187) -> fun (V188) -> ((((V186('erased'))('erased'))(V187))(V188)) end end end((begin (V178 = fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> case V175 of {'Prelude.Types.Left', V176} -> {'Prelude.Types.Left', V176}; {'Prelude.Types.Right', V177} -> {'Prelude.Types.Right', (V174(V177))} end end end end end), fun (V179) -> fun (V180) -> ((((V178('erased'))('erased'))(V179))(V180)) end end end(fun (V171) -> {'Builtin.MkUnit'} end))))(V170)) end), fun (V190) -> begin (V191 = (V189(V190))), case V191 of {'Prelude.Types.Left', V192} -> {'Prelude.Types.Left', V192}; {'Prelude.Types.Right', V193} -> (begin (V259 = begin (V194 = ('Idris.Idris2.Core.Context':'un--addToSave'(V0, V169))), fun (V195) -> begin (V196 = (V194(V195))), case V196 of {'Prelude.Types.Left', V197} -> {'Prelude.Types.Left', V197}; {'Prelude.Types.Right', V198} -> (begin (V258 = begin (V221 = begin (V199 = V4), fun (V200) -> begin (V220 = (begin (V201 = V199), fun (V202) -> ('erlang':'put'(V201, case V138 of {'Idris.REPL.Opts.MkREPLOpts', V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219} -> {'Idris.REPL.Opts.MkREPLOpts', V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, {'Prelude.Types.Just', V169}, V216, V217, V218, V219} end)) end end(V200))), {'Prelude.Types.Right', V220} end end end), fun (V222) -> begin (V223 = (V221(V222))), case V223 of {'Prelude.Types.Left', V224} -> {'Prelude.Types.Left', V224}; {'Prelude.Types.Right', V225} -> (begin (V257 = case case V138 of {'Idris.REPL.Opts.MkREPLOpts', V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242} -> V226 end of 1 -> begin (V249 = begin (V243 = (((V142(V128))({'Core.Env.Nil'}))(V113))), fun (V244) -> begin (V245 = (V243(V244))), case V245 of {'Prelude.Types.Left', V246} -> {'Prelude.Types.Left', V246}; {'Prelude.Types.Right', V247} -> (begin (V248 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Core.Env.Nil'}, V247))), V248 end(V244)) end end end end), fun (V250) -> begin (V251 = (V249(V250))), case V251 of {'Prelude.Types.Left', V252} -> {'Prelude.Types.Left', V252}; {'Prelude.Types.Right', V253} -> (begin (V255 = fun (V254) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Evaluated', V118, {'Prelude.Types.Just', V253}}} end), V255 end(V250)) end end end end; 0 -> fun (V256) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Evaluated', V118, {'Prelude.Types.Nothing'}}} end end), V257 end(V222)) end end end end), V258 end(V195)) end end end end), V259 end(V190)) end end end end), V260 end(V166)) end end end end end), V261 end(V135)) end end end end), V262 end(V125)) end end end end), V263 end(V115)) end end end end end), V264 end(V108)) end end end end end end), V265 end(V14)) end end end end; {'Idris.Syntax.Check', V266} -> case V266 of {'Idris.Syntax.PRef', V267, V268} -> case V268 of {'Core.Name.UN', V269} -> case V269 of {'Core.Name.Basic', V270} -> case V270 of <<"it"/utf8>> -> begin (V276 = begin (V271 = V4), fun (V272) -> begin (V275 = (begin (V273 = V271), fun (V274) -> ('erlang':'get'(V273)) end end(V272))), {'Prelude.Types.Right', V275} end end end), fun (V277) -> begin (V278 = (V276(V277))), case V278 of {'Prelude.Types.Left', V279} -> {'Prelude.Types.Left', V279}; {'Prelude.Types.Right', V280} -> (begin (V300 = case V280 of {'Idris.REPL.Opts.MkREPLOpts', V281, V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297} -> case V293 of {'Prelude.Types.Nothing'} -> fun (V298) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Core.Core.UndefinedName', V267, {'Core.Name.UN', {'Core.Name.Basic', <<"it"/utf8>>}}}, V298)) end; {'Prelude.Types.Just', V299} -> ('un--process'(V0, V1, V2, V3, V4, {'Idris.Syntax.Check', {'Idris.Syntax.PRef', V267, V299}})) end end), V300 end(V277)) end end end end; _ -> begin (V306 = begin (V301 = V0), fun (V302) -> begin (V305 = (begin (V303 = V301), fun (V304) -> ('erlang':'get'(V303)) end end(V302))), {'Prelude.Types.Right', V305} end end end), fun (V307) -> begin (V308 = (V306(V307))), case V308 of {'Prelude.Types.Left', V309} -> {'Prelude.Types.Left', V309}; {'Prelude.Types.Right', V310} -> (begin (V366 = begin (V343 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V268, case V310 of {'Core.Context.MkDefs', V311, V312, V313, V314, V315, V316, V317, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342} -> V311 end))), fun (V344) -> begin (V345 = (V343(V344))), case V345 of {'Prelude.Types.Left', V346} -> {'Prelude.Types.Left', V346}; {'Prelude.Types.Right', V347} -> (begin (V365 = case V347 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V267, V268)); _ -> begin (V349 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V348) -> ('Idris.Idris2.Idris.Doc.Display':'un--displayType'(V0, V2, 0, V310, V348)) end, V347, []))), fun (V350) -> begin (V351 = (V349(V350))), case V351 of {'Prelude.Types.Left', V352} -> {'Prelude.Types.Left', V352}; {'Prelude.Types.Right', V353} -> (begin (V364 = fun (V354) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V361 = fun (V357) -> fun (V358) -> fun (V359) -> fun (V360) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V359, V360)) end end end end), fun (V362) -> fun (V363) -> ((((V361('erased'))('erased'))(V362))(V363)) end end end(fun (V355) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V356) -> {'Idris.Pretty.Syntax', V356} end, V355)) end))(V353))))}} end), V364 end(V350)) end end end end end), V365 end(V344)) end end end end), V366 end(V307)) end end end end end; _ -> begin (V372 = begin (V367 = V0), fun (V368) -> begin (V371 = (begin (V369 = V367), fun (V370) -> ('erlang':'get'(V369)) end end(V368))), {'Prelude.Types.Right', V371} end end end), fun (V373) -> begin (V374 = (V372(V373))), case V374 of {'Prelude.Types.Left', V375} -> {'Prelude.Types.Left', V375}; {'Prelude.Types.Right', V376} -> (begin (V432 = begin (V409 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V268, case V376 of {'Core.Context.MkDefs', V377, V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, V405, V406, V407, V408} -> V377 end))), fun (V410) -> begin (V411 = (V409(V410))), case V411 of {'Prelude.Types.Left', V412} -> {'Prelude.Types.Left', V412}; {'Prelude.Types.Right', V413} -> (begin (V431 = case V413 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V267, V268)); _ -> begin (V415 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V414) -> ('Idris.Idris2.Idris.Doc.Display':'un--displayType'(V0, V2, 0, V376, V414)) end, V413, []))), fun (V416) -> begin (V417 = (V415(V416))), case V417 of {'Prelude.Types.Left', V418} -> {'Prelude.Types.Left', V418}; {'Prelude.Types.Right', V419} -> (begin (V430 = fun (V420) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V427 = fun (V423) -> fun (V424) -> fun (V425) -> fun (V426) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V425, V426)) end end end end), fun (V428) -> fun (V429) -> ((((V427('erased'))('erased'))(V428))(V429)) end end end(fun (V421) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V422) -> {'Idris.Pretty.Syntax', V422} end, V421)) end))(V419))))}} end), V430 end(V416)) end end end end end), V431 end(V410)) end end end end), V432 end(V373)) end end end end end; _ -> begin (V438 = begin (V433 = V0), fun (V434) -> begin (V437 = (begin (V435 = V433), fun (V436) -> ('erlang':'get'(V435)) end end(V434))), {'Prelude.Types.Right', V437} end end end), fun (V439) -> begin (V440 = (V438(V439))), case V440 of {'Prelude.Types.Left', V441} -> {'Prelude.Types.Left', V441}; {'Prelude.Types.Right', V442} -> (begin (V498 = begin (V475 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V268, case V442 of {'Core.Context.MkDefs', V443, V444, V445, V446, V447, V448, V449, V450, V451, V452, V453, V454, V455, V456, V457, V458, V459, V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474} -> V443 end))), fun (V476) -> begin (V477 = (V475(V476))), case V477 of {'Prelude.Types.Left', V478} -> {'Prelude.Types.Left', V478}; {'Prelude.Types.Right', V479} -> (begin (V497 = case V479 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V267, V268)); _ -> begin (V481 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V480) -> ('Idris.Idris2.Idris.Doc.Display':'un--displayType'(V0, V2, 0, V442, V480)) end, V479, []))), fun (V482) -> begin (V483 = (V481(V482))), case V483 of {'Prelude.Types.Left', V484} -> {'Prelude.Types.Left', V484}; {'Prelude.Types.Right', V485} -> (begin (V496 = fun (V486) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V493 = fun (V489) -> fun (V490) -> fun (V491) -> fun (V492) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V491, V492)) end end end end), fun (V494) -> fun (V495) -> ((((V493('erased'))('erased'))(V494))(V495)) end end end(fun (V487) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V488) -> {'Idris.Pretty.Syntax', V488} end, V487)) end))(V485))))}} end), V496 end(V482)) end end end end end), V497 end(V476)) end end end end), V498 end(V439)) end end end end end; _ -> begin (V499 = ('un--inferAndElab'([], V0, V1, V2, V3, V4, {'TTImp.Elab.Check.InExpr'}, V266, {'Core.Env.Nil'}))), fun (V500) -> begin (V501 = (V499(V500))), case V501 of {'Prelude.Types.Left', V502} -> {'Prelude.Types.Left', V502}; {'Prelude.Types.Right', V503} -> (begin (V542 = case V503 of {'Idris.REPL.WithType', V504, V505} -> begin (V511 = begin (V506 = V0), fun (V507) -> begin (V510 = (begin (V508 = V506), fun (V509) -> ('erlang':'get'(V508)) end end(V507))), {'Prelude.Types.Right', V510} end end end), fun (V512) -> begin (V513 = (V511(V512))), case V513 of {'Prelude.Types.Left', V514} -> {'Prelude.Types.Left', V514}; {'Prelude.Types.Right', V515} -> (begin (V541 = begin (V522 = begin (V516 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V515, {'Core.Env.Nil'}, V504))), fun (V517) -> begin (V518 = (V516(V517))), case V518 of {'Prelude.Types.Left', V519} -> {'Prelude.Types.Left', V519}; {'Prelude.Types.Right', V520} -> (begin (V521 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Core.Env.Nil'}, V520))), V521 end(V517)) end end end end), fun (V523) -> begin (V524 = (V522(V523))), case V524 of {'Prelude.Types.Left', V525} -> {'Prelude.Types.Left', V525}; {'Prelude.Types.Right', V526} -> (begin (V540 = begin (V533 = begin (V527 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, [], V515, {'Core.Env.Nil'}, V505))), fun (V528) -> begin (V529 = (V527(V528))), case V529 of {'Prelude.Types.Left', V530} -> {'Prelude.Types.Left', V530}; {'Prelude.Types.Right', V531} -> (begin (V532 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Core.Env.Nil'}, V531))), V532 end(V528)) end end end end), fun (V534) -> begin (V535 = (V533(V534))), case V535 of {'Prelude.Types.Left', V536} -> {'Prelude.Types.Left', V536}; {'Prelude.Types.Right', V537} -> (begin (V539 = fun (V538) -> {'Prelude.Types.Right', {'Idris.REPL.Common.TermChecked', V526, V537}} end), V539 end(V534)) end end end end), V540 end(V523)) end end end end), V541 end(V512)) end end end end end), V542 end(V500)) end end end end end; {'Idris.Syntax.CheckWithImplicits', V543} -> begin (V567 = begin (V544 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0))), ((begin (V564 = fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> fun (V563) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V561, V562, V563)) end end end end end), fun (V565) -> fun (V566) -> ((((V564('erased'))('erased'))(V565))(V566)) end end end((begin (V556 = fun (V550) -> fun (V551) -> fun (V552) -> fun (V553) -> case V553 of {'Prelude.Types.Left', V554} -> {'Prelude.Types.Left', V554}; {'Prelude.Types.Right', V555} -> {'Prelude.Types.Right', (V552(V555))} end end end end end), fun (V557) -> fun (V558) -> ((((V556('erased'))('erased'))(V557))(V558)) end end end(fun (V545) -> case V545 of {'Core.Options.MkPPOpts', V546, V547, V548, V549} -> V546 end end))))(V544)) end), fun (V568) -> begin (V569 = (V567(V568))), case V569 of {'Prelude.Types.Left', V570} -> {'Prelude.Types.Left', V570}; {'Prelude.Types.Right', V571} -> (begin (V591 = begin (V572 = ('un--setOpt'(V0, V4, {'Idris.Syntax.ShowImplicits', 1}))), fun (V573) -> begin (V574 = (V572(V573))), case V574 of {'Prelude.Types.Left', V575} -> {'Prelude.Types.Left', V575}; {'Prelude.Types.Right', V576} -> (begin (V590 = begin (V577 = ('un--process'(V0, V1, V2, V3, V4, {'Idris.Syntax.Check', V543}))), fun (V578) -> begin (V579 = (V577(V578))), case V579 of {'Prelude.Types.Left', V580} -> {'Prelude.Types.Left', V580}; {'Prelude.Types.Right', V581} -> (begin (V589 = begin (V582 = ('un--setOpt'(V0, V4, {'Idris.Syntax.ShowImplicits', V571}))), fun (V583) -> begin (V584 = (V582(V583))), case V584 of {'Prelude.Types.Left', V585} -> {'Prelude.Types.Left', V585}; {'Prelude.Types.Right', V586} -> (begin (V588 = fun (V587) -> {'Prelude.Types.Right', V581} end), V588 end(V583)) end end end end), V589 end(V578)) end end end end), V590 end(V573)) end end end end), V591 end(V568)) end end end end; {'Idris.Syntax.PrintDef', V592} -> case V592 of {'Idris.Syntax.PRef', V593, V594} -> begin (V600 = begin (V595 = V0), fun (V596) -> begin (V599 = (begin (V597 = V595), fun (V598) -> ('erlang':'get'(V597)) end end(V596))), {'Prelude.Types.Right', V599} end end end), fun (V601) -> begin (V602 = (V600(V601))), case V602 of {'Prelude.Types.Left', V603} -> {'Prelude.Types.Left', V603}; {'Prelude.Types.Right', V604} -> (begin (V660 = begin (V637 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V594, case V604 of {'Core.Context.MkDefs', V605, V606, V607, V608, V609, V610, V611, V612, V613, V614, V615, V616, V617, V618, V619, V620, V621, V622, V623, V624, V625, V626, V627, V628, V629, V630, V631, V632, V633, V634, V635, V636} -> V605 end))), fun (V638) -> begin (V639 = (V637(V638))), case V639 of {'Prelude.Types.Left', V640} -> {'Prelude.Types.Left', V640}; {'Prelude.Types.Right', V641} -> (begin (V659 = case V641 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V593, V594)); _ -> begin (V643 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V642) -> ('Idris.Idris2.Idris.Doc.Display':'un--displayPats'(V0, V2, 0, V604, V642)) end, V641, []))), fun (V644) -> begin (V645 = (V643(V644))), case V645 of {'Prelude.Types.Left', V646} -> {'Prelude.Types.Left', V646}; {'Prelude.Types.Right', V647} -> (begin (V658 = fun (V648) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V655 = fun (V651) -> fun (V652) -> fun (V653) -> fun (V654) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V653, V654)) end end end end), fun (V656) -> fun (V657) -> ((((V655('erased'))('erased'))(V656))(V657)) end end end(fun (V649) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V650) -> {'Idris.Pretty.Syntax', V650} end, V649)) end))(V647))))}} end), V658 end(V644)) end end end end end), V659 end(V638)) end end end end), V660 end(V601)) end end end end; _ -> begin (V661 = ('Idris.Idris2.Idris.Doc.String':'un--getDocsForImplementation'(V2, V0, V592))), fun (V662) -> begin (V663 = (V661(V662))), case V663 of {'Prelude.Types.Left', V664} -> {'Prelude.Types.Left', V664}; {'Prelude.Types.Right', V665} -> (begin (V681 = fun (V666) -> case V665 of {'Prelude.Types.Just', V667} -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V668) -> {'Idris.Pretty.Syntax', V668} end, V667))}}; {'Prelude.Types.Nothing'} -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V669) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V669)) end, fun (V670) -> fun (V671) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V670, V671)) end end}, ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V672) -> fun (V673) -> <<V672/binary, V673/binary>> end end, <<""/utf8>>}, fun (V674) -> V674 end, [(begin (V676 = fun (V675) -> V675 end), fun (V677) -> (V676(V677)) end end(<<"Error: could not find definition of "/utf8>>)) | [(begin (V679 = fun (V678) -> V678 end), fun (V680) -> (V679(V680)) end end(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_PTerm'(V592)))) | []]]))))}} end end), V681 end(V662)) end end end end end; {'Idris.Syntax.Reload'} -> begin (V687 = begin (V682 = V4), fun (V683) -> begin (V686 = (begin (V684 = V682), fun (V685) -> ('erlang':'get'(V684)) end end(V683))), {'Prelude.Types.Right', V686} end end end), fun (V688) -> begin (V689 = (V687(V688))), case V689 of {'Prelude.Types.Left', V690} -> {'Prelude.Types.Left', V690}; {'Prelude.Types.Right', V691} -> (begin (V711 = case V691 of {'Idris.REPL.Opts.MkREPLOpts', V692, V693, V694, V695, V696, V697, V698, V699, V700, V701, V702, V703, V704, V705, V706, V707, V708} -> case V695 of {'Prelude.Types.Nothing'} -> fun (V709) -> {'Prelude.Types.Right', {'Idris.REPL.Common.NoFileLoaded'}} end; {'Prelude.Types.Just', V710} -> ('un--loadMainFile'(V0, V1, V2, V3, V4, V710)) end end), V711 end(V688)) end end end end; {'Idris.Syntax.Load', V712} -> begin (V746 = begin (V718 = begin (V713 = V4), fun (V714) -> begin (V717 = (begin (V715 = V713), fun (V716) -> ('erlang':'get'(V715)) end end(V714))), {'Prelude.Types.Right', V717} end end end), fun (V719) -> begin (V720 = (V718(V719))), case V720 of {'Prelude.Types.Left', V721} -> {'Prelude.Types.Left', V721}; {'Prelude.Types.Right', V722} -> (begin (V745 = begin (V723 = V4), fun (V724) -> begin (V744 = (begin (V725 = V723), fun (V726) -> ('erlang':'put'(V725, case V722 of {'Idris.REPL.Opts.MkREPLOpts', V727, V728, V729, V730, V731, V732, V733, V734, V735, V736, V737, V738, V739, V740, V741, V742, V743} -> {'Idris.REPL.Opts.MkREPLOpts', V727, V728, V729, {'Prelude.Types.Just', V712}, V731, V732, V733, V734, V735, V736, V737, V738, V739, V740, V741, V742, V743} end)) end end(V724))), {'Prelude.Types.Right', V744} end end end), V745 end(V719)) end end end end), fun (V747) -> begin (V748 = (V746(V747))), case V748 of {'Prelude.Types.Left', V749} -> {'Prelude.Types.Left', V749}; {'Prelude.Types.Right', V750} -> (begin (V751 = ('un--loadMainFile'(V0, V1, V2, V3, V4, V712))), V751 end(V747)) end end end end; {'Idris.Syntax.ImportMod', V752} -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V753 = ('Idris.Idris2.Idris.ProcessIdr':'un--addImport'(V0, V1, V2, {'Idris.Syntax.MkImport', ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V752, ('Idris.Idris2.Core.Name.Namespace':'un--miAsNamespace'(V752))}))), fun (V754) -> begin (V755 = (V753(V754))), case V755 of {'Prelude.Types.Left', V756} -> {'Prelude.Types.Left', V756}; {'Prelude.Types.Right', V757} -> (begin (V759 = fun (V758) -> {'Prelude.Types.Right', {'Idris.REPL.Common.ModuleLoaded', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V752))}} end), V759 end(V754)) end end end end, fun (V760) -> fun (V761) -> {'Prelude.Types.Right', {'Idris.REPL.Common.ErrorLoadingModule', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V752)), V760}} end end)); {'Idris.Syntax.CD', V762} -> begin (V763 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V0, V762))), fun (V764) -> begin (V765 = (V763(V764))), case V765 of {'Prelude.Types.Left', V766} -> {'Prelude.Types.Left', V766}; {'Prelude.Types.Right', V767} -> (begin (V775 = begin (V768 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'())), fun (V769) -> begin (V770 = (V768(V769))), case V770 of {'Prelude.Types.Left', V771} -> {'Prelude.Types.Left', V771}; {'Prelude.Types.Right', V772} -> (begin (V774 = fun (V773) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CurrentDirectory', V772}} end), V774 end(V769)) end end end end), V775 end(V764)) end end end end; {'Idris.Syntax.CWD'} -> begin (V776 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'())), fun (V777) -> begin (V778 = (V776(V777))), case V778 of {'Prelude.Types.Left', V779} -> {'Prelude.Types.Left', V779}; {'Prelude.Types.Right', V780} -> (begin (V782 = fun (V781) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CurrentDirectory', V780}} end), V782 end(V777)) end end end end; {'Idris.Syntax.Edit'} -> begin (V788 = begin (V783 = V4), fun (V784) -> begin (V787 = (begin (V785 = V783), fun (V786) -> ('erlang':'get'(V785)) end end(V784))), {'Prelude.Types.Right', V787} end end end), fun (V789) -> begin (V790 = (V788(V789))), case V790 of {'Prelude.Types.Left', V791} -> {'Prelude.Types.Left', V791}; {'Prelude.Types.Right', V792} -> (begin (V810 = ('case--process-16587'(V4, V3, V2, V1, V0, V792, case V792 of {'Idris.REPL.Opts.MkREPLOpts', V793, V794, V795, V796, V797, V798, V799, V800, V801, V802, V803, V804, V805, V806, V807, V808, V809} -> V796 end))), V810 end(V789)) end end end end; {'Idris.Syntax.Compile', V811, V812} -> ('un--compileExp'(V0, V1, V2, V3, V4, V811, V812)); {'Idris.Syntax.Exec', V813} -> ('un--execExp'(V0, V1, V2, V3, V4, V813)); {'Idris.Syntax.Help', V814} -> fun (V815) -> case V814 of {'Idris.Syntax.GenericHelp'} -> {'Prelude.Types.Right', {'Idris.REPL.Common.RequestedHelp'}}; {'Idris.Syntax.DetailedHelp', V816} -> {'Prelude.Types.Right', {'Idris.REPL.Common.RequestedDetails', V816}} end end; {'Idris.Syntax.TypeSearch', V817} -> begin (V818 = ('Idris.Idris2.Core.Context':'un--branch'(V0))), fun (V819) -> begin (V820 = (V818(V819))), case V820 of {'Prelude.Types.Left', V821} -> {'Prelude.Types.Left', V821}; {'Prelude.Types.Right', V822} -> (begin (V1120 = begin (V855 = case V822 of {'Core.Context.MkDefs', V823, V824, V825, V826, V827, V828, V829, V830, V831, V832, V833, V834, V835, V836, V837, V838, V839, V840, V841, V842, V843, V844, V845, V846, V847, V848, V849, V850, V851, V852, V853, V854} -> V825 end), begin (V888 = case V822 of {'Core.Context.MkDefs', V856, V857, V858, V859, V860, V861, V862, V863, V864, V865, V866, V867, V868, V869, V870, V871, V872, V873, V874, V875, V876, V877, V878, V879, V880, V881, V882, V883, V884, V885, V886, V887} -> V856 end), begin (V889 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, V4, 1, [], V817))), fun (V890) -> begin (V891 = (V889(V890))), case V891 of {'Prelude.Types.Left', V892} -> {'Prelude.Types.Left', V892}; {'Prelude.Types.Right', V893} -> (begin (V1119 = begin (V894 = ('Idris.Idris2.TTImp.BindImplicits':'un--piBindNames'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), [], V893))), fun (V895) -> begin (V896 = (V894(V895))), case V896 of {'Prelude.Types.Left', V897} -> {'Prelude.Types.Left', V897}; {'Prelude.Types.Right', V898} -> (begin (V1118 = begin (V899 = ('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V2, V4, 0, {'TTImp.Elab.Check.InType'}, [], [], {'Core.Env.Nil'}, V898, {'Prelude.Types.Nothing'}))), fun (V900) -> begin (V901 = (V899(V900))), case V901 of {'Prelude.Types.Left', V902} -> {'Prelude.Types.Left', V902}; {'Prelude.Types.Right', V903} -> (begin (V1117 = case V903 of {'Builtin.MkPair', V904, V905} -> begin (V910 = ('Idris.Idris2.Core.Context':'un--toResolvedNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V906) -> fun (V907) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V906, V907)) end end, fun (V908) -> fun (V909) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V908, V909)) end end}, V904))), fun (V911) -> begin (V912 = (V910(V911))), case V912 of {'Prelude.Types.Left', V913} -> {'Prelude.Types.Left', V913}; {'Prelude.Types.Right', V914} -> (begin (V1116 = begin (V1061 = begin (V915 = ('Idris.Idris2.Core.Context':'un--allNames'(V888))), fun (V916) -> begin (V917 = (V915(V916))), case V917 of {'Prelude.Types.Left', V918} -> {'Prelude.Types.Left', V918}; {'Prelude.Types.Right', V919} -> (begin (V1060 = begin (V923 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V920) -> ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V921) -> fun (V922) -> ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V921, V922)) end end, V888, V920)) end, V919, []))), fun (V924) -> begin (V925 = (V923(V924))), case V925 of {'Prelude.Types.Left', V926} -> {'Prelude.Types.Left', V926}; {'Prelude.Types.Right', V927} -> (begin (V1059 = begin (V1028 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V928) -> fun (V929) -> ('Idris.Idris2.Prelude.Types.List':'un--mapMaybeAppend'({'Prelude.Basics.Lin'}, V928, V929)) end end, V927, fun (V930) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V930, fun (V931) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V932) -> fun (V933) -> fun (V934) -> fun (V935) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V934, V935)) end end end end, fun (V936) -> fun (V937) -> {'Prelude.Types.Just', V937} end end, fun (V938) -> fun (V939) -> fun (V940) -> fun (V941) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V940, V941)) end end end end}, fun (V942) -> {'Prelude.Types.Nothing'} end, fun (V943) -> fun (V944) -> fun (V945) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V944, V945)) end end end}, ('Idris.Idris2.Core.Context':'un--visibleIn'(V855, case V931 of {'Core.Context.Context.MkGlobalDef', V946, V947, V948, V949, V950, V951, V952, V953, V954, V955, V956, V957, V958, V959, V960, V961, V962, V963, V964, V965, V966, V967} -> V947 end, case V931 of {'Core.Context.Context.MkGlobalDef', V968, V969, V970, V971, V972, V973, V974, V975, V976, V977, V978, V979, V980, V981, V982, V983, V984, V985, V986, V987, V988, V989} -> V977 end)))), fun (V990) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Prelude.Interfaces.MkAlternative', {'Prelude.Interfaces.MkApplicative', fun (V991) -> fun (V992) -> fun (V993) -> fun (V994) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V993, V994)) end end end end, fun (V995) -> fun (V996) -> {'Prelude.Types.Just', V996} end end, fun (V997) -> fun (V998) -> fun (V999) -> fun (V1000) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V999, V1000)) end end end end}, fun (V1001) -> {'Prelude.Types.Nothing'} end, fun (V1002) -> fun (V1003) -> fun (V1004) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V1003, V1004)) end end end}, ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Core.Name':'un--userNameRoot'(case V931 of {'Core.Context.Context.MkGlobalDef', V1005, V1006, V1007, V1008, V1009, V1010, V1011, V1012, V1013, V1014, V1015, V1016, V1017, V1018, V1019, V1020, V1021, V1022, V1023, V1024, V1025, V1026} -> V1006 end)))))), fun (V1027) -> {'Prelude.Types.Just', V931} end)) end)) end)) end))), begin (V1030 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1029) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_GlobalDef'(V888, V1029)) end, V1028, []))), fun (V1031) -> begin (V1032 = (V1030(V1031))), case V1032 of {'Prelude.Types.Left', V1033} -> {'Prelude.Types.Left', V1033}; {'Prelude.Types.Right', V1034} -> (begin (V1058 = ('Idris.Idris2.Core.Core':'un--filterM'(fun (V1035) -> ('Idris.Idris2.Idris.REPL.Common':'un--equivTypes'(V0, case V1035 of {'Core.Context.Context.MkGlobalDef', V1036, V1037, V1038, V1039, V1040, V1041, V1042, V1043, V1044, V1045, V1046, V1047, V1048, V1049, V1050, V1051, V1052, V1053, V1054, V1055, V1056, V1057} -> V1038 end, V914)) end, V1034))), V1058 end(V1031)) end end end end end), V1059 end(V924)) end end end end), V1060 end(V916)) end end end end), fun (V1062) -> begin (V1063 = (V1061(V1062))), case V1063 of {'Prelude.Types.Left', V1064} -> {'Prelude.Types.Left', V1064}; {'Prelude.Types.Right', V1065} -> (begin (V1115 = begin (V1071 = begin (V1066 = V0), fun (V1067) -> begin (V1070 = (begin (V1068 = V1066), fun (V1069) -> ('erlang':'put'(V1068, V822)) end end(V1067))), {'Prelude.Types.Right', V1070} end end end), fun (V1072) -> begin (V1073 = (V1071(V1072))), case V1073 of {'Prelude.Types.Left', V1074} -> {'Prelude.Types.Left', V1074}; {'Prelude.Types.Right', V1075} -> (begin (V1114 = begin (V1107 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1076) -> ('Idris.Idris2.Idris.REPL.Common':'un--docsOrSignature'(V4, V0, V2, ('Idris.Idris2.Core.FC':'un--replFC'()), V1076)) end, ((begin (V1104 = fun (V1100) -> fun (V1101) -> fun (V1102) -> fun (V1103) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1102, V1103)) end end end end), fun (V1105) -> fun (V1106) -> ((((V1104('erased'))('erased'))(V1105))(V1106)) end end end(fun (V1077) -> case V1077 of {'Core.Context.Context.MkGlobalDef', V1078, V1079, V1080, V1081, V1082, V1083, V1084, V1085, V1086, V1087, V1088, V1089, V1090, V1091, V1092, V1093, V1094, V1095, V1096, V1097, V1098, V1099} -> V1079 end end))(V1065)), []))), fun (V1108) -> begin (V1109 = (V1107(V1108))), case V1109 of {'Prelude.Types.Left', V1110} -> {'Prelude.Types.Left', V1110}; {'Prelude.Types.Right', V1111} -> (begin (V1113 = fun (V1112) -> {'Prelude.Types.Right', {'Idris.REPL.Common.PrintedDoc', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V1111))}} end), V1113 end(V1108)) end end end end), V1114 end(V1072)) end end end end), V1115 end(V1062)) end end end end), V1116 end(V911)) end end end end end), V1117 end(V900)) end end end end), V1118 end(V895)) end end end end), V1119 end(V890)) end end end end end end), V1120 end(V819)) end end end end; {'Idris.Syntax.Missing', V1121} -> begin (V1127 = begin (V1122 = V0), fun (V1123) -> begin (V1126 = (begin (V1124 = V1122), fun (V1125) -> ('erlang':'get'(V1124)) end end(V1123))), {'Prelude.Types.Right', V1126} end end end), fun (V1128) -> begin (V1129 = (V1127(V1128))), case V1129 of {'Prelude.Types.Left', V1130} -> {'Prelude.Types.Left', V1130}; {'Prelude.Types.Right', V1131} -> (begin (V1225 = begin (V1164 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V1121, case V1131 of {'Core.Context.MkDefs', V1132, V1133, V1134, V1135, V1136, V1137, V1138, V1139, V1140, V1141, V1142, V1143, V1144, V1145, V1146, V1147, V1148, V1149, V1150, V1151, V1152, V1153, V1154, V1155, V1156, V1157, V1158, V1159, V1160, V1161, V1162, V1163} -> V1132 end))), fun (V1165) -> begin (V1166 = (V1164(V1165))), case V1166 of {'Prelude.Types.Left', V1167} -> {'Prelude.Types.Left', V1167}; {'Prelude.Types.Right', V1168} -> (begin (V1224 = case V1168 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V1121)); _ -> begin (V1205 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1169) -> begin (V1170 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V1169))), fun (V1171) -> begin (V1172 = (V1170(V1171))), case V1172 of {'Prelude.Types.Left', V1173} -> {'Prelude.Types.Left', V1173}; {'Prelude.Types.Right', V1174} -> (begin (V1196 = case V1174 of {'Core.TT.MkTotality', V1175, V1176} -> case V1176 of {'Core.TT.MissingCases', V1177} -> begin (V1179 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1178) -> ('un--displayPatTerm'(V0, V2, V1131, V1178)) end, V1177, []))), fun (V1180) -> begin (V1181 = (V1179(V1180))), case V1181 of {'Prelude.Types.Left', V1182} -> {'Prelude.Types.Left', V1182}; {'Prelude.Types.Right', V1183} -> (begin (V1185 = fun (V1184) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CasesMissing', V1169, V1183}} end), V1185 end(V1180)) end end end end; {'Core.TT.NonCoveringCall', V1186} -> begin (V1188 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1187) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1187)) end, V1186, []))), fun (V1189) -> begin (V1190 = (V1188(V1189))), case V1190 of {'Prelude.Types.Left', V1191} -> {'Prelude.Types.Left', V1191}; {'Prelude.Types.Right', V1192} -> (begin (V1194 = fun (V1193) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CallsNonCovering', V1169, V1192}} end), V1194 end(V1189)) end end end end; _ -> fun (V1195) -> {'Prelude.Types.Right', {'Idris.REPL.Common.AllCasesCovered', V1169}} end end end), V1196 end(V1171)) end end end end end, ((begin (V1202 = fun (V1198) -> fun (V1199) -> fun (V1200) -> fun (V1201) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1200, V1201)) end end end end), fun (V1203) -> fun (V1204) -> ((((V1202('erased'))('erased'))(V1203))(V1204)) end end end(fun (V1197) -> ('Idris.Idris2.Builtin':'un--fst'(V1197)) end))(V1168)), []))), ((begin (V1221 = fun (V1216) -> fun (V1217) -> fun (V1218) -> fun (V1219) -> fun (V1220) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1218, V1219, V1220)) end end end end end), fun (V1222) -> fun (V1223) -> ((((V1221('erased'))('erased'))(V1222))(V1223)) end end end((begin (V1213 = fun (V1207) -> fun (V1208) -> fun (V1209) -> fun (V1210) -> case V1210 of {'Prelude.Types.Left', V1211} -> {'Prelude.Types.Left', V1211}; {'Prelude.Types.Right', V1212} -> {'Prelude.Types.Right', (V1209(V1212))} end end end end end), fun (V1214) -> fun (V1215) -> ((((V1213('erased'))('erased'))(V1214))(V1215)) end end end(fun (V1206) -> {'Idris.REPL.Common.Missed', V1206} end))))(V1205)) end end), V1224 end(V1165)) end end end end), V1225 end(V1128)) end end end end; {'Idris.Syntax.Total', V1226} -> begin (V1232 = begin (V1227 = V0), fun (V1228) -> begin (V1231 = (begin (V1229 = V1227), fun (V1230) -> ('erlang':'get'(V1229)) end end(V1228))), {'Prelude.Types.Right', V1231} end end end), fun (V1233) -> begin (V1234 = (V1232(V1233))), case V1234 of {'Prelude.Types.Left', V1235} -> {'Prelude.Types.Left', V1235}; {'Prelude.Types.Right', V1236} -> (begin (V1345 = begin (V1269 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V1226, case V1236 of {'Core.Context.MkDefs', V1237, V1238, V1239, V1240, V1241, V1242, V1243, V1244, V1245, V1246, V1247, V1248, V1249, V1250, V1251, V1252, V1253, V1254, V1255, V1256, V1257, V1258, V1259, V1260, V1261, V1262, V1263, V1264, V1265, V1266, V1267, V1268} -> V1237 end))), fun (V1270) -> begin (V1271 = (V1269(V1270))), case V1271 of {'Prelude.Types.Left', V1272} -> {'Prelude.Types.Left', V1272}; {'Prelude.Types.Right', V1273} -> (begin (V1344 = case V1273 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V1226)); _ -> begin (V1325 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1274) -> begin (V1294 = begin (V1275 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V1274))), ((begin (V1291 = fun (V1286) -> fun (V1287) -> fun (V1288) -> fun (V1289) -> fun (V1290) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1288, V1289, V1290)) end end end end end), fun (V1292) -> fun (V1293) -> ((((V1291('erased'))('erased'))(V1292))(V1293)) end end end((begin (V1283 = fun (V1277) -> fun (V1278) -> fun (V1279) -> fun (V1280) -> case V1280 of {'Prelude.Types.Left', V1281} -> {'Prelude.Types.Left', V1281}; {'Prelude.Types.Right', V1282} -> {'Prelude.Types.Right', (V1279(V1282))} end end end end end), fun (V1284) -> fun (V1285) -> ((((V1283('erased'))('erased'))(V1284))(V1285)) end end end(fun (V1276) -> {'Builtin.MkUnit'} end))))(V1275)) end), fun (V1295) -> begin (V1296 = (V1294(V1295))), case V1296 of {'Prelude.Types.Left', V1297} -> {'Prelude.Types.Left', V1297}; {'Prelude.Types.Right', V1298} -> (begin (V1316 = begin (V1309 = begin (V1299 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V1274))), fun (V1300) -> begin (V1301 = (V1299(V1300))), case V1301 of {'Prelude.Types.Left', V1302} -> {'Prelude.Types.Left', V1302}; {'Prelude.Types.Right', V1303} -> (begin (V1308 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V1304) -> fun (V1305) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Totality'(V1304, V1305)) end end, fun (V1306) -> fun (V1307) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Totality'(V1306, V1307)) end end}, V1303))), V1308 end(V1300)) end end end end), fun (V1310) -> begin (V1311 = (V1309(V1310))), case V1311 of {'Prelude.Types.Left', V1312} -> {'Prelude.Types.Left', V1312}; {'Prelude.Types.Right', V1313} -> (begin (V1315 = fun (V1314) -> {'Prelude.Types.Right', {'Builtin.MkPair', V1274, V1313}} end), V1315 end(V1310)) end end end end), V1316 end(V1295)) end end end end end, ((begin (V1322 = fun (V1318) -> fun (V1319) -> fun (V1320) -> fun (V1321) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V1320, V1321)) end end end end), fun (V1323) -> fun (V1324) -> ((((V1322('erased'))('erased'))(V1323))(V1324)) end end end(fun (V1317) -> ('Idris.Idris2.Builtin':'un--fst'(V1317)) end))(V1273)), []))), ((begin (V1341 = fun (V1336) -> fun (V1337) -> fun (V1338) -> fun (V1339) -> fun (V1340) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1338, V1339, V1340)) end end end end end), fun (V1342) -> fun (V1343) -> ((((V1341('erased'))('erased'))(V1342))(V1343)) end end end((begin (V1333 = fun (V1327) -> fun (V1328) -> fun (V1329) -> fun (V1330) -> case V1330 of {'Prelude.Types.Left', V1331} -> {'Prelude.Types.Left', V1331}; {'Prelude.Types.Right', V1332} -> {'Prelude.Types.Right', (V1329(V1332))} end end end end end), fun (V1334) -> fun (V1335) -> ((((V1333('erased'))('erased'))(V1334))(V1335)) end end end(fun (V1326) -> {'Idris.REPL.Common.CheckedTotal', V1326} end))))(V1325)) end end), V1344 end(V1270)) end end end end), V1345 end(V1233)) end end end end; {'Idris.Syntax.Doc', V1346} -> begin (V1347 = ('Idris.Idris2.Idris.Doc.String':'un--getDocs'(V4, V0, V2, V1346))), fun (V1348) -> begin (V1349 = (V1347(V1348))), case V1349 of {'Prelude.Types.Left', V1350} -> {'Prelude.Types.Left', V1350}; {'Prelude.Types.Right', V1351} -> (begin (V1353 = fun (V1352) -> {'Prelude.Types.Right', {'Idris.REPL.Common.PrintedDoc', V1351}} end), V1353 end(V1348)) end end end end; {'Idris.Syntax.Browse', V1354} -> begin (V1355 = ('Idris.Idris2.Idris.Doc.String':'un--getContents'(V4, V0, V2, V1354))), fun (V1356) -> begin (V1357 = (V1355(V1356))), case V1357 of {'Prelude.Types.Left', V1358} -> {'Prelude.Types.Left', V1358}; {'Prelude.Types.Right', V1359} -> (begin (V1361 = fun (V1360) -> {'Prelude.Types.Right', {'Idris.REPL.Common.PrintedDoc', V1359}} end), V1361 end(V1356)) end end end end; {'Idris.Syntax.DebugInfo', V1362} -> begin (V1368 = begin (V1363 = V0), fun (V1364) -> begin (V1367 = (begin (V1365 = V1363), fun (V1366) -> ('erlang':'get'(V1365)) end end(V1364))), {'Prelude.Types.Right', V1367} end end end), fun (V1369) -> begin (V1370 = (V1368(V1369))), case V1370 of {'Prelude.Types.Left', V1371} -> {'Prelude.Types.Left', V1371}; {'Prelude.Types.Right', V1372} -> (begin (V1419 = begin (V1412 = begin (V1405 = ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V1362, case V1372 of {'Core.Context.MkDefs', V1373, V1374, V1375, V1376, V1377, V1378, V1379, V1380, V1381, V1382, V1383, V1384, V1385, V1386, V1387, V1388, V1389, V1390, V1391, V1392, V1393, V1394, V1395, V1396, V1397, V1398, V1399, V1400, V1401, V1402, V1403, V1404} -> V1373 end))), fun (V1406) -> begin (V1407 = (V1405(V1406))), case V1407 of {'Prelude.Types.Left', V1408} -> {'Prelude.Types.Left', V1408}; {'Prelude.Types.Right', V1409} -> (begin (V1411 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1410) -> ('un--prettyInfo'(V0, V2, V1410)) end, V1409, []))), V1411 end(V1406)) end end end end), fun (V1413) -> begin (V1414 = (V1412(V1413))), case V1414 of {'Prelude.Types.Left', V1415} -> {'Prelude.Types.Left', V1415}; {'Prelude.Types.Right', V1416} -> (begin (V1418 = fun (V1417) -> {'Prelude.Types.Right', {'Idris.REPL.Common.PrintedDoc', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--punctuate'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--hardline'()), V1416))))}} end), V1418 end(V1413)) end end end end), V1419 end(V1369)) end end end end; {'Idris.Syntax.SetOpt', V1420} -> begin (V1421 = ('un--setOpt'(V0, V4, V1420))), fun (V1422) -> begin (V1423 = (V1421(V1422))), case V1423 of {'Prelude.Types.Left', V1424} -> {'Prelude.Types.Left', V1424}; {'Prelude.Types.Right', V1425} -> (begin (V1427 = fun (V1426) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Done'}} end), V1427 end(V1422)) end end end end; {'Idris.Syntax.GetOpts'} -> begin (V1428 = ('un--getOptions'(V0, V4))), fun (V1429) -> begin (V1430 = (V1428(V1429))), case V1430 of {'Prelude.Types.Left', V1431} -> {'Prelude.Types.Left', V1431}; {'Prelude.Types.Right', V1432} -> (begin (V1434 = fun (V1433) -> {'Prelude.Types.Right', {'Idris.REPL.Common.OptionsSet', V1432}} end), V1434 end(V1429)) end end end end; {'Idris.Syntax.SetLog', V1435} -> begin (V1436 = ('Idris.Idris2.Core.Context':'un--addLogLevel'(V0, V1435))), fun (V1437) -> begin (V1438 = (V1436(V1437))), case V1438 of {'Prelude.Types.Left', V1439} -> {'Prelude.Types.Left', V1439}; {'Prelude.Types.Right', V1440} -> (begin (V1442 = fun (V1441) -> {'Prelude.Types.Right', {'Idris.REPL.Common.LogLevelSet', V1435}} end), V1442 end(V1437)) end end end end; {'Idris.Syntax.SetConsoleWidth', V1443} -> begin (V1444 = ('Idris.Idris2.Idris.REPL.Opts':'un--setConsoleWidth'(V4, V1443))), fun (V1445) -> begin (V1446 = (V1444(V1445))), case V1446 of {'Prelude.Types.Left', V1447} -> {'Prelude.Types.Left', V1447}; {'Prelude.Types.Right', V1448} -> (begin (V1450 = fun (V1449) -> {'Prelude.Types.Right', {'Idris.REPL.Common.ConsoleWidthSet', V1443}} end), V1450 end(V1445)) end end end end; {'Idris.Syntax.SetColor', V1451} -> begin (V1452 = ('Idris.Idris2.Idris.REPL.Opts':'un--setColor'(V4, V1451))), fun (V1453) -> begin (V1454 = (V1452(V1453))), case V1454 of {'Prelude.Types.Left', V1455} -> {'Prelude.Types.Left', V1455}; {'Prelude.Types.Right', V1456} -> (begin (V1458 = fun (V1457) -> {'Prelude.Types.Right', {'Idris.REPL.Common.ColorSet', V1451}} end), V1458 end(V1453)) end end end end; {'Idris.Syntax.Metavars'} -> begin (V1459 = ('Idris.Idris2.Idris.IDEMode.Holes':'un--getUserHolesData'(V0, V2))), fun (V1460) -> begin (V1461 = (V1459(V1460))), case V1461 of {'Prelude.Types.Left', V1462} -> {'Prelude.Types.Left', V1462}; {'Prelude.Types.Right', V1463} -> (begin (V1466 = fun (V1464) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V1465) -> {'Idris.Pretty.Syntax', V1465} end, ('Idris.Idris2.Idris.IDEMode.Holes':'un--prettyHoles'(V1463))))}} end), V1466 end(V1460)) end end end end; {'Idris.Syntax.Editing', V1467} -> begin (V1468 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0))), fun (V1469) -> begin (V1470 = (V1468(V1469))), case V1470 of {'Prelude.Types.Left', V1471} -> {'Prelude.Types.Left', V1471}; {'Prelude.Types.Right', V1472} -> (begin (V1496 = begin (V1477 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V1472 of {'Core.Options.MkPPOpts', V1473, V1474, V1475, V1476} -> {'Core.Options.MkPPOpts', V1473, V1474, 0, V1476} end))), fun (V1478) -> begin (V1479 = (V1477(V1478))), case V1479 of {'Prelude.Types.Left', V1480} -> {'Prelude.Types.Left', V1480}; {'Prelude.Types.Right', V1481} -> (begin (V1495 = begin (V1482 = ('un--processEdit'(V0, V1, V2, V3, V4, V1467))), fun (V1483) -> begin (V1484 = (V1482(V1483))), case V1484 of {'Prelude.Types.Left', V1485} -> {'Prelude.Types.Left', V1485}; {'Prelude.Types.Right', V1486} -> (begin (V1494 = begin (V1487 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, V1472))), fun (V1488) -> begin (V1489 = (V1487(V1488))), case V1489 of {'Prelude.Types.Left', V1490} -> {'Prelude.Types.Left', V1490}; {'Prelude.Types.Right', V1491} -> (begin (V1493 = fun (V1492) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Edited', V1486}} end), V1493 end(V1488)) end end end end), V1494 end(V1483)) end end end end), V1495 end(V1478)) end end end end), V1496 end(V1469)) end end end end; {'Idris.Syntax.CGDirective', V1497} -> begin (V1530 = begin (V1498 = ('Idris.Idris2.Core.Context':'un--getSession'(V0))), fun (V1499) -> begin (V1500 = (V1498(V1499))), case V1500 of {'Prelude.Types.Left', V1501} -> {'Prelude.Types.Left', V1501}; {'Prelude.Types.Right', V1502} -> (begin (V1529 = ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V1502 of {'Core.Options.MkSessionOpts', V1503, V1504, V1505, V1506, V1507, V1508, V1509, V1510, V1511, V1512, V1513, V1514, V1515, V1516, V1517, V1518, V1519, V1520, V1521, V1522, V1523, V1524, V1525, V1526, V1527, V1528} -> {'Core.Options.MkSessionOpts', V1503, V1504, V1505, V1506, V1507, [V1497 | V1508], V1509, V1510, V1511, V1512, V1513, V1514, V1515, V1516, V1517, V1518, V1519, V1520, V1521, V1522, V1523, V1524, V1525, V1526, V1527, V1528} end))), V1529 end(V1499)) end end end end), fun (V1531) -> begin (V1532 = (V1530(V1531))), case V1532 of {'Prelude.Types.Left', V1533} -> {'Prelude.Types.Left', V1533}; {'Prelude.Types.Right', V1534} -> (begin (V1536 = fun (V1535) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Done'}} end), V1536 end(V1531)) end end end end; {'Idris.Syntax.RunShellCommand', V1537} -> begin (V1586 = begin (V1567 = fun (V1538) -> begin (V1566 = (('Idris.Idris2.Erlang.System':'un--system'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V1539) -> fun (V1540) -> fun (V1541) -> fun (V1542) -> fun (V1543) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1541, V1542, V1543)) end end end end end, fun (V1544) -> fun (V1545) -> fun (V1546) -> V1545 end end end, fun (V1547) -> fun (V1548) -> fun (V1549) -> fun (V1550) -> fun (V1551) -> begin (V1552 = (V1549(V1551))), begin (V1553 = (V1550(V1551))), (V1552(V1553)) end end end end end end end}, fun (V1554) -> fun (V1555) -> fun (V1556) -> fun (V1557) -> fun (V1558) -> begin (V1559 = (V1556(V1558))), ((V1557(V1559))(V1558)) end end end end end end, fun (V1560) -> fun (V1561) -> fun (V1562) -> begin (V1563 = (V1561(V1562))), (V1563(V1562)) end end end end}, fun (V1564) -> fun (V1565) -> V1565 end end}, V1537))(V1538))), {'Prelude.Types.Right', V1566} end end), ((begin (V1583 = fun (V1578) -> fun (V1579) -> fun (V1580) -> fun (V1581) -> fun (V1582) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1580, V1581, V1582)) end end end end end), fun (V1584) -> fun (V1585) -> ((((V1583('erased'))('erased'))(V1584))(V1585)) end end end((begin (V1575 = fun (V1569) -> fun (V1570) -> fun (V1571) -> fun (V1572) -> case V1572 of {'Prelude.Types.Left', V1573} -> {'Prelude.Types.Left', V1573}; {'Prelude.Types.Right', V1574} -> {'Prelude.Types.Right', (V1571(V1574))} end end end end end), fun (V1576) -> fun (V1577) -> ((((V1575('erased'))('erased'))(V1576))(V1577)) end end end(fun (V1568) -> {'Builtin.MkUnit'} end))))(V1567)) end), fun (V1587) -> begin (V1588 = (V1586(V1587))), case V1588 of {'Prelude.Types.Left', V1589} -> {'Prelude.Types.Left', V1589}; {'Prelude.Types.Right', V1590} -> (begin (V1592 = fun (V1591) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Done'}} end), V1592 end(V1587)) end end end end; {'Idris.Syntax.Quit'} -> fun (V1593) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Exited'}} end; {'Idris.Syntax.NOP'} -> fun (V1594) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Done'}} end; {'Idris.Syntax.ShowVersion'} -> fun (V1595) -> {'Prelude.Types.Right', {'Idris.REPL.Common.VersionIs', ('Idris.Idris2.Idris.Version':'un--version'())}} end; {'Idris.Syntax.ImportPackage', V1596} -> begin (V1602 = begin (V1597 = V0), fun (V1598) -> begin (V1601 = (begin (V1599 = V1597), fun (V1600) -> ('erlang':'get'(V1599)) end end(V1598))), {'Prelude.Types.Right', V1601} end end end), fun (V1603) -> begin (V1604 = (V1602(V1603))), case V1604 of {'Prelude.Types.Left', V1605} -> {'Prelude.Types.Left', V1605}; {'Prelude.Types.Right', V1606} -> (begin (V1614 = begin (V1607 = ('Idris.Idris2.Core.Directory':'un--extraSearchDirectories'(V0))), fun (V1608) -> begin (V1609 = (V1607(V1608))), case V1609 of {'Prelude.Types.Left', V1610} -> {'Prelude.Types.Left', V1610}; {'Prelude.Types.Right', V1611} -> (begin (V1613 = ('case--process-17493'(V1596, V4, V3, V2, V1, V0, V1606, V1611, ('Idris.Idris2.Data.List':'un--find'(fun (V1612) -> ('Idris.Idris2.Data.String':'un--isInfixOf'(V1596, ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V1612 end, ('Idris.Idris2.Libraries.Utils.Path':'un--fileName'(V1612)))))) end, V1611))))), V1613 end(V1608)) end end end end), V1614 end(V1603)) end end end end; {'Idris.Syntax.FuzzyTypeSearch', V1615} -> ('Idris.Idris2.Idris.REPL.FuzzySearch':'un--fuzzySearch'(V0, V1, V2, V3, V4, V1615)) end.
'un--printClause'(V0, V1, V2, V3, V4) -> case V4 of {'TTImp.TTImp.PatClause', V5, V6, V7} -> begin (V16 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ((begin (V13 = fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V11, V12)) end end end end), fun (V14) -> fun (V15) -> ((((V13('erased'))('erased'))(V14))(V15)) end end end(fun (V8) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V8)) end))(V6))))), fun (V17) -> begin (V18 = (V16(V17))), case V18 of {'Prelude.Types.Left', V19} -> {'Prelude.Types.Left', V19}; {'Prelude.Types.Right', V20} -> (begin (V36 = begin (V29 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ((begin (V26 = fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V24, V25)) end end end end), fun (V27) -> fun (V28) -> ((((V26('erased'))('erased'))(V27))(V28)) end end end(fun (V21) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V21)) end))(V7))))), fun (V30) -> begin (V31 = (V29(V30))), case V31 of {'Prelude.Types.Left', V32} -> {'Prelude.Types.Left', V32}; {'Prelude.Types.Right', V33} -> (begin (V35 = fun (V34) -> {'Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, <<('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicateTR'([], V3, $ ))))/binary, <<('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V20))/binary, <<<<" = "/utf8>>/binary, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V33))/binary>>/binary>>/binary>>))} end), V35 end(V30)) end end end end), V36 end(V17)) end end end end; {'TTImp.TTImp.WithClause', V37, V38, V39, V40, V41, V42, V43} -> begin (V52 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ((begin (V49 = fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V47, V48)) end end end end), fun (V50) -> fun (V51) -> ((((V49('erased'))('erased'))(V50))(V51)) end end end(fun (V44) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V44)) end))(V38))))), fun (V53) -> begin (V54 = (V52(V53))), case V54 of {'Prelude.Types.Left', V55} -> {'Prelude.Types.Left', V55}; {'Prelude.Types.Right', V56} -> (begin (V89 = begin (V65 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ((begin (V62 = fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V60, V61)) end end end end), fun (V63) -> fun (V64) -> ((((V62('erased'))('erased'))(V63))(V64)) end end end(fun (V57) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V57)) end))(V40))))), fun (V66) -> begin (V67 = (V65(V66))), case V67 of {'Prelude.Types.Left', V68} -> {'Prelude.Types.Left', V68}; {'Prelude.Types.Right', V69} -> (begin (V88 = begin (V71 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V70) -> ('un--printClause'(V0, V1, V2, (V3 + 2), V70)) end, V43, []))), fun (V72) -> begin (V73 = (V71(V72))), case V73 of {'Prelude.Types.Left', V74} -> {'Prelude.Types.Left', V74}; {'Prelude.Types.Right', V75} -> (begin (V87 = fun (V76) -> {'Prelude.Types.Right', <<('Idris.Idris2.Parser.Unlit':'un--relit'(V2, <<('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicateTR'([], V3, $ ))))/binary, <<('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V56))/binary, <<<<" with "/utf8>>/binary, <<('Idris.Idris2.Algebra.Semiring':'un--elimSemi'({'Builtin.MkPair', {'Algebra.Semiring.dn--un--__mkSemiring', fun (V77) -> fun (V78) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V77, V78)) end end, 0, fun (V79) -> fun (V80) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V79, V80)) end end, 1}, {'Prelude.EqOrd.MkEq', fun (V81) -> fun (V82) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V81, V82)) end end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V83, V84)) end end}}, <<"0 "/utf8>>, <<"1 "/utf8>>, fun (V85) -> <<""/utf8>> end, V39))/binary, <<<<"("/utf8>>/binary, <<('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V69))/binary, <<<<")"/utf8>>/binary, <<('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> <<""/utf8>> end, fun () -> fun (V86) -> <<<<" proof "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V86))/binary>> end end, V41))/binary, <<"\x{a}"/utf8>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>/binary>>))/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V75))/binary>>} end), V87 end(V72)) end end end end), V88 end(V66)) end end end end), V89 end(V53)) end end end end; {'TTImp.TTImp.ImpossibleClause', V90, V91} -> begin (V100 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ((begin (V97 = fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(V95, V96)) end end end end), fun (V98) -> fun (V99) -> ((((V97('erased'))('erased'))(V98))(V99)) end end end(fun (V92) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V92)) end))(V91))))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V106 = fun (V105) -> {'Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, <<('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicateTR'([], V3, $ ))))/binary, <<('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V104))/binary, <<" impossible"/utf8>>/binary>>/binary>>))} end), V106 end(V101)) end end end end end.
'un--prettyInfo'(V0, V1, V2) -> case V2 of {'Builtin.MkPair', V3, V4} -> case V4 of {'Builtin.MkPair', V5, V6} -> begin (V29 = case V6 of {'Core.Context.Context.MkGlobalDef', V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28} -> V8 end), begin (V56 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Def'(V30, V31)) end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Def'(V32, V33)) end end}, case V6 of {'Core.Context.Context.MkGlobalDef', V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55} -> V51 end))), fun (V57) -> begin (V58 = (V56(V57))), case V58 of {'Prelude.Types.Left', V59} -> {'Prelude.Types.Left', V59}; {'Prelude.Types.Right', V60} -> (begin (V546 = begin (V62 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V61) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V61)) end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.Context.Context':'un--refersTo'(V6)))), []))), fun (V63) -> begin (V64 = (V62(V63))), case V64 of {'Prelude.Types.Left', V65} -> {'Prelude.Types.Left', V65}; {'Prelude.Types.Right', V66} -> (begin (V545 = begin (V68 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V67) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V67)) end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.Context.Context':'un--refersToRuntime'(V6)))), []))), fun (V69) -> begin (V70 = (V68(V69))), case V70 of {'Prelude.Types.Left', V71} -> {'Prelude.Types.Left', V71}; {'Prelude.Types.Right', V72} -> (begin (V544 = begin (V100 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V73) -> ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Core.Context.dn--un--__mkHasNames', fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_SCCall'(V74, V75)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_SCCall'(V76, V77)) end end}, V73)) end, case V6 of {'Core.Context.Context.MkGlobalDef', V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99} -> V98 end, []))), fun (V101) -> begin (V102 = (V100(V101))), case V102 of {'Prelude.Types.Left', V103} -> {'Prelude.Types.Left', V103}; {'Prelude.Types.Right', V104} -> (begin (V543 = begin (V105 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0))), fun (V106) -> begin (V107 = (V105(V106))), case V107 of {'Prelude.Types.Left', V108} -> {'Prelude.Types.Left', V108}; {'Prelude.Types.Right', V109} -> (begin (V542 = begin (V114 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V109 of {'Core.Options.MkPPOpts', V110, V111, V112, V113} -> {'Core.Options.MkPPOpts', V110, 1, V112, V113} end))), fun (V115) -> begin (V116 = (V114(V115))), case V116 of {'Prelude.Types.Left', V117} -> {'Prelude.Types.Left', V117}; {'Prelude.Types.Right', V118} -> (begin (V541 = begin (V119 = ('Idris.Idris2.Core.Context.Pretty.Resugared':'un--prettyDef'(V0, V1, V60))), fun (V120) -> begin (V121 = (V119(V120))), case V121 of {'Prelude.Types.Left', V122} -> {'Prelude.Types.Left', V122}; {'Prelude.Types.Right', V123} -> (begin (V540 = begin (V132 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V109 of {'Core.Options.MkPPOpts', V124, V125, V126, V127} -> {'Core.Options.MkPPOpts', V124, case V109 of {'Core.Options.MkPPOpts', V128, V129, V130, V131} -> V129 end, V126, V127} end))), fun (V133) -> begin (V134 = (V132(V133))), case V134 of {'Prelude.Types.Left', V135} -> {'Prelude.Types.Left', V135}; {'Prelude.Types.Right', V136} -> (begin (V539 = fun (V137) -> {'Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'([((begin (V167 = fun (V165) -> fun (V166) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V165, V166)) end end), fun (V168) -> fun (V169) -> ((V167(V168))(V169)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V142) -> {'Idris.Doc.Annotations.Syntax', V142} end, ('Idris.Idris2.Idris.Pretty.Annotations':'un--prettyRig'(case V6 of {'Core.Context.Context.MkGlobalDef', V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164} -> V150 end))))))((('Idris.Idris2.Idris.Pretty':'un--showCategory'(fun (V141) -> {'Idris.Doc.Annotations.Syntax', V141} end, V6))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V138) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V138)) end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V139, V140)) end end}, V29)))))) | [V123 | []]], ('Idris.Idris2.Data.List':'un--catMaybes'([((begin (V206 = fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V204, V205)) end end end end), fun (V207) -> fun (V208) -> ((((V206('erased'))('erased'))(V207))(V208)) end end end(fun (V192) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Erasable args"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V193) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V194) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V194)) end, fun (V195) -> fun (V196) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V195, V196)) end end}, V193)) end, fun (V197) -> fun (V198) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V199) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V199)) end, fun (V200) -> fun (V201) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V200, V201)) end end}, V197, V198)) end end}, V192)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, case V6 of {'Core.Context.Context.MkGlobalDef', V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191} -> V173 end)))) | [((begin (V245 = fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V243, V244)) end end end end), fun (V246) -> fun (V247) -> ((((V245('erased'))('erased'))(V246))(V247)) end end end(fun (V231) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Detaggable arg types"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V232) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V233) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V233)) end, fun (V234) -> fun (V235) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V234, V235)) end end}, V232)) end, fun (V236) -> fun (V237) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V238) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V238)) end, fun (V239) -> fun (V240) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V239, V240)) end end}, V236, V237)) end end}, V231)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, case V6 of {'Core.Context.Context.MkGlobalDef', V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230} -> V213 end)))) | [((begin (V284 = fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V282, V283)) end end end end), fun (V285) -> fun (V286) -> ((((V284('erased'))('erased'))(V285))(V286)) end end end(fun (V270) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Specialise args"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V271) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V272) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V272)) end, fun (V273) -> fun (V274) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V273, V274)) end end}, V271)) end, fun (V275) -> fun (V276) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V277) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V277)) end, fun (V278) -> fun (V279) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V278, V279)) end end}, V275, V276)) end end}, V270)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, case V6 of {'Core.Context.Context.MkGlobalDef', V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269} -> V253 end)))) | [((begin (V323 = fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V321, V322)) end end end end), fun (V324) -> fun (V325) -> ((((V323('erased'))('erased'))(V324))(V325)) end end end(fun (V309) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Inferrable args"/utf8>>)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V310) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Prelude.Show.MkShow', fun (V311) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V311)) end, fun (V312) -> fun (V313) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V312, V313)) end end}, V310)) end, fun (V314) -> fun (V315) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Prelude.Show.MkShow', fun (V316) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V316)) end, fun (V317) -> fun (V318) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V317, V318)) end end}, V314, V315)) end end}, V309)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, case V6 of {'Core.Context.Context.MkGlobalDef', V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308} -> V293 end)))) | [((begin (V392 = fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V390, V391)) end end end end), fun (V393) -> fun (V394) -> ((((V392('erased'))('erased'))(V393))(V394)) end end end(fun (V348) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V349) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V350) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V350)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V351) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V351)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V352) -> fun (V353) -> case case (V352 =:= V353) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V349)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V354} -> case V354 of {'Builtin.MkPair', V355, V356} -> [V355 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V356))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V349)); 0 -> V349 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V357} -> case V357 of {'Builtin.MkPair', V358, V359} -> [V358 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V359))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V360) -> fun (V361) -> case case (V360 =:= V361) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V349)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V362} -> case V362 of {'Builtin.MkPair', V363, V364} -> [V363 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V364))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V349)); 0 -> V349 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V365} -> case V365 of {'Builtin.MkPair', V366, V367} -> [V366 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V367))] end end)))))))) end, fun (V368) -> fun (V369) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V370) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V370)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V371) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V371)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V372) -> fun (V373) -> case case (V372 =:= V373) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V369)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V374} -> case V374 of {'Builtin.MkPair', V375, V376} -> [V375 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V376))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V369)); 0 -> V369 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V377} -> case V377 of {'Builtin.MkPair', V378, V379} -> [V378 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V379))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V380) -> fun (V381) -> case case (V380 =:= V381) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V369)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V382} -> case V382 of {'Builtin.MkPair', V383, V384} -> [V383 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V384))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V369)); 0 -> V369 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V385} -> case V385 of {'Builtin.MkPair', V386, V387} -> [V386 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V387))] end end)))))))) end end}, <<"Compiled"/utf8>>)))), ('Idris.Idris2.Core.CompileExpr.Pretty':'dn--un--pretty_Pretty_IdrisDocAnn_CDef'(V348)))) end))(case V6 of {'Core.Context.Context.MkGlobalDef', V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346, V347} -> V344 end)) | [((begin (V443 = fun (V439) -> fun (V440) -> fun (V441) -> fun (V442) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V441, V442)) end end end end), fun (V444) -> fun (V445) -> ((((V443('erased'))('erased'))(V444))(V445)) end end end(fun (V395) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V396) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V397) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V397)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V398) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V398)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V399) -> fun (V400) -> case case (V399 =:= V400) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V396)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V401} -> case V401 of {'Builtin.MkPair', V402, V403} -> [V402 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V403))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V396)); 0 -> V396 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V404} -> case V404 of {'Builtin.MkPair', V405, V406} -> [V405 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V406))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V407) -> fun (V408) -> case case (V407 =:= V408) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V396)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V409} -> case V409 of {'Builtin.MkPair', V410, V411} -> [V410 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V411))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V396)); 0 -> V396 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V412} -> case V412 of {'Builtin.MkPair', V413, V414} -> [V413 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V414))] end end)))))))) end, fun (V415) -> fun (V416) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V417) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V417)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V418) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V418)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V419) -> fun (V420) -> case case (V419 =:= V420) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V416)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V421} -> case V421 of {'Builtin.MkPair', V422, V423} -> [V422 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V423))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V416)); 0 -> V416 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V424} -> case V424 of {'Builtin.MkPair', V425, V426} -> [V425 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V426))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V427) -> fun (V428) -> case case (V427 =:= V428) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V416)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V429} -> case V429 of {'Builtin.MkPair', V430, V431} -> [V430 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V431))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V416)); 0 -> V416 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V432} -> case V432 of {'Builtin.MkPair', V433, V434} -> [V433 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V434))] end end)))))))) end end}, <<"Refers to"/utf8>>)))), ('nested--21686-5889--in--un--enum'(V3, V5, V6, V1, V0, fun (V435) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V436) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V436)) end, fun (V437) -> fun (V438) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V437, V438)) end end}, V435)) end, V395)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, V66)))) | [((begin (V455 = fun (V451) -> fun (V452) -> fun (V453) -> fun (V454) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V453, V454)) end end end end), fun (V456) -> fun (V457) -> ((((V455('erased'))('erased'))(V456))(V457)) end end end(fun (V446) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Refers to (runtime)"/utf8>>)))), ('nested--21686-5889--in--un--enum'(V3, V5, V6, V1, V0, fun (V447) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V448) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V448)) end, fun (V449) -> fun (V450) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V449, V450)) end end}, V447)) end, V446)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, V72)))) | [((begin (V528 = fun (V524) -> fun (V525) -> fun (V526) -> fun (V527) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V526, V527)) end end end end), fun (V529) -> fun (V530) -> ((((V528('erased'))('erased'))(V529))(V530)) end end end(fun (V480) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V481) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V482) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V482)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V483) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V483)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V484) -> fun (V485) -> case case (V484 =:= V485) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V481)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V486} -> case V486 of {'Builtin.MkPair', V487, V488} -> [V487 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V488))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V481)); 0 -> V481 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V489} -> case V489 of {'Builtin.MkPair', V490, V491} -> [V490 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V491))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V492) -> fun (V493) -> case case (V492 =:= V493) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V481)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V494} -> case V494 of {'Builtin.MkPair', V495, V496} -> [V495 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V496))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V481)); 0 -> V481 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V497} -> case V497 of {'Builtin.MkPair', V498, V499} -> [V498 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V499))] end end)))))))) end, fun (V500) -> fun (V501) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V502) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V502)) end, ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, fun (V503) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(V503)) end, ('Idris.Idris2.Data.String':'nested--3893-7830--in--un--linesHelp'(case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V504) -> fun (V505) -> case case (V504 =:= V505) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V501)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V506} -> case V506 of {'Builtin.MkPair', V507, V508} -> [V507 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V508))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V501)); 0 -> V501 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V509} -> case V509 of {'Builtin.MkPair', V510, V511} -> [V510 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V511))] end end, [], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(case ('Idris.Idris2.Data.List':'un--isPrefixOfBy'(fun (V512) -> fun (V513) -> case case (V512 =:= V513) of 'false' -> 0; _ -> 1 end of 0 -> 0; _ -> 1 end end end, [$\x{a} | []], ('Idris.Idris2.Prelude.Types.List':'un--reverseOnto'([], case ('Idris.Idris2.Prelude.Types':'un--strUncons'(V501)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V514} -> case V514 of {'Builtin.MkPair', V515, V516} -> [V515 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V516))] end end)))) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'(1, V501)); 0 -> V501 end)) of {'Prelude.Types.Nothing'} -> []; {'Prelude.Types.Just', V517} -> case V517 of {'Builtin.MkPair', V518, V519} -> [V518 | ('Idris.Idris2.Prelude.Types':'un--unpack'(V519))] end end)))))))) end end}, <<"Flags"/utf8>>)))), ('nested--21686-5889--in--un--enum'(V3, V5, V6, V1, V0, fun (V520) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V521) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_DefFlag'(V521)) end, fun (V522) -> fun (V523) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_DefFlag'(V522, V523)) end end}, V520)) end, V480)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, case V6 of {'Core.Context.Context.MkGlobalDef', V458, V459, V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477, V478, V479} -> V469 end)))) | [((begin (V536 = fun (V532) -> fun (V533) -> fun (V534) -> fun (V535) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V534, V535)) end end end end), fun (V537) -> fun (V538) -> ((((V536('erased'))('erased'))(V537))(V538)) end end end(fun (V531) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Idris.Doc.Annotations':'un--header'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Size change"/utf8>>)))), ('nested--21686-5890--in--un--displayChg'(V3, V5, V6, V1, V0, V531)))) end))(('nested--21686-5888--in--un--ifNotNull'(V3, V5, V6, V1, V0, V104)))) | []]]]]]]]]]))))))} end), V539 end(V133)) end end end end), V540 end(V120)) end end end end), V541 end(V115)) end end end end), V542 end(V106)) end end end end), V543 end(V101)) end end end end), V544 end(V69)) end end end end), V545 end(V63)) end end end end), V546 end(V57)) end end end end end end end.
'un--prepareExp'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, V4, 1, [], {'Idris.Syntax.PApp', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Syntax.PRef', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Core.Name.UN', {'Core.Name.Basic', <<"unsafePerformIO"/utf8>>}}}, V5}))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V49 = begin (V11 = ('un--getItDecls'(V4))), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V48 = begin (V16 = {'TTImp.TTImp.ILocal', ('Idris.Idris2.Core.FC':'un--replFC'()), V15, V10}), begin (V17 = ('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Core.Name.UN', {'Core.Name.Basic', <<"[input]"/utf8>>}}))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V47 = begin (V22 = ('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V2, V4, V21, {'TTImp.Elab.Check.InExpr'}, [], [], {'Core.Env.Nil'}, V16, {'Prelude.Types.Nothing'}))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V46 = case V26 of {'Builtin.MkPair', V27, V28} -> begin (V33 = ('Idris.Idris2.Core.LinearCheck':'un--linearCheck'([], V0, V1, ('Idris.Idris2.Core.FC':'un--replFC'()), ('Idris.Idris2.Algebra.Semiring':'un--linear'({'Algebra.Semiring.dn--un--__mkSemiring', fun (V29) -> fun (V30) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigPlus'(V29, V30)) end end, 0, fun (V31) -> fun (V32) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(V31, V32)) end end, 1})), 1, {'Core.Env.Nil'}, V27))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V45 = begin (V38 = ('Idris.Idris2.Compiler.Inline':'un--compileAndInlineAll'(V0))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V44 = fun (V43) -> {'Prelude.Types.Right', V37} end), V44 end(V39)) end end end end), V45 end(V34)) end end end end end), V46 end(V23)) end end end end), V47 end(V18)) end end end end end), V48 end(V12)) end end end end), V49 end(V7)) end end end end.
'un--parseRepl'(V0) -> case ('nested--35101-17877--in--un--fnameCmd'(V0, [{'Builtin.MkPair', <<":load "/utf8>>, fun (V1) -> {'Idris.Syntax.Load', V1} end} | [{'Builtin.MkPair', <<":l "/utf8>>, fun (V2) -> {'Idris.Syntax.Load', V2} end} | [{'Builtin.MkPair', <<":cd "/utf8>>, fun (V3) -> {'Idris.Syntax.CD', V3} end} | [{'Builtin.MkPair', <<":!"/utf8>>, fun (V4) -> {'Idris.Syntax.RunShellCommand', V4} end} | []]]]], V0)) of {'Prelude.Types.Nothing'} -> case ('Idris.Idris2.Parser.Source':'un--runParser'(0, {'Core.FC.Virtual', {'Core.FC.Interactive'}}, {'Prelude.Types.Nothing'}, V0, {'Libraries.Text.Parser.Core.Alt', 0, 0, ('un--parseEmptyCmd'()), fun () -> ('un--parseCmd'()) end})) of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> case V6 of {'Builtin.MkPair', V7, V8} -> case V8 of {'Builtin.MkPair', V9, V10} -> {'Prelude.Types.Right', V10} end end end; {'Prelude.Types.Just', V11} -> {'Prelude.Types.Right', {'Prelude.Types.Just', V11}} end.
'un--parseEmptyCmd'() -> {'Libraries.Text.Parser.Core.SeqEmpty', 0, 0, ((begin (V6 = fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> ('Idris.Idris2.Libraries.Text.Parser.Core':'dn--un--map_Functor_(((Grammar $state) $tok) $c)'(0, V4, V5)) end end end end), fun (V7) -> fun (V8) -> ((((V6('erased'))('erased'))(V7))(V8)) end end end(fun (V0) -> fun (V1) -> V1 end end))(('Idris.Idris2.Parser.Rule.Source':'un--eoi'()))), fun (V9) -> ((begin (V14 = fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Libraries.Text.Parser.Core':'dn--un--map_Functor_(((Grammar $state) $tok) $c)'(0, V12, V13)) end end end end), fun (V15) -> fun (V16) -> ((((V14('erased'))('erased'))(V15))(V16)) end end end(V9))({'Libraries.Text.Parser.Core.Empty', {'Prelude.Types.Nothing'}})) end}.
'un--parseCmd'() -> {'Libraries.Text.Parser.Core.SeqEmpty', 0, 0, ('Idris.Idris2.Idris.Parser':'un--command'()), fun (V0) -> {'Libraries.Text.Parser.Core.ThenEmpty', 0, 0, ('Idris.Idris2.Parser.Rule.Source':'un--eoi'()), {'Libraries.Text.Parser.Core.Empty', {'Prelude.Types.Just', V0}}} end}.
'un--nextProofSearch'(V0, V1, V2) -> begin (V8 = begin (V3 = V2), fun (V4) -> begin (V7 = (begin (V5 = V3), fun (V6) -> ('erlang':'get'(V5)) end end(V4))), {'Prelude.Types.Right', V7} end end end), fun (V9) -> begin (V10 = (V8(V9))), case V10 of {'Prelude.Types.Left', V11} -> {'Prelude.Types.Left', V11}; {'Prelude.Types.Right', V12} -> (begin (V30 = ('case--nextProofSearch-7658'(V2, V1, V0, V12, case V12 of {'Idris.REPL.Opts.MkREPLOpts', V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29} -> V23 end))), V30 end(V9)) end end end end.
'un--nextGenDef'(V0, V1, V2, V3) -> begin (V9 = begin (V4 = V2), fun (V5) -> begin (V8 = (begin (V6 = V4), fun (V7) -> ('erlang':'get'(V6)) end end(V5))), {'Prelude.Types.Right', V8} end end end), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V31 = ('case--nextGenDef-7879'(V3, V2, V1, V0, V13, case V13 of {'Idris.REPL.Opts.MkREPLOpts', V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30} -> V25 end))), V31 end(V10)) end end end end.
'un--lookupDefTyName'(V0, V1) -> ('Idris.Idris2.Core.Context':'un--lookupNameBy'(fun (V2) -> {'Builtin.MkPair', case V2 of {'Core.Context.Context.MkGlobalDef', V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24} -> V20 end, case V2 of {'Core.Context.Context.MkGlobalDef', V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46} -> V27 end} end, V0, V1)).
'un--loadMainFile'(V0, V1, V2, V3, V4, V5) -> begin (V39 = begin (V11 = begin (V6 = V4), fun (V7) -> begin (V10 = (begin (V8 = V6), fun (V9) -> ('erlang':'get'(V8)) end end(V7))), {'Prelude.Types.Right', V10} end end end), fun (V12) -> begin (V13 = (V11(V12))), case V13 of {'Prelude.Types.Left', V14} -> {'Prelude.Types.Left', V14}; {'Prelude.Types.Right', V15} -> (begin (V38 = begin (V16 = V4), fun (V17) -> begin (V37 = (begin (V18 = V16), fun (V19) -> ('erlang':'put'(V18, case V15 of {'Idris.REPL.Opts.MkREPLOpts', V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36} -> {'Idris.REPL.Opts.MkREPLOpts', V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, {'Prelude.Types.Nothing'}, V33, V34, V35, V36} end)) end end(V17))), {'Prelude.Types.Right', V37} end end end), V38 end(V12)) end end end end), fun (V40) -> begin (V41 = (V39(V40))), case V41 of {'Prelude.Types.Left', V42} -> {'Prelude.Types.Left', V42}; {'Prelude.Types.Right', V43} -> (begin (V128 = begin (V44 = ('Idris.Idris2.Core.Directory':'un--ctxtPathToNS'(V0, V5))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V127 = begin (V49 = ('Idris.Idris2.Idris.REPL.Common':'un--resetContext'(V0, V1, V2, V3, {'Core.FC.PhysicalIdrSrc', V48}))), fun (V50) -> begin (V51 = (V49(V50))), case V51 of {'Prelude.Types.Left', V52} -> {'Prelude.Types.Left', V52}; {'Prelude.Types.Right', V53} -> (begin (V126 = begin (V83 = fun (V54) -> begin (V82 = (('Idris.Idris2.Erlang.System.File':'un--readFile'({'Prelude.IO.MkHasIO', {'Prelude.Interfaces.MkMonad', {'Prelude.Interfaces.MkApplicative', fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V57, V58, V59)) end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> V61 end end end, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> begin (V68 = (V65(V67))), begin (V69 = (V66(V67))), (V68(V69)) end end end end end end end}, fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> begin (V75 = (V72(V74))), ((V73(V75))(V74)) end end end end end end, fun (V76) -> fun (V77) -> fun (V78) -> begin (V79 = (V77(V78))), (V79(V78)) end end end end}, fun (V80) -> fun (V81) -> V81 end end}, V5))(V54))), {'Prelude.Types.Right', V82} end end), fun (V84) -> begin (V85 = (V83(V84))), case V85 of {'Prelude.Types.Left', V86} -> {'Prelude.Types.Left', V86}; {'Prelude.Types.Right', V87} -> (begin (V125 = case V87 of {'Prelude.Types.Right', V88} -> begin (V92 = ('Idris.Idris2.Core.Context.Log':'un--logTime'(V0, 1, fun () -> (begin (V90 = fun (V89) -> V89 end), fun (V91) -> (V90(V91)) end end(<<"Build deps"/utf8>>)) end, ('Idris.Idris2.Idris.ModTree':'un--buildDeps'(V0, V2, V3, V1, V4, V5))))), fun (V93) -> begin (V94 = (V92(V93))), case V94 of {'Prelude.Types.Left', V95} -> {'Prelude.Types.Left', V95}; {'Prelude.Types.Right', V96} -> (begin (V116 = begin (V97 = ('Idris.Idris2.Idris.REPL.Common':'un--updateErrorLine'(V4, V96))), fun (V98) -> begin (V99 = (V97(V98))), case V99 of {'Prelude.Types.Left', V100} -> {'Prelude.Types.Left', V100}; {'Prelude.Types.Right', V101} -> (begin (V115 = begin (V102 = ('Idris.Idris2.Idris.REPL.Opts':'un--setSource'(V4, V88))), fun (V103) -> begin (V104 = (V102(V103))), case V104 of {'Prelude.Types.Left', V105} -> {'Prelude.Types.Left', V105}; {'Prelude.Types.Right', V106} -> (begin (V114 = begin (V107 = ('Idris.Idris2.Idris.REPL.Opts':'un--resetProofState'(V4))), fun (V108) -> begin (V109 = (V107(V108))), case V109 of {'Prelude.Types.Left', V110} -> {'Prelude.Types.Left', V110}; {'Prelude.Types.Right', V111} -> (begin (V113 = fun (V112) -> case V96 of [] -> {'Prelude.Types.Right', {'Idris.REPL.Common.FileLoaded', V5}}; _ -> {'Prelude.Types.Right', {'Idris.REPL.Common.ErrorsBuildingFile', V5, V96}} end end), V113 end(V108)) end end end end), V114 end(V103)) end end end end), V115 end(V98)) end end end end), V116 end(V93)) end end end end; {'Prelude.Types.Left', V117} -> begin (V118 = ('Idris.Idris2.Idris.REPL.Opts':'un--setSource'(V4, <<""/utf8>>))), fun (V119) -> begin (V120 = (V118(V119))), case V120 of {'Prelude.Types.Left', V121} -> {'Prelude.Types.Left', V121}; {'Prelude.Types.Right', V122} -> (begin (V124 = fun (V123) -> {'Prelude.Types.Right', {'Idris.REPL.Common.ErrorLoadingFile', V5, V117}} end), V124 end(V119)) end end end end end), V125 end(V84)) end end end end), V126 end(V50)) end end end end), V127 end(V45)) end end end end), V128 end(V40)) end end end end.
'un--interpret'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Idris.REPL.Opts':'un--setCurrentElabSource'(V4, V5))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V22 = case ('un--parseRepl'(V5)) of {'Prelude.Types.Left', V11} -> begin (V12 = ('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V11))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V18 = fun (V17) -> {'Prelude.Types.Right', {'Idris.REPL.Common.REPLError', V16}} end), V18 end(V13)) end end end end; {'Prelude.Types.Right', V19} -> case V19 of {'Prelude.Types.Nothing'} -> fun (V20) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Done'}} end; {'Prelude.Types.Just', V21} -> ('un--processCatch'(V0, V1, V2, V3, V4, V21)) end end), V22 end(V7)) end end end end.
'un--inferAndNormalize'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('un--inferAndElab'([], V0, V1, V2, V3, V4, ('nested--32409-15410--in--un--elabMode'(V6, V5, V4, V3, V2, V1, V0, V5)), V6, {'Core.Env.Nil'}))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V54 = case V11 of {'Idris.REPL.WithType', V12, V13} -> begin (V17 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"repl.eval"/utf8>>, 10, fun () -> (begin (V15 = fun (V14) -> V14 end), fun (V16) -> (V15(V16)) end end(<<"Elaborated input"/utf8>>)) end, V12))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V53 = begin (V27 = begin (V22 = V0), fun (V23) -> begin (V26 = (begin (V24 = V22), fun (V25) -> ('erlang':'get'(V24)) end end(V23))), {'Prelude.Types.Right', V26} end end end), fun (V28) -> begin (V29 = (V27(V28))), case V29 of {'Prelude.Types.Left', V30} -> {'Prelude.Types.Left', V30}; {'Prelude.Types.Right', V31} -> (begin (V52 = begin (V35 = fun (V32) -> fun (V33) -> fun (V34) -> ('un--replEval'(V0, [], V5, V32, V33, V34)) end end end), begin (V36 = (((V35(V31))({'Core.Env.Nil'}))(V12))), fun (V37) -> begin (V38 = (V36(V37))), case V38 of {'Prelude.Types.Left', V39} -> {'Prelude.Types.Left', V39}; {'Prelude.Types.Right', V40} -> (begin (V51 = begin (V44 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V0, <<"repl.eval"/utf8>>, 5, fun () -> (begin (V42 = fun (V41) -> V41 end), fun (V43) -> (V42(V43)) end end(<<"Normalised"/utf8>>)) end, {'Core.Env.Nil'}, V40))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V50 = fun (V49) -> {'Prelude.Types.Right', {'Idris.REPL.WithType', V40, V13}} end), V50 end(V45)) end end end end), V51 end(V37)) end end end end end), V52 end(V28)) end end end end), V53 end(V18)) end end end end end), V54 end(V8)) end end end end.
'un--inferAndElab'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V9 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V3, V1, V4, V2, V5, 1, V0, V7))), fun (V10) -> begin (V11 = (V9(V10))), case V11 of {'Prelude.Types.Left', V12} -> {'Prelude.Types.Left', V12}; {'Prelude.Types.Right', V13} -> (begin (V56 = begin (V14 = ('un--getItDecls'(V5))), fun (V15) -> begin (V16 = (V14(V15))), case V16 of {'Prelude.Types.Left', V17} -> {'Prelude.Types.Left', V17}; {'Prelude.Types.Right', V18} -> (begin (V55 = begin (V19 = {'TTImp.TTImp.ILocal', ('Idris.Idris2.Core.FC':'un--replFC'()), V18, V13}), begin (V20 = ('Idris.Idris2.Core.Context':'un--resolveName'(V1, {'Core.Name.UN', {'Core.Name.Basic', <<"[input]"/utf8>>}}))), fun (V21) -> begin (V22 = (V20(V21))), case V22 of {'Prelude.Types.Left', V23} -> {'Prelude.Types.Left', V23}; {'Prelude.Types.Right', V24} -> (begin (V54 = begin (V33 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(begin (V25 = ('Idris.Idris2.Core.Context':'un--hide'(V1, ('Idris.Idris2.Core.FC':'un--replFC'()), {'Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Core.Name.UN', {'Core.Name.Basic', <<"::"/utf8>>}}}))), fun (V26) -> begin (V27 = (V25(V26))), case V27 of {'Prelude.Types.Left', V28} -> {'Prelude.Types.Left', V28}; {'Prelude.Types.Right', V29} -> (begin (V30 = ('Idris.Idris2.Core.Context':'un--hide'(V1, ('Idris.Idris2.Core.FC':'un--replFC'()), {'Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Core.Name.UN', {'Core.Name.Basic', <<"Nil"/utf8>>}}}))), V30 end(V26)) end end end end, fun (V31) -> fun (V32) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end))), fun (V34) -> begin (V35 = (V33(V34))), case V35 of {'Prelude.Types.Left', V36} -> {'Prelude.Types.Left', V36}; {'Prelude.Types.Right', V37} -> (begin (V53 = begin (V38 = ('Idris.Idris2.TTImp.Elab':'un--elabTerm'(V0, V1, V4, V2, V3, V5, V24, V6, [], [], V8, V19, {'Prelude.Types.Nothing'}))), fun (V39) -> begin (V40 = (V38(V39))), case V40 of {'Prelude.Types.Left', V41} -> {'Prelude.Types.Left', V41}; {'Prelude.Types.Right', V42} -> (begin (V52 = case V42 of {'Builtin.MkPair', V43, V44} -> begin (V45 = ('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V44))), fun (V46) -> begin (V47 = (V45(V46))), case V47 of {'Prelude.Types.Left', V48} -> {'Prelude.Types.Left', V48}; {'Prelude.Types.Right', V49} -> (begin (V51 = fun (V50) -> {'Prelude.Types.Right', {'Idris.REPL.WithType', V43, V49}} end), V51 end(V46)) end end end end end), V52 end(V39)) end end end end), V53 end(V34)) end end end end), V54 end(V21)) end end end end end), V55 end(V15)) end end end end), V56 end(V10)) end end end end.
'un--handleResult'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.REPL.Common.Exited'} -> ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Bye for now!"/utf8>>)))); _ -> begin (V6 = ('un--displayResult'(V0, V1, V2, V3, V4, V5))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V11 = ('un--repl'(V0, V1, V2, V3, V4))), V11 end(V7)) end end end end end.
'un--handleMissing\x{27}'(V0) -> case V0 of {'Idris.REPL.Common.CasesMissing', V1, V2} -> <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))/binary, <<<<":\x{a}"/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V2))/binary>>/binary>>; {'Idris.REPL.Common.CallsNonCovering', V3, V4} -> <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V3))/binary, <<<<": Calls non covering function"/utf8>>/binary, case V4 of [E0 | E1] -> (fun (V5, V6) -> case V6 of [] -> <<<<" "/utf8>>/binary, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5))/binary>>; _ -> <<<<"s: "/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ((begin (V12 = fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V10, V11)) end end end end), fun (V13) -> fun (V14) -> ((((V12('erased'))('erased'))(V13))(V14)) end end end(fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)) end))(V4))))/binary>> end end(E0, E1)); _ -> <<<<"s: "/utf8>>/binary, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ((begin (V20 = fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V18, V19)) end end end end), fun (V21) -> fun (V22) -> ((((V20('erased'))('erased'))(V21))(V22)) end end end(fun (V15) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V15)) end))(V4))))/binary>> end/binary>>/binary>>; {'Idris.REPL.Common.AllCasesCovered', V23} -> <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V23))/binary, <<": All cases covered"/utf8>>/binary>> end.
'un--handleMissing'(V0) -> case V0 of {'Idris.REPL.Common.CasesMissing', V1, V2} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(((begin (V8 = fun (V6) -> fun (V7) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V6, V7)) end end), fun (V9) -> fun (V10) -> ((V8(V9))(V10)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V3) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V3)) end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V4, V5)) end end}, V1))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V19 = fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V17, V18)) end end end end), fun (V20) -> fun (V21) -> ((((V19('erased'))('erased'))(V20))(V21)) end end end(fun (V11) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V12) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V12)) end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V13, V14)) end end}, V11)))) end))(V2)))))); {'Idris.REPL.Common.CallsNonCovering', V22, V23} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(((begin (V29 = fun (V27) -> fun (V28) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V27, V28)) end end), fun (V30) -> fun (V31) -> ((V29(V30))(V31)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V25, V26)) end end}, V22))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Calls non covering"/utf8>>)), case V23 of [E0 | E1] -> (fun (V32, V33) -> case V33 of [] -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V35 = fun (V34) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V34)) end), fun (V36) -> (V35(V36)) end end(<<"function"/utf8>>)), ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V38, V39)) end end}, V32)))))); _ -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V41 = fun (V40) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V40)) end), fun (V42) -> (V41(V42)) end end(<<"functions:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V43) -> fun (V44) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(((begin (V47 = fun (V45) -> fun (V46) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V45, V46)) end end), fun (V48) -> fun (V49) -> ((V47(V48))(V49)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'())))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), V43, V44)) end end, ((begin (V58 = fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V56, V57)) end end end end), fun (V59) -> fun (V60) -> ((((V58('erased'))('erased'))(V59))(V60)) end end end(fun (V50) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V51) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V52, V53)) end end}, V50)))) end))(V23)))))) end end(E0, E1)); _ -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V62 = fun (V61) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V61)) end), fun (V63) -> (V62(V63)) end end(<<"functions:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V64) -> fun (V65) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(((begin (V68 = fun (V66) -> fun (V67) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V66, V67)) end end), fun (V69) -> fun (V70) -> ((V68(V69))(V70)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'())))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), V64, V65)) end end, ((begin (V79 = fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V77, V78)) end end end end), fun (V80) -> fun (V81) -> ((((V79('erased'))('erased'))(V80))(V81)) end end end(fun (V71) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V72) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V73, V74)) end end}, V71)))) end))(V23)))))) end)))); {'Idris.REPL.Common.AllCasesCovered', V82} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(((begin (V88 = fun (V86) -> fun (V87) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V86, V87)) end end), fun (V89) -> fun (V90) -> ((V88(V89))(V90)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V84, V85)) end end}, V82))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"All cases covered"/utf8>>)))) end.
'un--getOptions'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0))), fun (V3) -> begin (V4 = (V2(V3))), case V4 of {'Prelude.Types.Left', V5} -> {'Prelude.Types.Left', V5}; {'Prelude.Types.Right', V6} -> (begin (V82 = begin (V12 = begin (V7 = V1), fun (V8) -> begin (V11 = (begin (V9 = V7), fun (V10) -> ('erlang':'get'(V9)) end end(V8))), {'Prelude.Types.Right', V11} end end end), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V81 = fun (V17) -> {'Prelude.Types.Right', [{'Idris.Syntax.ShowImplicits', case V6 of {'Core.Options.MkPPOpts', V18, V19, V20, V21} -> V18 end} | [{'Idris.Syntax.ShowMachineNames', case V6 of {'Core.Options.MkPPOpts', V22, V23, V24, V25} -> V23 end} | [{'Idris.Syntax.ShowNamespace', case V6 of {'Core.Options.MkPPOpts', V26, V27, V28, V29} -> V29 end} | [{'Idris.Syntax.ShowTypes', case V16 of {'Idris.REPL.Opts.MkREPLOpts', V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46} -> V30 end} | [{'Idris.Syntax.EvalMode', case V16 of {'Idris.REPL.Opts.MkREPLOpts', V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63} -> V48 end} | [{'Idris.Syntax.Editor', case V16 of {'Idris.REPL.Opts.MkREPLOpts', V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80} -> V70 end} | []]]]]]]} end), V81 end(V13)) end end end end), V82 end(V3)) end end end end.
'un--getItDecls'(V0) -> begin (V6 = begin (V1 = V0), fun (V2) -> begin (V5 = (begin (V3 = V1), fun (V4) -> ('erlang':'get'(V3)) end end(V2))), {'Prelude.Types.Right', V5} end end end), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V32 = case V10 of {'Idris.REPL.Opts.MkREPLOpts', V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27} -> case V23 of {'Prelude.Types.Nothing'} -> fun (V28) -> {'Prelude.Types.Right', []} end; {'Prelude.Types.Just', V29} -> begin (V30 = {'Core.Name.UN', {'Core.Name.Basic', <<"it"/utf8>>}}), fun (V31) -> {'Prelude.Types.Right', [{'TTImp.TTImp.IClaim', ('Idris.Idris2.Core.FC':'un--replFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 0, [], {'TTImp.TTImp.MkImpTy', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Core.FC.EmptyFC'}, V30, {'TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--replFC'()), 0}}} | [{'TTImp.TTImp.IDef', ('Idris.Idris2.Core.FC':'un--replFC'()), V30, [{'TTImp.TTImp.PatClause', ('Idris.Idris2.Core.FC':'un--replFC'()), {'TTImp.TTImp.IVar', ('Idris.Idris2.Core.FC':'un--replFC'()), V30}, {'TTImp.TTImp.IVar', ('Idris.Idris2.Core.FC':'un--replFC'()), V29}} | []]} | []]]} end end end end), V32 end(V7)) end end end end.
'un--findInTree'(V0, V1, V2) -> ((begin (V16 = fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V14, V15)) end end end end), fun (V17) -> fun (V18) -> ((((V16('erased'))('erased'))(V17))(V18)) end end end(fun (V11) -> ('Idris.Idris2.Builtin':'un--snd'(V11)) end))(('Idris.Idris2.Data.List':'un--head\x{27}'(('Idris.Idris2.Data.List':'un--sortBy'(fun (V3) -> fun (V4) -> ('Idris.Idris2.Prelude.Basics':'un--on'(fun (V5) -> fun (V6) -> ('nested--24208-8234--in--un--cmp'(V2, V1, V0, V5, V6)) end end, fun (V7) -> ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V7)) end, V3, V4)) end end, ('Idris.Idris2.Prelude.Types.List':'un--filterAppend'({'Prelude.Basics.Lin'}, fun (V8) -> ('nested--24208-8239--in--un--match'(V2, V1, V0, V8)) end, ('Idris.Idris2.Libraries.Data.PosMap':'un--searchPos'(fun (V9) -> ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measureRM_MeasureRM_$a'(fun (V10) -> ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V10)) end, V9)) end, V0, V2)))))))))).
'un--execExp'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Idris.ProcessIdr':'un--findCG'(V4, V0))), fun (V7) -> begin (V8 = (V6(V7))), case V8 of {'Prelude.Types.Left', V9} -> {'Prelude.Types.Left', V9}; {'Prelude.Types.Right', V10} -> (begin (V44 = case V10 of {'Prelude.Types.Just', V11} -> begin (V12 = ('un--prepareExp'(V0, V1, V2, V3, V4, V5))), fun (V13) -> begin (V14 = (V12(V13))), case V14 of {'Prelude.Types.Left', V15} -> {'Prelude.Types.Left', V15}; {'Prelude.Types.Right', V16} -> (begin (V33 = begin (V26 = begin (V17 = ('Idris.Idris2.Idris.REPL.Opts':'un--getEvalTiming'(V4))), fun (V18) -> begin (V19 = (V17(V18))), case V19 of {'Prelude.Types.Left', V20} -> {'Prelude.Types.Left', V20}; {'Prelude.Types.Right', V21} -> (begin (V25 = ('Idris.Idris2.Core.Context.Log':'un--logTimeWhen'(V0, V21, 0, fun () -> (begin (V23 = fun (V22) -> V22 end), fun (V24) -> (V23(V24)) end end(<<"Execution"/utf8>>)) end, ('Idris.Idris2.Compiler.Common':'un--cgExecuteExpr'(V0, V2, V11, V16))))), V25 end(V18)) end end end end), fun (V27) -> begin (V28 = (V26(V27))), case V28 of {'Prelude.Types.Left', V29} -> {'Prelude.Types.Left', V29}; {'Prelude.Types.Right', V30} -> (begin (V32 = fun (V31) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Executed', V5}} end), V32 end(V27)) end end end end), V33 end(V13)) end end end end; {'Prelude.Types.Nothing'} -> begin (V37 = ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'((begin (V35 = fun (V34) -> V34 end), fun (V36) -> (V35(V36)) end end(<<"No such code generator available"/utf8>>))))))), fun (V38) -> begin (V39 = (V37(V38))), case V39 of {'Prelude.Types.Left', V40} -> {'Prelude.Types.Left', V40}; {'Prelude.Types.Right', V41} -> (begin (V43 = fun (V42) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CompilationFailed'}} end), V43 end(V38)) end end end end end), V44 end(V7)) end end end end.
'un--execDecls'(V0, V1, V2, V3, V4, V5) -> begin (V7 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V6) -> ('nested--31777-14817--in--un--execDecl'(V5, V4, V3, V2, V1, V0, V6)) end, V5))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V13 = fun (V12) -> {'Prelude.Types.Right', {'Idris.REPL.Common.DefDeclared'}} end), V13 end(V8)) end end end end.
'un--dropLamsTm'(V0, V1, V2, V3) -> case V1 of 0 -> {'Builtin.DPair.MkDPair', V0, {'Builtin.MkPair', V2, V3}}; _ -> begin (V4 = (V1 - 1)), case V3 of {'Core.TT.Bind', V5, V6, V7, V8} -> ('un--dropLamsTm'([V6 | V0], V4, {'Core.Env.::', V7, V2}, V8)); _ -> {'Builtin.DPair.MkDPair', V0, {'Builtin.MkPair', V2, V3}} end end end.
'un--dropLams'(V0, V1) -> case V0 of 0 -> V1; _ -> begin (V2 = (V0 - 1)), case V1 of {'TTImp.TTImp.ILam', V3, V4, V5, V6, V7, V8} -> ('un--dropLams'(V2, V8)); _ -> V1 end end end.
'un--displayResult'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.REPL.Common.REPLError', V6} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V6)); {'Idris.REPL.Common.Evaluated', V7, V8} -> case V8 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V9) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V9)) end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V10, V11)) end end}, fun (V12) -> {'Idris.Pretty.Syntax', V12} end, V7)))); {'Prelude.Types.Just', V13} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V14) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V14)) end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V15, V16)) end end}, fun (V17) -> {'Idris.Pretty.Syntax', V17} end, V7)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V18) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V18)) end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V19, V20)) end end}, fun (V21) -> {'Idris.Pretty.Syntax', V21} end, V13)))))))) end; {'Idris.REPL.Common.Printed', V22} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V22)); {'Idris.REPL.Common.PrintedDoc', V23} -> ('Idris.Idris2.Idris.REPL.Common':'un--printDocResult'(V4, V23)); {'Idris.REPL.Common.TermChecked', V24, V25} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V26) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V26)) end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V27, V28)) end end}, fun (V29) -> {'Idris.Pretty.Syntax', V29} end, V24)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V30) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V31, V32)) end end}, fun (V33) -> {'Idris.Pretty.Syntax', V33} end, V25)))))))); {'Idris.REPL.Common.FileLoaded', V34} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Loaded file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V35) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V36, V37)) end end}, V34)))))); {'Idris.REPL.Common.ModuleLoaded', V38} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Imported module"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V39) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V40, V41)) end end}, V38)))))); {'Idris.REPL.Common.ErrorLoadingModule', V42, V43} -> begin (V44 = ('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V43))), fun (V45) -> begin (V46 = (V44(V45))), case V46 of {'Prelude.Types.Left', V47} -> {'Prelude.Types.Left', V47}; {'Prelude.Types.Right', V48} -> (begin (V57 = ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error loading module"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(((begin (V54 = fun (V52) -> fun (V53) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V52, V53)) end end), fun (V55) -> fun (V56) -> ((V54(V55))(V56)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V49) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V50, V51)) end end}, V42))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), V48))))))), V57 end(V45)) end end end end; {'Idris.REPL.Common.ErrorLoadingFile', V58, V59} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error loading file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(((begin (V65 = fun (V63) -> fun (V64) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V63, V64)) end end), fun (V66) -> fun (V67) -> ((V65(V66))(V67)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V60) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V61, V62)) end end}, V58))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V68) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V69, V70)) end end}, ('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V59)))))))))); {'Idris.REPL.Common.ErrorsBuildingFile', V71, V72} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error(s) building file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V73) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V73)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V74, V75)) end end}, V71)))))); {'Idris.REPL.Common.NoFileLoaded'} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No file can be reloaded"/utf8>>)))); {'Idris.REPL.Common.CurrentDirectory', V76} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Current working directory is"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--dquotes'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V77) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V77)) end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V78, V79)) end end}, V76)))))))); {'Idris.REPL.Common.CompilationFailed'} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Compilation failed"/utf8>>)))); {'Idris.REPL.Common.Compiled', V80} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"File"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V81) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V81)) end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V82, V83)) end end}, V80)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"written"/utf8>>)))))))); {'Idris.REPL.Common.CompiledLibrary', V84} -> case V84 of {'Builtin.MkPair', V85, V86} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Compiled"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V87) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V87)) end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V88, V89)) end end}, V85)))))) end; {'Idris.REPL.Common.ProofFound', V90} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--prettyBy'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V91) -> ('Idris.Idris2.Idris.Pretty':'dn--un--pretty_Pretty_IdrisSyntax_IPTerm'(V91)) end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Idris.Pretty':'dn--un--prettyPrec_Pretty_IdrisSyntax_IPTerm'(V92, V93)) end end}, fun (V94) -> {'Idris.Pretty.Syntax', V94} end, V90)))); {'Idris.REPL.Common.Missed', V95} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V101 = fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V99, V100)) end end end end), fun (V102) -> fun (V103) -> ((((V101('erased'))('erased'))(V102))(V103)) end end end(fun (V96) -> ('un--handleMissing'(V96)) end))(V95)))))); {'Idris.REPL.Common.CheckedTotal', V104} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V121 = fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V119, V120)) end end end end), fun (V122) -> fun (V123) -> ((((V121('erased'))('erased'))(V122))(V123)) end end end(fun (V105) -> case V105 of {'Builtin.MkPair', V106, V107} -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V108) -> ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Void_Name'(V108)) end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Name':'dn--un--prettyPrec_Pretty_Void_Name'(V109, V110)) end end}, V106)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((begin (V112 = fun (V111) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(V111)) end), fun (V113) -> (V112(V113)) end end(<<"is"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V114) -> ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_Void_Totality'(V114)) end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.TT':'dn--un--prettyPrec_Pretty_Void_Totality'(V115, V116)) end end}, V107)))))) end end))(V104)))))); {'Idris.REPL.Common.LogLevelSet', V124} -> case V124 of {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Logging turned off"/utf8>>)))); {'Prelude.Types.Just', V125} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set log level to"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V126) -> ('Idris.Idris2.Core.Options.Log':'dn--un--show_Show_LogLevel'(V126)) end, fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Options.Log':'dn--un--showPrec_Show_LogLevel'(V127, V128)) end end}, V125)))))) end; {'Idris.REPL.Common.ConsoleWidthSet', V129} -> case V129 of {'Prelude.Types.Just', V130} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set consolewidth to"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--byShow'({'Prelude.Show.MkShow', fun (V131) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V131)) end, fun (V132) -> fun (V133) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V132, V133)) end end}, V130)))))); {'Prelude.Types.Nothing'} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set consolewidth to auto"/utf8>>)))) end; {'Idris.REPL.Common.ColorSet', V134} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(case V134 of 1 -> (begin (V136 = fun (V135) -> V135 end), fun (V137) -> (V136(V137)) end end(<<"Set color on"/utf8>>)); 0 -> (begin (V139 = fun (V138) -> V138 end), fun (V140) -> (V139(V140)) end end(<<"Set color off"/utf8>>)) end)))); {'Idris.REPL.Common.VersionIs', V141} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V142) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V142)) end, fun (V143) -> fun (V144) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V143, V144)) end end}, ('Idris.Idris2.Libraries.Data.Version':'un--showVersion'(1, V141)))))); {'Idris.REPL.Common.RequestedHelp'} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V145) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V145)) end, fun (V146) -> fun (V147) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V146, V147)) end end}, ('un--displayHelp'()))))); {'Idris.REPL.Common.RequestedDetails', V148} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V149) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V149)) end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V150, V151)) end end}, V148)))); {'Idris.REPL.Common.Edited', V152} -> case V152 of {'Idris.REPL.Common.DisplayEdit', V153} -> case V153 of {'Libraries.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> fun (V154) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; _ -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V153)) end; {'Idris.REPL.Common.EditError', V155} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V155)); {'Idris.REPL.Common.MadeLemma', V156, V157, V158, V159} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V160) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V160)) end, fun (V161) -> fun (V162) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V161, V162)) end end}, <<('Idris.Idris2.Parser.Unlit':'un--relit'(V156, <<('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V157))/binary, <<<<" : "/utf8>>/binary, <<('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V158))/binary, <<"\x{a}"/utf8>>/binary>>/binary>>/binary>>))/binary, V159/binary>>)))); {'Idris.REPL.Common.MadeWith', V163, V164} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V165) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V165)) end, fun (V166) -> fun (V167) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V166, V167)) end end}, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ((begin (V173 = fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V171, V172)) end end end end), fun (V174) -> fun (V175) -> ((((V173('erased'))('erased'))(V174))(V175)) end end end(fun (V168) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V163, V168)) end))(V164)))))))); {'Idris.REPL.Common.MadeCase', V176, V177} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V178) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V178)) end, fun (V179) -> fun (V180) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V179, V180)) end end}, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ((begin (V186 = fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V184, V185)) end end end end), fun (V187) -> fun (V188) -> ((((V186('erased'))('erased'))(V187))(V188)) end end end(fun (V181) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V176, V181)) end))(V177)))))))); {'Idris.REPL.Common.MadeIntro', V189} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V190) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V190)) end, fun (V191) -> fun (V192) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V191, V192)) end end}, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Data.List1':'un--forget'(V189)))))))) end; {'Idris.REPL.Common.OptionsSet', V193} -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(((begin (V202 = fun (V198) -> fun (V199) -> fun (V200) -> fun (V201) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V200, V201)) end end end end), fun (V203) -> fun (V204) -> ((((V202('erased'))('erased'))(V203))(V204)) end end end(fun (V194) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V195) -> ('Idris.Idris2.Idris.Syntax':'dn--un--pretty_Pretty_Void_REPLOpt'(V195)) end, fun (V196) -> fun (V197) -> ('Idris.Idris2.Idris.Syntax':'dn--un--prettyPrec_Pretty_Void_REPLOpt'(V196, V197)) end end}, V194)) end))(V193)))))); {'Idris.REPL.Common.Done'} -> fun (V205) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; {'Idris.REPL.Common.Executed', V206} -> fun (V207) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; {'Idris.REPL.Common.DefDeclared'} -> fun (V208) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end; {'Idris.REPL.Common.Exited'} -> fun (V209) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end.
'un--displayPatTerm'(V0, V1, V2, V3) -> begin (V10 = begin (V4 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Core.Env.Nil'}, V3))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V9 = ('Idris.Idris2.Idris.Resugar':'un--resugarNoPatvars'([], V0, V1, {'Core.Env.Nil'}, V8))), V9 end(V5)) end end end end), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V16 = fun (V15) -> {'Prelude.Types.Right', ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V14))} end), V16 end(V11)) end end end end.
'un--displayHelp'() -> ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ((begin (V5 = fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> ('Idris.Idris2.Prelude.Types.List':'un--mapAppend'({'Prelude.Basics.Lin'}, V3, V4)) end end end end), fun (V6) -> fun (V7) -> ((((V5('erased'))('erased'))(V6))(V7)) end end end(fun (V0) -> ('nested--35545-19121--in--un--cmdInfo'(V0)) end))(('Idris.Idris2.Idris.Parser':'un--help'()))))).
'un--displayErrors'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.REPL.Common.ErrorLoadingFile', V6, V7} -> ('Idris.Idris2.Idris.REPL.Common':'un--printError'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"File error in"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(((begin (V13 = fun (V11) -> fun (V12) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(V11, V12)) end end), fun (V14) -> fun (V15) -> ((V13(V14))(V15)) end end end(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V8) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V8)) end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V9, V10)) end end}, V6))))(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--pretty0'({'Libraries.Text.PrettyPrint.Prettyprinter.Doc.dn--un--__mkPretty', fun (V16) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Void_String'(V16)) end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--prettyPrec_Pretty_Void_String'(V17, V18)) end end}, ('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V7)))))))))); _ -> fun (V19) -> {'Prelude.Types.Right', {'Builtin.MkUnit'}} end end.
'un--compileLib'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Idris.ProcessIdr':'un--findCG'(V1, V0))), fun (V5) -> begin (V6 = (V4(V5))), case V6 of {'Prelude.Types.Left', V7} -> {'Prelude.Types.Left', V7}; {'Prelude.Types.Right', V8} -> (begin (V29 = case V8 of {'Prelude.Types.Just', V9} -> begin (V10 = ('Idris.Idris2.Compiler.Common':'un--cgCompileLibrary'(V0, V9, V2, V3))), fun (V11) -> begin (V12 = (V10(V11))), case V12 of {'Prelude.Types.Left', V13} -> {'Prelude.Types.Left', V13}; {'Prelude.Types.Right', V14} -> (begin (V18 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V15) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CompilationFailed'}} end end, fun () -> fun (V16) -> fun (V17) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CompiledLibrary', V16}} end end end, V14))), V18 end(V11)) end end end end; {'Prelude.Types.Nothing'} -> begin (V22 = ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V1, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'((begin (V20 = fun (V19) -> V19 end), fun (V21) -> (V20(V21)) end end(<<"No such code generator available"/utf8>>))))))), fun (V23) -> begin (V24 = (V22(V23))), case V24 of {'Prelude.Types.Left', V25} -> {'Prelude.Types.Left', V25}; {'Prelude.Types.Right', V26} -> (begin (V28 = fun (V27) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CompilationFailed'}} end), V28 end(V23)) end end end end end), V29 end(V5)) end end end end.
'un--compileExp'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.ProcessIdr':'un--findCG'(V4, V0))), fun (V8) -> begin (V9 = (V7(V8))), case V9 of {'Prelude.Types.Left', V10} -> {'Prelude.Types.Left', V10}; {'Prelude.Types.Right', V11} -> (begin (V38 = case V11 of {'Prelude.Types.Just', V12} -> begin (V13 = ('un--prepareExp'(V0, V1, V2, V3, V4, V5))), fun (V14) -> begin (V15 = (V13(V14))), case V15 of {'Prelude.Types.Left', V16} -> {'Prelude.Types.Left', V16}; {'Prelude.Types.Right', V17} -> (begin (V27 = begin (V18 = ('Idris.Idris2.Compiler.Common':'un--cgCompileExpr'(V0, V2, V12, V17, V6))), fun (V19) -> begin (V20 = (V18(V19))), case V20 of {'Prelude.Types.Left', V21} -> {'Prelude.Types.Left', V21}; {'Prelude.Types.Right', V22} -> (begin (V26 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V23) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CompilationFailed'}} end end, fun () -> fun (V24) -> fun (V25) -> {'Prelude.Types.Right', {'Idris.REPL.Common.Compiled', V24}} end end end, V22))), V26 end(V19)) end end end end), V27 end(V14)) end end end end; {'Prelude.Types.Nothing'} -> begin (V31 = ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'((begin (V29 = fun (V28) -> V28 end), fun (V30) -> (V29(V30)) end end(<<"No such code generator available"/utf8>>))))))), fun (V32) -> begin (V33 = (V31(V32))), case V33 of {'Prelude.Types.Left', V34} -> {'Prelude.Types.Left', V34}; {'Prelude.Types.Right', V35} -> (begin (V37 = fun (V36) -> {'Prelude.Types.Right', {'Idris.REPL.Common.CompilationFailed'}} end), V37 end(V32)) end end end end end), V38 end(V8)) end end end end.
'un--caseSplit'(V0, V1, V2) -> case V1 of 0 -> case V2 of [E2 | E3] -> (fun (V3, V4) -> [('un--rtrim'(V0)) | V4] end(E2, E3)); _ -> case V2 of [] -> [V0 | []] end end; _ -> begin (V5 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V6, V7) -> [V6 | ('un--caseSplit'(V0, V5, V7))] end(E0, E1)); _ -> case V2 of [] -> [V0 | []] end end end end.
'un--anyAt'(V0, V1, V2) -> (V0(V1)).
'un--addMadeLemma'(V0, V1, V2, V3, V4, V5) -> ('nested--23299-7429--in--un--addApp'(V5, V4, V3, V2, V1, V0, V0, V4, [], ('un--proofSearch'(V1, V3, V4, V5)))).
'un--addMadeCase'(V0, V1, V2, V3) -> ('nested--23470-7579--in--un--addW'(V3, V2, V1, V0, V2, [], V3)).
'un--addClause'(V0, V1, V2) -> case V1 of 0 -> case V2 of [] -> [('un--rtrim'(V0)) | []]; [E2 | E3] -> (fun (V3, V4) -> case ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'({'Prelude.Interfaces.MkMonoid', fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Interfaces.Bool.Semigroup':'dn--un--<+>_Semigroup_AllBool'(V5, V6)) end end, 1}, fun (V7) -> ('Idris.Idris2.Prelude.Types':'un--isSpace'(V7)) end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V3)))) of 1 -> [('un--rtrim'(V0)) | [V3 | V4]]; 0 -> [V3 | ('un--addClause'(V0, 0, V4))] end end(E2, E3)) end; _ -> begin (V8 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V9, V10) -> [V9 | ('un--addClause'(V0, V8, V10))] end(E0, E1)); [] -> [V0 | []] end end end.
